#
# Yuri Chornoivan <yurchor@ukr.net>, 2021, 2022.
msgid ""
msgstr ""
"Project-Id-Version: documentation-develop-kde-org 1.0\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2022-12-18 00:43+0000\n"
"PO-Revision-Date: 2022-11-15 16:46+0200\n"
"Last-Translator: Yuri Chornoivan <yurchor@ukr.net>\n"
"Language-Team: Ukrainian <kde-i18n-uk@kde.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=4; plural=n==1 ? 3 : n%10==1 && n%100!=11 ? 0 : n"
"%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
"X-Generator: Lokalize 20.12.0\n"

#: content/docs/use/kirigami/_index.md:0
msgid "Getting started with Kirigami"
msgstr "Вступ до Kirigami"

#: content/docs/use/kirigami/_index.md:0
msgid "Kirigami"
msgstr "Kirigami"

#: content/docs/use/kirigami/_index.md:0
msgid "Introduction"
msgstr "Вступ"

#: content/docs/use/kirigami/_index.md:0
msgid "Style"
msgstr "Стиль"

#: content/docs/use/kirigami/_index.md:0
msgid "Components"
msgstr "Компоненти"

#: content/docs/use/kirigami/_index.md:0
msgid "Advanced"
msgstr "Додатково"

#: content/docs/use/kirigami/_index.md:0
msgid "Learning to create your first applications using Kirigami\n"
msgstr "Створюємо ваші перші програми за допомогою Kirigami\n"

#: content/docs/use/kirigami/_index.md:22
msgid ""
"This tutorial will guide you through the process of creating your own "
"convergent application using the [Kirigami framework](/frameworks/kirigami). "
"A *convergent application*, in this context, means people can use the "
"program easily regardless of the device it is running on. If it is on a "
"desktop computer, it will adapt to a large screen and a mouse and keyboard; "
"if it is being used on a mobile, it will accept input from a touchscreen and "
"adapt to a smaller portrait screen. And so on."
msgstr ""
"У цьому розділі підручника ми ознайомимося із процесом створення вашої "
"власної універсальної програми за допомогою [бібліотеки Kirigami](/"
"frameworks/kirigami). Термін *універсальна програма* у цьому контексті "
"означає, що програмою можна буде без проблем користуватися на будь-яких "
"пристроях, на яких її запущено. Якщо програму буде запущено на звичайному "
"комп'ютері, вона пристосується до великого екрана та користування за "
"допомогою миші та клавіатури; якщо ж програму буде запущено на мобільному "
"пристрої, вона працюватиме із сенсорним екраном та пристосується до малого "
"екрана у книжковому режимі. Тощо."

#: content/docs/use/kirigami/_index.md:30
msgid ""
"Kirigami is built on top of the QML language and Qt Quick Controls 2 "
"components provided by the Qt project. QML has built in support for touch "
"systems, which makes it ideal for mobile apps. Qt Quick components are "
"reusable visual items we can use when building our applications' interfaces. "
"Kirigami is a set of Qt Quick components designed for creating convergent "
"applications."
msgstr ""
"Kirigami побудовано на основі мови програмування QML і компонентів Qt Quick "
"Controls 2, які надаються у межах проєкту Qt. QML побудовано з врахуванням "
"підтримки систем із сенсорним керуванням, що робить його ідеальним для "
"програм для мобільних пристроїв. Компоненти Qt Quick є придатними для "
"повторного використання візуальними елементами, якими ми можемо скористатися "
"при побудові інтерфейсів наших програм. Kirigami — набір компонентів Qt "
"Quick, які розроблено для створення універсальних програм."

#: content/docs/use/kirigami/_index.md:36
msgid ""
"While you will use QML to create the visual part of your application, the "
"business logic -- the code that does the heavy lifting for your "
"application's functionality -- is usually created in C++ for performance "
"reasons. We will also explore how to integrate our business logic with our "
"UI in the tutorials below."
msgstr ""
"Одночасно із використанням QML для створення візуальної частини програми, "
"робочу логіку — код, який надаватиме вашій програмі функціональних "
"можливостей — зазвичай, пишуть на C++ з міркувань швидкодії. У наведених "
"нижче розділах підручника ми також вивчимо питання інтеграції робочої логіки "
"із інтерфейсом користувача."

#: content/docs/use/kirigami/advanced-add_about_page.md:0
msgid "About Page"
msgstr "Сторінка «Про програму»"

#: content/docs/use/kirigami/advanced-add_about_page.md:0
msgid "Informations about your application"
msgstr "Відомості щодо вашої програми"

#: content/docs/use/kirigami/advanced-add_about_page.md:10
msgid ""
"The About Page allows you to have a page that shows the copyright notice of "
"the application together with the contributors and some information of which "
"platform it's running on."
msgstr ""
"Сторінка «Про програму» надає вам змогу показувати дані щодо авторських прав "
"на програму, список учасників розробки та деякі відомості щодо того, на якій "
"платформі запущено програму."

#: content/docs/use/kirigami/advanced-add_about_page.md:12
msgid ""
"First, we are going to create two files in the `src/` directory called "
"`about.cpp` and `about.h`."
msgstr ""
"Спочатку, ми створимо два файли у каталозі `src/`, а саме `about.cpp` і "
"`about.h`."

#: content/docs/use/kirigami/advanced-add_about_page.md:14
msgid "about.h"
msgstr "about.h"

#: content/docs/use/kirigami/advanced-add_about_page.md:33
msgid ""
"In the `.h` file we create this class `AboutType` which is inherited from "
"[QObject](https://doc.qt.io/qt-5/qobject.html)."
msgstr ""
"У файлі `.h` ми створюємо цей клас `aboutType`, який успадковує властивості "
"від [QObject](https://doc.qt.io/qt-5/qobject.html)."

#: content/docs/use/kirigami/advanced-add_about_page.md:36
msgid ""
"The `Q_OBJECT` macro tells the compiler that this class uses own signals and "
"slots, the `Q_PROPERTY` macro behaves like a class data member, but it has "
"additional features, it will allow our QML code to have access to this class."
msgstr ""
"Макрос `Q_OBJECT` повідомляє компілятору, що цей клас використовує власні "
"сигнали і слоти, макрос `Q_PROPERTY` поводиться як учасник даних класу, але "
"має додаткові властивості — він уможливить для нашого коду QML доступ до "
"цього класу."

#: content/docs/use/kirigami/advanced-add_about_page.md:39
msgid ""
"The `aboutData` method will return the application data from `KAboutData`."
msgstr "Метод `aboutData` повертатиме дані програми з `KAboutData`."

#: content/docs/use/kirigami/advanced-add_about_page.md:41
msgid "about.cpp"
msgstr "about.cpp"

#: content/docs/use/kirigami/advanced-add_about_page.md:47
msgid "In the `.cpp` file we just include the `.h` file."
msgstr "У файлі `.cpp` ми просто включаємо файл `.h`."

#: content/docs/use/kirigami/advanced-add_about_page.md:49
#: content/docs/use/kirigami/introduction-getting_started.md:92
msgid "main.cpp"
msgstr "main.cpp"

#: content/docs/use/kirigami/advanced-add_about_page.md:63
msgid "The program name used internally."
msgstr "Внутрішній варіант назви програми."

#: content/docs/use/kirigami/advanced-add_about_page.md:65
msgid "A displayable program name string."
msgstr "Показаний рядок назви програми."

#: content/docs/use/kirigami/advanced-add_about_page.md:67
msgid "The program version string."
msgstr "Рядок версії програми."

#: content/docs/use/kirigami/advanced-add_about_page.md:69
msgid "Short description of what the app does."
msgstr "Короткий опис призначення програми."

#: content/docs/use/kirigami/advanced-add_about_page.md:71
msgid "The license this code is released under."
msgstr "Умови ліцензування випущеного коду."

#: content/docs/use/kirigami/advanced-add_about_page.md:73
msgid "Copyright Statement."
msgstr "Відомості щодо авторських прав."

#: content/docs/use/kirigami/advanced-add_about_page.md:90
msgid ""
"In the cpp file we include `KAboutData` and the `.h` file we just created, "
"[KAboutData](docs:kcoreaddons;KAboutData) is a core KDE Frameworks component "
"that stores information about an application, which can then be reused by "
"many other KDE Frameworks components. We instantiate a new `KAboutData` "
"object with its fairly complete default constructor and add author "
"information."
msgstr ""
"У файлі cpp ми включаємо `KAboutData` і файл `.h`, який щойно створили, "
"[KAboutData](docs:kcoreaddons;KAboutData) є основним компонентом KDE "
"Frameworks, який зберігає відомості щодо програми, які згодом можна повторно "
"використати у багатьох інших компонентах KDE Frameworks. Ми створюємо "
"екземпляр нового об'єкта `KAboutData` із його очевидно повним типовим "
"конструктором та додаємо дані щодо авторства."

#: content/docs/use/kirigami/advanced-add_about_page.md:93
msgid ""
"We also include this `config-helloworld.h` file which gives us this "
"`HELLOWORLD_VERSION_STRING` variable that we'll set later in this tutorial."
msgstr ""
"Ми також включаємо цей файл `config-helloworld.h`, який надає нам цю змінну "
"`HELLOWORLD_VERSION_STRING`, значення якої ми встановимо пізніше у цьому "
"розділі підручника."

#: content/docs/use/kirigami/advanced-add_about_page.md:95
msgid ""
"After all the required information has been set, we call `KAboutData::"
"setApplicationData` to initialize the properties of the [QApplication ]"
"(https://doc.qt.io/qt-5/qapplication.html) object."
msgstr ""
"Після встановлення усіх потрібних відомостей ми викликаємо `KAboutData::"
"setApplicationData` для ініціалізації властивостей об'єкта [QApplication]"
"(https://doc.qt.io/qt-5/qapplication.html)."

#: content/docs/use/kirigami/advanced-add_about_page.md:98
msgid ""
"After the QML Engine definition, we create a [qmlRegisterSingletonType]"
"(https://doc.qt.io/qt-5/qqmlengine.html#qmlRegisterSingletonType), the first "
"argument is a URI, basically a package name, the second and third arguments "
"are major and minor versions respectively, the fourth is the type name, the "
"name that we will call when accessing the `AboutType` methods."
msgstr ""
"Після визначення рушія QML ми створюємо [qmlRegisterSingletonType](https://"
"doc.qt.io/qt-5/qqmlengine.html#qmlRegisterSingletonType). Першим аргументом "
"є адреса, на базовому рівні назва пакунка, другим і третім аргументами є "
"основна і проміжна версії, відповідно, четвертим аргументом є назва типу, "
"назва, яку ми викликатимемо при доступі до методів `AboutType`."

#: content/docs/use/kirigami/advanced-add_about_page.md:100
msgid ""
"In the `qmlRegisterSingletonType` lambda we just return a new `AboutType` "
"object;"
msgstr ""
"У лямбді `qmlRegisterSingletonType` ми просто повертаємо новий об'єкт "
"`AboutType`;"

#: content/docs/use/kirigami/advanced-add_about_page.md:103
#: content/docs/use/kirigami/introduction-getting_started.md:58
msgid "main.qml"
msgstr "main.qml"

#: content/docs/use/kirigami/advanced-add_about_page.md:135
msgid ""
"First, we import the package we defined in the `main.cpp` file, add a "
"`Kirigami.Action` to our global drawer that will send us to the about page "
"and create a component with a `Kirigami.AboutPage` in it, the About Page "
"only have one property: `aboutData`, we then pass `Conrtoller.aboutData` to "
"it."
msgstr ""
"Спершу ми імпортуємо пакунок, який ми визначили у файлі `main.cpp`, додаємо "
"`Kirigami.Action` на нашу загальну висувну панель. Відповідна кнопка "
"надаватиме нам змогу переходити на сторінку «Про програму». Створюємо на "
"загальній панелі компонент з `Kirigami.AboutPage` на ньому. Сторінка «Про "
"програму» матиме лише одну властивість — `aboutData`. Далі, ми передамо цій "
"властивості значення `Conrtoller.aboutData`."

#: content/docs/use/kirigami/advanced-add_about_page.md:138
msgid "CMakeLists"
msgstr "CMakeLists"

#: content/docs/use/kirigami/advanced-add_about_page.md:161
msgid ""
"In the CMakeLists.txt file in our top-level folder, add `CoreAddons` to the "
"`find_package` module. You'll also want to add these three `ECM` includes "
"which will allow us to use the `ecm_setup_version` function, this function "
"let's use the `PROJECT_VERSION` variable in our code so we only need to "
"change one variable when bumping up versions."
msgstr ""
"У файлі CMakeLists.txt у нашій теці верхнього рівня додаємо `CoreAddons` до "
"модуля `find_package`. Також варто додати три включення `ECM`, яка надасть "
"нам змогу скористатися функцією `ecm_setup_version`. Ця функція уможливлює "
"використання змінної `PROJECT_VERSION` у нашому коді, отже нам потрібно буде "
"змінити лише одну змінну при переході до нових версій."

#: content/docs/use/kirigami/advanced-add_about_page.md:169
msgid ""
"In the CMakeLists.txt file in the ‘src’ directory, add `controller.cpp` to "
"the `add_executable` module and `KF5::CoreAddons` to the "
"`target_link_libraries` module."
msgstr ""
"У файлі CMakeLists.txt у каталозі ‘src’ додайте `controller.cpp` до модуля "
"`add_executable` і `KF5::CoreAddons` до модуля `target_link_libraries`."

#: content/docs/use/kirigami/advanced-add_about_page.md:171
msgid "Running the application"
msgstr "Запуск програми"

#: content/docs/use/kirigami/advanced-add_about_page.md:173
msgid ""
"Now if you run your application and trigger the \"About\" action in the "
"global drawer you should see our about page."
msgstr ""
"Тепер, якщо ви запустите програму і скористаєтеся пунктом «About» на "
"загальній висувній панелі, ви побачите нашу сторінку відомостей щодо "
"програми."

#: content/docs/use/kirigami/advanced-add_about_page.md:175
msgid "![Screenshot of the Kirigami About Page](about-page.png)"
msgstr "![Знімок сторінки «Про програму» Kirigami](about-page.png)"

#: content/docs/use/kirigami/advanced-connect_backend.md:0
msgid "Connect logic to your QML user interface"
msgstr "З'єднання логіки з вашим інтерфейсом користувача QML"

#: content/docs/use/kirigami/advanced-connect_backend.md:0
msgid ""
"Connect a backend to do calculations and supply your user interface with "
"data to display"
msgstr ""
"З'єднання модуля для виконання обчислень і надання інтерфейсу даних для "
"показу"

#: content/docs/use/kirigami/advanced-connect_backend.md:10
msgid ""
"To integrate logic into the application, we need C++ backend classes that "
"can do the important calculations. Writing logic in the QML files is "
"discouraged, so try to move as much as possible to the backend, so QML is "
"purely used for displaying the user interface, which is what it is best at."
msgstr ""
"Щоб інтегрувати логіку до самої програми нам знадобляться класи модуля "
"обробки мовою C++, які зможуть виконувати важливі обчислення. Не варто "
"вписувати логіку до самих файлів QML — слід переносити якомога більшу її "
"частину до модуля обробки, щоб код QML використовувався лише для показу "
"інтерфейсу користувача — того, для чого його, власне, призначено."

#: content/docs/use/kirigami/advanced-connect_backend.md:12
msgid ""
"For your new backend class, create two new files called `backend.cpp` and "
"`backend.h`. Don't forget to add the new cpp file to the executable in `src/"
"CMakeLists.txt`, next to main.cpp."
msgstr ""
"Для нового класу модуля обробки створіть два файли із назвами `backend.cpp` "
"і `backend.h`. Не забудьте додати нові файли cpp до модуля збирання "
"виконуваного файла у `src/CMakeLists.txt`, поруч із main.cpp."

#: content/docs/use/kirigami/advanced-connect_backend.md:14
msgid ""
"Add the following content to the new header file (the one with the `.h` "
"extension):"
msgstr ""
"Додайте такі рядки до нового файла заголовків (файла з суфіксом назви `.h`):"

#: content/docs/use/kirigami/advanced-connect_backend.md:29
msgid ""
"The cpp file containing the definitions is similarly empty right now, it "
"should contain something like the following:"
msgstr ""
"Файл cpp, який має містити визначення, так само зараз є порожнім. У ньому "
"мають міститися десь такі рядки:"

#: content/docs/use/kirigami/advanced-connect_backend.md:40
msgid ""
"Currently the user interface doesn't know about your backend class. To "
"change that, we need to register the new type in `main.cpp`. The backend "
"will be created as a singleton, that means it will only be created once and "
"exist through the whole time from starting the application to closing it."
msgstr ""
"На цей момент інтерфейсу користувача нічого не відомо про клас модуля "
"обробки. Щоб повідомити про модуль, нам слід зареєструвати новий тип у `main."
"cpp`. Модуль обробки буде створено як одинак, що означає, що його буде "
"створено лише одноразово і він існуватиме увесь час — від запуску програми "
"до завершення її роботи."

#: content/docs/use/kirigami/advanced-connect_backend.md:42
msgid ""
"To `main.cpp`, right after creating the `QQmlApplicationEngine`, add the "
"type registration as follows:"
msgstr ""
"У файл `main.cpp`, одразу після створення `QQmlApplicationEngine`, додайте "
"реєстрацію типу ось так:"

#: content/docs/use/kirigami/advanced-connect_backend.md:48
msgid "Don't forget to include the new header file at the top of `main.cpp`."
msgstr ""
"Не забудьте додати новий файл заголовків у початковій частині `main.cpp`."

#: content/docs/use/kirigami/advanced-connect_backend.md:50
msgid ""
"From now on, the backend will be known to QML as `Backend`. It is contained "
"in a module called `org.kde.example`. Since the module is part of the "
"application, you don't need to worry about versioning it, just stay with 1.0 "
"and use it consistently throughout the application."
msgstr ""
"З цього моменту у QML модуль обробки буде відомий як `Backend`. Він "
"міститиметься у модулі із назвою `org.kde.example`. Оскільки модуль є "
"частиною програми, вам не варто перейматися щодо встановлення його версій, "
"просто лишіть версію 1.0 і використовуйте його послідовно у всій програмі."

#: content/docs/use/kirigami/advanced-connect_backend.md:52
msgid "In `main.qml`, import the new module:"
msgstr "У `main.qml` імпортуйте новий модуль:"

#: content/docs/use/kirigami/advanced-connect_backend.md:57
msgid ""
"Now we have connected the class holding the future logic to the application, "
"but it still doesn't do anything. To change that, let's add a property to "
"the class. Properties are a lot more than a simple variable. They can inform "
"the UI about changes so it can update the right areas."
msgstr ""
"Тепер клас, який містить майбутню логіку, з'єднано із програмою, але він усе "
"ще не виконує ніяких корисних дій. Щоб змінити це, давайте додамо до класу "
"властивість. Призначення властивостей є набагато ширшим за прості змінні. "
"Вони можуть інформувати інтерфейс користувача щодо змін, щоб той міг "
"оновлювати належні області."

#: content/docs/use/kirigami/advanced-connect_backend.md:59
msgid "Right under the `Q_OBJECT` macro, add a new `Q_PROPERTY`."
msgstr "Одразу після макросу `Q_OBJECT` додайте новий макрос `Q_PROPERTY`."

#: content/docs/use/kirigami/advanced-connect_backend.md:65
msgid ""
"That seems like quite a lot for a simple property we'll use to show some "
"text from the backend, right? But a closer look reveals that this can "
"already run logic when the property is read by the user interface, and when "
"it is written. It will automatically inform frontend and backend of changes."
msgstr ""
"Здається, забагато для простої властивості, за допомогою якої ми хочемо "
"показати якийсь текст з модуля обробки, чи не так? Але прискіпливіший погляд "
"показує, що це вже може запускати логіку, коли інтерфейс користувача виконує "
"читання властивості і коли виконується запис до властивості. Оболонку і "
"модуль обробки буде автоматично проінформовано про зміни."

#: content/docs/use/kirigami/advanced-connect_backend.md:68
msgid ""
"The reading and writing is based on getter and setter functions, so add a "
"new private attribute to your class, like this, and add getter and setter "
"functions."
msgstr ""
"Читання і запис засновано на функціях отримання та встановлення значень, "
"тому додайте новий закритий (приватний) атрибут до вашого класу у описаний "
"спосіб, і додайте функції отримання та встановлення значень."

#: content/docs/use/kirigami/advanced-connect_backend.md:74
msgid "To the public section, add"
msgstr "У розділі public додайте"

#: content/docs/use/kirigami/advanced-connect_backend.md:80
msgid ""
"The first function is the getter, the second the setter, and the third a "
"signal that is emitted when the property was changed. The signal doesn't "
"need any implementation in the cpp file, since it doesn't do much more than "
"being emitted, but the getter and setter need to be implemented similar to "
"the following:"
msgstr ""
"Перша функція є отримувачем даних, друга — встановлювачем, а третя — "
"сигналом, який видається, коли змінюється значення властивості. Сигнал не "
"потребує реалізації у файлі cpp, оскільки він не виконує майже нічого, окрім "
"видання, але функції отримання та встановлення значення має бути реалізовано "
"десь так:"

#: content/docs/use/kirigami/advanced-connect_backend.md:94
msgid ""
"As you can see, when the setter is called, the signal will be emitted, and "
"inform the ui and backend of the change."
msgstr ""
"Як можна бачити, при виклику функції встановлення значення буде видано "
"сигнал, отже про зміну буде проінформовано інтерфейс користувача і модуль "
"обробки."

#: content/docs/use/kirigami/advanced-connect_backend.md:96
msgid ""
"To display the text, in `main.qml` add a heading displaying it right under "
"the text property of the `Kirigami.Page` element that is already contained "
"in the template."
msgstr ""
"Щоб показати текст у `main.qml` додайте заголовок, який його показуватиме "
"одразу після текстової властивості елемента `Kirigami.Page`, який вже "
"міститься у шаблоні."

#: content/docs/use/kirigami/advanced-connect_backend.md:98
msgid "The resulting code in that part of the file should look like this:"
msgstr "Код-результат у тій частині файла має виглядати ось так:"

#: content/docs/use/kirigami/advanced-connect_backend.md:114
msgid "Now compile and start your program again."
msgstr "Тепер зберіть і запустіть вашу програму знову."

#: content/docs/use/kirigami/advanced-connect_backend.md:116
msgid "Congratulations, you learned:"
msgstr "Вітаємо, ви навчилися:"

#: content/docs/use/kirigami/advanced-connect_backend.md:117
msgid "How to register backend types to QML"
msgstr "Як реєструвати типи модулів обробки у QML"

#: content/docs/use/kirigami/advanced-connect_backend.md:118
msgid "Add new elements to the QML file"
msgstr "Додавати нові елементи до файла QML"

#: content/docs/use/kirigami/advanced-connect_backend.md:119
msgid "Create new QObject subclasses"
msgstr "Створювати підкласи QObject"

#: content/docs/use/kirigami/advanced-connect_backend.md:120
msgid "How to add properties and what they do"
msgstr "Як додавати властивості і для чого вони потрібні"

#: content/docs/use/kirigami/advanced-connect_backend.md:121
msgid "What signals are"
msgstr "Що таке сигнали"

#: content/docs/use/kirigami/advanced-connect_backend.md:123
msgid ""
"If you want to know more about the integration between QML and C++, we "
"recommend reading the [official Qt documentation](https://doc.qt.io/qt-5/"
"qtqml-cppintegration-definetypes.html)."
msgstr ""
"Якщо ви хочете дізнатися про інтеграцію між QML і C++, ми рекомендуємо "
"ознайомитися із [офіційною документацією до Qt](https://doc.qt.io/qt-5/qtqml-"
"cppintegration-definetypes.html)."

#: content/docs/use/kirigami/advanced-maincpp.md:0
msgid "Figuring out main.cpp"
msgstr "Розбираємося у main.cpp"

#: content/docs/use/kirigami/advanced-maincpp.md:0
msgid "Understanding the central file of our backend code\n"
msgstr "Розбираємося із центральним файлом нашого коду модуля обробки\n"

#: content/docs/use/kirigami/advanced-maincpp.md:11
msgid "The role of main.cpp"
msgstr "Роль main.cpp"

#: content/docs/use/kirigami/advanced-maincpp.md:13
msgid ""
"While QML is used for the front-end of Kirigami applications, the backend is "
"usually written in C++ thanks to this language's speed and flexibility. "
"While in previous pages we have covered QML in a lot of depth, we'll need to "
"gain an understanding of our backend C++ code in order to make applications "
"that are more useful than what we can achieve with pure QML."
msgstr ""
"Хоча для оболонок програм на основі Kirigami використовується QML, модулі "
"обробки, зазвичай, пишуть мовою C++ через її швидкість та гнучкість. На "
"попередніх сторінках ми доволі докладно розбиралися із кодом QML, а тепер "
"нам треба розібратися із кодом мовою C++ нашого модуля обробки, щоб зробити "
"програми кориснішими за ті, які ми могли б написати, використовуючи лише QML."

#: content/docs/use/kirigami/advanced-maincpp.md:15
msgid ""
"Here, we'll be going over the `main.cpp` file we created in the 'Getting "
"Started' page so that we can better understand what is going on in the "
"central C++ file of our application. While this is a basic `main.cpp`, the "
"features we will go over will remain essential no matter what kind of "
"application it is that you decide to create."
msgstr ""
"У цьому розділі ми вивчимо файл `main.cpp`, який було створено на сторінці "
"«Вступ» з метою удосконалення знань щодо того, що відбувається у "
"центральному файлі мовою C++ нашої програми. Хоча це базовий варіант `main."
"cpp`, можливості, які ми вивчатимемо, лишатимуться характерними для будь-"
"яких програм, які ви створюватимете."

#: content/docs/use/kirigami/advanced-maincpp.md:17
msgid "What it does"
msgstr "Призначення"

#: content/docs/use/kirigami/advanced-maincpp.md:21
msgid ""
"First we must include a number of Qt header files, allowing us to use their "
"functions. In this case, we include a number of Qt headers that handle "
"application logic, reading QML files, and accessing files defined in "
"`resources.qrc`."
msgstr ""
"Спочатку нам слід включити декілька файлів заголовків Qt, за допомогою яких "
"ми зможемо скористатися відповідними функціями. У нашому випадку ми включимо "
"заголовки Qt, які пов'язано із обробкою логіки програми, читанням файлів QML "
"і доступом до файлів, які визначено у `resources.qrc`."

#: content/docs/use/kirigami/advanced-maincpp.md:23
msgid ""
"Enter our main function. Its first line `QGuiApplication::setAttribute(Qt::"
"AA_EnableHighDpiScaling);` enables High DPI scaling. This lets our "
"application scale properly across devices with different display pixel "
"densities."
msgstr ""
"Введемо нашу основну функцію. Його перший рядок `QGuiApplication::"
"setAttribute(Qt::AA_EnableHighDpiScaling);` вмикає масштабування із високою "
"роздільністю. Це надає нашій програмі належним чином масштабувати вікно на "
"усіх пристроях із різними густинами пікселів на дисплеях."

#: content/docs/use/kirigami/advanced-maincpp.md:25
msgid ""
"We then create a [`QApplication`](https://doc.qt.io/qt-5/qapplication."
"html#QApplication) instance which we call `app`. We pass `argc` and `argv` "
"to the constructor here, letting Qt parse and use arguments meant to affect "
"Qt."
msgstr ""
"Далі, ми створюємо екземпляр [`QApplication`](https://doc.qt.io/qt-5/"
"qapplication.html#QApplication), який ми назвемо `app`. Тут ми передаємо "
"`argc` і `argv` конструктору, дозволяючи Qt обробляти і використовувати "
"аргументи, які мають значення для Qt."

#: content/docs/use/kirigami/advanced-maincpp.md:27
msgid ""
"We also set some metadata relating to the application. These include the "
"organisation that created the application, the organisation's website, and "
"the name of the application. We set these properties in [`QCoreApplication`]"
"(https://doc.qt.io/qt-5/qcoreapplication.html), an object which provides the "
"event loop for applications regardless of whether they have a GUI or not (so "
"if we ran our program without the GUI, this metadata would still be set)."
msgstr ""
"Ми також встановимо значення деяких метаданих, пов'язаних із програмою. "
"Серед цих даних організація, якою створено програму, сайт організації та "
"назва програми. Ми встановлюємо значення цих властивостей у "
"[`QCoreApplication`](https://doc.qt.io/qt-5/qcoreapplication.html), об'єкті, "
"які забезпечують роботу циклу обробки подій для програм, незалежно від того, "
"мають ці програми графічний інтерфейс чи ні (отже, якщо ми запустимо нашу "
"програму без графічного інтерфейсу, значення для цих метаданих все одно буде "
"встановлено)."

#: content/docs/use/kirigami/advanced-maincpp.md:29
msgid ""
"The [`QQmlApplicationEngine`](https://doc.qt.io/qt-5/qqmlapplicationengine."
"html) lets us load an application from a QML file, which we do in the next "
"line. In `engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));` we load our "
"QML from a URL in our `resources.qrc` file."
msgstr ""
"[`QQmlApplicationEngine`](https://doc.qt.io/qt-5/qqmlapplicationengine.html) "
"надає нам можливість завантажувати програму з файла QML, що ми і робимо у "
"наступному рядку. У `engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));` "
"ми завантажуємо нашу QML з адреси у нашому файлі `resources.qrc`."

#: content/docs/use/kirigami/advanced-maincpp.md:31
msgid ""
"Next, we check if our engine correctly loaded the QML file by checking that "
"the engine's `rootObjects` list is not empty. We can then run our "
"application with `app.exec()`."
msgstr ""
"Далі, ми перевіримо, чи наш рушій належним чином завантажив файл QML, "
"перевіривши, чи список`rootObjects` рушія є порожнім. Далі, ми можемо "
"запустити нашу програму за допомогою `app.exec()`."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:0
msgid "Understanding CMakeLists"
msgstr "Розбираємося із CMakeLists"

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:0
msgid "Getting to grips with how CMakeLists.txt files work\n"
msgstr "Ознайомлюємося із тим, як працюють файли CMakeLists.txt\n"

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:11
msgid "CMake"
msgstr "CMake"

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:12
msgid ""
"In our introductory tutorial, we used CMake as the build system for our "
"application, but we only really paid close attention to one of our "
"CMakeLists. Here, we're going to go over how CMakeLists work in a bit more "
"detail."
msgstr ""
"У нашому вступному підручнику ми використали CMake як систему збирання для "
"нашої програми, але приділили увагу лише одному з файлів CMakeLists. Цей "
"розділ ми присвятимо докладнішому вивченню принципів роботи CMakeLists."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:14
msgid ""
"CMake is useful because it allows us to automate much of the stuff that "
"needs to be done before compilation."
msgstr ""
"CMake є корисним, оскільки за його допомогою ми можемо автоматизувати більшу "
"частину роботи, яку слід виконати до компіляції."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:16
#: content/docs/use/kirigami/introduction-getting_started.md:112
msgid "CMakeLists.txt"
msgstr "CMakeLists.txt"

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:18
msgid "You might remember this CMakeLists file from the first tutorial:"
msgstr "Можливо, ви пам'ятаєте цей файл CMakeLists з першого підручника:"

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:22
msgid "The first line, `project(helloworld)` defines the name of the project."
msgstr "Перший рядок, `project(helloworld)`, визначає назву проєкту."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:24
msgid ""
"After that, we are setting the versions of our needed tools. "
"`cmake_minimum_required(VERSION 3.10)` sets the version of CMake we will be "
"calling. We then use `set` to define variables (`KF5_MIN_VERSION` and "
"`QT_MIN_VERSION`) containing the versions of the KDE Frameworks and Qt."
msgstr ""
"Після цього ми встановлюємо версії потрібних нам інструментів. "
"`cmake_minimum_required(VERSION 3.10)` встановлює версію CMake, яку ми "
"викликатимемо. Далі, ми використовуємо `set` для визначення змінних "
"(`KF5_MIN_VERSION` і `QT_MIN_VERSION`), які містять дані щодо версій KDE "
"Frameworks і Qt."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:26
msgid ""
"Then we get to a section where we include a number of necessary CMake and "
"KDE settings. You shouldn't worry too much about these lines for now and we "
"won't need to change them in this tutorial."
msgstr ""
"Далі, маємо розділ, у якому ми включимо декілька потрібних параметрів CMake "
"і KDE. Зараз немає сенсу надто перейматися цими рядками — ми не будемо "
"змінювати їх у цьому підручнику."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:28
msgid ""
"The following section is important, because it specifies which dependencies "
"we'll be bringing in at compile time. Let's look at the first line:"
msgstr ""
"Наступний розділ є важливим, оскільки у ньому визначають, які залежності ми "
"використовуватимемо під час компіляції. Погляньмо на перший рядок:"

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:30
msgid ""
"`find_package(KF5 ${KF5_MIN_VERSION} COMPONENTS Kirigami2 I18n CoreAddons "
"WidgetsAddons)`"
msgstr ""
"`find_package(KF5 ${KF5_MIN_VERSION} COMPONENTS Kirigami2 I18n CoreAddons "
"WidgetsAddons)`"

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:31
msgid "`find_package` finds and loads the external component."
msgstr "`find_package` знаходить і завантажує зовнішній компонент."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:32
msgid "The first word is the framework (`KF5`)."
msgstr "Першим словом є бібліотека (`KF5`)."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:33
msgid ""
"Then we are calling the variable with the versions we set in the second line."
msgstr ""
"Далі, ми викликаємо змінну із версіями, значення яких ми вказали у другому "
"рядку."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:34
msgid ""
"`COMPONENTS` is a parameter that precedes the specific components of the "
"framework we will include."
msgstr ""
"`COMPONENTS` — параметр, який передує специфічним компонентам бібліотеки, "
"які ми включатимемо."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:35
msgid "Each word after `COMPONENTS` refers to a specific component."
msgstr "Кожне слово після `COMPONENTS` вказує на компонент."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:37
#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:51
#: content/docs/use/kirigami/components-actions.md:14
#: content/docs/use/kirigami/components-actions.md:34
#: content/docs/use/kirigami/components-actions.md:217
#: content/docs/use/kirigami/components-actiontoolbar.md:14
#: content/docs/use/kirigami/components-card.md:97
#: content/docs/use/kirigami/components-controls.md:82
#: content/docs/use/kirigami/components-drawers.md:111
#: content/docs/use/kirigami/components-drawers.md:190
#: content/docs/use/kirigami/components-pagerow_pagestack.md:63
#: content/docs/use/kirigami/introduction-actions.md:54
#: content/docs/use/kirigami/introduction-actions.md:102
#: content/docs/use/kirigami/introduction-getting_started.md:80
#: content/docs/use/kirigami/introduction-getting_started.md:131
#: content/docs/use/kirigami/introduction-getting_started.md:157
#: content/docs/use/kirigami/introduction-listviews.md:44
#: content/docs/use/kirigami/introduction-listviews.md:173
#: content/docs/use/kirigami/introduction-next_steps.md:25
#: content/docs/use/kirigami/introduction-pages.md:27
#: content/docs/use/kirigami/introduction-pages.md:59
msgid "Note"
msgstr "Нотатка"

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:41
msgid ""
"The final line, `add_subdirectory(src)`, points CMake into the 'src' "
"directory."
msgstr ""
"Останній рядок, `add_subdirectory(src)`, вказує каталог 'src' для CMake."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:45
msgid ""
"Since most of the heavy lifting is done by the first file, this one is a lot "
"shorter."
msgstr ""
"Оскільки більша частина визначається першим файлом, цей файл є набагато "
"коротшим."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:47
msgid ""
"`set` is used to set `helloworld_SRCS` to `main.cpp` and `resources.qrc` (if "
"we decide to create additional C++ files we'll need to add them here too)"
msgstr ""
"`set` використовується для встановлення для `helloworld_SRCS` значення `main."
"cpp` і `resources.qrc` (якщо ми вирішимо створити додаткові файли C++, нам "
"слід також додати їх тут)"

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:48
msgid ""
"`add_executable` takes care of naming our executable and grabbing the files "
"needed to create it"
msgstr ""
"`add_executable` відповідає за назву нашого виконуваного файла і визначення "
"файлів, які потрібні для його створення"

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:49
msgid ""
"`target_link_libraries` dynamically links the libraries used in our code to "
"our executable."
msgstr ""
"`target_link_libraries` динамічно пов'язує ціль із бібліотеками, які "
"використовуються у нашому коді для створення виконуваного файла."

#: content/docs/use/kirigami/advanced-understanding_cmakelists.md:55
msgid "This setup will be useful when developing most Kirigami apps."
msgstr ""
"Такими налаштуваннями можна скористатися для створення більшості програм на "
"основі Kirigami."

#: content/docs/use/kirigami/components-actions.md:0
msgid "Actions based components"
msgstr "Компоненти на основі дій"

#: content/docs/use/kirigami/components-actions.md:0
msgid "Kirigami's Actions are used to add functionality to components.\n"
msgstr ""
"Дії (Actions) у Kirigami використовують для додавання функціональних "
"можливостей до компонентів.\n"

#: content/docs/use/kirigami/components-actions.md:10
#: content/docs/use/kirigami/introduction-actions.md:16
msgid "Actions"
msgstr "Дії"

#: content/docs/use/kirigami/components-actions.md:12
#: content/docs/use/kirigami/introduction-actions.md:18
msgid ""
"A Kirigami Action encapsulates a user interface action. We can use these to "
"provide our applications with easy-to-reach actions that are essential to "
"their functionality."
msgstr ""
"Дія (Action) Kirigami є контейнером для дії з інтерфейсом користувача. Діями "
"можна скористатися для надання нашій програмі легкодоступних дій, які є "
"критичними для виконання нею функціональних можливостей."

#: content/docs/use/kirigami/components-actions.md:19
msgid ""
"Like QtQuick Controls Actions, they can be assigned to menu items and "
"toolbar buttons, but also to multiple other Kirigami components."
msgstr ""
"Подібно до дій Control QtQuick, їх можна пов'язати із пунктами меню і "
"кнопками панелі інструментів, а також декількома іншими компонентами "
"Kirigami."

#: content/docs/use/kirigami/components-actions.md:36
msgid ""
"The `icon.name` property takes names for system-wide icons per the "
"FreeDesktop specification. These icons and icon names can be viewed with "
"KDE's CuttleFish application, or by visiting [FreeDesktop's icon naming "
"specification](https://specifications.freedesktop.org/icon-naming-spec/icon-"
"naming-spec-latest.html)."
msgstr ""
"Властивість `icon.name` визначає назву загальносистемної піктограми за "
"специфікацією FreeDesktop. Піктограми і назви піктограм можна переглянути за "
"допомогою програми CuttleFish KDE або відвідавши [сторінку специфікації назв "
"піктограм FreeDesktop](https://specifications.freedesktop.org/icon-naming-"
"spec/icon-naming-spec-latest.html)."

#: content/docs/use/kirigami/components-actions.md:40
msgid ""
"One feature offered by Kirigami Actions on top of QtQuick Actions is the "
"possibility to nest actions."
msgstr ""
"Однією з можливостей, які пропонуються діями Kirigami, окрім дій QtQuick, є "
"можливість вкладення дій одна в одну."

#: content/docs/use/kirigami/components-actions.md:60
msgid ""
"Another feature of Kirigami Actions is to provide various hints to items "
"using actions about how they should display the action. These are primarily "
"handled by the `displayHint` and `displayComponent` properties."
msgstr ""
"Ще однією можливістю дій Kirigami є надання різноманітних настанов щодо "
"показу дії для пунктів, для яких використовуються дії. В основному, за ці "
"настанови відповідають властивості `displayHint` і `displayComponent`."

#: content/docs/use/kirigami/components-actions.md:64
msgid ""
"These properties will be respected by the item if possible. For example, the "
"following action will be displayed as a TextField with the item trying its "
"best to keep the item visible as long as possible."
msgstr ""
"Ці властивості буде враховано пунктом, якщо це можливо. Наприклад, наведену "
"нижче дію буде показано як TextField, а її пункт намагатиметься максимально "
"зберігати видимість."

#: content/docs/use/kirigami/components-actions.md:81
msgid "Using actions in other components"
msgstr "Використання дій у інших компонентах"

#: content/docs/use/kirigami/components-actions.md:83
#: content/docs/use/kirigami/introduction-next_steps.md:65
msgid "Page"
msgstr "Сторінка"

#: content/docs/use/kirigami/components-actions.md:85
msgid "One of the features of pages is that Actions can be added to them."
msgstr "Однією із можливостей сторінок є можливість додавання до них дій."

#: content/docs/use/kirigami/components-actions.md:87
msgid ""
"You can add a main action, a left and right action and additional context "
"actions that are displayed on the toolbar if there is enough place or in a "
"hamburger menu on smaller screens."
msgstr ""
"Ви можете додати кнопки основної дії, дій ліворуч і праворуч та додаткових "
"контекстних дій, які буде показано на панелі інструментів, якщо на ній "
"достатньо місця, або у меню на малих екранах."

#: content/docs/use/kirigami/components-actions.md:127
msgid "Page actions on the desktop"
msgstr "Пункти дій сторінки на робочій станції"

#: content/docs/use/kirigami/components-actions.md:127
msgid "Page actions on a mobile device"
msgstr "Пункти дій на мобільному комп'ютері"

#: content/docs/use/kirigami/components-actions.md:132
#: content/docs/use/kirigami/components-scrollablepages_listviews.md:29
#: content/docs/use/kirigami/introduction-pages.md:44
msgid "Warning"
msgstr "Попередження"

#: content/docs/use/kirigami/components-actions.md:147
msgid "Global Drawer"
msgstr "Загальна панель"

#: content/docs/use/kirigami/components-actions.md:149
msgid ""
"The global drawer provides an action based navigation to your application. "
"This is the place, where nested actions are useful because it allows you to "
"create nested navigation:"
msgstr ""
"Загальна панель забезпечує роботу навігації на основі дій у вашій програмі. "
"Це місце, де корисними є вкладені дії, оскільки воно уможливлює створення "
"вкладеної навігації:"

#: content/docs/use/kirigami/components-actions.md:185
msgid "Global Drawers actions on the desktop"
msgstr "Пункти дій загальних панелей на робочій станції"

#: content/docs/use/kirigami/components-actions.md:185
msgid "Global Drawers actions on a mobile device"
msgstr "Пункти дій загальних панелей на мобільному комп'ютері"

#: content/docs/use/kirigami/components-actions.md:190
msgid ""
"You can read more about Global Drawers in the [documentation page for "
"drawers](../components-drawers/)."
msgstr ""
"Почитати більше про загальних панелей можна на [сторінці документації до "
"панелей](../components-drawers/)."

#: content/docs/use/kirigami/components-actions.md:192
msgid "ActionTextFields"
msgstr "ActionTextFields"

#: content/docs/use/kirigami/components-actions.md:194
msgid ""
"A [Kirigami ActionTextField](docs:kirigami2;ActionTextField) is used to add "
"some contextual actions to a text field, for example to clear the text, or "
"to search for the text."
msgstr ""
"[Kirigami ActionTextField](docs:kirigami2;ActionTextField) використовується "
"для додавання контекстних дій до поля для введення тексту, наприклад, для "
"вилучення тексту або пошуку за введеним текстовим критерієм."

#: content/docs/use/kirigami/components-actions.md:213
msgid ""
"In this example, we are creating a clear button for a search field only "
"visible when text is entered."
msgstr ""
"У цьому прикладі ми створюємо кнопку вилучення тексту для поля пошуку, яку "
"буде показано, лише якщо до поля введено якийсь текст."

#: content/docs/use/kirigami/components-actions.md:215
msgid "![Search field with text: \"I want ](searchfield.png)"
msgstr "![Поле пошуку із текстом: \"I want ](searchfield.png)"

#: content/docs/use/kirigami/components-actions.md:223
msgid "SwipeListItem"
msgstr "SwipeListItem"

#: content/docs/use/kirigami/components-actions.md:225
msgid ""
"A [SwipeListItem](docs:kirigami2;SwipeListItem) is a delegate intended to "
"support extra actions. When using a mouse, they will be shown on hover. On a "
"touch device, they can be shown by dragging the item with the handle."
msgstr ""
"[SwipeListItem](docs:kirigami2;SwipeListItem) представником об'єкта, який "
"призначено для забезпечення підтримки додаткових дій. Якщо використовується "
"миша, дії буде показано у відповідь на наведення вказівника. На сенсорному "
"пристрої доступ до дій можна отримати перетягуванням пункту за допомогою "
"елемента керування."

#: content/docs/use/kirigami/components-actions.md:243
msgid "do something"
msgstr "якісь дії"

#: content/docs/use/kirigami/components-actions.md:250
msgid "SwipeListItem on a computer"
msgstr "SwipeListItem на комп'ютері"

#: content/docs/use/kirigami/components-actions.md:252
msgid "SwipeListItem on a mobile device"
msgstr "SwipeListItem на мобільному пристрої"

#: content/docs/use/kirigami/components-actions.md:254
msgid "ActionToolBar"
msgstr "ActionToolBar"

#: content/docs/use/kirigami/components-actions.md:256
msgid ""
"An [ActionToolBar](docs:kirigami2;ActionToolBar) is a toolbar built out of a "
"list of actions. By default, each action that will fit on the toolbar will "
"be represented by a ToolButton, with those that do not fit being moved into "
"a menu at the end of the toolbar."
msgstr ""
"[ActionToolBar](docs:kirigami2;ActionToolBar) — панель інструментів, яку "
"побудовано на основі списку дій. Типово, кожен пункт дії, який вміщується на "
"панель інструментів, буде представлено кнопкою інструмента, а ті, які не "
"вмістилися, буде пересунуто до меню у кінцевій частині панелі інструментів."

#: content/docs/use/kirigami/components-actions.md:261
msgid ""
"Like ActionTextField, you may not need to use ActionToolBar directly as it "
"is used by page headers and cards to provide their action display."
msgstr ""
"Подібно до ActionTextField, ActionToolBar не варто використовувати "
"безпосередньо, оскільки він використовується заголовками сторінок і картками "
"для забезпечення показу їхніх пунктів дій."

#: content/docs/use/kirigami/components-actions.md:287
msgid "![](action_tool_bar.png)"
msgstr "![](action_tool_bar.png)"

#: content/docs/use/kirigami/components-actions.md:289
msgid ""
"You can read more about ActionToolBar components in their [dedicated "
"documentation page](../components-actiontoolbar/)."
msgstr ""
"Із докладнішим описом компонентів ActionToolBar можна ознайомитися за "
"допомогою [спеціалізованої сторінки документації](../components-"
"actiontoolbar/)."

#: content/docs/use/kirigami/components-actions.md:291
#: content/docs/use/kirigami/components-card.md:0
msgid "Cards"
msgstr "Карти"

#: content/docs/use/kirigami/components-actions.md:293
msgid ""
"The cards components can also take an action. For more information consult "
"the [component page for Cards](../components-card/)."
msgstr ""
"Компоненти карток також можуть отримувати дії. Докладніший опис можна знайти "
"на [сторінці компонентів для карток](../components-card/)."

#: content/docs/use/kirigami/components-actiontoolbar.md:0
msgid "Action Tool Bars"
msgstr "Панелі інструментів дій"

#: content/docs/use/kirigami/components-actiontoolbar.md:0
msgid "Create your own customisable tool bars with the ActionToolBar component"
msgstr ""
"Створення власних налаштовуваних панелей інструментів за допомогою "
"компонента ActionToolBar"

#: content/docs/use/kirigami/components-actiontoolbar.md:10
msgid ""
"While Kirigami pages allow you to easily place a set of actions in the page "
"header, there are times when you might prefer to have something more "
"flexible."
msgstr ""
"Хоча сторінки Kirigami надають вам змогу без проблем розташовувати набір "
"кнопок дій у шапці сторінки, іноді варто скористатися гнучкішим інструментом."

#: content/docs/use/kirigami/components-actiontoolbar.md:12
msgid ""
"Kirigami provides the component `Kirigami.ActionToolBar`. It will display a "
"list of `Kirigami.Action` objects and will display as many of them as "
"possible, providing an overflow menu for the ones that don't fit. The "
"ActionToolBar is dynamic and will move actions in and out of the overflow "
"menu depending on the size available to it."
msgstr ""
"До складу Kirigami включено компонент `Kirigami.ActionToolBar`. Він показує "
"список об'єктів `Kirigami.Action` так, щоб область перегляду вмістила "
"якомога більше об'єктів, надаючи меню переповнення із тими об'єктами, які не "
"вмістилися до області перегляду. ActionToolBar є динамічним об'єктом — "
"пересуває пункти до меню переповнення і з меню переповнення, залежно від "
"доступного розміру."

#: content/docs/use/kirigami/components-actiontoolbar.md:18
msgid "Creating our first ActionToolBar"
msgstr "Створюємо нашу першу ActionToolBar"

#: content/docs/use/kirigami/components-actiontoolbar.md:20
msgid ""
"The layout and location of your `Kirigami.ActionToolBar` are really up to "
"you, though for the sake of user-friendliness it is usually a good idea to "
"stick to UI conventions and put your toolbar near the top or bottom of your "
"page and to have it spread width-wise."
msgstr ""
"Компонування і розташування вашого `Kirigami.ActionToolBar` визначається "
"лише вами, хоча з міркувань зручності у користуванні, зазвичай, варто "
"користуватися традиційними принципами і розташовувати панель інструментів у "
"верхній або нижній частині сторінки, розтягнувши її на усю ширину області "
"перегляду."

#: content/docs/use/kirigami/components-actiontoolbar.md:22
msgid ""
"Like most other action-holding components, `Kirigami.ActionToolBar` has an "
"`actions` property. We can assign an array of `Kirigami.Action` components "
"to this property."
msgstr ""
"Подібно до більшості компонентів, які містять пункти дій, `Kirigami."
"ActionToolBar` має властивість `actions`. Пов'язати із цією властивістю "
"можна масив компонентів `Kirigami.Action`."

#: content/docs/use/kirigami/components-actiontoolbar.md:66
msgid "ActionToolBar with enough space for all children"
msgstr "ActionToolBar із достатнім простором для усіх дочірніх елементів"

#: content/docs/use/kirigami/components-actiontoolbar.md:66
msgid "ActionToolBar with overflow menu containing children"
msgstr "ActionToolBar із переповненим меню, що містить дочірні пункти"

#: content/docs/use/kirigami/components-actiontoolbar.md:71
msgid "Alignment"
msgstr "Вирівнювання"

#: content/docs/use/kirigami/components-actiontoolbar.md:73
msgid ""
"By default, actions in the ActionToolBar will be left aligned. This might "
"not be desirable in all situations. Thankfully we can change this with the "
"`alignment` property. We can set this property to a range of values, but the "
"three most relevant ones for an ActionToolBar are `Qt.AlignLeft`, `Qt."
"AlignCenter`, and `Qt.AlignRight` (which deal with horizontal alignment)."
msgstr ""
"Типово, пункти дій на ActionToolBar буде вирівняно ліворуч. Таке "
"вирівнювання є не завжди бажаним. На щастя, ми можемо змінити це за "
"допомогою властивості `alignment`. Для цієї властивості ви можете встановити "
"діапазон значень, але трьома найпоширенішими для ActionToolBar є `Qt."
"AlignLeft`, `Qt.AlignCenter` і `Qt.AlignRight` (які стосуються "
"горизонтального вирівнювання)."

#: content/docs/use/kirigami/components-actiontoolbar.md:102
msgid ""
"![ActionToolBar with children center-aligned](/docs/use/kirigami/components-"
"actiontoolbar/actiontoolbar-alignment.png)"
msgstr ""
"![ActionToolBar із вирівняними за центром дочірніми елементами](/docs/use/"
"kirigami/components-actiontoolbar/actiontoolbar-alignment.png)"

#: content/docs/use/kirigami/components-card.md:0
msgid ""
"A card serves as overview and an entry point for more detailed information "
"and can offer direct access to the most important actions on an item.\n"
msgstr ""
"Картка слугує як панель огляду та вхідна позиція для отримання докладніших "
"відомостей і може пропонувати безпосередній доступ до найважливіших дій над "
"пунктом.\n"

#: content/docs/use/kirigami/components-card.md:11
msgid ""
"The Kirigami types [`Kirigami.AbstractCard`](docs:kirigami2;org::kde::"
"kirigami::AbstractCard) and [`Kirigami.Card`](docs:kirigami2;org::kde::"
"kirigami::Card) are used to implement the popular card component used on "
"many mobile and web platforms. Cards can be used to display a collection of "
"information or actions in an attractive and distinctive way."
msgstr ""
"Типи Kirigami [`Kirigami.AbstractCard`](docs:kirigami2;org::kde::kirigami::"
"AbstractCard) і [`Kirigami.Card`](docs:kirigami2;org::kde::kirigami::Card) "
"використовують для реалізації популярного компонента картки, який "
"використовується на багатьох мобільних платформах та інтернет-платформах. "
"Картками можна скористатися для показу збірки відомостей або пунктів дій у "
"привабливий та виразний спосіб."

#: content/docs/use/kirigami/components-card.md:13
msgid ""
"Kirigami also offers 3 kinds of views and positioners to aid you in "
"presenting your cards with beautiful and responsive layouts."
msgstr ""
"Крім того, Kirigami пропонує 3 типи панелей перегляду і засобів "
"розташування, які допоможуть вам у представленні ваших карток з "
"використанням красивих і чутливих до дій користувача компонувань."

#: content/docs/use/kirigami/components-card.md:15
msgid "AbstractCard"
msgstr "AbstractCard"

#: content/docs/use/kirigami/components-card.md:17
msgid ""
"A [`Kirigami.AbstractCard`](docs:kirigami2;Card) is the simplest type of "
"card. It's just a rectangle with a shadow, which can contain any `Item` in "
"it. It can also have items assigned to its `header` or `footer` properties. "
"In this case a [`Kirigami.Heading`](docs:kirigami2;Heading) is its header "
"and a [`Controls.Label`](docs:qtquickcontrols;QtQuick.Controls.Label) with "
"`wrapMode` set to `Text.WordWrap` is the card's `contentItem`."
msgstr ""
"[`Kirigami.AbstractCard`](docs:kirigami2;Card) є найпростішим типом картки. "
"Це лише прямокутник з тінню, який може містити у собі будь-який `Item`. На "
"ній також можуть міститися пункти, які пов'язано із його властивостями "
"`header` або `footer`. У цьому випадку [`Kirigami.Heading`](docs:kirigami2;"
"Heading) є його шапкою, а [`Controls.Label`](docs:qtquickcontrols;QtQuick."
"Controls.Label) із `wrapMode`, встановленим у значення `Text.WordWrap`, є "
"`contentItem` картки."

#: content/docs/use/kirigami/components-card.md:41
msgid ""
"![Screenshot of an Abstract Card](/docs/use/kirigami/components-card/"
"abstract-card.png)"
msgstr ""
"![Знімок абстрактної картки](/docs/use/kirigami/components-card/abstract-"
"card.png)"

#: content/docs/use/kirigami/components-card.md:48
msgid "Card"
msgstr "Картка"

#: content/docs/use/kirigami/components-card.md:50
msgid ""
"A [`Kirigami.Card`](docs:kirigami2;Card) inherits from [`Kirigami."
"AbstractCard`](docs:kirigami2;AbstractCard) and provides more features out "
"of the box. A card has a header composed of a `banner` and a footer composed "
"of [`Kirigami.Action`](docs:kirigami2;Action) objects alongside its main "
"content."
msgstr ""
"[`Kirigami.Card`](docs:kirigami2;Card) є нащадком [`Kirigami.AbstractCard`]"
"(docs:kirigami2;AbstractCard) і від початку надає більше можливостей. Картка "
"має заголовок, що складається із банера (`banner`) і підвалу, складеного з "
"об'єктів [`Kirigami.Action`](docs:kirigami2;Action), разом із своїм основним "
"вмістом."

#: content/docs/use/kirigami/components-card.md:67
msgid "..."
msgstr "..."

#: content/docs/use/kirigami/components-card.md:72
msgid "The title can be positioned in the banner"
msgstr "Заголовок може бути розташовано банері"

#: content/docs/use/kirigami/components-card.md:87
msgid "![](/docs/use/kirigami/components-card/card1.png)"
msgstr "![](/docs/use/kirigami/components-card/card1.png)"

#: content/docs/use/kirigami/components-card.md:93
msgid "CardsLayout"
msgstr "CardsLayout"

#: content/docs/use/kirigami/components-card.md:95
msgid ""
"A [`Kirigami.CardsLayout`](docs:kirigami2;CardsLayout) is most useful when "
"the cards being presented are not instantiated by a model or by a model "
"which always has very few items. They are presented as a grid of two columns "
"which will remain centered if the application is really wide, or become a "
"single column if there is not enough space for two columns, such as a mobile "
"phone screen."
msgstr ""
"[`Kirigami.CardsLayout`](docs:kirigami2;CardsLayout) є найкориснішим, коли "
"екземпляри представлених карток створюються моделлю або моделлю, яка завжди "
"складається із дуже малої кількості елементів. Вони представляються як "
"таблиця з двох стовпчиків, які залишаються центрованими, якщо вікно програми "
"є досить широким, і стає одностовпчиковою, якщо для двох стовпчиків "
"недостатньо місця, зокрема на екрані мобільного телефону."

#: content/docs/use/kirigami/components-card.md:101
msgid "**A CardsLayout should always be contained within a ColumnLayout.**"
msgstr "**CardsLayout має завжди міститися у ColumnLayout.**"

#: content/docs/use/kirigami/components-card.md:103
msgid ""
"A card can optionally be oriented horizontally. In this case it will be "
"wider than tall, and is better suited to being placed in a ColumnLayout. If "
"you must put it in a CardsLayout, it will have a columnSpan of 2 by default."
msgstr ""
"Якщо потрібно, картку може бути зорієнтовано горизонтально. У цьому випадку "
"вікно буде ширшим, ніж вищим — його краще пристосовано до розташування у "
"ColumnLayout. Якщо вам потрібно вписати його у CardsLayout, його типовим "
"значенням columnSpan буде 2."

#: content/docs/use/kirigami/components-card.md:138
msgid ""
"![Screenshot of a CardsLayout](/docs/use/kirigami/components-card/"
"cardslayout.png)"
msgstr ""
"![Знімок CardsLayout](/docs/use/kirigami/components-card/cardslayout.png)"

#: content/docs/use/kirigami/components-card.md:144
msgid "CardsListView"
msgstr "CardsListView"

#: content/docs/use/kirigami/components-card.md:146
msgid ""
"A [`Kirigami.CardsListView`](docs:kirigami2;CardsListView) is a list view "
"that can be used with [`Kirigami.AbstractCard`](docs:kirigami2;AbstractCard) "
"components."
msgstr ""
"[`Kirigami.CardsListView`](docs:kirigami2;CardsListView) є панеллю перегляду "
"списком, якою можна скористатися за допомогою компонентів [`Kirigami."
"AbstractCard`](docs:kirigami2;AbstractCard)."

#: content/docs/use/kirigami/components-card.md:148
msgid ""
"A `Kirigami.CardsListView` will stretch child cards to its own width. This "
"component should therefore only be used with cards which will look good at "
"any horizontal size. Using a `Kirigami.CardsListView` the `Kirigami.Card` "
"component is discouraged, unless it has `Qt.Horizontal` as its "
"`headerOrientation` property."
msgstr ""
"`Kirigami.CardsListView` розтягуватиме дочірні картки до власної ширини. "
"Тому цей компонент слід використовувати із картками, які виглядатимуть добре "
"за будь-якого горизонтального розміру. Не варто використовувати `Kirigami."
"CardsListView` у компоненті `Kirigami.Card`, якщо не встановлено значення "
"`Qt.Horizontal` для його властивості `headerOrientation`."

#: content/docs/use/kirigami/components-card.md:150
msgid ""
"The choice between using this view with `Kirigami.AbstractCard` components "
"or a conventional `ListView` with [`AbstractListItem`](docs:kirigami2;"
"AbstractListItem)/[BasicListItem](docs:kirigami2;BasicListItem) components "
"is purely an aesthetic one."
msgstr ""
"Вибір щодо використання цієї панелі перегляду з компонентами `Kirigami."
"AbstractCard` або типовим `ListView` з компонентами [`AbstractListItem`]"
"(docs:kirigami2;AbstractListItem)/[BasicListItem](docs:kirigami2;"
"BasicListItem) є суто справою естетичних смаків."

#: content/docs/use/kirigami/components-card.md:162
msgid "NOTE: never put a Layout as contentItem as it will cause binding loops"
msgstr ""
"УВАГА! Ніколи не робіть Layout contentItem, оскільки це призведе до "
"циклічної прив'язки"

#: content/docs/use/kirigami/components-card.md:172
msgid "IMPORTANT: never put the bottom margin"
msgstr "ВАЖЛИВО! Ніколи не встановлюйте нижнє поле"

#: content/docs/use/kirigami/components-card.md:202
msgid ""
"![Screenshot of a CardsListView](/docs/use/kirigami/components-card/"
"cardslistview.png)"
msgstr ""
"![Знімок CardsListView](/docs/use/kirigami/components-card/cardslistview.png)"

#: content/docs/use/kirigami/components-card.md:208
msgid "CardsGridView"
msgstr "CardsGridView"

#: content/docs/use/kirigami/components-card.md:210
msgid ""
"Use a [`Kirigami.CardsGridView`](docs:kirigami2;org::kde::kirigami::"
"CardsGridView) to display cards in a grid."
msgstr ""
"Скористайтеся [`Kirigami.CardsGridView`](docs:kirigami2;org::kde::kirigami::"
"CardsGridView) для показу карток у таблиці."

#: content/docs/use/kirigami/components-card.md:212
msgid ""
"Its behavior is the same as a `Kirigami.CardsLayout`, and it allows cards to "
"be put in one or two columns depending on the available width."
msgstr ""
"Його поведінка є такою самою, що і `Kirigami.CardsLayout`, і уможливлює "
"розташування карток у один або два стовпчики, залежно від доступної ширини."

#: content/docs/use/kirigami/components-card.md:214
msgid ""
"CardsGridView has the limitation that every card must have the same exact "
"height, so `cellHeight` must be manually set to a value for which the "
"content must fit for every child card."
msgstr ""
"CardsGridView має обмеження: усі картки повинні мати однакову висоту, тому "
"для `cellHeight` слід вручну встановити значення, для якого вміст має бути "
"відповідним для усіх дочірніх карток."

#: content/docs/use/kirigami/components-card.md:216
msgid ""
"If possible use `Kirigami.CardsGridView` only when you need to instantiate "
"many cards. If you are only going to instantiate a few cards, opt for a "
"`Kirigami.CardsLayout` with a `Repeater` instead."
msgstr ""
"Якщо можна, користуйтеся `Kirigami.CardsGridView`, лише якщо вам потрібно "
"створити екземпляри багатьох карток. Якщо ви збираєтеся створити екземпляри "
"лише декількох карток, скористайтеся замість нього `Kirigami.CardsLayout` із "
"`Repeater`."

#: content/docs/use/kirigami/components-card.md:227
msgid "Model with the following roles: text, actions and image"
msgstr "Модель з такими ролями: текст, дії і зображення"

#: content/docs/use/kirigami/components-card.md:259
msgid ""
"![Screenshot of a CardsGridView](/docs/use/kirigami/components-card/"
"cardsgridview.png)"
msgstr ""
"![Знімок CardsGridView](/docs/use/kirigami/components-card/cardsgridview.png)"

#: content/docs/use/kirigami/components-controls.md:0
msgid "Controls and interactive elements"
msgstr "Керування і інтерактивні елементи"

#: content/docs/use/kirigami/components-controls.md:0
msgid ""
"Make your apps more interactive by using buttons, selection controls, "
"sliders, and text fields."
msgstr ""
"Надання вашими програмам додаткової інтерактивності за допомогою кнопок, "
"елементів керування вибором, повзунками та полями для введення тексту."

#: content/docs/use/kirigami/components-controls.md:11
msgid ""
"Kirigami offers a wide selection of different interactive elements that you "
"can use in your applications. Each different type has slightly different "
"interaction styles, visual styles, and functionality. Using the right type "
"of control in your application can help make your user interface more "
"responsive and intuitive."
msgstr ""
"Kirigami пропонує вам широкий діапазон різних інтерактивних елементів, якими "
"ви можете скористатися у ваших програмах. Різні типи мають дещо різні стилі "
"взаємодії, візуальні стилі та функціональні можливості. Використання "
"належного типу засобу керування у вашій програмі може допомогти зробити "
"інтерфейс користувача зручнішим та інтуїтивно зрозумілішим."

#: content/docs/use/kirigami/components-controls.md:13
msgid "Buttons"
msgstr "Кнопки"

#: content/docs/use/kirigami/components-controls.md:15
msgid ""
"In Kirigami apps, we use buttons from QtQuick Controls. Using them is pretty "
"straightforward: we set the text to the `text` property and any action we "
"want it to perform is set to the `onClicked` property."
msgstr ""
"У програмах Kirigami ми використовуємо кнопки з QtQuick Controls. "
"Користування кнопками є доволі простим: ми призначаємо фрагмент тексту для "
"властивості `text`, усі дії, які слід виконати вписуємо у властивість "
"`onClicked`."

#: content/docs/use/kirigami/components-controls.md:39
msgid ""
"![A freshly-clicked button](/docs/use/kirigami/components-controls/controls-"
"button.png)"
msgstr ""
"![Щойно натиснута кнопка](/docs/use/kirigami/components-controls/controls-"
"button.png)"

#: content/docs/use/kirigami/components-controls.md:44
msgid "Toggleable buttons"
msgstr "Кнопки-перемикачі"

#: content/docs/use/kirigami/components-controls.md:46
msgid ""
"Buttons' behaviour can be changed to make them toggleable: in this mode, "
"they will stay pressed until clicked on once more. This mode can be "
"activated by setting the `checkable` property to `true`; we can also set "
"buttons to be toggled on by default by setting the `checked` property to "
"`true`."
msgstr ""
"Змінити поведінку кнопок можна зробивши їх кнопками-перемикачами: у цьому "
"режимі вони лишатимуться натиснутими, аж доки їх не буде натиснуто ще раз. "
"Цей режим можна активувати встановленням для властивості `checkable` "
"значення `true`; ми можемо також зробити кнопки типово перемкнутими "
"встановленням для властивості `checked` значення `true`."

#: content/docs/use/kirigami/components-controls.md:48
msgid ""
"We can get the most out of toggleable buttons by using the "
"`onCheckedChanged` property. It works similarly to `onClicked`, except here "
"the assigned action will be executed when the button's `checked` property "
"changes. `checked` is a boolean property, which can come in handy for "
"specific use-cases."
msgstr ""
"Отримати максимум від кнопок-перемикачів можна за допомогою властивості "
"`onCheckedChanged`. Вона працює подібно до `onClicked`, але тут пов'язану "
"дію буде виконано, коли змінюється властивість кнопки `checked`. `checked` є "
"булевою властивістю, яка може бути надзвичайно зручною у певних випадках."

#: content/docs/use/kirigami/components-controls.md:50
msgid ""
"In this example, we set the visibility of an in-line drawer according to the "
"status of a toggleable button:"
msgstr ""
"У цьому прикладі ми встановлюємо видимість вбудованої панелі за станом "
"кнопки-перемикача:"

#: content/docs/use/kirigami/components-controls.md:77
msgid ""
"![A toggleable button](/docs/use/kirigami/components-controls/controls-"
"togglebutton.png)"
msgstr ""
"![Кнопка-перемикач](/docs/use/kirigami/components-controls/controls-"
"togglebutton.png)"

#: content/docs/use/kirigami/components-controls.md:84
msgid ""
"With the default Breeze theme in KDE Plasma it can be hard to tell whether a "
"button is toggled, since buttons are coloured blue when they are clicked on. "
"Make sure you take this into account when creating your application: a "
"different control might be more user-friendly."
msgstr ""
"У типовій темі Breeze Плазми KDE може бути важко розрізнити стани кнопки-"
"перемикача, оскільки при натисканні кнопки зафарбовуються синім кольором. "
"Врахуйте це під час створення вашої програми: інший засіб керування може "
"бути зручнішим для користувача."

#: content/docs/use/kirigami/components-controls.md:88
msgid "Toolbar buttons"
msgstr "Кнопки панелі інструментів"

#: content/docs/use/kirigami/components-controls.md:90
msgid ""
"There is a specific button type meant for use in toolbars, `Controls."
"ToolButton`. The most obvious difference between this and a conventional "
"button is the styling, with toolbuttons being flat (though this is alterable "
"with the boolean property `flat`)."
msgstr ""
"Існує специфічний тип кнопок, який призначено для використання на панелях "
"користувачів, `Controls.ToolButton`. Найочевиднішою відмінністю між цією "
"кнопкою і звичайною кнопкою є стилізація — кнопки інструментів плоскі (хоча "
"це і можна змінити за допомогою булевої властивості `flat`)."

#: content/docs/use/kirigami/components-controls.md:105
msgid ""
"![A tool button](/docs/use/kirigami/components-controls/controls-toolbutton."
"png)"
msgstr ""
"![Кнопка інструмента](/docs/use/kirigami/components-controls/controls-"
"toolbutton.png)"

#: content/docs/use/kirigami/components-controls.md:110
msgid "Selection controls"
msgstr "Засоби позначення"

#: content/docs/use/kirigami/components-controls.md:112
msgid ""
"Selection controls let users make a choice or pick an option. There are "
"different types that are best suited to different situations."
msgstr ""
"За допомогою засобів позначення користувачі можуть зробити вибір або вибрати "
"певний варіант. Існують різні типи, які пристосовано до різних ситуацій."

#: content/docs/use/kirigami/components-controls.md:114
msgid "Checkboxes"
msgstr "Позначки"

#: content/docs/use/kirigami/components-controls.md:116
msgid ""
"Checkboxes are meant for options where the choices are non-exclusive and "
"where each option has a clear alternative."
msgstr ""
"Позначки призначено для випадків, коли вибір не є взаємовиключним, а кожний "
"пункт має чітку альтернативу."

#: content/docs/use/kirigami/components-controls.md:135
msgid ""
"![A set of checkboxes](/docs/use/kirigami/components-controls/controls-"
"checkbox.png)"
msgstr ""
"![Набір пунктів-позначок](/docs/use/kirigami/components-controls/controls-"
"checkbox.png)"

#: content/docs/use/kirigami/components-controls.md:140
msgid ""
"As you can see, they are simple to use. The property `checked` holds a "
"boolean value determining whether or not they have been checked."
msgstr ""
"Як можна бачити, ними просто користуватися. Властивість `checked` містить "
"булеве значення, що визначає, чи було пункт позначено."

#: content/docs/use/kirigami/components-controls.md:142
msgid "Radio buttons"
msgstr "Кнопки варіантів"

#: content/docs/use/kirigami/components-controls.md:144
msgid ""
"Radio buttons are designed for situations where the user must choose one "
"option from a set of several options."
msgstr ""
"Кнопки варіантів призначено для випадків, коли користувач має вибрати "
"варіант із набору з декількох варіантів."

#: content/docs/use/kirigami/components-controls.md:146
msgid ""
"Radio buttons are exclusive by default: only one button can be checked in "
"the same parent item."
msgstr ""
"Кнопки варіантів є типово взаємно виключними: одночасно у батьківському "
"елементі може бути позначено лише одну кнопку."

#: content/docs/use/kirigami/components-controls.md:148
msgid ""
"Like checkboxes, they can be set to be checked or unchecked by default with "
"the `checked` property."
msgstr ""
"Подібно до кнопок-позначок, для них можна типово встановити стан "
"позначеності або непозначеності за допомогою властивості `checked`."

#: content/docs/use/kirigami/components-controls.md:169
msgid ""
"![A set of radio buttons](/docs/use/kirigami/components-controls/controls-"
"radiobutton.png)"
msgstr ""
"![Набір кнопок-перемикачів](/docs/use/kirigami/components-controls/controls-"
"radiobutton.png)"

#: content/docs/use/kirigami/components-controls.md:174
msgid "Switches"
msgstr "Перемикачі"

#: content/docs/use/kirigami/components-controls.md:176
msgid "Switches are primarily designed for use on mobile devices."
msgstr ""
"Перемикачі, в основному, призначено для використання на мобільних пристроях."

#: content/docs/use/kirigami/components-controls.md:178
msgid ""
"On the desktop, changing settings usually involves changing the setting and "
"then applying the setting by clicking on an 'Apply' or 'OK' button. On "
"mobile, we can use switches instead."
msgstr ""
"На звичайному комп'ютері зміна параметрів, зазвичай, включає зміну "
"параметра, а потім застосування параметра натисканням кнопки «Застосувати» "
"або «Гаразд». На мобільному пристрої ми можемо замість цих кнопок можна "
"скористатися перемикачами."

#: content/docs/use/kirigami/components-controls.md:180
msgid ""
"Switches can be toggled between an on and off state. They can be clicked or "
"tapped on to toggle them, or they can be dragged towards the 'on' or 'off' "
"position. Once again, switches can be set to be on or off by default with "
"the `checked` property."
msgstr ""
"Перемикачі можна перемикати між увімкненим і вимкненим станами. Їх можна "
"натискати або торкатися їх, їх можна також перетягувати між позиціями "
"«увімкнено» і «вимкнено». Знову ж таки, типово для перемикачів можна "
"встановлювати стани «увімкнено» і «вимкнено» за допомогою властивості "
"`checked`."

#: content/docs/use/kirigami/components-controls.md:199
msgid ""
"![A set of switches](/docs/use/kirigami/components-controls/controls-switch."
"png)"
msgstr ""
"![Набір перемикачів](/docs/use/kirigami/components-controls/controls-switch."
"png)"

#: content/docs/use/kirigami/components-controls.md:204
msgid "Sliders"
msgstr "Повзунки"

#: content/docs/use/kirigami/components-controls.md:206
msgid ""
"Sliders allow users to select certain values by sliding a handle along a "
"track. Thanks to QtQuick Controls, there are several types that you can "
"choose from depending on the values you'd like your users to choose from in "
"your application."
msgstr ""
"За допомогою повзунків користувачі можуть вибрати певні значення "
"перетягуванням елемента керування уздовж доріжки. Завдяки QtQuick Controls, "
"маємо декілька типів, один з яких ви можете вибрати, залежно від значень, "
"які користувачі мають вибирати у вашій програмі."

#: content/docs/use/kirigami/components-controls.md:208
msgid "Standard and tickmarked sliders"
msgstr "Стандартні повзунки і повзунки із позначками"

#: content/docs/use/kirigami/components-controls.md:210
msgid ""
"A standard slider provides the user with very fine control over the "
"selection they wish to make."
msgstr "За допомогою повзунка користувач може точно вказати вибране значення."

#: content/docs/use/kirigami/components-controls.md:212
msgid ""
"By default, sliders go left to right to increase (and bottom up to increase "
"when vertical). The coloration provides a visual indicator of how large the "
"value you are selecting is."
msgstr ""
"Типово, повзунки рухаються зліва праворуч у напрямку збільшення значень "
"(знизу вгору для збільшення значення, якщо повзунок рухається вертикально). "
"Розфарбовування є візуальним індикатором того, наскільки великим є вибране "
"значення."

#: content/docs/use/kirigami/components-controls.md:214
msgid "Sliders have a few important properties we must pay attention to:"
msgstr ""
"У повзунків декілька важливих властивостей, на які слід звернути увагу:"

#: content/docs/use/kirigami/components-controls.md:216
msgid ""
"`value`: contains the value at which the handle is placed, and can also be "
"set manually to provide a default starting value"
msgstr ""
"`value`: містить значення, на якому розташовано повзунок, і яке може бути "
"встановлено вручну для надання типового початкового значення"

#: content/docs/use/kirigami/components-controls.md:217
msgid ""
"`to`: defines the range of the slider by specifying the maximum value it can "
"go to"
msgstr ""
"`to`: визначає діапазон повзунка, вказуючи максимальне значення, до якого "
"його можна пересунути"

#: content/docs/use/kirigami/components-controls.md:218
msgid ""
"`orientation`: allows the slider to be set to a vertical orientation with "
"`Qt.Vertical`"
msgstr ""
"`orientation`: надає змогу встановлювати вертикальну орієнтацію повзунка за "
"допомогою `Qt.Vertical`"

#: content/docs/use/kirigami/components-controls.md:235
msgid ""
"![A set of sliders](/docs/use/kirigami/components-controls/controls-sliders."
"png)"
msgstr ""
"![Набір повзунків](/docs/use/kirigami/components-controls/controls-sliders."
"png)"

#: content/docs/use/kirigami/components-controls.md:240
msgid ""
"Another useful property we can use is `stepSize`. Setting this to a "
"numerical value allows us to create a slider that snaps onto values that are "
"multiples of the specified `stepSize`, with these multiples being indicated "
"by tickmarks. Therefore if we set this property to `2.0`, when the user "
"drags the slider handle, they will only be able to select `0.0`, `2.0`, "
"`4.0`, etc. up to the value specified in the `to` property."
msgstr ""
"Ще однією корисною властивістю є `stepSize`. Встановлення для цієї "
"властивості числового значення надає нам змогу створити повзунок, який "
"прилипатиме до значень, кратних до вказаного значення `stepSize`, а самі ці "
"кратні значення вказуються позначками на лінії руху повзунка. Отже, якщо ми "
"встановимо для властивості значення `2.0`, коли користувач перетягуватиме "
"повзунок, він зможе вибрати лише значення `0.0`, `2.0`, `4.0` тощо, аж до "
"значення, яке вказано за допомогою властивості `to`."

#: content/docs/use/kirigami/components-controls.md:257
msgid ""
"![A set of tickmarked sliders](/docs/use/kirigami/components-controls/"
"controls-tickmarkedsliders.png)"
msgstr ""
"![Набір повзунків із позначками](/docs/use/kirigami/components-controls/"
"controls-tickmarkedsliders.png)"

#: content/docs/use/kirigami/components-controls.md:262
msgid "Range slider"
msgstr "Повзунок із діапазоном"

#: content/docs/use/kirigami/components-controls.md:264
msgid ""
"QtQuick Controls also provides ranged sliders. These have two handles, hence "
"allowing you to define a range of numbers between the two handles."
msgstr ""
"До складу QtQuick Controls включено також повзунки із діапазоном. Такі "
"повзунки мають два елементи керування, отже надає вам змогу визначити "
"діапазон чисел між цими двома елементами керування."

#: content/docs/use/kirigami/components-controls.md:266
msgid ""
"Two new properties are important to keep in mind: `first.value` and `second."
"value`, which hold the values of the two handles. Like the `value` property "
"of the standard sliders, these can be pre-set."
msgstr ""
"Слід звернути увагу на дві нові властивості: `first.value` і `second.value`, "
"у яких зберігаються значення для двох елементів керування. Подібно до "
"властивості `value` стандартних повзунків, ці значення цих властивостей "
"можна вказати наперед."

#: content/docs/use/kirigami/components-controls.md:283
msgid ""
"![A set of range sliders](/docs/use/kirigami/components-controls/controls-"
"rangesliders.png)"
msgstr ""
"![Набір повзунків із діапазоном](/docs/use/kirigami/components-controls/"
"controls-rangesliders.png)"

#: content/docs/use/kirigami/components-controls.md:288
msgid ""
"We can also make it a tickmarked slider by setting the `stepSize` property "
"value to a number, in the exact same way as a standard slider."
msgstr ""
"Ми також можемо додати на лінію повзунка позначки встановленням для "
"властивості `stepSize` числового значення у точно такий самий спосіб, що і "
"для стандартного повзунка."

#: content/docs/use/kirigami/components-drawers.md:0
msgid "Drawers"
msgstr "Висувні панелі"

#: content/docs/use/kirigami/components-drawers.md:0
msgid ""
"Drawers provide applications with quick access to controls and pages of your "
"application."
msgstr ""
"Висувні панелі надають змогу створювати програми із панелями швидкого "
"доступу до елементів керування та сторінок програми."

#: content/docs/use/kirigami/components-drawers.md:10
msgid ""
"Drawers are panels that slide out of the sides of the application window. "
"They can be populated with interactive elements such as Kirigami Actions, "
"buttons, text, and more."
msgstr ""
"Висувні панелі є панелями, які висуваються з боків вікна програми. На ці "
"панелі можна додати інтерактивні елементи, подібні до кнопок дій Kirigami, "
"простих кнопок дій, текстових міток тощо."

#: content/docs/use/kirigami/components-drawers.md:12
msgid ""
"Drawers come in different types, shapes, and forms. In this page we will go "
"over each type and provide an overview of their characteristics."
msgstr ""
"Висувні панелі можуть належати до різних типів, можуть мати різні форми. На "
"цій сторінці ми опишемо усі типи і оглянемо їхні характеристики."

#: content/docs/use/kirigami/components-drawers.md:14
#: content/docs/use/kirigami/introduction-actions.md:66
msgid "Global drawer"
msgstr "Загальна панель"

#: content/docs/use/kirigami/components-drawers.md:16
msgid ""
"The global drawer is a standard feature in KDE's mobile applications and can "
"sometimes be found in their desktop incarnations too. It contains an "
"application's main menu: included here are any functions that are not "
"specific to the current page but still significant to general navigation or "
"interaction within the application."
msgstr ""
"Загальна панель є стандартною можливістю у мобільних програмах KDE, яку "
"іноді можна знайти і у їхніх варіантах для звичайних комп'ютерів. На ній "
"міститься головне меню програми: до нього включено усі функції, які не є "
"специфічними для поточної сторінки, але є важливими для загальної навігації "
"або взаємодії у програмі."

#: content/docs/use/kirigami/components-drawers.md:18
msgid ""
"`Kirigami.GlobalDrawer` components are what we use to create such drawers. "
"These are set to the `globalDrawer` property of the `Kirigami."
"ApplicationWindow` that forms the basis of our Kirigami application."
msgstr ""
"Компоненти `Kirigami.GlobalDrawer` є тим, чим ми користуємося для створення "
"таких висувних панелей. Назви цих панелей записують до властивості "
"`globalDrawer` `Kirigami.ApplicationWindow`, яка складає основу нашої "
"програми Kirigami."

#: content/docs/use/kirigami/components-drawers.md:51
msgid ""
"![Our new global drawer](/docs/use/kirigami/components-drawers/"
"globaldrawer_simple.png)"
msgstr ""
"![Наша нова загальна панель](/docs/use/kirigami/components-drawers/"
"globaldrawer_simple.png)"

#: content/docs/use/kirigami/components-drawers.md:56
msgid "Header"
msgstr "Шапка"

#: content/docs/use/kirigami/components-drawers.md:58
msgid ""
"Headers can be used to place sticky components at the top of your global "
"drawer. Header components will stay in place even if your global drawer "
"contains nested Kirigami actions that replace the current layer on the "
"global drawer."
msgstr ""
"Шапками можна скористатися для розташування липких компонентів поверх вашої "
"загальної панелі. Компоненти шапки лишаються на місці, навіть якщо загальна "
"панель містить вкладені дії Kirigami, які замінюють поточний шар на "
"загальній панелі."

#: content/docs/use/kirigami/components-drawers.md:60
msgid ""
"Your chosen header component can be set with the global drawer's `header` "
"property."
msgstr ""
"Вибраний вами компонент шапки можна встановити за допомогою властивості "
"`header` загальної панелі."

#: content/docs/use/kirigami/components-drawers.md:97
msgid ""
"![Search bar header global drawer](/docs/use/kirigami/components-drawers/"
"globaldrawer_header.png)"
msgstr ""
"![Шапка панелі пошуку загальної панелі](/docs/use/kirigami/components-"
"drawers/globaldrawer_header.png)"

#: content/docs/use/kirigami/components-drawers.md:99
msgid ""
"Our global drawer now shows the search bar component we set as the header."
msgstr ""
"Тепер на нашій загальній панелі буде показано компонент панелі пошуку, який "
"ми визначили як шапку."

#: content/docs/use/kirigami/components-drawers.md:105
msgid "Adapting for the desktop"
msgstr "Адаптування для робочої станції"

#: content/docs/use/kirigami/components-drawers.md:107
msgid ""
"While panel-style global drawers can be useful in mobile environments, they "
"might be too large on the desktop."
msgstr ""
"Хоча загальні панелі у стилі звичайних панелей можуть бути корисними у "
"середовищах мобільних пристроїв, вони можуть бути надто великими на "
"звичайних комп'ютерах."

#: content/docs/use/kirigami/components-drawers.md:109
msgid ""
"Thankfully, Kirigami global drawers provide an `isMenu` property. When set "
"to `true`, our global drawers turn into more traditional menus only on the "
"desktop."
msgstr ""
"На щастя, у загальних панелей Kirigami є властивість `isMenu`. Якщо для неї "
"встановлено значення `true`, наші загальні панелі перетворюються у "
"традиційніші меню лише на робочих станціях."

#: content/docs/use/kirigami/components-drawers.md:113
msgid "In this menu mode, headers and banners are not visible."
msgstr "У цьому режимі меню заголовки і банери є невидимими."

#: content/docs/use/kirigami/components-drawers.md:144
msgid ""
"![Global drawer as a menu on the desktop](/docs/use/kirigami/components-"
"drawers/globaldrawer_menu.png)"
msgstr ""
"![Загальна панель як меню на комп'ютері](/docs/use/kirigami/components-"
"drawers/globaldrawer_menu.png)"

#: content/docs/use/kirigami/components-drawers.md:149
msgid "Banners"
msgstr "Банери"

#: content/docs/use/kirigami/components-drawers.md:151
msgid ""
"Banners allow you to display a title and an icon at the top of your global "
"drawer (even above the header)."
msgstr ""
"За допомогою банерів ви можете наказати програмі показувати заголовок і "
"піктограму у верхній частині вашої загальної панелі (навіть над шапкою)."

#: content/docs/use/kirigami/components-drawers.md:153
msgid ""
"Titles, set with the `title` property, can be used to pretty up your global "
"drawer and make it seem less sparse. More importantly, it can remind your "
"users that this is a global and app-wide drawer rather than a local drawer."
msgstr ""
"Заголовками, встановленими за допомогою властивості `title`, можна "
"скористатися для удосконалення вигляду вашої загальної панелі і ущільнення "
"компонування панелі. Важливіше, вони можуть нагадати вашим користувачам, що "
"це загальна або загальнопрограмна висувна панель, а не локальна висувна "
"панель."

#: content/docs/use/kirigami/components-drawers.md:155
msgid ""
"There is also a `titleIcon` property, which can be paired with your title to "
"make the global drawer even more aesthetically pleasing. This icon will be "
"placed to the left of the title."
msgstr ""
"Крім того, передбачено властивість `titleIcon`, яку можна поєднати із "
"заголовком з метою надання загальній панелі ще більш естетично привабливого "
"вигляду. Піктограму буде розташовано ліворуч від заголовка."

#: content/docs/use/kirigami/components-drawers.md:185
msgid ""
"![Global drawer with title and icon in banner](/docs/use/kirigami/components-"
"drawers/globaldrawer-banner.png)"
msgstr ""
"![Загальна панель із заголовком і піктограмою на банері](/docs/use/kirigami/"
"components-drawers/globaldrawer-banner.png)"

#: content/docs/use/kirigami/components-drawers.md:192
msgid ""
"The `titleIcon` property takes names for system-wide icons per the "
"FreeDesktop specification. These icons and icon names can be viewed with "
"KDE's CuttleFish application, or by visiting [FreeDesktop's icon naming "
"specification](https://specifications.freedesktop.org/icon-naming-spec/icon-"
"naming-spec-latest.html)."
msgstr ""
"Властивість `titleIcon` визначає назву загальносистемної піктограми за "
"специфікацією FreeDesktop. Піктограми і назви піктограм можна переглянути за "
"допомогою програми CuttleFish KDE або відвідавши [сторінку специфікації назв "
"піктограм FreeDesktop](https://specifications.freedesktop.org/icon-naming-"
"spec/icon-naming-spec-latest.html)."

#: content/docs/use/kirigami/components-drawers.md:196
msgid ""
"However, by default, banners are only visible on mobile environments. You "
"can change this by setting the global drawer component's `bannerVisible` "
"property to `true`."
msgstr ""
"Втім, типово, банери буде показано лише у середовищах мобільних пристроїв. "
"Змінити це можна встановленням для властивості `bannerVisible` компонента "
"загальної панелі значення `true`."

#: content/docs/use/kirigami/components-drawers.md:198
msgid "Modal and Inline drawers"
msgstr "Модальні і вбудовані панелі"

#: content/docs/use/kirigami/components-drawers.md:200
msgid ""
"Kirigami offers two additional types of drawers, modal drawers and inline "
"drawers. They are quite similar to each other: both span the entirety of the "
"application's width or height and can be placed on the edges of the app "
"window. However, they do react differently to user interaction."
msgstr ""
"У Kirigami передбачено два додаткових типи висувних панелей, модальні "
"висувні панелі і вбудовані висувні панелі. Вони доволі подібні між собою: "
"обидві займають усю ширину і висоту вікна програми і можуть бути розташовані "
"на краях вікна програми. Втім, вони по-різному взаємодіють із користувачем."

#: content/docs/use/kirigami/components-drawers.md:202
msgid ""
"Modal drawers darken the rest of the application and, like overlay sheets, "
"will be dismissed when clicking on a darkened area."
msgstr ""
"Модальні висувні панелі затемнюють решту вікна програми і, подібно до "
"накладних аркушів, закриваються, якщо відбудеться клацання на затемненій "
"області."

#: content/docs/use/kirigami/components-drawers.md:203
msgid ""
"Inline drawers allow the user to still interact with the rest of the "
"application without being dismissed, and do not darken other areas."
msgstr ""
"Вбудовані висувні панелі надають змогу користувачеві продовжувати взаємодію "
"із рештою програми без закриття панелей, і вони не затемнюють решту вікна "
"програми."

#: content/docs/use/kirigami/components-drawers.md:205
msgid ""
"These two drawers are so similar because they are, in fact, the same "
"Kirigami component: `Kirigami.OverlayDrawer`. Important properties of this "
"component to keep in mind:"
msgstr ""
"Ці дві висувні панелі є подібними, оскільки вони, фактично, є одним "
"компонентом — `Kirigami.OverlayDrawer`. Важливі властивості цього "
"компонента, про які слід пам'ятати:"

#: content/docs/use/kirigami/components-drawers.md:207
msgid ""
"`modal` controls whether the drawer will be modal or inline depending on a "
"boolean value"
msgstr ""
"`modal` керує тим, буде висувна панель модальною чи вбудованою, залежно від "
"цього булевого значення."

#: content/docs/use/kirigami/components-drawers.md:208
msgid ""
"`edge` controls which edge of the application window the drawer will appear "
"on; options for this property are `Qt.TopEdge`, `Qt.RightEdge`, `Qt."
"BottomEdge`, and `Qt.LeftEdge`"
msgstr ""
"`edge` керує тим, з якого з країв вікна програми з'являтиметься панель; "
"варіантами значення цієї властивості є `Qt.TopEdge`, `Qt.RightEdge`, `Qt."
"BottomEdge` і `Qt.LeftEdge`"

#: content/docs/use/kirigami/components-drawers.md:209
msgid ""
"`contentItem` contains the component that will form the content of your "
"drawer"
msgstr ""
"`contentItem` містить компонент, який формуватиме вміст вашої висувної панелі"

#: content/docs/use/kirigami/components-drawers.md:222
msgid "Set modal to false to make this drawer inline!"
msgstr ""
"Встановіть для `modal` значення `false`, щоб зробити цю висувну панель "
"вбудованою!"

#: content/docs/use/kirigami/components-drawers.md:249
msgid "Modal drawer on the bottom edge of the screen."
msgstr "Модальна висувна панель з нижнього краю екрана."

#: content/docs/use/kirigami/components-drawers.md:249
msgid "Inline drawer on the bottom edge of the screen."
msgstr "Вбудована висувна панель з нижнього краю екрана."

#: content/docs/use/kirigami/components-drawers.md:257
msgid "A usecase for overlay bottom drawers: NeoChat"
msgstr "Використання накладних нижніх висувних панелей — NeoChat"

#: content/docs/use/kirigami/components-drawers.md:259
msgid ""
"NeoChat uses bottom overlay drawers to provide user with a number of actions "
"they can perform on a message they have long-pressed. Here is a simplified "
"example of what that looks like:"
msgstr ""
"NeoChat використовує нижні накладні висувні панелі для надання у відповідь "
"на довге натискання на пункті повідомлення у розпорядження користувача "
"декількох пунктів дій, які користувач може виконати із повідомленням. Ось "
"спрощений приклад того, як це виглядає:"

#: content/docs/use/kirigami/components-drawers.md:287
msgid "Message information"
msgstr "Відомості щодо повідомлення"

#: content/docs/use/kirigami/components-drawers.md:290
msgid "Message actions"
msgstr "Дії з повідомленням"

#: content/docs/use/kirigami/components-formlayouts.md:0
msgid "Form Layouts"
msgstr "Компонування форми"

#: content/docs/use/kirigami/components-formlayouts.md:0
msgid "Easily create attractive interaction areas with Kirigami FormLayouts"
msgstr ""
"Просте створення привабливих областей взаємодії з користувачем за допомогою "
"FormLayout з Kirigami"

#: content/docs/use/kirigami/components-formlayouts.md:10
msgid ""
"`Kirigami.FormLayout` components make it easy for you to create forms that "
"conform to the KDE Human Interface Guidelines. They are optimal for settings "
"dialogs and for large groups of controls and input fields that are related "
"to each other."
msgstr ""
"Компоненти `Kirigami.FormLayout` спрощують для вас створення форм, які "
"відповідають настановам зі створення зручних інтерфейсів KDE. Вони є "
"оптимальними для вікон параметрів роботи програми або великих груп елементів "
"керування та полів введення, які пов'язано між собою."

#: content/docs/use/kirigami/components-formlayouts.md:12
msgid ""
"When provided with enough space, form layouts will take up two columns. The "
"column on the left will be occupied by the labels provided for the form's "
"children components, while the right will be taken up by the children "
"itself. In more space-constrained windows (or on mobile), forms will consist "
"of a single vertical column with children components' labels being placed "
"above their respective component."
msgstr ""
"Якщо місця достатньо, компонування форм виконуватиметься у два стовпчики. "
"Лівий стовпчик буде заповнено мітками, які надано для дочірніх компонентів "
"форми, а правий — самими дочірніми компонентами. У вікнах із обмеженим "
"простором (або на мобільних пристроях) форми складатимуться з одного "
"вертикального стовпчика із мітками дочірніх компонентів, які розташовано над "
"відповідними компонентами."

#: content/docs/use/kirigami/components-formlayouts.md:14
msgid "Simple form"
msgstr "Проста форма"

#: content/docs/use/kirigami/components-formlayouts.md:16
msgid ""
"`Kirigami.FormLayout` components are similar in use to QtQuick Layout "
"components such as `ColumnLayout` or `RowLayout`. The child components will "
"be automatically arranged according to the size available to the form layout."
msgstr ""
"Компоненти `Kirigami.FormLayout` подібні у використанні до компонентів "
"компонування QtQuick, зокрема `ColumnLayout` або `RowLayout`. Дочірні "
"компоненти буде автоматично упорядковано відповідно до розміру, який "
"доступний до компонування форми."

#: content/docs/use/kirigami/components-formlayouts.md:18
msgid ""
"Children of a `Kirigami.FormLayout` have a property named `Kirigami.FormData."
"label`. This property lets you set the label that will be provided for the "
"child component in question."
msgstr ""
"Дочірні компоненти `Kirigami.FormLayout` мають властивість із назвою "
"`Kirigami.FormData.label`. Ця властивість надає вам змогу встановити мітку, "
"яку буде надано для відповідного дочірнього компонента."

#: content/docs/use/kirigami/components-formlayouts.md:52
msgid ""
"![A simple formlayout](/docs/use/kirigami/components-formlayouts/formlayouts-"
"simple.png)"
msgstr ""
"![Просте компонування форми](/docs/use/kirigami/components-formlayouts/"
"formlayouts-simple.png)"

#: content/docs/use/kirigami/components-formlayouts.md:57
msgid "Sections and separators"
msgstr "Розділи і роздільники"

#: content/docs/use/kirigami/components-formlayouts.md:59
msgid ""
"FormLayouts can also be divided into sections. Setting where a section "
"starts is as easy as setting a child component's `Kirigami.FormData."
"isSection` to true. This will provide the component with some extra margin "
"at the top to demarcate the start of the new section."
msgstr ""
"Крім того, компонування форм може бути поділено на розділи. Встановлення "
"місця, де починається розділ, зводиться до встановлення значення властивості "
"`Kirigami.FormData.isSection` компонента `true`. Це надасть компоненту "
"додаткове поле згори для позначення початку нового розділу."

#: content/docs/use/kirigami/components-formlayouts.md:61
msgid ""
"`Kirigami.Separator` components are best suited for starting new sections. A "
"`Kirigami.Separator` will draw a thin horizontal line, demarcating the end "
"of a section. If you would rather not have a line drawn between sections, "
"you can use a standard QML `Item` property. Alternatively you could use the "
"`Kirigami.FormData.isSection` property on any other component."
msgstr ""
"Компоненти `Kirigami.Separator` найкраще підходять для початку нових "
"розділів. `Kirigami.Separator` намалює тонку горизонтальну лінію, яка "
"позначатиме кінець розділу. Якщо ви не хочете, щоб між розділами було "
"намальовано лінію, ви можете скористатися стандартною властивістю `Item` "
"QML. Крім того, ви можете скористатися властивістю `Kirigami.FormData."
"isSection` для будь-якого іншого компонента."

#: content/docs/use/kirigami/components-formlayouts.md:63
msgid ""
"However, this is not recommended. On components where `Kirigami.FormData."
"isSection` is set to true, the label text provided for this component's "
"`Kirigami.FormData.label` property will be displayed as the section's header "
"text. **This does not apply to every component, hence the recommendation "
"that you use `Kirigami.Separator` or `Item` components in places where you "
"would like to use a header text.** This header text is larger than the "
"normal label text, and provides users with a nice visual cue of what the "
"form layout section is about."
msgstr ""
"Втім, не рекомендуємо це робити. Для компонентів, для яких для властивості "
"`Kirigami.FormData.isSection` встановлено значення true, текст мітки "
"властивості компонента `Kirigami.FormData.label` буде показано як текст "
"заголовка розділу. **Це стосується не кожного компонента, отже рекомендуємо "
"використовувати `Kirigami.Separator` або `Item` там, де вам потрібно "
"скористатися текстом заголовка.** Цей текст заголовка є більшим за розміром "
"за звичайний текст мітки і надає користувачеві чудову візуальну підказку "
"щодо того, для чого призначено розділ компонування форми."

#: content/docs/use/kirigami/components-formlayouts.md:118
msgid ""
"![A formlayout with sections](/docs/use/kirigami/components-formlayouts/"
"formlayouts-sections.png)"
msgstr ""
"![Компонування форми із розділами](/docs/use/kirigami/components-formlayouts/"
"formlayouts-sections.png)"

#: content/docs/use/kirigami/components-formlayouts.md:124
msgid "Checkable children"
msgstr "Дочірній елемент — пункт для позначення"

#: content/docs/use/kirigami/components-formlayouts.md:126
msgid ""
"A handy feature of `Kirigami.FormLayout` is that you can add checkboxes to "
"its children. This can be useful in settings pages where you might want to "
"let the user enable or disable a setting, and also want the user to provide "
"some extra information in a component such as a textfield."
msgstr ""
"Зручною можливістю `Kirigami.FormLayout` є можливість додавання пунктів "
"позначок до його дочірніх елементів. Нею можна скористатися на сторінках "
"параметрів, де у вас може виникнути потреба у наданні користувачу можливості "
"увімкнути або вимкнути щось, а також наданні користувачу додаткової "
"інформації у компонентах, подібних до поля для введення тексту."

#: content/docs/use/kirigami/components-formlayouts.md:153
msgid ""
"![A formlayout with checkable child](/docs/use/kirigami/components-"
"formlayouts/formlayouts-checkable.png)"
msgstr ""
"![Компонування форми із дочірнім елементом — пунктом для позначення](/docs/"
"use/kirigami/components-formlayouts/formlayouts-checkable.png)"

#: content/docs/use/kirigami/components-formlayouts.md:158
msgid "Forcing a desktop or mobile layout"
msgstr "Примусове визначення компонування — комп'ютер чи мобільний пристрій"

#: content/docs/use/kirigami/components-formlayouts.md:160
msgid ""
"If you would rather have your form layout stay consistent regardless of your "
"application's environment, you can use the `wideMode` property of the "
"`Kirigami.FormLayout` component. `wideMode` is a boolean property:"
msgstr ""
"Якщо ви надаєте перевагу збереженню однорідності вигляду компонування форми, "
"незалежно від середовища програми, ви можете скористатися властивістю "
"`wideMode` компонента `Kirigami.FormLayout`. `wideMode` є булевою "
"властивістю:"

#: content/docs/use/kirigami/components-formlayouts.md:162
msgid ""
"When set to `true`, the form layout will be structured in a desktop-"
"optimized widescreen (double-column) layout"
msgstr ""
"Якщо встановлено значення `true`, компонування форми буде структуровано для "
"широкоекранного представлення на комп'ютері (у два стовпчики)"

#: content/docs/use/kirigami/components-formlayouts.md:163
msgid ""
"When set to `false`, the form layout will be structured in a mobile layout "
"(single column)"
msgstr ""
"Якщо встановлено значення `false`, компонування форми буде структуровано для "
"мобільного пристрою (в один стовпчик)"

#: content/docs/use/kirigami/components-formlayouts.md:189
msgid ""
"![A formlayout with forced mobile layout](/docs/use/kirigami/components-"
"formlayouts/formlayouts-widemode.png)"
msgstr ""
"![Компонування форми із примусовим режимом мобільного пристрою](/docs/use/"
"kirigami/components-formlayouts/formlayouts-widemode.png)"

#: content/docs/use/kirigami/components-inlinemessages.md:0
msgid "Inline messages"
msgstr "Вбудовані повідомлення"

#: content/docs/use/kirigami/components-inlinemessages.md:0
msgid "Display messages related to the content in your application"
msgstr "Показ повідомлень, які пов'язано із вмістом у вашій програмі"

#: content/docs/use/kirigami/components-inlinemessages.md:10
msgid ""
"Inline messages provide an immediate way for you to notify your users about "
"something that happened while using the application."
msgstr ""
"За допомогою вбудованих повідомлень реалізовано спосіб негайного сповіщення "
"користувача щодо того, що сталося під час користування програмою."

#: content/docs/use/kirigami/components-inlinemessages.md:12
msgid "Basic inline message"
msgstr "Базове вбудоване повідомлення"

#: content/docs/use/kirigami/components-inlinemessages.md:14
msgid ""
"`Kirigami.InlineMessage` components have two important properties to be "
"mindful of:"
msgstr ""
"У компонентів `Kirigami.InlineMessage` є дві важливих властивості, про які "
"варто згадати:"

#: content/docs/use/kirigami/components-inlinemessages.md:15
msgid ""
"`visible`: by default this is set to false, so that the message only appears "
"when you explicitly want it to. This can be overridden if you wish by "
"setting it to true. When a hidden inline message is set to be visible, you "
"get a nice animation."
msgstr ""
"`visible`: типово, для цієї властивості встановлено значення false, отже "
"повідомлення буде показано, лише якщо ви явно цього захочете. Якщо хочете, "
"таку поведінку можна змінити встановленням значення true. Якщо для "
"вбудованого повідомлення увімкнути видимість, користувач побачить чудову "
"анімацію."

#: content/docs/use/kirigami/components-inlinemessages.md:16
msgid "`text`: here is where you set the text of your inline message."
msgstr "`text`: тут можна встановити текст вашого вбудованого повідомлення."

#: content/docs/use/kirigami/components-inlinemessages.md:48
msgid ""
"![A simple inline message and button](/docs/use/kirigami/components-"
"inlinemessages/inlinemessages-simple.png)"
msgstr ""
"![Просте вбудоване повідомлення і кнопка](/docs/use/kirigami/components-"
"inlinemessages/inlinemessages-simple.png)"

#: content/docs/use/kirigami/components-inlinemessages.md:53
msgid "Different types"
msgstr "Інші типи"

#: content/docs/use/kirigami/components-inlinemessages.md:55
msgid ""
"Standard inline messages are like the ones above: they have a blue "
"background and a default icon. We can change that with the `type` property, "
"which lets us set our inline message to a different type. There are four "
"types we can choose from:"
msgstr ""
"Стандартні вбудовані повідомлення подібні до показано вище: вони мають синє "
"тло і типову піктограму. Змінити це можна за допомогою властивості `type`, "
"яка надає нам змогу встановити для нашого вбудованого повідомлення інший "
"тип. Передбачено чотири типи, одним з яких ми можемо скористатися:"

#: content/docs/use/kirigami/components-inlinemessages.md:57
msgid ""
"**Information** (`Kirigami.MessageType.Information`): the default. Has a "
"blue background, an 'i' icon, and is used to announce a result or tell the "
"user something general. It is not necessary to manually set it."
msgstr ""
"**Інформування** (`Kirigami.MessageType.Information`): стандартний. Має синє "
"тло, піктограму «i» і використовується для оголошення про результат або "
"сповіщення користувача про щось загальне. Цей тип не потрібно встановлювати "
"вручну."

#: content/docs/use/kirigami/components-inlinemessages.md:58
msgid ""
"**Positive** (`Kirigami.MessageType.Positive`): has a green background, tick "
"icon, and indicates that something went well."
msgstr ""
"**Позитивний** (`Kirigami.MessageType.Positive`): має зелене тло, піктограму "
"позначки і вказує на те, що щось виконано вдало."

#: content/docs/use/kirigami/components-inlinemessages.md:59
msgid ""
"**Warning** (`Kirigami.MessageType.Warning`): has an orange background, an "
"exclamation-mark icon, and can be used to warn the user about something they "
"should be mindful of."
msgstr ""
"**Попередження** (`Kirigami.MessageType.Warning`): має помаранчеве тло, "
"піктограму знака оклику; можна скористатися для попередження користувача про "
"те, що на щось слід звернути увагу."

#: content/docs/use/kirigami/components-inlinemessages.md:60
msgid ""
"**Error** (`Kirigami.MessageType.Error`): has a red background, a cross "
"icon, and can be used to tell the user that something has gone wrong."
msgstr ""
"**Помилка** (`Kirigami.MessageType.Error`): має червоне тло, піктограму-"
"хрест; можна скористатися для повідомлення користувачеві про те, що щось не "
"так."

#: content/docs/use/kirigami/components-inlinemessages.md:101
msgid ""
"![Different inline message types](/docs/use/kirigami/components-"
"inlinemessages/inlinemessages-types.png)"
msgstr ""
"![Різні типи вбудованих повідомлень](/docs/use/kirigami/components-"
"inlinemessages/inlinemessages-types.png)"

#: content/docs/use/kirigami/components-inlinemessages.md:106
msgid "Customising text and icons"
msgstr "Налаштовування тексту і піктограм"

#: content/docs/use/kirigami/components-inlinemessages.md:108
msgid ""
"Inline messages support rich text, which can be defined with simple HTML-"
"like markup. This allows you to add some formatting to your inline message's "
"text or even include an external web link if you want to."
msgstr ""
"У вбудованих повідомленнях передбачено підтримку форматування тексту, яку "
"можна визначити за допомогою простої HTML-подібної розмітки. Це надає вам "
"змогу додавати певне форматування до тексту ваших вбудованих повідомлень або "
"навіть, якщо хочете, включити зовнішнє інтернет-посилання."

#: content/docs/use/kirigami/components-inlinemessages.md:116
msgid "Note that when you use quotes in a string you will have to escape them!"
msgstr ""
"Зауважте, що якщо ви використовуєте лапки у рядку, вам слід їх екранувати!"

#: content/docs/use/kirigami/components-inlinemessages.md:126
msgid ""
"![An inline message with rich text](/docs/use/kirigami/components-"
"inlinemessages/inlinemessages-richtext.png)"
msgstr ""
"![Вбудоване повідомлення із форматованим текстом](/docs/use/kirigami/"
"components-inlinemessages/inlinemessages-richtext.png)"

#: content/docs/use/kirigami/components-inlinemessages.md:131
msgid ""
"You can also customise the icon that appears on the top-left of your message "
"by providing a system icon name for the `icon.source` property. These icon "
"names should correspond to icons installed on your system; you can use an "
"application such as Cuttlefish to browse and search the icons available on "
"your system, and what their names are."
msgstr ""
"Ви також можете налаштувати піктограму, яку буде показано у верхньому лівому "
"куті повідомлення, вказавши назву загальносистемної піктограми у властивості "
"`icon.source`. Ці назви піктограм відповідають піктограмам, які встановлено "
"у системі; ви можете скористатися програмою, подібною до Cuttlefish, для "
"перегляду і пошуку піктограм, які доступні у вашій системі, а також "
"визначення їхніх назв."

#: content/docs/use/kirigami/components-inlinemessages.md:148
msgid ""
"![An inline message with a specified icon](/docs/use/kirigami/components-"
"inlinemessages/inlinemessages-icon.png)"
msgstr ""
"![Вбудоване повідомлення із вказаною піктограмою](/docs/use/kirigami/"
"components-inlinemessages/inlinemessages-icon.png)"

#: content/docs/use/kirigami/components-inlinemessages.md:153
msgid "Using actions in inline messages"
msgstr "Використання пунктів дій у вбудованих повідомленнях"

#: content/docs/use/kirigami/components-inlinemessages.md:155
msgid ""
"If your messages need to be interactive, you can attach Kirigami actions to "
"your inline messages. Like with pages, you can do this by setting the inline "
"message's `actions` property to either a `Kirigami.Action` or an array "
"containing `Kirigami.Action` components."
msgstr ""
"Якщо ваші повідомлення мають бути інтерактивними, ви можете долучити до "
"ваших вбудованих повідомлень кнопки дій Kirigami. Подібно до сторінок, ви "
"можете зробити це встановленням властивості `actions` вбудованого "
"повідомлення у значення `Kirigami.Action` або у значення масиву, що містить "
"компоненти `Kirigami.Action`."

#: content/docs/use/kirigami/components-inlinemessages.md:195
msgid ""
"![An inline message with two actions](/docs/use/kirigami/components-"
"inlinemessages/inlinemessages-actions.png)"
msgstr ""
"![Вбудоване повідомлення із двома пунктами дій](/docs/use/kirigami/"
"components-inlinemessages/inlinemessages-actions.png)"

#: content/docs/use/kirigami/components-inlinemessages.md:200
msgid "Close buttons"
msgstr "Кнопки закриття"

#: content/docs/use/kirigami/components-inlinemessages.md:202
msgid ""
"Inline messages provide a close button that can be used to easily dismiss "
"them."
msgstr ""
"До вбудованого повідомлення додається кнопка закриття, якою можна "
"скористатися для прибирання панелей повідомлень."

#: content/docs/use/kirigami/components-inlinemessages.md:204
msgid ""
"By default, this close button is hidden, but this can be overridden by "
"setting the `showCloseButton` property to `true`."
msgstr ""
"Типово, цю кнопку закриття приховано, але таку поведінку можна "
"перевизначити, встановивши для властивості `showCloseButton` значення `true`."

#: content/docs/use/kirigami/components-inlinemessages.md:221
msgid ""
"![An inline message with close button showing](/docs/use/kirigami/components-"
"inlinemessages/inlinemessages-closebutton.png)"
msgstr ""
"![Вбудоване повідомлення із показаною кнопкою закриття](/docs/use/kirigami/"
"components-inlinemessages/inlinemessages-closebutton.png)"

#: content/docs/use/kirigami/components-listview.md:0
msgid "List views"
msgstr "Списки"

#: content/docs/use/kirigami/components-listview.md:0
msgid "A list view can help you easily display many components dynamically.\n"
msgstr ""
"Панель перегляду списку може спростити для вас динамічний показ багатьох "
"компонентів.\n"

#: content/docs/use/kirigami/components-listview.md:11
msgid ""
"Listviews can help you display objects from a model in an attractive way. To "
"use a list view, you have to keep track of three things:"
msgstr ""
"Панелі списків можуть допомогти у показі об'єктів на основі моделі у "
"привабливий спосіб. Щоб правильно користуватися панеллю списку, вам слід "
"стежити за трьома речима:"

#: content/docs/use/kirigami/components-listview.md:13
msgid ""
"The **model**, which contains the data you want your list view to display"
msgstr ""
"**Моделлю**, яка містить дані, які має бути показано на вашій панелі списку"

#: content/docs/use/kirigami/components-listview.md:14
msgid ""
"The **delegate**, which defines how each element in the model will be "
"displayed"
msgstr "**Делегата**, який визначає, як буде показано кожне з елементів моделі"

#: content/docs/use/kirigami/components-listview.md:15
msgid ""
"The **list view** itself, which will display information from the model "
"according to the delegate"
msgstr ""
"Самої **панелі списку**, на якій буде показано відомості щодо моделі, "
"відповідно до параметрів делегата"

#: content/docs/use/kirigami/components-listview.md:17
msgid ""
"If you would like further clarification, the Qt documentation has [an "
"informative page](https://doc.qt.io/qt-5/qtquick-modelviewsdata-modelview."
"html) on the topic."
msgstr ""
"Якщо вам потрібні додаткові пояснення, у документації Qt є [інформативна "
"сторінка](https://doc.qt.io/qt-5/qtquick-modelviewsdata-modelview.html) щодо "
"цього питання."

#: content/docs/use/kirigami/components-listview.md:19
msgid "Creating a basic listview"
msgstr "Створення базового списку"

#: content/docs/use/kirigami/components-listview.md:21
msgid "A list view has two essential properties we must pay attention to:"
msgstr ""
"У панелі списку є дві ключові властивості, на які нам слід звернути увагу:"

#: content/docs/use/kirigami/components-listview.md:23
msgid ""
"`model`, which accepts the data or the `id` of the object that holds the data"
msgstr "`model`, яка приймає дані або `id` об'єкта, який містить дані"

#: content/docs/use/kirigami/components-listview.md:24
msgid ""
"`delegate`, which accepts the component we will use to display the data in "
"the model"
msgstr ""
"`delegate`, яка приймає компонент, якими ми скористаємося для показу даних у "
"моделі"

#: content/docs/use/kirigami/components-listview.md:40
msgid ""
"Providing a number for the model property will generate that number of data "
"entries starting from 0."
msgstr ""
"Надання властивості моделі числового значення призведе до створення "
"відповідної кількості записів даних, починаючи з 0."

#: content/docs/use/kirigami/components-listview.md:56
msgid ""
"![A simple listview](/docs/use/kirigami/components-listview/listview-simple."
"png)"
msgstr ""
"![Проста панель списку](/docs/use/kirigami/components-listview/listview-"
"simple.png)"

#: content/docs/use/kirigami/components-listview.md:61
msgid ""
"In cases where your model data only contain a single piece of data, like in "
"the example above, you can just grab the data in the model by referencing "
"`modelData`."
msgstr ""
"У випадках, коли ваша модель даних містить лише один блок даних, подібно до "
"наведеного вище прикладу, ви можете просто зібрати дані у модель "
"використанням посилання `modelData`."

#: content/docs/use/kirigami/components-listview.md:63
msgid ""
"A note on delegates: if your model contains objects with data in named "
"properties, the name of these properties will be automatically exposed to "
"your delegate and you will only need to use these names in your delegate."
msgstr ""
"Зауваження щодо делегатів: якщо ваша модель містить об'єкти із даними в "
"іменованих властивостях, назву цих властивостей буде автоматично відкрито "
"вашому делегату, і вам слід лише скористатися цими назвами у вашому делегаті."

#: content/docs/use/kirigami/components-listview.md:85
msgid ""
"Kirigami offers a number of components that have been designed specifically "
"for use in list views, such as `Kirigami.BasicListItem`, `Kirigami."
"CheckableListItem` and `Kirigami.SwipeListItem`, all of which build upon "
"`Kirigami.AbstractListItem`. There are also `Kirigami.CheckDelegate`, "
"`Kirigami.RadioDelegate`, and `Kirigami.SwitchDelegate`, which are designed "
"to take advantage of those specific controls."
msgstr ""
"Kirigami пропонує декілька компонентів, які було розроблено спеціально для "
"використання на панелях списків, зокрема `Kirigami.BasicListItem`, `Kirigami."
"CheckableListItem` і `Kirigami.SwipeListItem`, усі з них побудовано на "
"основі `Kirigami.AbstractListItem`. Також передбачено `Kirigami."
"CheckDelegate`, `Kirigami.RadioDelegate` і `Kirigami.SwitchDelegate`, які "
"розроблено для того, щоб скористатися перевагами цих специфічних елементів "
"керування."

#: content/docs/use/kirigami/components-listview.md:87
msgid ""
"However, you are not limited to using these components and can choose "
"whichever ones you wish - though this may mean some tweaking to your layout."
msgstr ""
"Втім, вас не обмежено використанням цих компонентів, і ви можете вибрати "
"будь-які компоненти — хоча це може означати певне коригування компонування."

#: content/docs/use/kirigami/components-listview.md:89
msgid "Placeholder messages"
msgstr "Повідомлення-замінники"

#: content/docs/use/kirigami/components-listview.md:91
msgid ""
"In some cases, you might want to use a list view that is empty until the "
"user does something. In these situations, using a `Kirigami."
"PlaceholderMessage` can be an attractive way of telling your user that the "
"list is empty and that they can do something about it."
msgstr ""
"У певних випадках може виникнути потреба у використанні порожньої панелі "
"списку до моменту виконання якихось дій користувачем. Тоді, використання "
"`Kirigami.PlaceholderMessage` може бути привабливим способом повідомити "
"користувачеві, що список порожній, і слід щось з цим робити."

#: content/docs/use/kirigami/components-listview.md:93
msgid ""
"You will generally want to place a PlaceholderMessage in the center of the "
"ListView and you will want it to not span the entire width of the ListView "
"either. You will obviously also want it to not be visible once the "
"ListView's model becomes populated with data: thankfully, ListViews have a "
"property named `count` that makes doing this quite easy."
msgstr ""
"Зазвичай, PlaceholderMessage розташовують у центрі панелі списку. Не варто "
"розгортати його на усю ширину панелі списку. Очевидно, у його показі вже не "
"буде потреби, коли модель панелі списку почне заповнюватися даними — на "
"щастя, у ListView є властивість із назвою `count`, яка дає змогу зробити це "
"доволі просто."

#: content/docs/use/kirigami/components-listview.md:95
msgid ""
"You might also want to add a helpful action to your placeholder message. "
"This can be done by attaching an action to the `Kirigami."
"PlaceHolderMessage`'s `helpfulAction` property."
msgstr ""
"Також ви можете додати допоміжну дію до вашого повідомлення-замінника. "
"Зробити це можна долучивши дію до властивості `helpfulAction` `Kirigami."
"PlaceHolderMessage`."

#: content/docs/use/kirigami/components-listview.md:129
msgid ""
"![A list view with a placeholder message](/docs/use/kirigami/components-"
"listview/listview-placeholdermessage.png)"
msgstr ""
"![Панель списку із повідомленням-замінником](/docs/use/kirigami/components-"
"listview/listview-placeholdermessage.png)"

#: content/docs/use/kirigami/components-listview.md:134
msgid "List headers"
msgstr "Заголовки списку"

#: content/docs/use/kirigami/components-listview.md:136
msgid ""
"ListViews also support header components with the `header` property, and "
"Kirigami provides an attractive component for this purpose: `Kirigami."
"ItemViewHeader`. We provide this component with text for the `title` "
"property and with an image location for the `backgroundImage.source` "
"property and we are set."
msgstr ""
"Крім того, у панелях списку передбачено підтримку компонентів заголовків за "
"допомогою властивості `header`, і у Kirigami є привабливий компонент для "
"цього: `Kirigami.ItemViewHeader`. Нам достатньо вказати для цього компонента "
"текстом для властивості `title` і адресу зображення для властивості "
"`backgroundImage.source`, ось і все."

#: content/docs/use/kirigami/components-listview.md:138
msgid ""
"An interesting property of the list view is `headerPositioning`. This "
"affects the way that our header will move when we are interacting with a "
"long list view that expands beyond the height of the page. "
"`headerPositioning` can be set to three different settings:"
msgstr ""
"Цікавою властивістю панелі списку є `headerPositioning`. Значення цієї "
"властивості впливає на спосіб, у який заголовок пересуватиметься, коли ми "
"взаємодіємо із довгою панеллю списку, яка перевищує за висотою сторінку. Для "
"`headerPositioning` можна встановити три різних значення:"

#: content/docs/use/kirigami/components-listview.md:140
msgid ""
"`ListView.OverlayHeader`: In this setting, the header will contract once we "
"start scrolling down but will remain visible in a more compact state."
msgstr ""
"`ListView.OverlayHeader`: якщо вказано це значення, заголовок стискатиметься "
"після початку гортання вниз, але лишатиметься видимим у компактнішій формі."

#: content/docs/use/kirigami/components-listview.md:141
msgid ""
"`ListView.PullBackHeader`: The header will disappear as we scroll down, but "
"will reappear as we scroll back up, even if we haven't yet reached the top "
"of the list view."
msgstr ""
"`ListView.PullBackHeader`: заголовок зникатиме при гортанні вниз, але "
"повторно з'явиться при зворотному гортанні, навіть якщо ви ще не досягли "
"верхньої частини панелі списку."

#: content/docs/use/kirigami/components-listview.md:142
msgid ""
"`ListView.InlineHeader`: The header will act like a part of the listview and "
"remain at the top of the listview."
msgstr ""
"`ListView.InlineHeader`: заголовок працюватиме як частина панелі списку і "
"лишатиметься у верхній частині панелі списку."

#: content/docs/use/kirigami/components-listview.md:168
msgid ""
"![A listview with a header](/docs/use/kirigami/components-listview/listview-"
"header.png)"
msgstr ""
"![Панель списку із заголовком](/docs/use/kirigami/components-listview/"
"listview-header.png)"

#: content/docs/use/kirigami/components-overlaysheets.md:0
msgid "Overlay sheets"
msgstr "Накладні аркуші"

#: content/docs/use/kirigami/components-overlaysheets.md:0
msgid ""
"Overlay sheets can serve a variety of uses for both serving and inputting "
"data."
msgstr ""
"Аркуші-накладки можуть обслуговувати спектр використань для обробки і "
"введення даних."

#: content/docs/use/kirigami/components-overlaysheets.md:10
msgid ""
"Overlay sheets provide a simple component that you can use to supplement the "
"content being displayed on an application's page. They are designed to "
"display long, vertical content and can accommodate content longer than the "
"application window itself."
msgstr ""
"Аркуші-накладки є простим компонентом, яким ви можете скористатися для "
"надання даних, які буде показано на сторінці програми. Їх розроблено для "
"показу довгих вертикальних даних, і вони можуть накопичувати дані довші, ніж "
"саме вікно програми."

#: content/docs/use/kirigami/components-overlaysheets.md:12
msgid ""
"They can be dismissed by clicking or tapping outside of their area or by "
"clicking the 'x' icon on sheets' headers."
msgstr ""
"Їх можна закривати клацанням або торканням поза областю накладки, а також "
"клацанням на піктограмі «x» у заголовку аркуша."

#: content/docs/use/kirigami/components-overlaysheets.md:14
msgid "Learning about the sheet"
msgstr "Знайомимося із аркушем"

#: content/docs/use/kirigami/components-overlaysheets.md:16
msgid ""
"In order to use an overlay sheet, we should create it inside the Kirigami "
"Page we want it to appear in."
msgstr ""
"Щоб скористатися аркушем-накладкою, вам слід створити його на сторінці "
"Kirigami, на якій він має з'явитися."

#: content/docs/use/kirigami/components-overlaysheets.md:46
msgid ""
"![Simple overlay sheet](/docs/use/kirigami/components-overlaysheets/"
"sheet_simple.png)"
msgstr ""
"![Простий накладний аркуш](/docs/use/kirigami/components-overlaysheets/"
"sheet_simple.png)"

#: content/docs/use/kirigami/components-overlaysheets.md:52
msgid ""
"Overlay sheets come with methods we can use to open (`mySheet.open()`) or "
"close (`mySheet.close()`) them as we see fit. By default overlay sheets are "
"hidden, so at the very least we will need to use the `open()` method."
msgstr ""
"У аркушах-накладках передбачено методи, якими можна скористатися для "
"відкриття (`mySheet.open()`) або закриття (`mySheet.close()`) цих аркушів на "
"вимогу. Типово, аркуші-накладки приховано, отже, принаймні, нам потрібно "
"буде скористатися методом `open()`."

#: content/docs/use/kirigami/components-overlaysheets.md:61
msgid ""
"When opened, this overlay sheet will appear centered vertically and "
"horizontally within its parent page. Horizontally it will be bounded by its "
"parent even if its contents' width exceeds its parent's. If the sheet's "
"vertical length exceeds its' parent's, then the sheet will be displayed from "
"its top position, and will be scrollable."
msgstr ""
"У відкритому стані цей аркуш-накладку буде показано центрованим вертикально "
"і горизонтально на його батьківській сторінці. Горизонтально його буде "
"обмежено його батьківським елементом, навіть якщо ширина його вмісту "
"перевищуватиме ширину батьківського елемента. Якщо вертикальна довжина "
"аркуша перевищує вертикальну довжину батьківського елемента, аркуш буде "
"показано з його верхньої позиції і буде передбачено гортання."

#: content/docs/use/kirigami/components-overlaysheets.md:63
msgid "Global sheet"
msgstr "Загальний аркуш"

#: content/docs/use/kirigami/components-overlaysheets.md:65
msgid ""
"If you want to display the sheet as a global sheet — one that spans across "
"the entire width of the application, regardless of the page it is a child to "
"— we have to reparent our overlay sheet to our application window's overlay "
"property. We can do this with the `parent` property."
msgstr ""
"Якщо вам потрібно показати аркуш як загальний — такий, що вкриває усю ширину "
"вікна програми, незалежно від сторінки, дочірнім елементом якої він є — слід "
"змінити батьківський елемент нашого аркуша-накладки на властивість накладки "
"вікна програми. Зробити це можна за допомогою властивості `parent`."

#: content/docs/use/kirigami/components-overlaysheets.md:90
msgid "Non-global overlay sheet"
msgstr "Незагальний аркуш-накладка"

#: content/docs/use/kirigami/components-overlaysheets.md:92
msgid "Global overlay sheet"
msgstr "Загальний аркуш-накладка"

#: content/docs/use/kirigami/components-overlaysheets.md:100
msgid "Fixed sizing"
msgstr "Фіксований розмір"

#: content/docs/use/kirigami/components-overlaysheets.md:102
msgid ""
"A sheet is greedy and will take the maximum amount of available width in a "
"page if needed. We can avoid this by specifying an `implicitWidth` or a "
"`Layout.preferredWidth` for its child elements, which will limit how much "
"the sheet will grow width-wise."
msgstr ""
"Аркуш є жадібним і захоплюватиме максимальну можливу ширину на сторінці, "
"якщо у цьому виникне потреба. Уникнути цього можна заданням властивості "
"`implicitWidth` або властивості `Layout.preferredWidth` для його дочірніх "
"елементів. Таким чином буде обмежено можливості зі зростання ширини аркуша."

#: content/docs/use/kirigami/components-overlaysheets.md:125
msgid "Non-fixed width overlay sheet"
msgstr "Аркуш-накладка нефіксованої ширини"

#: content/docs/use/kirigami/components-overlaysheets.md:127
msgid "Fixed width overlay sheet"
msgstr "Аркуш-накладка фіксованої ширини"

#: content/docs/use/kirigami/components-overlaysheets.md:135
msgid "Headers and footers"
msgstr "Шапки і підвали"

#: content/docs/use/kirigami/components-overlaysheets.md:137
msgid ""
"Overlay sheets come by default with a header which only contains a button "
"for closing our overlay sheet. We can add a Kirigami heading as a title in "
"our header to make it easy for users to understand what the sheet is for. "
"This is done by setting the `header` property to contain our Kirigami "
"heading component."
msgstr ""
"Типові аркуші-накладки містять шапку, на якій розташовано лише кнопку для "
"закриття аркуша-накладки. Мона додати шапку Kirigami як заголовок до шапки "
"аркуша, щоб спростити розуміння користувачами призначення аркуша. Зробити це "
"можна за допомогою встановлення  відповідного значення властивості `header` "
"— слід пов'язати із нею компонент шапки Kirigami."

#: content/docs/use/kirigami/components-overlaysheets.md:162
msgid ""
"![Sheet header](/docs/use/kirigami/components-overlaysheets/sheet_header.png)"
msgstr ""
"![Верхній колонтитул аркуша](/docs/use/kirigami/components-overlaysheets/"
"sheet_header.png)"

#: content/docs/use/kirigami/components-overlaysheets.md:168
msgid ""
"We can also provide our overlay sheet with a footer. Footers in overlay "
"sheets are quite flexible, but most often they are used to provide overlay "
"sheets with some sort of quick interactive input similar to that provided by "
"modal dialogs (e.g. buttons for 'Apply', 'Ok', 'Cancel', 'Close', etc.)"
msgstr ""
"Ми також можемо надати нашому аркушу-накладці підвал або нижній колонтитул. "
"Підвали у аркушах-накладках є доволі гнучкими елементами, але часто їх "
"використовують для надання аркушам-накладкам певної можливості швидкого "
"інтерактивного надання даних, подібного до того, який надають модальні "
"діалогові вікна (наприклад кнопок для дій «Застосувати», «Гаразд», "
"«Скасувати» тощо)"

#: content/docs/use/kirigami/components-overlaysheets.md:170
msgid "Footers are set in much the same way as headers:"
msgstr "Підвали можна налаштувати майже у той самий спосіб, що і шапки:"

#: content/docs/use/kirigami/components-overlaysheets.md:200
msgid ""
"![Sheet footer](/docs/use/kirigami/components-overlaysheets/sheet_footer.png)"
msgstr ""
"![Нижній колонтитул аркуша](/docs/use/kirigami/components-overlaysheets/"
"sheet_footer.png)"

#: content/docs/use/kirigami/components-overlaysheets.md:206
msgid "Using delegate / model views"
msgstr "Користування панелями делегата і моделі"

#: content/docs/use/kirigami/components-overlaysheets.md:208
msgid ""
"Since overlay sheets are designed to display vertical content, they can be "
"especially useful when used in conjunction with components such as "
"ListViews. When displaying content longer than the application window "
"itself, the overlay sheet becomes scrollable:"
msgstr ""
"Оскільки аркуші-накладки було розроблено для вертикального показу вмісту, "
"вони можуть бути особливо корисними при використанні у поєднанні із "
"компонентами, подібними до панелей списків. При показі вмісту, який є довшим "
"за вікно програми, на аркушах-накладках з'являється смужка гортання:"

#: content/docs/use/kirigami/components-overlaysheets.md:231
msgid ""
"![Sheet with a listview](/docs/use/kirigami/components-overlaysheets/"
"sheet_listview.png)"
msgstr ""
"![Аркуш із списком](/docs/use/kirigami/components-overlaysheets/"
"sheet_listview.png)"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:0
msgid "Page rows and page stacks"
msgstr "Ряди сторінок і стоси сторінок"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:0
msgid ""
"Add flow to your application: Add, remove and replace pages in different ways"
msgstr ""
"Додавання у програму динаміки: різні способи додавання, вилучення і зміни "
"сторінок"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:10
msgid "The PageRow"
msgstr "PageRow"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:12
msgid ""
"The [PageRow](docs:kirigami2;PageRow) is a container that lays out items "
"horizontally in a row. If all child items don't fit in the [PageRow](docs:"
"kirigami2;PageRow), it will behave like a [`Flickable`](https://doc.qt.io/"
"qt-5/qml-qtquick-flickable.html) surface and will become a horizontal "
"scrollable view of columns."
msgstr ""
"[PageRow](docs:kirigami2;PageRow) є контейнером, у якому елементи "
"компонуються горизонтально у рядок. Якщо усі дочірні елементи не вміщуються "
"до [PageRow](docs:kirigami2;PageRow), контейнер поводиться подібно до "
"поверхні [`Flickable`](https://doc.qt.io/qt-5/qml-qtquick-flickable.html) і "
"стає горизонтальною панеллю зі стовпчиками і гортанням."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:16
msgid ""
"A [PageRow](docs:kirigami2;PageRow) can show a single page or several of "
"them as columns, depending on the window width. On a phone, a single column "
"will be viewable, while on a tablet or a desktop more than one column should "
"be visible at once."
msgstr ""
"[PageRow](docs:kirigami2;PageRow) може показувати окрему сторінку або "
"декілька сторінок у форматі таблиці зі стовпчиками, залежно від ширини "
"вікна. На телефоні сторінки буде показано в один стовпчик, а на планшеті або "
"комп'ютері може бути показано декілька стовпчиків."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:20
msgid ""
"The columns can either all have the same fixed size, size themselves with "
"`implicitWidth`, or automatically expand to take up all available width. By "
"default, the last column will expand to take up all available space."
msgstr ""
"Стовпчики можуть бути однакового фіксованого розміру, мати розмір, який "
"визначається `implicitWidth`, або мати автоматично визначений розмір з "
"заповненням усієї ширини вікна. Типово, останній стовпчик буде розширено "
"так, щоб було заповнено увесь доступний простір."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:24
msgid "Screenshot of a PageRow"
msgstr "Знімок PageRow"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:26
msgid ""
"You can access the column view methods from the `pageStack` property of your "
"[Kirigami.ApplicationWindow](docs:kirigami2;ApplicationWindow) element or "
"from anywhere else using `applicationWindow().pageStack`."
msgstr ""
"Доступ до методів панелі зі стовпчиками можна отримати за допомогою "
"властивості `pageStack` вашого елемента [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow) або з будь-якого іншого місця за допомогою "
"`applicationWindow().pageStack`."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:30
msgid ""
"The initial page is added with the `pageStack.initialPage` property. As an "
"example: in a simple application that required the user to authenticate "
"themselves, the initial page would be a login page."
msgstr ""
"Початкова сторінка додається за допомогою властивості `pageStack."
"initialPage`. Приклад: у простій програмі, у якій потрібне розпізнавання "
"користувача, початковою сторінкою буде сторінка входу до системи."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:39
msgid ""
"Once the user has logged into the application, you would need to replace the "
"login page with the home page of the application. To do this, you would use "
"`pageStack.replace`, removing the LoginPage and replacing it with a HomePage."
msgstr ""
"Щойно користувач увійде до системи, вам слід замінити сторінку входу на "
"домашню сторінку програми. Для цього ви можете скористатися `pageStack."
"replace`, вилучивши сторінку LoginPage і замінивши її на HomePage."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:44
msgid "LoginPage.qml"
msgstr "LoginPage.qml"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:46
msgid "login formular"
msgstr "форма входу"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:53
msgid "give the registered user information to the homepage"
msgstr "надає зареєстрованому користувачеві відомості щодо домашньої сторінки"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:56
msgid "display error message"
msgstr "показ повідомлення про помилку"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:67
msgid ""
"Now let's imagine you had a configuration page you wanted the user to access "
"from the HomePage. You'd want the user to go back to the HomePage, so you "
"can't use `replace`. Instead, you would use `push` to push a new page in the "
"stack."
msgstr ""
"Тепер уявімо, що у вас є сторінка налаштувань, доступ до якої ви хочете "
"відкрити з HomePage. Вам хотілося б, щоб користувач міг повернутися до "
"HomePage, тому ви не можете скористатися `replace`. Замість цього, ви можете "
"скористатися `push` для заштовхування нової сторінки до стосу сторінок."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:73
msgid "ConfigurationPage.qml"
msgstr "ConfigurationPage.qml"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:80
msgid "HomePage.qml"
msgstr "HomePage.qml"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:86
msgid "You can also:"
msgstr "Ви також можете:"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:87
msgid ""
"[pop](docs:kirigami2;PageRow::pop) a page (which removes the last page in "
"the stack) or"
msgstr ""
"[виштовхнути](docs:kirigami2;PageRow::pop) сторінку (останню сторінку у "
"стосі при цьому буде вилучено) або"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:88
msgid ""
"use [insertPage](docs:kirigami2;PageRow::insertPage) to insert a page at a "
"specific position in the stack,"
msgstr ""
"скористатися [insertPage](docs:kirigami2;PageRow::insertPage) для вставлення "
"сторінки до певної позиції у стоці,"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:89
msgid ""
"use [movePage](docs:kirigami2;PageRow::movePage) to move specific pages "
"within the stack, or"
msgstr ""
"скористатися [movePage](docs:kirigami2;PageRow::movePage) для пересування "
"вказаних сторінок у стосі або"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:90
msgid "[clear](docs:kirigami2;PageRow::clear) all pages from the stack."
msgstr "[очистити](docs:kirigami2;PageRow::clear) стос від усіх сторінок."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:92
msgid ""
"You can also modify `currentIndex` to change the currently active page "
"programmatically, or use [flickBack](docs;Kirigami2;PageRow::flickBack) to "
"simulate moving a page backwards in the stack."
msgstr ""
"Ви також можете змінити `currentIndex` для визначення поточної активної "
"сторінки програмним шляхом або скористатися [flickBack](docs;Kirigami2;"
"PageRow::flickBack) для імітації пересування сторінки назад у стосі."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:96
msgid "Layers"
msgstr "Шари"

#: content/docs/use/kirigami/components-pagerow_pagestack.md:98
msgid ""
"For the moment, we only saw horizontal navigation working in a 2 dimensional "
"stack. You can also use layers in your application to push full-screen page "
"into your application."
msgstr ""
"До цього ми спостерігали лише роботу горизонтальної навігації у двовимірному "
"стосі. Але ви можете скористатися шарами у вашій програмі для заштовхування "
"повноекранної сторінки до вашої програми."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:101
msgid ""
"In this case, only one page is visible at the same time on mobile and on the "
"**desktop**."
msgstr ""
"У цьому випадку видимою на мобільному пристрої або **комп'ютері** одночасно "
"є лише одна сторінка."

#: content/docs/use/kirigami/components-pagerow_pagestack.md:103
msgid ""
"The layers are accessible from `pageStack.layers` and use the same API as "
"`pageStack`."
msgstr ""
"Доступ до шарів можна отримати за допомогою `pageStack.layers`. Шари "
"використовують той самий програмний інтерфейс, що і `pageStack`."

#: content/docs/use/kirigami/components-progressbars.md:0
msgid "Progress Bars and Indicators"
msgstr "Смужки поступу і індикатори"

#: content/docs/use/kirigami/components-progressbars.md:0
msgid "Provide your users with loading state information using progress bars."
msgstr ""
"Надання вашим користувачам даних щодо стану завантаження за допомогою смужок "
"поступу."

#: content/docs/use/kirigami/components-progressbars.md:10
msgid ""
"Whenever your application does something that takes a noticeable amount of "
"time, you will want to use a visual element that tells the user that "
"something is happening in the background."
msgstr ""
"Кожного разу, коли ваша програма виконує якісь завдання, для виконання яких "
"потрібно доволі багато часу, вам знадобиться візуальний елемент, який "
"повідомлятиме користувачу про те, що щось відбувається у фоновому режимі."

#: content/docs/use/kirigami/components-progressbars.md:12
msgid ""
"QtQuick Controls provides two useful components that you can use to this end."
msgstr ""
"У QtQuick Controls передбачено два корисних компоненти, якими ви можете "
"скористатися для виконання цього завдання."

#: content/docs/use/kirigami/components-progressbars.md:14
msgid "Progress bar"
msgstr "Панель поступу"

#: content/docs/use/kirigami/components-progressbars.md:16
msgid ""
"`Controls.ProgressBar` is a component that lets you easily include progress "
"bars in your application. There are four main properties you will need to "
"use:"
msgstr ""
"`Controls.ProgressBar` є компонентом, який надає вам змогу просто включити "
"смужки поступу до вашої програми. Існує чотири основних властивості, якими "
"вам потрібно буде скористатися:"

#: content/docs/use/kirigami/components-progressbars.md:18
msgid "`from`: the minimum value represented by the start of the progress bar"
msgstr "`from`: мінімальне значення, яке відповідає початку смужки поступу"

#: content/docs/use/kirigami/components-progressbars.md:19
msgid "`to`: the maximum value represented by the end of the progress bar"
msgstr "`to`: максимальне значення, яке відповідає кінцю смужки поступу"

#: content/docs/use/kirigami/components-progressbars.md:20
msgid ""
"`value`: the current value of the action that is in progress (e.g. 50% "
"loaded)"
msgstr ""
"`value`: поточне значення рівня виконання дії (наприклад, отримано 50% даних)"

#: content/docs/use/kirigami/components-progressbars.md:21
msgid ""
"`indeterminate`: if the action that is in process currently has no clear "
"progress value, you can set this property to true to show the user something "
"is happening but its progress is not yet clear (but will be soon)."
msgstr ""
"`indeterminate`: якщо дія, яка зараз виконується не має точного значення "
"рівня поступу, ви можете встановити для цієї властивості значення `true` для "
"показу користувачу того, що щось відбувається, але параметри поступу цього "
"не є очевидними (але невдовзі ці параметри буде отримано)."

#: content/docs/use/kirigami/components-progressbars.md:47
msgid "Above: progress bar at 50%; Below: indeterminate progress bar"
msgstr "Вище: смужка поступу на рівні 50%; нижче: невизначена смужка поступу"

#: content/docs/use/kirigami/components-progressbars.md:52
msgid "Busy indicator"
msgstr "Індикатор зайнятості"

#: content/docs/use/kirigami/components-progressbars.md:54
msgid ""
"In cases where loading times are shorter or measuring progress is not "
"feasible, you can instead use `Controls.BusyIndicator`. This component "
"provides a simple spinning wheel that shows users that something is "
"happening."
msgstr ""
"У випадках, коли час завантаження є коротшим або вимірювання поступу "
"неможливе, ви можете скористатися `Controls.BusyIndicator`. Цей компонент "
"забезпечує роботу простого обертового коліщатка, яке показує користувачам, "
"що щось відбувається."

#: content/docs/use/kirigami/components-progressbars.md:66
msgid ""
"![A busy indicator](/docs/use/kirigami/components-progressbars/busyindicator."
"png)"
msgstr ""
"![Індикатор зайнятості](/docs/use/kirigami/components-progressbars/"
"busyindicator.png)"

#: content/docs/use/kirigami/components-progressbars.md:71
msgid ""
"If you want the indicator to stop running, you can do so by setting the "
"`running` property to false."
msgstr ""
"Якщо ви хочете, щоб індикатор припинив показ поступу, ви можете зробити це "
"встановленням для властивості `running` значення `false`."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:0
msgid "Scrollable Pages and List Views"
msgstr "Сторінки і панелі списків із гортанням"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:0
msgid ""
"Scrollable pages are useful when combined with vertical components or "
"dynamic components such as List Views."
msgstr ""
"Сторінки із гортанням є корисними у поєднанні із вертикальними компонентами "
"або динамічними компонентами, зокрема панелями списків."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:10
msgid "`Kirigami.ScrollablePage`"
msgstr "`Kirigami.ScrollablePage`"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:12
msgid ""
"A [`Kirigami.ScrollablePage`](docs:kirigami2;ScrollablePage) is a page that "
"holds scrollable content, such as `ListView`s. Scrolling and scrolling "
"indicators are automatically managed."
msgstr ""
"[`Kirigami.ScrollablePage`](docs:kirigami2;ScrollablePage) є сторінкою, яка "
"містить дані з можливістю гортання, зокрема `ListView`. Гортання і "
"індикатори гортання керуються автоматично."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:19
msgid "The rectangle will automatically be scrollable"
msgstr "Прямокутник буде автоматично створено придатним до гортання"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:27
msgid ""
"In almost every other way, a scrollable page is the same as a normal page."
msgstr ""
"У майже будь-який інший спосіб, сторінка з гортанням є подібною до звичайної "
"сторінки."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:31
msgid ""
"Do not put a `ScrollView` inside of a `Kirigami.ScrollablePage`; children of "
"a `Kirigami.ScrollablePage` are already inside a `ScrollView`."
msgstr ""
"Не вписуйте `ScrollView` всередину `Kirigami.ScrollablePage`; дочірні "
"об'єкти `Kirigami.ScrollablePage` вже перебувають у `ScrollView`."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:36
msgid "ListView in a ScrollablePage"
msgstr "ListView у ScrollablePage"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:38
msgid ""
"When a `Kirigami.ScrollablePage`'s direct children extend vertically beyond "
"the size of the page itself, a scrollbar appears at the right edge of the "
"page and the page will be scrollable."
msgstr ""
"Якщо безпосередні дочірні елементи `Kirigami.ScrollablePage` розширюються "
"вертикально за розмір самої сторінки, у правій частині сторінки з'являється "
"смужка гортання, а сторінка стає сторінкою із гортанням."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:42
msgid "NeoChat Scrollable Page Screenshot"
msgstr "Знімок вікна NeoChat зі сторінкою із гортанням"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:42
msgid ""
"Two scrollable pages, both containing a ListView with custom contents "
"(Screenshot of NeoChat)"
msgstr ""
"Дві сторінки із гортанням, обидві містять ListView із нетиповим вмістом "
"(знімок вікна NeoChat)"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:45
msgid ""
"Often you have more than one child in your `Kirigami.ScrollablePage`, and "
"positioning items can be tricky - especially in combination with a "
"`ListView`."
msgstr ""
"Часто на `Kirigami.ScrollablePage` міститься більше одного дочірнього "
"елемента, а розташовування елементів може бути складною справою — особливо у "
"поєднанні із `ListView`."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:48
msgid ""
"For non-visual components, having them inside the `ListView` element won't "
"change the visuals of the page. So we can move them inside the `ListView`. "
"Same for elements anchored to the center of the page, such as placeholder "
"messages for empty `ListView`s."
msgstr ""
"Для невізуальних компонентів розташування у елементі `ListView` не змінює "
"вигляду сторінки. Тому ми можемо пересунути їх всередину `ListView`. Те саме "
"стосується елементів, які пов'язано із центром сторінки, зокрема повідомлень-"
"замінників для порожніх `ListView`."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:52
msgid ""
"For other items, it might make sense to move them to the header or footer of "
"the `Kirigami.ScrollablePage`. This is often the case for search bars."
msgstr ""
"Інші ж елементи варто пересувати у шапку або підвал `Kirigami."
"ScrollablePage`. Так часто роблять із панелями пошуку."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:55
msgid "PlaceholderMessage"
msgstr "PlaceholderMessage"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:57
msgid ""
"It is possible to add a [`Kirigami.PlaceholderMessage`](docs:kirigami2;"
"PlaceholderMessage) with some instructions in case the list view is empty."
msgstr ""
"Можна додати [`Kirigami.PlaceholderMessage`](docs:kirigami2;"
"PlaceholderMessage) із певними настановами, якщо панель списку є порожньою."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:79
msgid "Search in the ListView"
msgstr "Пошук у ListView"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:81
msgid ""
"A search field is often added to a `Kirigami.ScrollablePage` to filter the "
"`ListView`. This can be done by changing the default `titleDelegate` to use "
"a [`Kirigami.SearchField`](docs:kirigami2;SearchField) instead."
msgstr ""
"Поле пошуку часто додають до `Kirigami.ScrollablePage` для фільтрування "
"`ListView`. Зробити це можна замінивши типовий `titleDelegate` на [`Kirigami."
"SearchField`](docs:kirigami2;SearchField)."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:103
msgid "Hint"
msgstr "Підказка"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:105
msgid ""
"You can use [KSortFilterProxyModel](docs:kitemmodels;SortFilterModel) from "
"[KItemModel](https://api.kde.org/frameworks/kitemmodels/html/) to easily add "
"filtering capability directly in QML without any need for C++ code."
msgstr ""
"Ви можете скористатися [KSortFilterProxyModel](docs:kitemmodels;"
"SortFilterModel) з [KItemModel](https://api.kde.org/frameworks/kitemmodels/"
"html/) для спрощення додавання можливостей фільтрування безпосередньо до QML "
"без потреби у коді C++."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:111
msgid "Pull to refresh"
msgstr "Отримання для оновлення даних"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:113
msgid ""
"Another function provided by this component is a \"pull to refresh\" action. "
"To use this, activate it as follows:"
msgstr ""
"Іншою функцією, яка надається цим компонентом є дія «виштовхнути, щоб "
"освіжити». Щоб скористатися цією дією, активуйте її ось так:"

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:126
msgid ""
"NOTE: MyModel doesn't come from the components, it's purely an example on "
"how it can be used together some application logic that can update the list "
"model and signals when it's done."
msgstr ""
"Зауваження: MyModel не походить від компонентів. Це просто приклад того, як "
"нею можна скористатися разом із певною логікою програми, яка може оновлювати "
"список моделі і сигналізувати про завершення роботи."

#: content/docs/use/kirigami/components-scrollablepages_listviews.md:138
msgid ""
"By pulling down, you can also activate a special mode with a larger top "
"margin which makes single-handed use of the application easier."
msgstr ""
"Крім того, перетягуванням вниз ви можете активувати спеціальний режим із "
"більшим верхнім полем, яке спрощує користування програмою однією рукою."

#: content/docs/use/kirigami/introduction-actions.md:0
msgid "Adding actions"
msgstr "Дії з додавання"

#: content/docs/use/kirigami/introduction-actions.md:0
msgid ""
"Learning more about Kirigami's Actions will help us make our application "
"more useful.\n"
msgstr ""
"Ширші знання щодо дій Kirigami допоможуть нам зробити нашу програму "
"кориснішою.\n"

#: content/docs/use/kirigami/introduction-actions.md:10
msgid "Recap"
msgstr "Коротке повторення"

#: content/docs/use/kirigami/introduction-actions.md:12
msgid ""
"So far, we have managed to build a simple app that can display cards. "
"However, we don't yet have a way of adding new cards to our card view."
msgstr ""
"Поки що нам вдалося побудувати просту програму, яка може показувати картки. "
"Втім, у нас ще немає способу додавання нових карток до нашої панелі карток."

#: content/docs/use/kirigami/introduction-actions.md:14
msgid ""
"In this tutorial, we'll be looking at Kirigami actions. These will help us "
"add interactivity to our app in a consistent, fast, and accessible way."
msgstr ""
"У цій частині підручника ми розглянемо дії Kirigami. Ці дії допоможуть нам "
"додати інтерактивності нашій програмі у сумісний, швидкий і доступний спосіб."

#: content/docs/use/kirigami/introduction-actions.md:20
msgid "Page actions on the desktop."
msgstr "Пункти дій сторінки на робочій станції."

#: content/docs/use/kirigami/introduction-actions.md:22
msgid ""
"If you have used Kirigami apps before, you have certainly interacted with "
"Kirigami Actions. In this image, we can see actions to the right of the page "
"title with various icons. Kirigami Actions can be displayed in several ways "
"and can do a wide variety of things."
msgstr ""
"Якщо ви раніше користувалися програмами Kirigami, ви напевне взаємодіяли із "
"діями Kirigami. На цьому зображенні ми можемо бачити кнопки дій праворуч від "
"заголовка сторінки із різноманітними піктограмами. Дії Kirigami може бути "
"показано у декілька способів. Вони можуть виконувати широкий діапазон "
"завдань."

#: content/docs/use/kirigami/introduction-actions.md:24
msgid "Adding countdowns"
msgstr "Додавання відліків"

#: content/docs/use/kirigami/introduction-actions.md:26
msgid ""
"A countdown app is pretty useless without the ability to add countdowns. "
"Let's create an action that'll let us do this."
msgstr ""
"Програма із зворотним відліком буде непотрібною без можливості додавання "
"зворотних відліків. Давайте створимо дію, яка надасть нам змогу додавати "
"зворотні відліки."

#: content/docs/use/kirigami/introduction-actions.md:50
msgid ""
"We are placing our Kirigami Action within our main page from our previous "
"tutorials. If we wanted to, we could add more actions to our page (and even "
"nest actions within actions!). `Kirigami.Action` components are used as "
"contextual actions within Kirigami pages. We are setting it specifically to "
"the `actions.main` property of the page: the `actions` object has properties "
"that let us set different actions in different positions, but since our 'Add "
"kountdown' action is central to our UI we are setting it as the main action "
"of this page."
msgstr ""
"Ми розташовуємо нашу дію Kirigami у нашій головній сторінці з попередніх "
"розділів нашого підручника. Якщо нам захочеться, ми можемо додати інші дії "
"на нашу сторінку (і навіть вкласти дії в інші дії!). Компоненти `Kirigami."
"Action` використовують як контекстні дії у межах сторінок Kirigami. Ми "
"надаємо це значення властивості `actions.main` сторінки: об'єкт `actions` "
"має властивості, які надають нам можливість встановлювати різні дії у різних "
"позиціях, але оскільки наша дія «Add kountdown» є центральною для нашого "
"інтерфейсу користувача, ми робимо її основною дією нашої сторінки."

#: content/docs/use/kirigami/introduction-actions.md:52
msgid ""
"The `id` and `text` properties should be familiar from previous tutorials. "
"However, the new `icon` property should be interesting: it is an object with "
"several properties letting you display certain icons for your actions. "
"Fortunately, to use KDE icons all we need to do is provide the name property "
"for the icon property, `icon.name`."
msgstr ""
"Із властивостями `id` і `text` ми вже познайомилися у попередніх розділах "
"підручника. Втім, нас має зацікавити нова властивість `icon`: це об'єкт із "
"декількома властивостями, за допомогою якого можна показувати певні "
"піктограми для наших дій. На щастя, щоб скористатися піктограмами KDE "
"достатньо надати назву для властивості піктограми, `icon.name`."

#: content/docs/use/kirigami/introduction-actions.md:56
msgid ""
"Cuttlefish is a KDE application that lets you view all the icons that you "
"can use for your application. It offers a number of useful features such as "
"previews of their appearance across different installed themes, previews at "
"different sizes, and more. You might find it a useful tool when deciding on "
"which icons to use in your application."
msgstr ""
"Cuttlefish — програма KDE, за допомогою якої ви можете переглянути усі "
"піктограми, якими можна скористатися у вашій програмі. У програмі "
"передбачено декілька корисних можливостей, зокрема попередній перегляд "
"вигляду піктограм у різних встановлених темах, попередній перегляд із "
"різними розмірами тощо. Можливо, програма буде корисною для вас із метою "
"визначення, які піктограми варто використати у вашій програмі."

#: content/docs/use/kirigami/introduction-actions.md:58
msgid ""
"Many of KDE's icons follow the FreeDesktop Icon Naming specification. "
"Therefore, you might also find it useful to consult The FreeDesktop "
"project's website, [which lists all of the cross-desktop compatible icon "
"names on their website](https://specifications.freedesktop.org/icon-naming-"
"spec/icon-naming-spec-latest.html)."
msgstr ""
"У багатьох піктограмах KDE використано специфікацію назв піктограм "
"FreeDesktop. Через це, вам також буде корисним звернутися до сайта проєкту "
"FreeDesktop, [де наведено список усіх сумісних із різними стільничними "
"середовищами назв піктограм](https://specifications.freedesktop.org/icon-"
"naming-spec/icon-naming-spec-latest.html)."

#: content/docs/use/kirigami/introduction-actions.md:62
msgid ""
"The `onTriggered` property is the most important. This is what our action "
"will do when it is used. You'll notice that in our example we're using the "
"method `kountdownModel.append` of the `kountdownModel` we created in our "
"previous tutorial. This method lets us append a new element to our list "
"model. We are providing it with an object that has the relevant properties "
"for our countdowns (name, description, and a placeholder date)."
msgstr ""
"Найважливішою є властивість `onTriggered`. Вона визначає те, що буде "
"виконано, коли використовуватиметься наша дія. Ви можете зауважити, що у "
"нашому прикладі ми використовуємо метод `kountdownModel.append` "
"`kountdownModel`, який було створено у попередньому розділі нашого "
"підручника. За допомогою цього методу можна додати новий елемент до нашої "
"моделі списку. Ми надаємо методу об'єкт, який має відповідні властивості для "
"наших відліків (назву, опис та дату-замінник)."

#: content/docs/use/kirigami/introduction-actions.md:64
msgid ""
"Each time we click our now 'Add kountdown' button on the top right, our "
"custom countdown is added."
msgstr ""
"Кожного разу, коли ми натискатимемо кнопку «Add kountdown» у верхній правій "
"частині вікна, додаватиметься наш нетиповий відлік."

#: content/docs/use/kirigami/introduction-actions.md:68
msgid ""
"Did you notice those three lines next to the page title on the previous "
"screenshot? That's a global drawer. Global drawers are useful for global "
"navigation and actions: in other words, those things you might need to use "
"throughout your application. We are going to create a simple global drawer "
"that includes a quit button."
msgstr ""
"Помітили три риски поряд із заголовком сторінки на попередньому знімку "
"вікна? Це загальна висувна панель. Загальні висувні панелі корисні для "
"загальної навігації і дій: іншими словами, тих речей, які можуть знадобитися "
"усюди у вашій програмі. Ми створимо просту загальну висувну панель, на якій "
"міститиметься кнопка виходу з програми."

#: content/docs/use/kirigami/introduction-actions.md:94
msgid ""
"Here, we put our global drawer inside our application window. The main "
"property we need to pay attention to is `actions`, which takes the form of "
"an array of `Kirigami.Action` components. This action has an appropriate "
"icon and triggers the `Qt.quit()` function, closing the application."
msgstr ""
"Тут ми розмістили нашу загальну висувну панель у нашому вікні програми. "
"Головною властивістю, якій ми маємо приділити увагу, є `actions`. Ця "
"властивість приймає значення масиву компонентів `Kirigami.Action`. Ця дія "
"має відповідну піктограму і запускає функцію `Qt.quit()`, яка завершує "
"роботу програми."

#: content/docs/use/kirigami/introduction-actions.md:96
msgid "![](global_drawer.png)"
msgstr "![](global_drawer.png)"

#: content/docs/use/kirigami/introduction-actions.md:98
msgid ""
"Since we are keeping our global drawer simple for now, we are setting the "
"`isMenu` property to true. This displays our global drawer as a normal "
"application menu, taking up less space than the default global drawer pane."
msgstr ""
"Оскільки ми поки зберігаємо простоту нашої загальної висувної панелі, ми "
"встановлюємо для `isMenu` значення true. У результаті нашу загальну висувну "
"панель буде показано як звичайне меню програми, яке займатиме менше місця за "
"типову загальну висувну панель."

#: content/docs/use/kirigami/introduction-actions.md:100
msgid "![](quit_action.png)"
msgstr "![](quit_action.png)"

#: content/docs/use/kirigami/introduction-actions.md:104
msgid ""
"The ['Actions'](https://develop.kde.org/docs/kirigami/actions/) page in the "
"'Components' section of these docs provides further detail on Kirigami "
"actions and how they can be used."
msgstr ""
"Сторінка [«Actions»](https://develop.kde.org/docs/kirigami/actions/) у "
"розділі «Компоненти» цієї документації містить докладніші відомості щодо дій "
"Kirigami та їхнього використання."

#: content/docs/use/kirigami/introduction-getting_started.md:0
msgid "Setting up and getting started"
msgstr "Налаштовування і перші кроки"

#: content/docs/use/kirigami/introduction-getting_started.md:0
msgid "Getting ready to create our first Kirigami application\n"
msgstr "Готуємося до створення нашої першої програми Kirigami\n"

#: content/docs/use/kirigami/introduction-getting_started.md:11
msgid "Installing required packages"
msgstr "Встановлення потрібних пакунків"

#: content/docs/use/kirigami/introduction-getting_started.md:13
msgid ""
"Before getting started, we must install a few things. We need a C++ "
"compiler, Qt development packages, and Kirigami."
msgstr ""
"Перш ніж починати щось робити, нам слід дещо встановити. Нам знадобиться "
"компілятор C++, пакунки для розробки Qt та Kirigami."

#: content/docs/use/kirigami/introduction-getting_started.md:15
msgid "On Ubuntu, Debian and Neon we can install these with APT:"
msgstr ""
"В Ubuntu, Debian та Neon ми можемо встановити ці пакунки за допомогою APT:"

#: content/docs/use/kirigami/introduction-getting_started.md:21
msgid "On Arch-based distributions (like Manjaro) we can use Pacman:"
msgstr ""
"У заснованих на Arch дистрибутивах (зокрема Manjaro) ми можемо скористатися "
"Pacman:"

#: content/docs/use/kirigami/introduction-getting_started.md:27
msgid "For Fedora, we use DNF:"
msgstr "У Fedora ми користуємося DNF:"

#: content/docs/use/kirigami/introduction-getting_started.md:34
msgid ""
"Further information for other distributions can be found [here](https://"
"community.kde.org/Guidelines_and_HOWTOs/Build_from_source/"
"Install_the_dependencies)."
msgstr ""
"Подальші відомості для інших дистрибутивів наведено [тут](https://community."
"kde.org/Guidelines_and_HOWTOs/Build_from_source/Install_the_dependencies)."

#: content/docs/use/kirigami/introduction-getting_started.md:36
msgid "Project structure"
msgstr "Структура проєкту"

#: content/docs/use/kirigami/introduction-getting_started.md:38
msgid ""
"While there are tools that can easily set up our files, we are going to "
"create them manually. This will let us better understand the pieces that are "
"going to make up our new application."
msgstr ""
"Хоча існують інструменти, за допомогою яких можна просто налаштувати наші "
"файли, ми створимо їх вручну. Це надасть нам змогу краще зрозуміти частини, "
"з яких буде створено нашу нову програму."

#: content/docs/use/kirigami/introduction-getting_started.md:40
msgid ""
"First we create our project folder. We are going to call ours 'helloworld'."
msgstr ""
"Спочатку ми створимо теку нашого проєкту. Назвемо цю теку «helloworld»."

#: content/docs/use/kirigami/introduction-getting_started.md:54
msgid ""
"Within this folder we are going to create a `src` folder and `CMakeLists."
"txt`. It is generally considered good practice to place all our main code "
"files in a `src` folder. Our `src` folder in turn will contain a folder "
"named `contents`, which itself contains a folder called `ui`. Here is where "
"we will create our QML files."
msgstr ""
"У цій теці ми створимо теку `src` і файл `CMakeLists.txt`. Зазвичай, "
"вважається за правило розташовувати усі файли основного коду у теці `src`. У "
"нашій теці `src` міститиметься тека `contents`, яка міститиме теку із назвою "
"`ui`. Там ми створимо наші файли QML."

#: content/docs/use/kirigami/introduction-getting_started.md:56
msgid ""
"This is KDE convention, but not all KDE projects use this structure. You are "
"free to set things up differently, but you will have to take this into "
"account when creating your `CMakeLists.txt` and `resources.qrc` files."
msgstr ""
"Це загальні угоди KDE, але ця структура використовується не в усіх проєктах "
"KDE. Ви можете скомпонувати ваші частини програми інакше, але це слід взяти "
"до уваги при створенні ваших файлів `CMakeLists.txt` і `resources.qrc`."

#: content/docs/use/kirigami/introduction-getting_started.md:62
msgid "Here's where we will be handling our application's frontend."
msgstr "Тут ми працюватимемо із оболонкою нашої програми."

#: content/docs/use/kirigami/introduction-getting_started.md:64
msgid ""
"If you know some Javascript, then much of QML will seem familiar to you "
"(though it does have its own peculiarities). [Qt's documentation](https://"
"doc.qt.io/qt-5/qtqml-index.html) has an extensive amount of material on this "
"language if you feel like trying something on your own. Over the course of "
"these tutorials we will be focusing much of our attention on our QML code, "
"where we can use Kirigami to get the most out of it."
msgstr ""
"Якщо ви трохи знаєте Javascript, більша частина QML видасться вам знайомою "
"(хоча тут є свої особливості). У [документації до Qt](https://doc.qt.io/qt-5/"
"qtqml-index.html) є багато матеріалу щодо цієї мови, якщо вам захочеться "
"спробувати щось самостійно. Вивчаючи курс підручника, ми зосередимося на "
"нашому коді QML, де ми використовуватимемо Kirigami, щоб отримати "
"максимальні переваги від цього."

#: content/docs/use/kirigami/introduction-getting_started.md:66
msgid ""
"For now, let's focus on `main.qml`. First we import a number of important "
"modules:"
msgstr ""
"Тепер зосередимо увагу на `main.qml`. Спочатку ми імпортуємо декілька "
"важливих модулів:"

#: content/docs/use/kirigami/introduction-getting_started.md:68
msgid "QtQuick, the standard library used in QML applications."
msgstr "QtQuick, стандартну бібліотеку, яку використовують програми QML."

#: content/docs/use/kirigami/introduction-getting_started.md:69
msgid ""
"QtQuick Controls, which provides a number of standard controls we can use to "
"make our applications interactive."
msgstr ""
"QtQuick Controls, які забезпечують роботу декількох стандартних засобів "
"керування, якими ми можемо скористатися для того, щоб зробити наші програми "
"інтерактивними."

#: content/docs/use/kirigami/introduction-getting_started.md:70
msgid ""
"QtQuick Layouts, which provides tools for placing components within the "
"applications window."
msgstr ""
"QtQuick Layouts, які містять інструменти для розташовування компонентів у "
"вікні програм."

#: content/docs/use/kirigami/introduction-getting_started.md:71
msgid ""
"Kirigami, which provides a number of components suited for creating "
"applications that work across devices of different shapes and sizes."
msgstr ""
"Kirigami, яка містить декілька компонентів, які пристосовано для створення "
"програм, що можуть працювати на різних пристроях і екранах з різними формами "
"та розмірами."

#: content/docs/use/kirigami/introduction-getting_started.md:73
msgid ""
"We then come to our base element, [`Kirigami.ApplicationWindow`](docs:"
"kirigami2;ApplicationWindow) which provides some basic features needed for "
"all Kirigami applications. This is the window that will contain each of our "
"pages, the main sections of our UI."
msgstr ""
"Далі, ми перейдемо до нашого базового елемента, [`Kirigami."
"ApplicationWindow`](docs:kirigami2;ApplicationWindow), який надає певні "
"базові можливості, потрібні для усіх програм Kirigami. Це вікно, які "
"міститиме усі наші сторінки, основні розділи нашого інтерфейсу користувача."

#: content/docs/use/kirigami/introduction-getting_started.md:76
msgid ""
"We then set the `id` property of `Kirigami.ApplicationWindow` to 'root'. IDs "
"are useful because they let us uniquely reference a component, even if we "
"have several of the same type."
msgstr ""
"Далі, ми встановимо для властивості `id` `Kirigami.ApplicationWindow` "
"значення 'root'. Ідентифікатори є корисними, оскільки за їх допомогою ми "
"отримуємо унікальну прив'язку до компонента, навіть коли у нас є декілька "
"компонентів одного типу."

#: content/docs/use/kirigami/introduction-getting_started.md:78
msgid ""
"We also set the window `title` property to 'Hello World'. You'll notice that "
"we have wrapped our \"Hello World\" string in a function called `i18nc`, "
"where we detail the context of the string as well as the string itself."
msgstr ""
"Ми також встановимо для властивості вікна `title` значення «Hello World». Ми "
"зауважимо, що рядок «Hello World» огорнуто у функцію із назвою `i18nc`. У "
"цій функції ми деталізуємо контекст рядка, а також вказуємо сам рядок."

#: content/docs/use/kirigami/introduction-getting_started.md:82
msgid ""
"[`i18n()`](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Translatable_Code_Using_i18n.28.29) functions make your app more easily "
"translatable, as they return a version of the provided string in the user's "
"language (as long as your app has been localised for that language). While "
"an English user might see our window title as 'Hello World', a Spanish user "
"would see 'Hola Mundo'."
msgstr ""
"Функції [`i18n()`](https://techbase.kde.org/Development/Tutorials/"
"Localization/i18n#Translatable_Code_Using_i18n.28.29) роблять вашу програму "
"придатною до перекладу, оскільки вони повертають версію переданого їм рядка "
"мовою користувача (якщо вашу програму перекладено відповідною мовою). "
"Користувач із англійською мовою інтерфейсу бачитиме заголовок вікна «Hello "
"World», а користувач із іспанською мовою інтерфейсу — «Hola Mundo»."

#: content/docs/use/kirigami/introduction-getting_started.md:84
msgid ""
"[`i18nc()`](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Adding_Context_with_i18nc.28.29) builds on the `i18n()` function by "
"allowing developers to provide some context to translators working on the "
"app; that's why we have included the string \"@title\" before \"Hello World"
"\"."
msgstr ""
"[`i18nc()`](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Adding_Context_with_i18nc.28.29) побудовано на основі функції `i18n()`. "
"Ця функція уможливлює для розробників надання перекладачам, які "
"працюватимуть над перекладом програми, певного контексту. Ось чому ми "
"включили рядок «@title» перед рядком «Hello World»."

#: content/docs/use/kirigami/introduction-getting_started.md:88
msgid ""
"We then set the first page of our page stack. Most Kirigami applications are "
"organised as a stack of pages, each page containing related components "
"suited to a specific task. For now, we are keeping it simple, and sticking "
"to a single page. With `pageStack.initialPage: Kirigami.Page{...}` we set "
"the first page presented upon loading the application to a `Kirigami.Page`, "
"which will contain all our content."
msgstr ""
"Далі, ми визначаємо першу сторінку нашого стосу сторінок. Більшість програм "
"Kirigami упорядковано як стос сторінок — кожну сторінку призначено для "
"виконання окремого завдання. У нашому прикладі ми створимо простий стос, "
"який складатиметься із однієї сторінки. За допомогою `pageStack.initialPage: "
"Kirigami.Page{...}` ми задаємо для першої сторінки, яку буде показано після "
"завантаження програми, значення `Kirigami.Page`. Відповідна сторінка "
"міститиме усі наші дані."

#: content/docs/use/kirigami/introduction-getting_started.md:90
msgid ""
"Finally, we include in our page a `Controls.Label` that lets us place text "
"on our page. We use `anchors.centerIn: parent` to center our label "
"horizontally and vertically within our parent element. In this case, "
"`Controls.Label`'s parent component is `Kirigami.Page`. The last thing we "
"need to do is set the text: `text: i18n(\"Hello World!\")`."
msgstr ""
"Нарешті, ми включаємо до нашої сторінки `Controls.Label`, яка надасть нам "
"змогу розмістити на нашій сторінці текст. Ми використовуємо `anchors."
"centerIn: parent` для центрування нашої мітки горизонтально і вертикально у "
"нашому батьківському елементі. У цьому випадку батьківським для компонента "
"`Controls.Label` буде компонент `Kirigami.Page`. Нарешті, ми маємо "
"встановити для мітки текст: `text: i18n(\"Hello World!\")`."

#: content/docs/use/kirigami/introduction-getting_started.md:94
msgid ""
"`main.cpp` handles the 'business logic' of our application. C++ is handy "
"because it is flexible and fast, even if it is more involved than other "
"programming languages."
msgstr ""
"`main.cpp` обробляє «ділову логіку» нашої програми. Мова C++ є зручною для "
"цього, оскільки вона є гнучкою і швидкою, хоча і потребує більше знань, ніж "
"деякі інші мови програмування."

#: content/docs/use/kirigami/introduction-getting_started.md:96
msgid ""
"`main.cpp` is also the entrypoint to our application. The two parts of our "
"project, the backend and the user interface, are both set up and started "
"here."
msgstr ""
"`main.cpp` є також вхідним пунктом нашої програми. Тут налаштовуються і "
"запускаються обидві частини нашого проєкту — модуль обробки і інтерфейс "
"користувача."

#: content/docs/use/kirigami/introduction-getting_started.md:100
msgid ""
"For now, we don't need to go into too much detail regarding what our `main."
"cpp` code does, but its role will grow significantly more important once we "
"decide to add more complex functionality to our application in the future. "
"If you want to get ahead, you can read more about how this `main.cpp` works "
"[in this page](/docs/kirigami/advanced-maincpp/)."
msgstr ""
"До цього моменту у нас не було потреби заглиблюватися у подробиці дій, які "
"виконує код нашого `main.cpp`, але його роль значно зросте, якщо ми вирішимо "
"додати складні функціональні можливості до нашої програми у майбутньому. "
"Якщо ви вирішите продовжити, ви можете дізнатися більше щодо того, як працює "
"цей `main.cpp`, з [цієї сторінки](/docs/kirigami/advanced-maincpp/)."

#: content/docs/use/kirigami/introduction-getting_started.md:102
msgid "resources.qrc"
msgstr "resources.qrc"

#: content/docs/use/kirigami/introduction-getting_started.md:104
msgid ""
"`resources.qrc` contains the list of all QML files as well as other files "
"(like custom icons) that will be included in the binary."
msgstr ""
"`resources.qrc` містить список усіх файлів QML, а також усіх інших файлів "
"(зокрема нетипових піктограм), які буде включено до виконуваного файла."

#: content/docs/use/kirigami/introduction-getting_started.md:108
msgid ""
"Notice the line `<file alias=\"main.qml\">contents/ui/main.qml</file>`. It "
"details which QML files are going to be included in the compilation process. "
"In our case we are only using `main.qml`, but if we were to add more QML "
"files to our code, we'd need to make sure we include it in `resources.qrc` "
"file by adding another line like this one."
msgstr ""
"Зауважте рядок `<file alias=\"main.qml\">contents/ui/main.qml</file>`. Цей "
"рядок вказує, які файли QML буде включено у процесі компіляції. У нашому "
"випадку ми використовуємо лише `main.qml`, але якщо б нам захотілося додати "
"до нашого коду інші файли QML, нам довелося б включити їх до `resources.qrc` "
"додаванням подібних рядків."

#: content/docs/use/kirigami/introduction-getting_started.md:110
msgid ""
"You can read more about the specifics of how the Qt resource system works "
"[in Qt's docs](https://doc.qt.io/qt-5/resources.html)."
msgstr ""
"Дізнатися більше про специфіку того, як працює систем ресурсів Qt, можна з "
"[документації Qt](https://doc.qt.io/qt-5/resources.html)."

#: content/docs/use/kirigami/introduction-getting_started.md:114
msgid ""
"`CMakeLists.txt` files are needed to use KDE's build system of choice, "
"[CMake](https://cmake.org/). The CMakeLists.txt file in our top-level folder "
"is going to specify some of our application's characteristics. It also "
"includes some of the dependencies we need to compile it."
msgstr ""
"Для використання вибраної системи збирання KDE, [CMake](https://cmake.org/), "
"потрібні файли `CMakeLists.txt`. Файл CMakeLists.txt у нашій теці верхнього "
"рівня має вказати певні характеристики нашої програми. До цього файла також "
"включено записи певних залежностей, які нам потрібні під час компіляції."

#: content/docs/use/kirigami/introduction-getting_started.md:118
msgid ""
"The CMakeLists.txt defines how to build your projects. Most of the content "
"here is just to bootstrap your project. You can read a line-by-line, in-"
"depth explanation of what this CMakeLists file does [here](https://develop."
"kde.org/docs/kirigami/advanced-understanding_cmakelists/)."
msgstr ""
"CMakeLists.txt визначає, як збирати ваші проєкти. Більшість даних тут "
"призначено лише для збирання з нуля вашого проєкту. Порядкове глибинне "
"пояснення дій, які описано у цьому файлі CMakeLists, наведено [тут](https://"
"develop.kde.org/docs/kirigami/advanced-understanding_cmakelists/)."

#: content/docs/use/kirigami/introduction-getting_started.md:120
msgid ""
"The most important thing to keep in mind is that the Qt and KDE Frameworks "
"dependencies are managed with `find_package`. You will have to modify these "
"lines and include any additional components that you decide to use during "
"the development of your application."
msgstr ""
"Найважливішим, про що слід пам'ятати, є те, що залежності від Qt і KDE "
"Frameworks керуються за допомогою `find_package`. У процесі розробки вашої "
"програми вам слід вносити зміни до цих рядків і включати усі додаткові "
"компоненти, які ви вирішите використовувати."

#: content/docs/use/kirigami/introduction-getting_started.md:122
msgid ""
"The final line, `add_subdirectory(src)`, points CMake into the 'src' "
"directory, where our source code is located. Let's delve into the CMakeLists."
"txt file in there."
msgstr ""
"Останній рядок, `add_subdirectory(src)`, вказує каталог 'src' для CMake, де "
"зберігатиметься наш початковий код. Розгляньмо докладніше файл CMakeLists."
"txt у цьому каталозі."

#: content/docs/use/kirigami/introduction-getting_started.md:126
msgid "This one's a lot shorter! Let's go through what it does:"
msgstr "Він набагато коротший! Ознайомимося з його вмістом:"

#: content/docs/use/kirigami/introduction-getting_started.md:128
msgid "`add_executable` creates an executable from the given source files."
msgstr ""
"`add_executable` створює виконуваний файл на основі вказаних початкових "
"файлів."

#: content/docs/use/kirigami/introduction-getting_started.md:129
msgid ""
"`target_link_libraries` links the libraries used in our code to our "
"executable."
msgstr ""
"`target_link_libraries` пов'язує ціль із бібліотеками, які використовуються "
"у нашому коді для створення виконуваного файла."

#: content/docs/use/kirigami/introduction-getting_started.md:133
msgid ""
"Note that these libraries should match the components that we included in "
"our previous CMakeLists.txt file - otherwise these components will not be "
"included and our application won't compile."
msgstr ""
"Зауважте, що ці бібліотеки мають відповідати компонентам, які ми включили до "
"нашого попереднього файла CMakeLists.txt — інакше ці компоненти не буде "
"включено і нашу програму не можна буде зібрати."

#: content/docs/use/kirigami/introduction-getting_started.md:137
msgid ""
"Now that CMake has been taken care of, let's look at the files we are going "
"to spend the majority of our time working with."
msgstr ""
"Тепер, коли ми подбали про CMake, погляньмо на файли, з якими ми маємо намір "
"працювати переважний час під час розробки програми."

#: content/docs/use/kirigami/introduction-getting_started.md:139
msgid "Compiling and running the application"
msgstr "Збирання і запуск програми"

#: content/docs/use/kirigami/introduction-getting_started.md:141
msgid ""
"We are almost at the finish line. The last thing we need to do is build and "
"compile our application. To do that, we need to enter our 'helloworld' "
"folder in our terminal application of choice and run the following command:"
msgstr ""
"Ми наблизилися до фінішу. Наприкінці процесу нам слід побудувати і зібрати "
"нашу програму. Для цього нам потрібно увійти до нашої теки «helloworld» у "
"програмі-терміналі і віддати таку команду:"

#: content/docs/use/kirigami/introduction-getting_started.md:147
msgid "And launch it with:"
msgstr "І запустити програму такою командою:"

#: content/docs/use/kirigami/introduction-getting_started.md:153
msgid ""
"Voila! Now you will see your very first Kirigami app appear before your very "
"own eyes."
msgstr ""
"Ось і все! Тепер ви бачите перед собою вашу першу програму Kirigami вашими "
"власними очима."

#: content/docs/use/kirigami/introduction-getting_started.md:155
msgid "![Screenshot of the generated Kirigami application](hello-kworld.png)"
msgstr "![Знімок вікна створеної програми Kirigami](hello-kworld.png)"

#: content/docs/use/kirigami/introduction-getting_started.md:159
msgid ""
"Next time you want to create the files and folders needed, you can use "
"[KAppTemplate](https://apps.kde.org/kapptemplate) or KDevelop to "
"automatically generate a suitable project to start from. They are available "
"from each major distribution's repositories. These applications will also "
"generate files containing [AppStream](https://www.freedesktop.org/software/"
"appstream/docs/sect-Metadata-Application.html) metadata and a `.desktop` "
"file that contains information about how the application should be displayed "
"in a linux application launcher."
msgstr ""
"Наступного разу, коли створюватимете потрібні файли і теки, можете "
"скористатися [KAppTemplate](https://apps.kde.org/kapptemplate) або KDevelop "
"для автоматичного створення відповідної початкової версії проєкту. Ці "
"програми є у сховищах усіх основних дистрибутивів. Крім того, ці програми "
"створюють файли, що містять метадані [AppStream](https://www.freedesktop.org/"
"software/appstream/docs/sect-Metadata-Application.html) і файл `.desktop`, "
"який містить дані щодо того, як слід показувати пункт програми у засобах "
"запуску програм Linux."

#: content/docs/use/kirigami/introduction-getting_started.md:161
msgid ""
"Thanks to the magic of CMakeLists, you can also use IDEs such as KDevelop or "
"QtCreator to develop this application within a comfortable environment with "
"minimal effort."
msgstr ""
"Завдяки магії CMakeLists, ви також можете скористатися комплексними "
"середовищами розробки, зокрема KDevelop або QtCreator для подальшого "
"написання програми у комфортному середовищі із мінімальними зусиллями."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:0
msgid "Using Kirigami Gallery"
msgstr "Користування галереєю Kirigami"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:0
msgid "Using Kirigami Gallery to find code patterns\n"
msgstr "Використання Галереї Kirigami для пошуку взірців коду\n"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:10
msgid ""
"[Kirigami Gallery](https://invent.kde.org/sdk/kirigami-gallery/) is a "
"helpful friend when developing a Kirigami application. It is an application "
"which uses the features of Kirigami, provides links to the source code, tips "
"on how to use the components as well as links to the corresponding HIG pages."
msgstr ""
"[Галерея Kirigami](https://invent.kde.org/sdk/kirigami-gallery/) — ваш друг-"
"помічник у розробці програм Kirigami. Це програма, яка використовує "
"можливості Kirigami, надає посилання на початковий код, підказки щодо "
"використання компонентів, а також посилання на відповідні сторінки настанов "
"щодо зручності інтерфейсу (HIG)."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:15
#: content/docs/use/kirigami/introduction-kirigami-gallery.md:134
msgid "Tip"
msgstr "Підказка"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:17
msgid ""
"Before continuing please install Kirigami Gallery. It should already be in "
"the repository of your Linux distribution."
msgstr ""
"Перш ніж продовжувати, встановіть Галерею Kirigami. Відповідні пакунки можна "
"знайти у сховищах пакунків вашого дистрибутива Linux."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:22
msgid "Find a card grid"
msgstr "Пошук таблиці карток"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:24
msgid ""
"Navigating through the Kirigami Gallery application, we will stumble upon "
"the \"Grid view of cards\" gallery component. This is a good candidate for "
"example to display a grid of contact cards."
msgstr ""
"Здійснюючи навігацію програмою «Галерея Kirigami», ми знаходимо компонент "
"«Режим таблиці карток» («Grid view of cards»). Це чудовий кандидат для "
"прикладу показу таблиці карток контактів."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:28
msgid "![List of kirigami gallery components](components.png)"
msgstr "![Список компонентів галереї kirigami](components.png)"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:30
msgid ""
"After selecting the \"Grid view of cards\" gallery component, we will click "
"to the bottom action and we will get some useful information about the Card "
"and Abstract Card types."
msgstr ""
"Після вибору пункту «Grid view of cards» ми натиснемо нижню кнопку дії і "
"отримаємо певні корисні відомості щодо типів Card і Abstract Card."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:33
msgid "![Kirigami gallery grid view](cards.png)"
msgstr "![Панель таблиці галереї Kirigami](cards.png)"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:35
msgid ""
"In this information dialog we will also find a link to the source code of "
"the Cards Grid View. Let's navigate to this page."
msgstr ""
"У цьому вікні відомостей ми також знайдемо посилання на початковий код "
"панелі таблиці карток. Перейдемо до цієї сторінки."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:38
msgid "Implement the card grid"
msgstr "Реалізація таблиці карток"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:40
msgid ""
"We will reuse most of the code found in the Cards Grid View Gallery [source "
"code page](https://invent.kde.org/sdk/kirigami-gallery/-/blob/master/src/"
"data/contents/ui/gallery/CardsGridViewGallery.qml). In particular, we will "
"remove the extra parts of the OverlaySheet (which is the implementation of "
"the Kirigami Gallery that helped us reach the kirigami-gallery source code "
"repository)."
msgstr ""
"Ми повторно використаємо більшу частину коду, який зберігається на [сторінці "
"початкового коду](https://invent.kde.org/sdk/kirigami-gallery/-/blob/master/"
"src/data/contents/ui/gallery/CardsGridViewGallery.qml) галереї панелі "
"таблиці карток. Зокрема, ми вилучимо зайві частини OverlaySheet (який є "
"реалізацією галереї Kirigami, яка допомогла нам дістатися сховища "
"початкового коду kirigami-gallery)."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:45
msgid ""
"So, we are going to substitute the Page component of main.qml of the "
"skeleton app with the below Scrollable Page:"
msgstr ""
"Отже, ми маємо намір замінити компонент Page main.qml базової програми "
"наведеними нижче кодом сторінки із гортанням:"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:64
msgid ""
"What we have done so far is to create a [ScrollablePage](docs:kirigami2;"
"ScrollablePage) and put a [CardsGridView](docs:kirigami2;CardsGridView) into "
"it, since we want to display a grid of Cards generated from a model. The "
"data of each contact is provided by a [ListModel](https://doc.qt.io/qt-5/qml-"
"qtqml-models-listmodel.html) while the card delegate is responsible for the "
"presentation of the data. For more info about models and views in Qt Quick, "
"see [here](https://doc.qt.io/qt-5/qtquick-modelviewsdata-modelview.html)."
msgstr ""
"Ми вже створили [ScrollablePage](docs:kirigami2;ScrollablePage) і вставили "
"до нього [CardsGridView](docs:kirigami2;CardsGridView), оскільки нам "
"потрібно показати таблицю карток, створену на основі моделі. Дані кожного з "
"контактів надаються [ListModel](https://doc.qt.io/qt-5/qml-qtqml-models-"
"listmodel.html>), а за показ даних відповідає делегат картки. Щоб дізнатися "
"більше про моделі і панелі перегляду у Qt Quick, зверніться до [цієї "
"сторінки](https://doc.qt.io/qt-5/qtquick-modelviewsdata-modelview.html)."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:70
msgid ""
"Now let's populate the model that will feed our grid view with data. In "
"[Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage) definition, just "
"after:"
msgstr ""
"Тепер заповнимо модель, яка надаватиме вашій панелі таблиці дані. У "
"визначенні [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage), одразу "
"після:"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:79
msgid "add the below:"
msgstr "додайте таке:"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:92
msgid ""
"The model part of our implementation is ready. Let's proceed to defining a "
"delegate that will be responsible for displaying the data. So, we add the "
"following code to the main.qml page, just after the Component.onCompleted "
"definition:"
msgstr ""
"Частина нашої реалізації, пов'язана із моделлю, готова. Продовжимо "
"визначенням делегата, який відповідатиме за показ даних. Отже, ми додаємо "
"такий код на сторінку main.qml одразу після визначення Component.onCompleted:"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:126
msgid ""
"Following the related information on the [api page](docs:kirigami2;Card) we "
"populate a \"banner\" (although without an image yet), that will act as a "
"header that will display the name of the contact as well as a contact icon."
msgstr ""
"Виконуючи настанови на [сторінці програмного інтерфейсу](docs:kirigami2;"
"Card) ми заповнюємо «банер» (хоча ще не маємо зображення), який слугуватиме "
"верхнім колонтитулом, який показуватиме ім'я контакту, а також піктограму "
"контакту."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:128
msgid ""
"The main content of the card has been populated with the cell phone number "
"and the email of the contact, structured as a [column](https://doc.qt.io/"
"qt-5/qml-qtquick-column.html) of [labels](https://doc.qt.io/qt-5/qml-qtquick-"
"controls2-label.html)."
msgstr ""
"Основний вміст картки заповнюватиметься номером мобільного телефону та "
"адресою електронної пошти контакту із структуруванням за [стовпчиком]"
"(https://doc.qt.io/qt-5/qml-qtquick-column.html) [міток](https://doc.qt.io/"
"qt-5/qml-qtquick-controls2-label.html)."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:130
msgid "The application should look like this:"
msgstr "Вікно програми має виглядати так:"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:132
msgid "![Simple grid of cards](implementation.png)"
msgstr "![Проста таблиця карток](implementation.png)"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:136
msgid ""
"You can find the full source code of the tutorial at [invent.kde.org]"
"(https://invent.kde.org/dkardarakos/kirigami-tutorial)."
msgstr ""
"Повний початковий код підручника можна знайти на [invent.kde.org](https://"
"invent.kde.org/dkardarakos/kirigami-tutorial)."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:140
msgid ""
"As a last step we will add some dummy functionality to each card. In "
"particular, a \"call\" action will be added. Nevertheless, instead of a real "
"call, a passive notification will be displayed. So, let's change the card "
"Component to the following:"
msgstr ""
"На останньому кроці ми додамо певну фіктивну функціональність для кожної "
"картки. Зокрема, буде додано дію «call» («виклик»). Замість реального "
"виклику буде показано пасивне сповіщення. Отже, змінимо компонент картки на "
"таке:"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:184
msgid ""
"So, we added an [action](docs:kirigami2;Action) that, as soon as it is "
"triggered (by pressing the action button), a [passive notification](docs:"
"kirigami2;AbstractApplicationWindow) is displayed."
msgstr ""
"Отже, нами додано [кнопку дії](docs:kirigami2;Action), яка при вмиканні "
"(натисканні кнопки дії) покаже [пасивне сповіщення](docs:kirigami2;"
"AbstractApplicationWindow)."

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:187
msgid "Finally, our application should look like this:"
msgstr "Нарешті, вікно нашої програми має виглядати так:"

#: content/docs/use/kirigami/introduction-kirigami-gallery.md:189
msgid "![Grid with calling action triggered](implementation-actions.png)"
msgstr "![Таблиця із увімкненою дією виклику](implementation-actions.png)"

#: content/docs/use/kirigami/introduction-listviews.md:0
msgid "Layouts, ListViews, and Cards"
msgstr "Компонування, панелі списків і картки"

#: content/docs/use/kirigami/introduction-listviews.md:0
msgid "Figuring out the different ways of placing things on a page"
msgstr "Розбираємося із різними способами розташовування елементів на сторінці"

#: content/docs/use/kirigami/introduction-listviews.md:9
#: content/docs/use/kirigami/style-typography.md:0
msgid "Laying out your content"
msgstr "Компонування ваших даних"

#: content/docs/use/kirigami/introduction-listviews.md:11
msgid ""
"Now that we understand how pages work, it is time to add stuff to ours. We "
"will be going through a number of important layout components and elements "
"that will be useful when designing our app."
msgstr ""
"Тепер, коли ми вже розуміємо, як працюють сторінки, час додати можливості до "
"наших. Ми розглянемо декілька важливих компонентів та елементів "
"компонування, які будуть корисними при створенні дизайну нашої програми."

#: content/docs/use/kirigami/introduction-listviews.md:13
msgid ""
"Don't be scared by the big chunks of code! We'll be going over everything "
"that we haven't covered before, and by the end of this section you'll have a "
"neat-looking app."
msgstr ""
"Не лякайтеся великих фрагментів коду! Ми розберемо усе, що ми ще не "
"обговорювали раніше, і наприкінці цього розділу ви матимете програму, яка "
"виглядатиме лаконічно."

#: content/docs/use/kirigami/introduction-listviews.md:15
msgid "ListViews"
msgstr "ListView"

#: content/docs/use/kirigami/introduction-listviews.md:17
msgid ""
"If you've ever used Discover, NeoChat, or Plasma's System Settings, you will "
"have come across a ListView. Quite simply, ListViews let you display data on "
"a list."
msgstr ""
"Якщо ви колись користувалися Discover, NeoChat або Системними параметрами "
"Плазми, ви вже бачили ListView. Доволі прості, ListView надають вам змогу "
"показувати дані у форматі списку."

#: content/docs/use/kirigami/introduction-listviews.md:28
msgid "That seems cryptic, but don't worry. Let's start from the top."
msgstr ""
"Це може здатися якимось шифром, але не переймайтеся. Розпочнімо з верхньої "
"частини."

#: content/docs/use/kirigami/introduction-listviews.md:30
msgid ""
"The first thing you'll notice is that we're using `Kirigami.CardsListView`. "
"This is a ListView that allows us to easily display cards in a list. "
"However, ListViews are made to show data taken from a model - to "
"automatically populate itself from a set of data that we point it to. That's "
"where the `model` property comes in: in this example, it's pointing to "
"`kountdownModel`."
msgstr ""
"Першим, що чи зауважите, є те, що ми скористалися `Kirigami.CardsListView`. "
"Це ListView, який надає нам змогу просто показувати картки у форматі списку. "
"Втім, ListView створено для показу даних, які взято з моделі — для "
"автоматичного заповнення списку набором даних, які ми вказали. Ось тут нам "
"стане у пригоді властивість `model` — у нашому прикладі, вона вказує на "
"`kountdownModel`."

#: content/docs/use/kirigami/introduction-listviews.md:32
msgid "Model"
msgstr "Модель"

#: content/docs/use/kirigami/introduction-listviews.md:37
msgid "Each ListElement is an element on the list, containing information"
msgstr "Кожне з ListElement є елементом списку, що містить дані"

#: content/docs/use/kirigami/introduction-listviews.md:42
msgid ""
"A model defines the way that a data entry is structured. By looking at our "
"ListElement above we can see how elements of kountdownModel are structured: "
"they contain a name, a description, and a date. The first two are just "
"strings, and the third is a number we're using as a placeholder."
msgstr ""
"Модель визначає спосіб, у який структуровано запис даних. Структурування "
"елементів kountdownModel можна бачити у нашому ListElement: вони містять "
"назву, опис і дату. Перші два елементи є лише рядками, а третій є числом, "
"яким ми користуємося як замінником."

#: content/docs/use/kirigami/introduction-listviews.md:48
msgid ""
"Models are also useful in how they can be modified through the use of "
"several methods. Some important ones are:"
msgstr ""
"Крім того, моделі є корисними через те, як їх можна змінювати, "
"використовуючи декілька методів. Серед важливих методів такі:"

#: content/docs/use/kirigami/introduction-listviews.md:49
msgid ""
"ListModelName.append(jsobject yourobject) adds a JavaScript object you "
"provide to the ListModel, and places it after the last item in the model. "
"For this to happen correctly, you must provide a JavaScript Object with the "
"correct properties and corresponding datatypes."
msgstr ""
"ListModelName.append(jsobject ваш_об'єкт) додає вказаний вами об'єкт "
"JavaScript до ListModel і розташовує його після останнього запису у моделі. "
"Щоб це відбувалося належним чином, вам слід надати об'єкт JavaScript із "
"належними властивостями і відповідними типами даних."

#: content/docs/use/kirigami/introduction-listviews.md:50
msgid ""
"ListModelName.get(int index) returns the JSObject at the index location you "
"provide."
msgstr ""
"ListModelName.get(int індекс) повертає JSObject із наданим індексом "
"розташування."

#: content/docs/use/kirigami/introduction-listviews.md:51
msgid ""
"ListModelName.remove(int index, int count) removes the JSObject at the "
"provided index location, and as many after that index location as you wish "
"(1 includes only the JSObject at the provided index)"
msgstr ""
"ListModelName.remove(int індекс, int кількість) вилучає JSObject із наданим "
"індексом розташування і вказану кількість об'єктів після нього (1 включає "
"лише JSObject із наданим індексом)"

#: content/docs/use/kirigami/introduction-listviews.md:52
msgid ""
"ListModelName.set(int index, jsobject yourobject) changes the item at the "
"provided index location with the values provided in yourobject. Same rules "
"as with `.append`."
msgstr ""
"ListModelName.set(int індекс, jsobject ваш_об'єкт) замінює значення запису "
"із наданим індексом розташування значеннями наданого вами об'єкта "
"ваш_об'єкт. Ті самі правила, що і для `.append`."

#: content/docs/use/kirigami/introduction-listviews.md:54
msgid "Delegate"
msgstr "Делегат"

#: content/docs/use/kirigami/introduction-listviews.md:56
msgid ""
"The delegate handles how your ListModel's data will be displayed in the "
"ListView. CardsListView elements are designed with card-type delegates in "
"mind, and we have indeed used a `Kirigami.AbstractCard` element as our "
"delegate in the excerpt above."
msgstr ""
"Делегат керує тим, як ваші дані ListModel буде показано у ListView. Елементи "
"CardsListView створено зручними для використання із делегатами типу карток, "
"і справді, ми скористалися елементом `Kirigami.AbstractCard` як нашим "
"делегатом у наведеному вище фрагменті коду."

#: content/docs/use/kirigami/introduction-listviews.md:58
msgid ""
"Delegates automatically receive the properties of the ListElements that we "
"have specified in our model. We can therefore just refer to the `name`, "
"`description`, and `date` properties of our ListElements as if they were a "
"conventional variable within our delegate."
msgstr ""
"Делегати автоматично отримують властивості ListElement, які вказано у нашій "
"моделі. Тому ми можемо просто посилатися на властивості `name`, "
"`description` і `date` наших ListElement так, наче це була б звичайна змінна "
"у нашому делегаті."

#: content/docs/use/kirigami/introduction-listviews.md:60
msgid "Building our delegate card"
msgstr "Побудова нашої делегованої картки"

#: content/docs/use/kirigami/introduction-listviews.md:67
msgid ""
"implicitWidth/Height define the natural width/height of an item if no width "
"or height is specified. The setting below defines a component's preferred "
"size based on its content"
msgstr ""
"implicitWidth/Height визначають природну ширину і висоту пункту, якщо ширину "
"або висоту не вказано явним чином. Наведений нижче код визначає бажані "
"розміри компонента на основі його вмісту."

#: content/docs/use/kirigami/introduction-listviews.md:109
msgid "onClicked: to be done... soon!"
msgstr "onClicked: буде зроблено… невдовзі!"

#: content/docs/use/kirigami/introduction-listviews.md:117
msgid "implicitWidth and implicitHeight"
msgstr "implicitWidth та implicitHeight"

#: content/docs/use/kirigami/introduction-listviews.md:133
msgid ""
"Looking at our Kirigami.AbstractCard, the first properties we set are "
"`implicitWidth` and `implicitHeight`. We have set these to the "
"`delegateLayout.implicitWidth` and `delegateLayout.implicitHeight`, i.e. the "
"`implicitWidth` and `implicitHeight` of the `GridLayout` element. Implicit "
"widths and heights are properties that are set as a sort of default, i.e. if "
"there is no explicit width or height set for these components. We have "
"therefore set the `implicitWidth` and `implicitHeight` of our `Kirigami."
"AbstractCard` to that of the `GridLayout` below to ensure the `GridLayout` "
"does not spill out of the card."
msgstr ""
"Розглядаючи наш Kirigami.AbstractCard, першими встановленими нами "
"властивостями є `implicitWidth` і `implicitHeight`. Ми надаємо їм значення "
"`delegateLayout.implicitWidth` і `delegateLayout.implicitHeight`, тобто "
"`implicitWidth` і `implicitHeight` елемента `GridLayout`. Неявними ширинами "
"і висотами є властивості, які встановлено подібно до типових, тобто якщо "
"немає явно заданих ширини і висоти для цих компонентів. Тому ми встановили "
"для `implicitWidth` і `implicitHeight` нашого `Kirigami.AbstractCard` у "
"значення `GridLayout` нижче, щоб `GridLayout` не розповзся за картку."

#: content/docs/use/kirigami/introduction-listviews.md:135
msgid "Layouts"
msgstr "Компонування"

#: content/docs/use/kirigami/introduction-listviews.md:137
msgid ""
"The `GridLayout` is inside the `Item` component we have provided for the "
"property `contentItem`. This is the item that contains what will be "
"displayed in your card."
msgstr ""
"`GridLayout` перебуває всередині компонента `Item`, який надано для "
"властивості `contentItem`. Це запис, який містить те, що буде показано у "
"вашій картці."

#: content/docs/use/kirigami/introduction-listviews.md:139
msgid ""
"We also need to choose a layout for our components so that they don't just "
"pile on top of each other. There are three main types that we can choose "
"from:"
msgstr ""
"Нам також потрібно вибрати компонування для наших компонентів так, щоб вони "
"не просто накопичувалися один над одним. Існує три основних типи, один з "
"яких ми можемо вибрати:"

#: content/docs/use/kirigami/introduction-listviews.md:140
msgid "`ColumnLayout` lays out your components vertically, in a single column"
msgstr "`ColumnLayout` розташовує ваші компоненти вертикально, у один стовпчик"

#: content/docs/use/kirigami/introduction-listviews.md:141
msgid "`RowLayout` lays out your components horizontally, in a single row"
msgstr "`RowLayout` розкладає ваші компоненти горизонтально у один рядок"

#: content/docs/use/kirigami/introduction-listviews.md:142
msgid ""
"`GridLayout` lays out your components in a grid with a composition of your "
"choosing"
msgstr ""
"`GridLayout` розкладає ваші компоненти у таблицю із вибраним вами "
"компонуванням"

#: content/docs/use/kirigami/introduction-listviews.md:144
msgid ""
"With ColumnLayout and RowLayout, all we have to do is write our components "
"inside the Layout component. As you can see, we went with a grid layout, "
"which entails a bit more handiwork."
msgstr ""
"З ColumnLayout і RowLayout усе, що нам слід зробити, — це записати наші "
"компоненти всередину компонента Layout. Як ви можете бачити, ми використали "
"табличне компонування, що потребує додаткового опису вручну."

#: content/docs/use/kirigami/introduction-listviews.md:163
msgid ""
"The first thing you see is our `anchor`. QtQuick's anchoring system provides "
"a useful way of making sure your components are positioned on certain parts "
"of a parent component. We have anchored our `GridLayout` to the left, top, "
"and right of the parent card, ensuring our content stretches across the "
"whole card."
msgstr ""
"Першим, що ви бачите, є наш `anchor`. Система прив'язок QtQuick надає "
"зручний спосіб визначення розташування ваших компонентів у певних місцях "
"батьківського компонента. Ми прив'язали наш `GridLayout` ліворуч, згори і "
"праворуч до батьківської картки, забезпечивши розтягування вмісту на усю "
"картку."

#: content/docs/use/kirigami/introduction-listviews.md:165
msgid ""
"Next we specify the spacing between the rows and columns within our grid, so "
"that our components don't bunch up. Kirigami provides a number of handy pre-"
"defined units to use for this purpose:"
msgstr ""
"Далі, ми вказали інтервал між рядками і стовпчиками у нашій таблиці, щоб "
"наші компоненти не накладалися один на одного. У Kirigami передбачено "
"декілька зручних попередньо визначених одиниць для використання з цією метою:"

#: content/docs/use/kirigami/introduction-listviews.md:167
msgid "Kirigami Unit"
msgstr "Одиниця Kirigami"

#: content/docs/use/kirigami/introduction-listviews.md:167
msgid "Pixels"
msgstr "Пікселі"

#: content/docs/use/kirigami/introduction-listviews.md:169
msgid "smallSpacing"
msgstr "smallSpacing"

#: content/docs/use/kirigami/introduction-listviews.md:169
msgid "4px"
msgstr "4px"

#: content/docs/use/kirigami/introduction-listviews.md:170
msgid "largeSpacing"
msgstr "largeSpacing"

#: content/docs/use/kirigami/introduction-listviews.md:170
msgid "8px"
msgstr "8px"

#: content/docs/use/kirigami/introduction-listviews.md:171
msgid "gridUnit"
msgstr "gridUnit"

#: content/docs/use/kirigami/introduction-listviews.md:171
msgid "18px"
msgstr "18px"

#: content/docs/use/kirigami/introduction-listviews.md:177
msgid ""
"We have also used a conditional here to vary the number of columns in our "
"grid depending on the screen we are using. If we are using a widescreen (i."
"e. a computer monitor or a phone in landscape) the grid will have 4 columns, "
"else it will have 2."
msgstr ""
"Тут ми також скористалися умовою для варіювання кількості стовпчиків у нашій "
"таблиці залежно від параметрів використаного екрана. Якщо використано "
"широкий екран (тобто монітор комп'ютера або телефон у альбомному режимі) у "
"таблиці буде 4 стовпчики, інакше стовпчиків буде 2."

#: content/docs/use/kirigami/introduction-listviews.md:179
msgid "Interior components"
msgstr "Внутрішні компоненти"

#: content/docs/use/kirigami/introduction-listviews.md:181
msgid ""
"We could just create three labels within our delegate component and call it "
"a day. But that wouldn't look particularly nice."
msgstr ""
"Ми могли б просто створити три мітки у нашому компоненті-делегаті, і все. "
"Але це не виглядало б аж надто привабливо."

#: content/docs/use/kirigami/introduction-listviews.md:221
msgid "![](CardDesign.png)"
msgstr "![](CardDesign.png)"

#: content/docs/use/kirigami/introduction-listviews.md:223
msgid ""
"Left, `Kirigami.Heading`: uses the `ListElement`'s `date` as a level 1 "
"heading."
msgstr ""
"Ліворуч, `Kirigami.Heading`: використовує `date` з `ListElement` як "
"заголовок першого рівня."

#: content/docs/use/kirigami/introduction-listviews.md:225
msgid ""
"Middle, `ColumnLayout`: has a `Kirigami.Heading` that displays the task "
"name; a `Kirigami.Separator`, which provides the horizontal line; and a "
"`Controls.Label`, that displays a task's optional description. The latter "
"two components have a `visible` property, which checks if the description is "
"empty or not and displays the components depending on the result of "
"`description.length > 0`."
msgstr ""
"Посередині, `ColumnLayout`: містить `Kirigami.Heading`, де показано назву "
"завдання; `Kirigami.Separator`, який додає горизонтальну лінію; і `Controls."
"Label`, який показу необов'язковий опис завдання. Останні два компоненти "
"мають властивість `visible`, значення якої визначається перевіркою того, чи "
"є порожнім опис, — компоненти буде показано, залежно від результату "
"перевірки`description.length > 0`."

#: content/docs/use/kirigami/introduction-listviews.md:227
msgid "Right, `Controls.Button`: a button that will do something... soon!"
msgstr "Праворуч, `Controls.Button`: кнопка, яка щось робитиме… невдовзі!"

#: content/docs/use/kirigami/introduction-listviews.md:229
msgid "Our app so far"
msgstr "Наша програма на поточний момент"

#: content/docs/use/kirigami/introduction-listviews.md:231
msgid "![](Screenshot.png)"
msgstr "![](Screenshot.png)"

#: content/docs/use/kirigami/introduction-listviews.md:233
msgid "So there is our basic card!"
msgstr "Отже, маємо нашу базову картку!"

#: content/docs/use/kirigami/introduction-listviews.md:235
msgid ""
"With these steps, we have now laid the basic groundwork for adding all the "
"functionality to our app."
msgstr ""
"Виконанням цих кроків ми заклали підвалини для додавання функціональних "
"можливостей до нашої програми."

#: content/docs/use/kirigami/introduction-next_steps.md:0
msgid "Next steps"
msgstr "Наступні кроки"

#: content/docs/use/kirigami/introduction-next_steps.md:0
msgid "What to do after finishing your first simple Kirigami application\n"
msgstr ""
"Що робити після завершення роботи над вашою першою простою програмою "
"Kirigami\n"

#: content/docs/use/kirigami/introduction-next_steps.md:11
msgid "What we have built"
msgstr "Що ми побудували?"

#: content/docs/use/kirigami/introduction-next_steps.md:13
msgid ""
"Over the past few tutorials you have built a basic but functional Kirigami "
"application that lets you add, edit, and delete date countdowns. In doing so "
"we have learned about Kirigami and QtQuick components, some of QML's "
"systems, basic application layouts, and more. Not bad at all!"
msgstr ""
"У декількох останніх розділах підручника ми побудували базову, але "
"функціональну програму Kirigami, за допомогою якої ви можете додавати, "
"редагувати та вилучати відліки за датами. Роблячи це, ми навчилися "
"користуватися компонентами Kirigami і QtQuick, познайомилися із деякими "
"системами QML, базовими компонуваннями інтерфейсу програми тощо. І це добре!"

#: content/docs/use/kirigami/introduction-next_steps.md:15
msgid ""
"You now have a grasp of the basics that make up many of KDE's most popular "
"applications. You might be asking yourself: what now?"
msgstr ""
"Тепер ви маєте базові знання щодо того, з чого складається багато "
"найпопулярніших програм KDE. Можливо, у вас виникло питання: «І що ж тепер?»"

#: content/docs/use/kirigami/introduction-next_steps.md:17
msgid ""
"Well, don't worry: we have taken the time to provide some pointers as to "
"where you can go from here."
msgstr ""
"Добре, не хвилюйтеся: ми вже подумали про подальші шляхи розвитку ваших "
"знань."

#: content/docs/use/kirigami/introduction-next_steps.md:19
msgid "Contributing to KDE projects"
msgstr "Участь у проєктах KDE"

#: content/docs/use/kirigami/introduction-next_steps.md:21
msgid ""
"One of the best ways to improve your development skills is by putting them "
"into practice. KDE's community is welcoming and always looking for more "
"passionate developers!"
msgstr ""
"Одним з найкращих способів удосконалення навичок з розробки є їхнє практичне "
"використання. Спільнота KDE буде завжди рада появі нових відданих "
"розробників!"

#: content/docs/use/kirigami/introduction-next_steps.md:23
msgid ""
"We have several pieces of documentation that can help guide you towards "
"becoming a contributor. We recommend you take a look at the developer-"
"specific section of [our 'Get Involved' guide](https://community.kde.org/"
"Get_Involved/development) which can help you learn more about the KDE "
"Community's development workflow. We also recommend you take a look at our "
"documentation for KDE's GitLab instance, called [Invent](https://community."
"kde.org/Infrastructure/GitLab), as you will likely need to interact with it "
"during the development process. The KDE Community interacts mainly through "
"Matrix, and we also have [a page on the community wiki](https://community."
"kde.org/Matrix) that will guide you with setting up with your very own "
"account."
msgstr ""
"Маємо декілька джерел документації, які можуть допомогти вам зробити перші "
"кроки. Ми рекомендуємо переглянути призначений для розробників розділ [наших "
"настанов щодо початку роботи над проєктом](https://community.kde.org/"
"Get_Involved/development). Ці настанови можуть розширити ваші знання щодо "
"принципів розробки у спільноті KDE. Ми також рекомендуємо вам ознайомитися "
"із документацією до екземпляра GitLab KDE, який має назву [Invent](https://"
"community.kde.org/Infrastructure/GitLab), оскільки вам, ймовірно, доведеться "
"працювати із ним під час процесу розробки. Учасники спільноти KDE "
"спілкуються переважно у Matrix, також у нас є [сторінка у вікі спільноти]"
"(https://community.kde.org/Matrix), на якій наведено настанови щодо "
"налаштовування середовища із вашим власним обліковим записом."

#: content/docs/use/kirigami/introduction-next_steps.md:29
msgid ""
"With your newfound skills you are in a good position to begin contributing "
"to Kirigami projects. Thankfully, many of KDE's most popular applications "
"and components are built with this framework. Here are a list of projects "
"you are welcome to help with."
msgstr ""
"Із набутими вами знаннями вам буде просто почати робити внесок до проєктів "
"Kirigami. На щастя, багато з найпопулярніших програм і компонентів KDE "
"побудовано за допомогою саме цієї бібліотеки. Нижче наведено список "
"проєктів, які будуть раді вашій допомозі."

#: content/docs/use/kirigami/introduction-next_steps.md:31
msgid "Beginner-friendly Kirigami projects"
msgstr "Зручні для початківців проєкти Kirigami"

#: content/docs/use/kirigami/introduction-next_steps.md:33
#: content/docs/use/kirigami/introduction-next_steps.md:42
msgid "Project"
msgstr "Проєкт"

#: content/docs/use/kirigami/introduction-next_steps.md:33
#: content/docs/use/kirigami/introduction-next_steps.md:42
msgid "What it is"
msgstr "Призначення"

#: content/docs/use/kirigami/introduction-next_steps.md:33
#: content/docs/use/kirigami/introduction-next_steps.md:42
msgid "Links"
msgstr "Посилання"

#: content/docs/use/kirigami/introduction-next_steps.md:35
msgid ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.calindori.svg\" width="
"\"50\" height=\"50\"><br />Calindori"
msgstr ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.calindori.svg\" width="
"\"50\" height=\"50\"><br />Calindori"

#: content/docs/use/kirigami/introduction-next_steps.md:35
msgid "A touch friendly calendar application designed for mobile devices"
msgstr "Зручна на сенсорних екранах програма-календар для мобільних пристроїв"

#: content/docs/use/kirigami/introduction-next_steps.md:35
msgid ""
"[KDE Apps page](https://apps.kde.org/en/calindori)<br />[KDE Invent page]"
"(https://invent.kde.org/plasma-mobile/calindori)"
msgstr ""
"[Сторінка на KDE Apps](https://apps.kde.org/en/calindori)<br />[Сторінка на "
"KDE Invent](https://invent.kde.org/plasma-mobile/calindori)"

#: content/docs/use/kirigami/introduction-next_steps.md:36
msgid ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.kdeconnect.kcm.svg\" width="
"\"50\" height=\"50\"><br />KDE Connect"
msgstr ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.kdeconnect.kcm.svg\" width="
"\"50\" height=\"50\"><br />KDE Connect"

#: content/docs/use/kirigami/introduction-next_steps.md:36
msgid ""
"A multi-platform app that allows your devices to communicate (eg: your phone "
"and your computer)."
msgstr ""
"Багатоплатформова програма, за допомогою якої пристрої (наприклад ваш "
"телефон і комп'ютер) можуть обмінюватися даними"

#: content/docs/use/kirigami/introduction-next_steps.md:36
msgid ""
"[Home page](https://kdeconnect.kde.org/)<br />[KDE Community Wiki page]"
"(https://community.kde.org/KDEConnect)<br />[KDE Invent page](https://invent."
"kde.org/network/kdeconnect-kde)"
msgstr ""
"[Домашня сторінка](https://kdeconnect.kde.org/)<br />[Сторінка у вікі "
"спільноти KDE](https://community.kde.org/KDEConnect)<br />[Сторінка на KDE "
"Invent](https://invent.kde.org/network/kdeconnect-kde)"

#: content/docs/use/kirigami/introduction-next_steps.md:37
msgid ""
"<img src=\"https://invent.kde.org/graphics/koko/-/raw/master/logo.png\" "
"width=\"50\" height=\"50\"><br />Koko"
msgstr ""
"<img src=\"https://invent.kde.org/graphics/koko/-/raw/master/logo.png\" "
"width=\"50\" height=\"50\"><br />Koko"

#: content/docs/use/kirigami/introduction-next_steps.md:37
msgid "An image viewer designed for desktop and touch devices."
msgstr ""
"Програма для перегляду зображень на комп'ютерах та сенсорних пристроях."

#: content/docs/use/kirigami/introduction-next_steps.md:37
msgid ""
"[Userbase page](https://userbase.kde.org/Koko)<br />[KDE Invent page]"
"(https://invent.kde.org/graphics/koko)"
msgstr ""
"[Сторінка у Userbase](https://userbase.kde.org/Koko)<br />[Сторінка на KDE "
"Invent](https://invent.kde.org/graphics/koko)"

#: content/docs/use/kirigami/introduction-next_steps.md:38
msgid ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.kontrast.svg\" width="
"\"50\" height=\"50\"><br />Kontrast"
msgstr ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.kontrast.svg\" width="
"\"50\" height=\"50\"><br />Kontrast"

#: content/docs/use/kirigami/introduction-next_steps.md:38
msgid ""
"A color contrast checker that tells you if your color combinations are "
"accessible for people with color vision deficiencies."
msgstr ""
"Засіб для перевірки контрастності кольорів. Програма повідомить вам, чи є "
"поєднання кольорів достатньо контрастним для людей із вадами розрізнення "
"кольорів."

#: content/docs/use/kirigami/introduction-next_steps.md:38
msgid ""
"[KDE Apps page](https://apps.kde.org/en/kontrast)<br />[KDE Invent page]"
"(https://invent.kde.org/accessibility/kontrast)"
msgstr ""
"[Сторінка на KDE Apps](https://apps.kde.org/en/kontrast)<br />[Сторінка на "
"KDE Invent](https://invent.kde.org/accessibility/kontrast)"

#: content/docs/use/kirigami/introduction-next_steps.md:40
msgid "More complex Kirigami projects"
msgstr "Складніші проєкти на Kirigami"

#: content/docs/use/kirigami/introduction-next_steps.md:44
msgid ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.discover.svg\" width="
"\"50\" height=\"50\"><br />Discover"
msgstr ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.discover.svg\" width="
"\"50\" height=\"50\"><br />Discover"

#: content/docs/use/kirigami/introduction-next_steps.md:44
msgid ""
"An application that helps you find and install applications, games, and "
"tools."
msgstr ""
"Програма, яка допоможе вам знаходити і встановлювати програми, ігри та "
"робочі інструменти."

#: content/docs/use/kirigami/introduction-next_steps.md:44
msgid ""
"[KDE Apps page](https://apps.kde.org/en/discover)<br />[KDE Userbase page]"
"(https://userbase.kde.org/Discover)<br />[KDE Invent page](https://invent."
"kde.org/plasma/discover)"
msgstr ""
"[Сторінка на KDE Apps](https://apps.kde.org/en/discover)<br />[Сторінка у "
"KDE Userbase](https://userbase.kde.org/Discover)<br />[Сторінка на KDE "
"Invent](https://invent.kde.org/plasma/discover)"

#: content/docs/use/kirigami/introduction-next_steps.md:45
msgid ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.elisa.svg\" width=\"50\" "
"height=\"50\"><br />Elisa"
msgstr ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.elisa.svg\" width=\"50\" "
"height=\"50\"><br />Elisa"

#: content/docs/use/kirigami/introduction-next_steps.md:45
msgid "A music player that strives to be simple and nice to use."
msgstr "Проста і приємна у користуванні програма для відтворення музики."

#: content/docs/use/kirigami/introduction-next_steps.md:45
msgid ""
"[Home page](https://elisa.kde.org/)<br />[KDE Apps page](https://apps.kde."
"org/en/elisa)<br />[KDE Community Wiki page](https://community.kde.org/"
"KDEConnect)<br />[KDE Invent page](https://invent.kde.org/multimedia/elisa)"
msgstr ""
"[Домашня сторінка](https://elisa.kde.org/)<br />[Сторінка на KDE Apps]"
"(https://apps.kde.org/en/elisa)<br />[Сторінка у вікі спільноти KDE](https://"
"community.kde.org/KDEConnect)<br />[Сторінка на KDE Invent](https://invent."
"kde.org/multimedia/elisa)"

#: content/docs/use/kirigami/introduction-next_steps.md:46
msgid ""
"<img src=\"https://invent.kde.org/utilities/kongress/-/raw/master/org.kde."
"kongress.svg\" width=\"50\" height=\"50\"><br />Kongress"
msgstr ""
"<img src=\"https://invent.kde.org/utilities/kongress/-/raw/master/org.kde."
"kongress.svg\" width=\"50\" height=\"50\"><br />Kongress"

#: content/docs/use/kirigami/introduction-next_steps.md:46
msgid "A companion application for conference attendees."
msgstr "Програма-компаньйон для відвідувачів конференцій."

#: content/docs/use/kirigami/introduction-next_steps.md:46
msgid "[KDE Invent page](https://invent.kde.org/utilities/kongress)"
msgstr "[Сторінка на KDE Invent](https://invent.kde.org/utilities/kongress)"

#: content/docs/use/kirigami/introduction-next_steps.md:47
msgid ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.neochat.svg\" width=\"50\" "
"height=\"50\"><br />NeoChat"
msgstr ""
"<img src=\"https://apps.kde.org/app-icons/org.kde.neochat.svg\" width=\"50\" "
"height=\"50\"><br />NeoChat"

#: content/docs/use/kirigami/introduction-next_steps.md:47
msgid ""
"A client for Matrix, the decentralized communication protocol for instant "
"messaging."
msgstr ""
"Клієнт для Matrix — децентралізованого протоколу обміну даними для миттєвого "
"обміну повідомленнями."

#: content/docs/use/kirigami/introduction-next_steps.md:47
msgid ""
"[KDE Apps page](https://apps.kde.org/en/neochat)<br />[KDE Invent page]"
"(https://invent.kde.org/network/neochat)"
msgstr ""
"[Сторінка на KDE Apps](https://apps.kde.org/en/neochat)<br />[Сторінка на "
"KDE Invent](https://invent.kde.org/network/neochat)"

#: content/docs/use/kirigami/introduction-next_steps.md:49
msgid "Learning more"
msgstr "Подальше навчання"

#: content/docs/use/kirigami/introduction-next_steps.md:51
msgid "Not feeling quite ready yet? That's okay too."
msgstr "Почуваєтеся ще неготовими? Гаразд."

#: content/docs/use/kirigami/introduction-next_steps.md:53
msgid ""
"Many of the projects listed above are invaluable learning resources. You can "
"poke through the code and see how experienced developers have created fully-"
"featured applications, and use these techniques yourself."
msgstr ""
"Багато із наведених вище проєктів є безцінними ресурсами для навчання. Ви "
"можете ознайомлюватися із кодом і вчитися у досвідчених розробників тому, як "
"створювати повнофункціональні програми, а також користуватися їхніми "
"методиками у своїх програмах."

#: content/docs/use/kirigami/introduction-next_steps.md:55
msgid ""
"If you feel you need a more gentle approach, we have also compiled some "
"resources we think you might find useful."
msgstr ""
"Якщо такий підхід здається вам надто агресивним, ми зібрали деякі додаткові "
"ресурси, які можуть видатися вам корисними."

#: content/docs/use/kirigami/introduction-next_steps.md:57
msgid "The backend and C++"
msgstr "Модуль обробки і C++"

#: content/docs/use/kirigami/introduction-next_steps.md:59
msgid ""
"While we have learned a lot about QML, we haven't really touched upon how to "
"handle backend code all that much. This is, however, an essential facet of "
"KDE application development."
msgstr ""
"Хоча ми доволі багато обговорювали QML, ми, насправді, не чіпали питань, що "
"стосуються того, як працювати з кодом модуля обробки. Втім, це ключовий "
"момент розробки програм KDE."

#: content/docs/use/kirigami/introduction-next_steps.md:61
msgid "C++/Qt with Kirigami"
msgstr "C++/Qt з Kirigami"

#: content/docs/use/kirigami/introduction-next_steps.md:63
msgid ""
"In the advanced section of this Kirigami documentation we have some pages "
"that can help you get started:"
msgstr ""
"У розділі додаткових відомостей цієї документації до Kirigami міститься "
"декілька сторінок, які допоможуть вам на початковому етапі:"

#: content/docs/use/kirigami/introduction-next_steps.md:65
#: content/docs/use/kirigami/introduction-next_steps.md:75
msgid "Topic"
msgstr "Тема"

#: content/docs/use/kirigami/introduction-next_steps.md:67
msgid ""
"[Understanding CMakeLists](/docs/kirigami/advanced-understanding_cmakelists)"
msgstr ""
"[Розбираємося з CMakeLists](/docs/kirigami/advanced-understanding_cmakelists)"

#: content/docs/use/kirigami/introduction-next_steps.md:67
msgid "Learn all about CMake and how to compile your applications."
msgstr "Вивчаємо усі аспекти CMake і вчимося збирати програми."

#: content/docs/use/kirigami/introduction-next_steps.md:68
msgid "[Figuring out main.cpp](/docs/kirigami/advanced-maincpp)"
msgstr "[Розбираємося у main.cpp](/docs/kirigami/advanced-maincpp)"

#: content/docs/use/kirigami/introduction-next_steps.md:68
msgid ""
"Getting to grips with the central C++ file that handles your applications' "
"initialisation."
msgstr ""
"Знайомимося із центральним файлом мовою C++, який керуватиме ініціалізацією "
"програм."

#: content/docs/use/kirigami/introduction-next_steps.md:69
msgid ""
"[Connect logic to your QML user interface](/docs/kirigami/advanced-"
"connect_backend)"
msgstr ""
"[З'єднання логіки з вашим інтерфейсом користувача QML](/docs/kirigami/"
"advanced-connect_backend)"

#: content/docs/use/kirigami/introduction-next_steps.md:69
msgid ""
"Add advanced functionality to your Kirigami application and connect it to "
"your UI."
msgstr ""
"Додаємо функціональні можливості до програми Kirigami і з'єднуємо їх із "
"інтерфейсом користувача."

#: content/docs/use/kirigami/introduction-next_steps.md:71
msgid "Beginner C++ resources"
msgstr "Ресурси щодо C++ для початківців"

#: content/docs/use/kirigami/introduction-next_steps.md:73
msgid ""
"If you are completely new to C++ there are numerous resources available "
"throughout the web. Here are some that may be useful."
msgstr ""
"Якщо ви нічого не знаєте про мову C++, в інтернеті можна знайти численні "
"ресурси із інформацією. Тут ми наведемо лише деякі з них, які можуть бути "
"корисними."

#: content/docs/use/kirigami/introduction-next_steps.md:75
msgid "Resource"
msgstr "Ресурс"

#: content/docs/use/kirigami/introduction-next_steps.md:77
msgid "[Wikibooks C++](https://en.wikibooks.org/wiki/C%2B%2B_Programming)"
msgstr ""
"[Вікіпідручники з C++](https://en.wikibooks.org/wiki/C%2B%2B_Programming)"

#: content/docs/use/kirigami/introduction-next_steps.md:77
msgid "A comprehensive wikibook with C++ lessons and exercises"
msgstr "Повний вікіпідручник з уроками і вправами з C++"

#: content/docs/use/kirigami/introduction-next_steps.md:78
msgid "[W3Schools C++](https://www.w3schools.com/cpp/cpp_intro.asp)"
msgstr "[W3Schools C++](https://www.w3schools.com/cpp/cpp_intro.asp)"

#: content/docs/use/kirigami/introduction-next_steps.md:78
msgid "A set of C++ tutorials and other resources aimed at beginners"
msgstr "Набір покрокових підручників з C++ та інші ресурси для початківців"

#: content/docs/use/kirigami/introduction-next_steps.md:79
msgid "[LearnCpp](https://www.learncpp.com/)"
msgstr "[LearnCpp](https://www.learncpp.com/)"

#: content/docs/use/kirigami/introduction-next_steps.md:79
msgid "Tutorials to get to grips with C++"
msgstr "Покрокові підручники для ознайомлення із C++"

#: content/docs/use/kirigami/introduction-next_steps.md:80
msgid "[cppreference](https://en.cppreference.com/w/)"
msgstr "[cppreference](https://en.cppreference.com/w/)"

#: content/docs/use/kirigami/introduction-next_steps.md:80
msgid "A reference site for C++"
msgstr "Довідковий сайт з C++"

#: content/docs/use/kirigami/introduction-next_steps.md:82
msgid "Creating classic KDE applications using QtWidgets"
msgstr "Створення класичних програм KDE за допомогою QtWidgets"

#: content/docs/use/kirigami/introduction-next_steps.md:84
msgid ""
"If you'd like to work on more complex KDE applications such as Dolphin, "
"Kontact, or Kate, you will need to learn more about how to use QtWidgets, "
"which encompass a completely different way of developing user interfaces "
"with Qt. While not interchangeable with QML/Kirigami - they each have a "
"different set of tradeoffs - older and more complex KDE applications tend to "
"be built with QtWidgets."
msgstr ""
"Якщо ви хочете попрацювати над складнішими програмами KDE, зокрема Dolphin, "
"Kontact або Kate, вам знадобляться знання щодо того, як користуватися "
"QtWidgets, тобто зовсім іншого способу розробки інтерфейсів користувача за "
"допомогою Qt. Хоча цей спосіб і несумісний із QML/Kirigami — у кожному з цих "
"способів побудови інтерфейсів доводиться йти на певні компроміси, — старіші "
"і складніші програми KDE побудовано за допомогою QtWidgets."

#: content/docs/use/kirigami/introduction-next_steps.md:86
msgid ""
"QtWidgets are somewhat more daunting to work with than QML (and *much* more C"
"++ intensive!). Luckily, we have [a set of tutorials](/content/docs/"
"getting_started) in the KDE Docs that will help you become more familiar "
"with them."
msgstr ""
"QtWidgets дещо складніші у роботі, якщо порівнювати з QML (і потребують "
"*набагато* ширших знань C++!). На щастя, у нас є [набір підручників](/"
"content/docs/getting_started) у документації KDE, який допоможе вам "
"ознайомитися із потрібними темами."

#: content/docs/use/kirigami/introduction-next_steps.md:88
msgid "More QML and QtQuick"
msgstr "Більше QML і QtQuick"

#: content/docs/use/kirigami/introduction-next_steps.md:90
msgid ""
"The Qt project is extensive, and so are QML and QtQuick. There is a lot of "
"functionality we haven't covered, but there is a lot of documentation we can "
"pull from to find out more."
msgstr ""
"Проєкт Qt є досить великим, і так само великими його частинами є QML і "
"QtQuick. Ми ні слова не сказали про велику частину функціональних "
"можливостей, але існує широкий діапазон документації, з якою ми можемо "
"ознайомитися, щоб розширити наші знання."

#: content/docs/use/kirigami/introduction-next_steps.md:92
msgid ""
"If you want to look up what specific components do, look no further than "
"[Qt's official QML documentation.](https://doc.qt.io/qt-5/qtquick-index.html)"
msgstr ""
"Якщо ви хочете дізнатися, для чого призначено певні компоненти, зверніться "
"одразу до [офіційної документації з QML Qt.](https://doc.qt.io/qt-5/qtquick-"
"index.html)"

#: content/docs/use/kirigami/introduction-next_steps.md:93
msgid ""
"If you are looking for a more guided approach to learning, [the QMLBook]"
"(https://qmlbook.github.io/) is a great place to start."
msgstr ""
"Якщо ви шукаєте більш цілеспрямований підхід до вивчення питань, чудовим "
"початком буде читання [QMLBook](https://qmlbook.github.io/)."

#: content/docs/use/kirigami/introduction-next_steps.md:95
msgid "More Kirigami"
msgstr "Більше Kirigami"

#: content/docs/use/kirigami/introduction-next_steps.md:97
msgid ""
"This documentation includes a lot more about Kirigami. You can poke through "
"some of the Components pages to find out more about some of the QML "
"components that Kirigami provides for you to use."
msgstr ""
"Цю документацію в основному призначено для вивчення Kirigami. Ви можете "
"звернутися до сторінок компонентів, щоб дізнатися більше про деякі з "
"компонентів QML, як надає у ваше користування Kirigami."

#: content/docs/use/kirigami/introduction-next_steps.md:99
msgid ""
"We recommend you also take a look at Kirigami Gallery (`kirigami2gallery`), "
"an application designed by KDE developers to demonstrate Kirigami's tools "
"and capabilities. It provides both interactive examples of Kirigami "
"components as well as links to the source code of these examples so you can "
"see how they were built. You can read more about Kirigami Gallery in our "
"[specific Kirigami Gallery tutorial](/docs/kirigami/introduction-kirigami-"
"gallery)."
msgstr ""
"Рекомендуємо вам поглянути на Галерею Kirigami (`kirigami2gallery`), "
"програму, яку було створено розробниками KDE для демонстрації інструментів і "
"можливостей Kirigami. Там ви знайдете інтерактивні приклади компонентів "
"Kirigami і прості у користуванні посилання на початковий код прикладі, щоб "
"ви могли ознайомитися із тим, як побудовано ці компоненти. Докладніший опис "
"галереї Kirigami можна знайти у [відповідному розділі підручника щодо "
"Kirigami](/docs/kirigami/introduction-kirigami-gallery)."

#: content/docs/use/kirigami/introduction-next_steps.md:101
msgid "The sky is the limit!"
msgstr "Немає меж досконалості!"

#: content/docs/use/kirigami/introduction-next_steps.md:103
msgid ""
"Don't be intimidated by all the material on here! No one starts off being "
"able to create something like Plasma from scratch. But KDE is no multi-"
"billion dollar company with a high barrier for entry - we have no five-round "
"coding interviews! - and as long as you are nice, you will be welcomed."
msgstr ""
"Не лякайтеся кількістю усього матеріалу тут! Ніхто не збирається розпочинати "
"створення чогось подібного до Плазми з нуля. Але KDE не є компанією вартістю "
"у багато мільярдів із високим вхідним бар'єром — у нас немає п'ятираундових "
"інтерв'ю з програмування! — і доки ви лишатиметеся ввічливою людиною, ми "
"будемо вам раді."

#: content/docs/use/kirigami/introduction-next_steps.md:105
msgid "Good luck!"
msgstr "Щасти!"

#: content/docs/use/kirigami/introduction-overlaysheets.md:0
msgid "Creating overlay sheets"
msgstr "Створення аркушів-накладок"

#: content/docs/use/kirigami/introduction-overlaysheets.md:0
msgid "Getting to grips with overlay sheets.\n"
msgstr "Знайомимося із накладними аркушами.\n"

#: content/docs/use/kirigami/introduction-overlaysheets.md:11
msgid "Making our app useful"
msgstr "Робимо нашу програму корисною"

#: content/docs/use/kirigami/introduction-overlaysheets.md:13
msgid ""
"We have a window, we have cards, and we have actions. Yet, we still need to "
"find some way of inputting a name, description, and date of our choice."
msgstr ""
"У нас є вікно, у нас є картки і у нас є дії. Але нам усе ще потрібне спосіб "
"введення назви, опису та вибраної дати."

#: content/docs/use/kirigami/introduction-overlaysheets.md:15
msgid ""
"One way we could do this is by creating a new page where we place the "
"required input elements. However, a whole page dedicated to providing a "
"name, description, and date seems a bit excessive."
msgstr ""
"Одним зі способів досягти потрібного результату є створення сторінки, на "
"якій ми розташуємо потрібні нам елементи для введення даних. Втім, надавати "
"цілу сторінку для введення назви, опис та дати забагато."

#: content/docs/use/kirigami/introduction-overlaysheets.md:17
msgid "Instead, we'll be using an overlay sheet."
msgstr "Замість цього, ми використовуватимемо аркуш-накладку."

#: content/docs/use/kirigami/introduction-overlaysheets.md:19
msgid "![](addSheet.png)"
msgstr "![](addSheet.png)"

#: content/docs/use/kirigami/introduction-overlaysheets.md:21
msgid "Countdown-adding sheet"
msgstr "Аркуш додавання відліку"

#: content/docs/use/kirigami/introduction-overlaysheets.md:23
msgid ""
"The new component we add is `Kirigami.OverlaySheet`. Overlay sheets hover "
"above the contents of the window and can be used for a variety of purposes, "
"such as providing extra information relevant to the current content. They "
"are sort of like fancy pop-up windows, except they can't be moved."
msgstr ""
"Новим доданим нами компонентом є `Kirigami.OverlaySheet`. Аркуші-накладки "
"розташовуються над вмістом вікна. Ними можна скористатися для виконання "
"багатьох завдань, зокрема надання додаткових відомостей, пов'язаних із "
"поточним вмістом вікна. Вони є типом красивих контекстних вікон, але їх не "
"можна пересувати."

#: content/docs/use/kirigami/introduction-overlaysheets.md:59
msgid ""
"The parse() method parses a string and returns the number of milliseconds "
"since January 1, 1970, 00:00:00 UTC."
msgstr ""
"Метод parse() обробляє рядок і повертає кількість мілісекунд з моменту часу "
"1 січня 1970 року, 00:00:00 UTC."

#: content/docs/use/kirigami/introduction-overlaysheets.md:72
msgid ""
"We can give overlay sheets a header. These are set with the `header` "
"property. We have provided ours with a `Kirigami.Heading` containing a "
"relevant title: 'Add Kountdown'."
msgstr ""
"Для аркушів-накладок можна визначати заголовки. Заголовки визначаються "
"властивістю `header`. Ми надали цій властивості у нашому випадку значення "
"`Kirigami.Heading`, які містить відповідний заголовок: «Add Kountdown»."

#: content/docs/use/kirigami/introduction-overlaysheets.md:74
msgid ""
"Then we come to a `Kirigami.FormLayout`. This allows us to easily create "
"responsive input forms, which neatly displays labels for inputs and the "
"inputs themselves on both widescreen displays and narrower mobile devices. "
"These form layouts are designed to work with a variety of different input "
"types, though we're sticking to simple `Controls.Textfield` inputs that give "
"us simple text boxes to write things in."
msgstr ""
"Далі, ми переходимо до `Kirigami.FormLayout`. Цей об'єкт надає нам змогу без "
"проблем створювати форми для введення даних, які раціонально показують мітки "
"для полів введення та самі поля введення на широкоекранних дисплеях "
"комп'ютерів та вузьких дисплеях мобільних пристроїв. Ці компонування форм "
"розроблено для роботи із різними типами полів введення, хоча тут ми "
"використовуємо прості поля `Controls.Textfield`, якщо відповідають простим "
"текстовим блоками для вписування простих текстових фрагментів."

#: content/docs/use/kirigami/introduction-overlaysheets.md:76
msgid "We have created `Controls.Textfield` elements that act as:"
msgstr "Нами створено елементи `Controls.Textfield`, які працюють як:"

#: content/docs/use/kirigami/introduction-overlaysheets.md:78
msgid "Input for the name of our countdown"
msgstr "Поле для введення назви нашого відліку"

#: content/docs/use/kirigami/introduction-overlaysheets.md:79
msgid "Input for the description of our countdown"
msgstr "Поле для введення опису нашого відліку"

#: content/docs/use/kirigami/introduction-overlaysheets.md:80
msgid ""
"Input for the date we are counting down towards, which must be provided in a "
"`YYYY-MM-DD` format."
msgstr ""
"Поле для введення дати, до якої ми ведемо відлік і яка надається у форматі "
"`YYYY-MM-DD`."

#: content/docs/use/kirigami/introduction-overlaysheets.md:82
msgid ""
"Within each of these `Controls.Textfield` elements, we are setting a "
"`Kirigami.FormData.label` property that lets us define labels for them. The "
"form will present the correct labels for each of these text inputs. We are "
"also setting placeholder text inside the fields with the `placeholderText` "
"property -- this text will disappear as soon as the user begins typing in "
"the field. Finally, we are also setting the `onAccepted` property to trigger "
"the `forceActiveFocus()` method of the following field; this will switch the "
"active field once the user hits the ENTER key, improving the usability of "
"our form."
msgstr ""
"У кожному з цих елементів `Controls.Textfield` ми встановлюємо значення "
"властивості `Kirigami.FormData.label`, яка надає нам змогу визначити мітки "
"для елементів. Форма покаже належні мітки для кожного з цих текстових полів "
"введення. Ми також визначаємо текст-замінник у полях за допомогою "
"властивості `placeholderText` — цей текст зникне, щойно користувач почне "
"вводити текст у поле. Нарешті, ми встановлюємо значення властивості "
"`onAccepted` для вмикання методу `forceActiveFocus()` наступного поля; ця "
"властивість перемкне активне поле, щойно користувач натисне клавішу ENTER. "
"Така поведінка робить користування формою зручнішим."

#: content/docs/use/kirigami/introduction-overlaysheets.md:84
msgid ""
"We have also set a property called `inputMask` on the text field for our "
"date. Setting this to `\"0000-00-00\"` prevents users from entering "
"something that might break the functionality of the application (such as "
"text), restricting them to only entering digits which we can then try to "
"parse into a date object."
msgstr ""
"Ми також встановлюємо для текстового поля для нашої дати властивість із "
"назвою `inputMask`. Встановлення значення `\"0000-00-00\"` забороняє "
"користувачеві вводити будь-що, що може зашкодити нормальній роботі програми "
"(наприклад, звичайний текст). Користувач зможе вводити лише цифри, які "
"згодом може бути перетворено на об'єкт дати."

#: content/docs/use/kirigami/introduction-overlaysheets.md:86
msgid ""
"At the end of our form we are including a button that adds our new countdown "
"to the list model. We have set the `enabled` property to a conditional "
"statement that checks whether the name field is empty or not: if it is, the "
"button is disabled, and vice versa. When the button is triggered, it "
"triggers the `append` method of our `kountdownModel` list model, adding a "
"Javascript object including the properties we have provided. We also make "
"sure to clear the text fields by setting their `text` properties to an empty "
"string. We finally call a method on our overlay sheet, `close()`, which "
"closes it."
msgstr ""
"Наприкінці нашої форми ми включаємо кнопку, яка додає новий відлік до моделі "
"списку. Ми встановили для властивості `enabled` умовну інструкцію, яка "
"перевіряє, чи є поле назви порожнім: якщо це так, кнопку буде вимкнено, і "
"навпаки. Якщо кнопку увімкнено, вона вмикає метод `append` нашої моделі "
"списку `kountdownModel`, додаючи об'єкт Javascript, включно із наданими нами "
"властивостями. Крім того, ми спорожнюємо текстові поля, встановлюючи для "
"їхні властивостей `text` порожні рядки. Нарешті, ми викликаємо метод для "
"нашого аркуша-наклади, `close()`, який закриває його."

#: content/docs/use/kirigami/introduction-overlaysheets.md:88
msgid "Using our sheet"
msgstr "Використання нашого аркуша"

#: content/docs/use/kirigami/introduction-overlaysheets.md:99
msgid ""
"Overlay sheets have two methods, `open()` and `close()` which control the "
"opening and closing of this component. In this case, we have set the sheet "
"to be opened when we trigger our action. Once we save our files and build "
"our program, we'll be able to add our own customised countdowns!"
msgstr ""
"Для аркушів-накладок передбачено два методи, `open()` і `close()`, які "
"керують відкриттям і закриттям цього компонента. У цьому випадку, ми "
"встановили, що аркуш буде відкрито, коли ми увімкнемо нашу дію. Щойно наші "
"файли буде збережено, а програму буде зібрано, ми зможемо додавати наші "
"власні нетипові відліки!"

#: content/docs/use/kirigami/introduction-overlaysheets.md:101
msgid "![](addedKountdowns.png)"
msgstr "![](addedKountdowns.png)"

#: content/docs/use/kirigami/introduction-pages.md:0
msgid "Explaining Pages"
msgstr "Пояснення щодо сторінок"

#: content/docs/use/kirigami/introduction-pages.md:0
msgid "Pages allow you to organize your application content"
msgstr "За допомогою сторінок ви можете упорядкувати дані вашої програми"

#: content/docs/use/kirigami/introduction-pages.md:9
msgid "Our app"
msgstr "Наша програма"

#: content/docs/use/kirigami/introduction-pages.md:11
msgid ""
"In the previous tutorial, we managed to set up, build, and compile our first "
"Kirigami application. With the basics in place, we can begin our journey "
"towards creating a fully-featured application."
msgstr ""
"У попередньому розділі підручника ми змогли налаштувати, зібрати і запустити "
"нашу першу програму Kirigami. Тепер, коли нам відомі основи, ми можемо "
"розпочати нашу подорож до створення повнофункціональної програми."

#: content/docs/use/kirigami/introduction-pages.md:13
msgid ""
"These tutorials will focus on creating an application that lets the user see "
"how many days are left until an event of their choice. That doesn't mean you "
"shouldn't deviate and try to create your own thing! Just make sure you pay "
"close attention to how things work *first*, so that you can adjust when "
"things are different in your own code. We also recommend you check out the "
"[Kirigami Gallery](https://apps.kde.org/en/kirigami2.gallery), which "
"provides a number of useful UI examples and provides easy access to all the "
"code."
msgstr ""
"У цих розділах підручника акцентовано створення програми, за допомогою якої "
"користувач зможе бачити, скільки днів лишилося до певної вибраної події. Це "
"не означає, що ви не можете відхилитися від запропонованих ідей і "
"реалізувати власну! Достатньо лише приділити *спочатку* увагу тому, як усе "
"працює, щоб потім можна було скоригувати код і створити власну програму. Ми "
"також рекомендуємо скористатися [Галереєю Kirigami](https://apps.kde.org/en/"
"kirigami2.gallery), у якій наведено декілька корисних прикладів інтерфейсу "
"користувача і забезпечено простий доступ до відповідного коду."

#: content/docs/use/kirigami/introduction-pages.md:15
msgid ""
"In this section we'll be focusing on pages, one of the key structural "
"elements of any Kirigami application."
msgstr ""
"У цьому розділі ми зосередимося на сторінках, одному з ключових структурних "
"елементів будь-якої програми Kirigami."

#: content/docs/use/kirigami/introduction-pages.md:17
msgid "Pages"
msgstr "Сторінки"

#: content/docs/use/kirigami/introduction-pages.md:19
msgid ""
"Kirigami apps are typically organized in [Pages](docs:kirigami2;Page). Those "
"are the different ‘Screens’ of an app. You will want to have a page "
"dedicated to specific aspects of your app's interaction, and you can create "
"different QML files each containing the code for separate pages."
msgstr ""
"Програми Kirigami типово поділено на [сторінки](docs:kirigami2;Page). "
"Сторінки є різними ‘екранами’ програми. Вам знадобляться сторінки, кожну з "
"яких присвячено певним аспектам взаємодії із вашою програмою, і ви можете "
"створити різні файли QML, кожен з яких міститиме код для окремої сторінки."

#: content/docs/use/kirigami/introduction-pages.md:21
msgid ""
"Pages are organized in a pagestack where they can be pushed and popped. On a "
"phone only the topmost page is shown, whereas on a larger screen (desktop or "
"tablet) multiple pages can be shown next to each other."
msgstr ""
"Сторінки упорядковано у стос сторінок, до якого можна заштовхувати сторінки "
"і з якого можна ці сторінки виштовхувати. На телефоні буде показано лише "
"верхню сторінку, а на пристроях із більшим екраном (комп'ютері або планшеті) "
"може бути показано декілька сторінок, поруч одна з одною."

#: content/docs/use/kirigami/introduction-pages.md:23
msgid "![A single page on the phone](mobile.png)"
msgstr "![Одинарна сторінка на телефоні](mobile.png)"

#: content/docs/use/kirigami/introduction-pages.md:25
msgid "![Two pages next to each other on the desktop](desktop.png)"
msgstr "![Дві сторінки, одна поруч із іншою, на комп'ютері](desktop.png)"

#: content/docs/use/kirigami/introduction-pages.md:29
msgid ""
"KDE has a handy [Human Interface Guidelines (HIG) page](/hig/introduction/"
"architecture/) that goes into detail about how to best design your "
"application. The guides there will help ensure your application remain "
"usable, consistent, and aesthetic."
msgstr ""
"У KDE є корисна [сторінка настанов щодо створення зручних для людей "
"інтерфейсів (HIG)](/hig/introduction/architecture/), на якій наведено "
"подробиці щодо того, які підходи до дизайну є найкращими для вашої програми. "
"Настанови допоможуть вам створювати зручні, сумісні та естетично привабливі "
"програми."

#: content/docs/use/kirigami/introduction-pages.md:31
msgid ""
"A Kirigami [Page](docs:kirigami2;Page) also inherits from a [QQC2 Page]"
"(https://doc.qt.io/qt-5/qml-qtquick-controls2-page.html) and as such, you "
"can add a number of extra elements to them. The Qt docs are another useful "
"resource to use when designing your pages."
msgstr ""
"[Сторінка](docs:kirigami2;Page) Kirigami також успадковує властивості "
"[сторінки QQC2](https://doc.qt.io/qt-5/qml-qtquick-controls2-page.html), а "
"отже, ви можете додати до сторінки декілька додаткових елементів звідти. "
"Тому при створенні ваших сторінок ще одним корисним ресурсом є документація "
"з Qt."

#: content/docs/use/kirigami/introduction-pages.md:36
msgid ""
"Let's go back to the `main.qml` file we created in our previous tutorial:"
msgstr ""
"Повернімося до файла `main.qml`, який ми створили у нашому попередньому "
"розділі підручника:"

#: content/docs/use/kirigami/introduction-pages.md:40
msgid ""
"We make our application start to our `Kirigami.Page`. All we have included "
"in it is a label containing 'Hello World', but we're going to spruce things "
"up a little."
msgstr ""
"Наша програма запускатиметься з `Kirigami.Page`. Усе, що ми включили до цієї "
"сторінки — це мітка «Hello World», але ми маємо намір дещо розширити ці "
"можливості."

#: content/docs/use/kirigami/introduction-pages.md:42
msgid ""
"The idea behind our app is that we're going to be able to display a bunch of "
"countdowns to the user. The problem with a normal `Kirigami.Page` is that it "
"has a fixed vertical size, but don't worry: Kirigami also supports "
"scrollable pages. `Kirigami.ScrollablePage` is going to replace our "
"`Kirigami.Page` now."
msgstr ""
"Ідея нашої програми полягає у можливості показу користувачеві декількох "
"відліків. Проблема звичайного об'єкта `Kirigami.Page` полягає у тому, що він "
"має фіксований вертикальний розмір. Але не переймайтеся — у Kirigami "
"передбачено і підтримку сторінок із можливістю гортання вмісту. Ми замінимо "
"на `Kirigami.ScrollablePage` типову `Kirigami.Page`."

#: content/docs/use/kirigami/introduction-pages.md:46
msgid ""
"If you've gone ahead of the tutorial, you might have noticed that there is "
"also such a thing as a `ScrollView` that you can use to contain your "
"components. However, do NOT put a `ScrollView` inside a `ScrollablePage` as "
"this can cause problems. Children of a `ScrollablePage` are functionally "
"already in a `ScrollView`."
msgstr ""
"Якщо ви вже ознайомилися із іншими частинами цього підручника, ви могли "
"помітити, що існує також панель `ScrollView`, якою можна скористатися для "
"додавання компонентів. Втім, НЕ додавайте `ScrollView` у `ScrollablePage`, "
"оскільки це може спричинити проблеми. Дочірні об'єкти `ScrollablePage` "
"функціонально вже є частиною `ScrollView`."

#: content/docs/use/kirigami/introduction-pages.md:57
msgid ""
"Kirigami pages also feature neat titles placed within the toolbar, quickly "
"indicating to the user which page they are on. All we need to do to set a "
"page title using the `title` property of `Kirigami.ScrollablePage`. In this "
"case, we used one of the `i18nc()` functions we explored in our previous "
"tutorial to this end."
msgstr ""
"У сторінок Kirigami також є чудові заголовки, які розташовуються на панелі "
"інструментів, надаючи користувачеві дані щодо того, з якою сторінкою він "
"працює. Нам достатньо встановити заголовок сторінки за допомогою властивості "
"`title` об'єкта `Kirigami.ScrollablePage`. У цьому випадку ми використали "
"одну з функцій `i18nc()`, які обговорювали у одному з попередніх розділів "
"підручника."

#: content/docs/use/kirigami/introduction-pages.md:61
msgid ""
"You could also choose to define your page within its own QML document. To do "
"so, you'd create the new QML doc, add it to your `resources.qrc` file, and "
"set `Kirigami.ApplicationWindow`'s first page to it like so:"
msgstr ""
"Ви також можете визначити вашу сторінку у окремому документі QML. Для цього "
"слід створити документ QML, додати його до вашого файла `resources.qrc` і "
"визначити його як першу сторінку у `Kirigami.ApplicationWindow`, ось так:"

#: content/docs/use/kirigami/introduction-pages.md:67
msgid ""
"`pageStack.initialPage` sets the initial Page of the Page stack, and `Qt."
"resolvedUrl` is converting the relative URL of the QML file into an absolute "
"one."
msgstr ""
"`pageStack.initialPage` встановлює початкову сторінку стосу сторінок, а `Qt."
"resolvedUrl` перетворює відносну адресу файла QML на абсолютну."

#: content/docs/use/kirigami/introduction-pages.md:69
#, fuzzy
#| msgid ""
#| "There is further information about alternative page structures [within "
#| "our Kirigami documentation](/docs/kirigami/manipulate-pages/)."
msgid ""
"There is further information about alternative page structures [within our "
"Kirigami documentation]({{< ref \"components-pagerow_pagestack.md\" >}})."
msgstr ""
"У [нашій документації з Kirigami](/docs/kirigami/manipulate-pages/) є "
"докладніші відомості щодо альтернативних структу сторінки."

#: content/docs/use/kirigami/introduction-separatefiles.md:0
msgid "Using separate files and signals"
msgstr "Користування окремими файлами і сигналами"

#: content/docs/use/kirigami/introduction-separatefiles.md:0
msgid ""
"Separating unwieldy code into different files, and attach signals to your "
"components.\n"
msgstr ""
"Розподіл громіздкого коду між різними файлами і долучення сигналів до ваших "
"компонентів.\n"

#: content/docs/use/kirigami/introduction-separatefiles.md:11
msgid "But why?"
msgstr "Але чому?"

#: content/docs/use/kirigami/introduction-separatefiles.md:13
msgid ""
"For the first time, we will be separating some of our components into their "
"own QML files. If we keep adding things to `main.qml`, it's going to quickly "
"become hard to tell what does what, and we risk muddying our code."
msgstr ""
"Ми вперше відокремлюємо деякі з наших компонентів у окремі файли QML. Якщо "
"ми продовжуватимемо додавати код до `main.qml`, розростання файла ускладнить "
"розбір його частин і збільшить ризик помилок у нашому коді."

#: content/docs/use/kirigami/introduction-separatefiles.md:15
msgid ""
"First we need to add our new files into our `resources.qrc` which we created "
"in the first part of this tutorial."
msgstr ""
"Спочатку нам слід додати наші нові файли до нашого `resources.qrc`, який ми "
"створили у першій частині цього розділу підручника."

#: content/docs/use/kirigami/introduction-separatefiles.md:27
msgid "Using our new files"
msgstr "Використання наших нових файлів"

#: content/docs/use/kirigami/introduction-separatefiles.md:29
msgid ""
"We'll need to find some way of using our new files in `main.qml`. "
"Thankfully, all we need to do is include a declaration of these components "
"in our `main.qml` like this:"
msgstr ""
"Нам слід знайти якийсь спосіб використання наших нових файлів у `main.qml`. "
"На щастя, нам достатньо просто включити оголошення цих компонентів у наш "
"`main.qml` ось так:"

#: content/docs/use/kirigami/introduction-separatefiles.md:37
msgid "Extending our add sheet into an add/edit sheet"
msgstr ""
"Розширюємо можливості нашого аркуша додавання так, щоб він став аркушем "
"додавання-редагування"

#: content/docs/use/kirigami/introduction-separatefiles.md:39
msgid ""
"While in the last tutorial we made our countdown-adding button do something, "
"the edit button on our countdown cards is still inactive. We also created an "
"adding sheet that we could now repurpose to also serve as an edit sheet... "
"but before we get to that, we need to add a couple of extra things to our "
"`main.qml`."
msgstr ""
"Хоча у останній частині підручника ми додали до кнопки додавання відліку "
"дії, кнопка редагування наших карток відліку усе ще лишається неактивною. "
"Нами також було створено аркуш додавання відліків, якими ми тепер можемо "
"повторно скористатися як аркушем редагування... Але перш ніж ми перейдемо до "
"цього, нам слід додати до нашого `main.qml` ще двійко додаткових речей."

#: content/docs/use/kirigami/introduction-separatefiles.md:43
msgid ""
"The key changes we have made involve the addition of our component "
"definition `AddEditSheet` (and `KountdownDelegate` further down) and a new "
"function called `openPopulateSheet`."
msgstr ""
"Ключовими внесеними змінами є додавання нашого визначення компонента "
"`AddEditSheet` (і `KountdownDelegate` нижче) і нової функції із назвою "
"`openPopulateSheet`."

#: content/docs/use/kirigami/introduction-separatefiles.md:45
msgid "Lets go through our `AddEditSheet` definition:"
msgstr "Пройдімося нашим визначенням `AddEditSheet`:"

#: content/docs/use/kirigami/introduction-separatefiles.md:63
msgid ""
"`onAdded` and `onEdited` are signal handlers. Just like `onTriggered` is "
"called when we click an action, we can also use handlers that respond to our "
"custom signals. Looking at our new `AddEditSheet.qml` -- our repurposed "
"adding sheet -- we can see how these signals work:"
msgstr ""
"`onAdded` і `onEdited` є обробниками сигналів. Подібно до того, як "
"`onTriggered` викликається, коли ми натискаємо пункт дії, ми можемо "
"скористатися обробниками, які відповідають на наші нетипові сигнали. "
"Поглянувши на наш новий `AddEditSheet.qml` — наш конвертований аркуш "
"додавання — ми можемо бачити, як працюють ці сигнали:"

#: content/docs/use/kirigami/introduction-separatefiles.md:67
msgid ""
"Signals invoke their handlers when they are called. In this case, we have "
"created two signals that we can invoke with different outcomes, and to which "
"we can attach information about the countdown we are adding or creating. A "
"neat thing about signals is that they expose the variables defined in them "
"to the functions that are listening to them, which is why we can just call "
"those variable names in our `onEdited` and `onAdded` handlers in `main.qml`. "
"Our signals are invoked by the 'Done' button depending on what the `mode` "
"property, defined at the top of our AddEditSheet, is set to."
msgstr ""
"Сигнали викликають обробники при виклику. У нашому випадку, ми створили два "
"сигнали, які ми можемо викликати для отримання різних результатів, і з якими "
"ми можемо пов'язати відомості щодо відліку, який ми додаємо або створюємо. "
"Чудовою властивістю сигналів є те, що вони розкривають змінні, які у них "
"визначено для функцій, які очікують на сигнали. Ось чому ми можемо просто "
"викликати назви цих змінних у наших обробниках `onEdited` і `onAdded` у "
"`main.qml`. Наші сигнали викликає кнопка «Done», залежно від  значення, "
"встановленого для властивості `mode`, визначеної у верхній частині нашого "
"AddEditSheet."

#: content/docs/use/kirigami/introduction-separatefiles.md:69
msgid ""
"The `mode` property also controls several other things: mainly what the "
"title of our sheet is set to, and what text is to be included in our "
"textfields. However, by default, our `mode` property is just set to add..."
msgstr ""
"Крім того, властивість `mode` керує декількома іншими речима: в основному, "
"тим, який заголовок буде встановлено для нашого аркуша, і який текст буде "
"включено до наших текстових полів. Втім, типово, для нашої властивості "
"`mode` просто встановлено режим додавання..."

#: content/docs/use/kirigami/introduction-separatefiles.md:71
msgid ""
"Which brings us back to `main.qml` and our new `openPopulateSheet` function. "
"You might have noticed that this is what is called now when the countdown-"
"adding action is triggered. This function takes in several arguments which "
"have been provided with defaults. This is helpful when we simply want to add "
"a new countdown, because we can have the concise function call "
"`openPopulateSheet(\"add\")`. More importantly, this function sets all the "
"relevant properties in AddEditSheet."
msgstr ""
"Що повертає нас до `main.qml` і нашої нової функції `openPopulateSheet`. Ви "
"могли помітити, що це саме те, що буде тепер викликано при вмиканні дії з "
"додавання відліку. Ця функція приймає декілька аргументів, які мають типові "
"значення. Це корисно, коли ми просто хочемо додати новий відлік, оскільки ми "
"можемо скористатися скороченим викликом функції — `openPopulateSheet(\"add"
"\")`. Що важливіше, ця функція встановлює значення усіх пов'язаних із її "
"призначенням властивостей в AddEditSheet."

#: content/docs/use/kirigami/introduction-separatefiles.md:86
msgid ""
"`mode` changes the add/edit sheet depending on whether this argument is set "
"to `\"add\"` or to `\"edit\"`"
msgstr ""
"`mode` змінює аркуш додавання-редагування залежно від встановленого "
"аргументу: `«add»` або «`\"edit\"`"

#: content/docs/use/kirigami/introduction-separatefiles.md:87
msgid ""
"`index` argument is needed so that when we save our edited countdown, the "
"correct one is modified"
msgstr ""
"Аргумент `index` потрібен для того, щоб при збереження нашого редагованого "
"відліку було внесено зміни до належного запису"

#: content/docs/use/kirigami/introduction-separatefiles.md:88
msgid ""
"`listName`, `listDesc`, and `listDate` are the relevant countdown details "
"that need to be put in the sheet's fields"
msgstr ""
"`listName`, `listDesc` і `listDate` — відповідні параметри відліків, які має "
"бути вписано у поля аркуша"

#: content/docs/use/kirigami/introduction-separatefiles.md:90
msgid ""
"Of course, to actually use our sheet for anything besides adding countdowns "
"first we need to make the edit button on our cards work. But if you look at "
"our `Kirigami.CardsListView` in `main.qml`..."
msgstr ""
"Звичайно, щоб справді скористатися нашим аркушем для чогось, окрім додавання "
"відліків, нам спершу слід зробити працездатною кнопку редагування на наших "
"картках. Але, якщо ви поглянете на нашу `Kirigami.CardsListView` у `main."
"qml`..."

#: content/docs/use/kirigami/introduction-separatefiles.md:100
msgid ""
"We've replaced our `Kirigami.AbstractCard` with a delegate component "
"definition from `KountdownDelegate.qml`."
msgstr ""
"Ми замінили наш `Kirigami.AbstractCard` визначенням компонента-делегата з "
"`KountdownDelegate.qml`."

#: content/docs/use/kirigami/introduction-separatefiles.md:104
msgid ""
"The `onClicked` property of the 'Edit' button on our cards now calls the "
"`openPopulateSheet` function, with the card's fetched list element "
"properties set as the arguments for this function. With these, the sheet can "
"be populated with the correct text."
msgstr ""
"Тепер властивість `onClicked` кнопки «Edit» на наших картках викликає "
"функцію `openPopulateSheet` із отриманими карткою властивостями елементів "
"списку як аргументами цієї функції. Ці дані надають змогу заповнити аркуш "
"належними текстовими даними."

#: content/docs/use/kirigami/introduction-separatefiles.md:106
msgid ""
"With that, we have a fully-functional sheet where we can add and edit our "
"countdowns!"
msgstr ""
"Тепер ми маємо повнофункціональний аркуш, за допомогою якого ми можемо "
"додавати і редагувати наші відліки!"

#: content/docs/use/kirigami/introduction-separatefiles.md:108
msgid "![](editsheet.png)"
msgstr "![](editsheet.png)"

#: content/docs/use/kirigami/style-colors.md:0
msgid "Colors and Themes in Kirigami"
msgstr "Кольори і теми у Kirigami"

#: content/docs/use/kirigami/style-colors.md:0
msgid "Colors "
msgstr "Кольори"

#: content/docs/use/kirigami/style-colors.md:0
msgid "Make your app follow your user color scheme\n"
msgstr ""
"Робимо так, щоб у програмі використовувалася ваша схема кольорів "
"користувача\n"

#: content/docs/use/kirigami/style-colors.md:12
msgid ""
"Kirigami has a color palette that follow the system colors, to better "
"integrate on the platform it is running on (i.e. Plasma Desktop, Plasma "
"Mobile, GNOME, Android, etc.)."
msgstr ""
"У Kirigami передбачено палітру кольорів, яка відповідає загальносистемним "
"кольорам для кращої інтеграції із платформою, на якій запущено програму "
"(тобто стільницею Плазми, Плазмою для мобільних пристроїв, GNOME, Android "
"тощо)."

#: content/docs/use/kirigami/style-colors.md:16
msgid ""
"All of Kirigami's QML components and all the Qt Quick Controls 2 QML "
"components will already follow this palette by default, so usually no custom "
"coloring should be needed at all for those controls."
msgstr ""
"Усі компоненти QML Kirigami і усі компоненти QML Qt Quick Controls 2 вже "
"типово використовують цю палітру, тому, зазвичай, немає потреби у "
"додатковому налаштовуванні розфарбування усіх цих елементів керування."

#: content/docs/use/kirigami/style-colors.md:21
msgid ""
"Primitive components such as `Rectangle` should always be colored with the "
"color palette provided by Kirigami via the [`Theme`](docs:kirigami2;"
"Kirigami::PlatformTheme) attached property."
msgstr ""
"Примітивні компоненти, зокрема `Rectangle`, завжди має бути розфарбовано з "
"використанням палітри кольорів, яка надається Kirigami за допомогою "
"долученої властивості [`Theme`](docs:kirigami2;Kirigami::PlatformTheme)."

#: content/docs/use/kirigami/style-colors.md:24
msgid ""
"Hardcoded colors in QML, such as `#32b2fa` or `red` should usually be "
"avoided; if it is really necessary to have elements with custom colors, it "
"should be an area where only custom colors are used (usually in the content "
"area of the app, and never in the chrome such as toolbars or dialogs), for "
"instance a hardcoded `black` foreground cannot be used over a `Kirigami."
"Theme.backgroundColor` background, because if the platform uses a dark color "
"scheme the result will look poor contrasting black over almost black."
msgstr ""
"У коді QML, зазвичай, слід уникати жорстко прописаних кольорів, зокрема "
"`#32b2fa` або `red`. Якщо у елементах із нетиповими кольорами справді є "
"потреба, це має бути область, де використовуються лише нетипові кольори "
"(зазвичай, область показу даних програми, — ніколи не обрамлення, зокрема "
"панелі інструментів або діалогові вікна). Наприклад, не можна "
"використовувати жорстко прописаний колір переднього плану `black` над "
"кольором тла `Kirigami.Theme.backgroundColor`, оскільки якщо на платформі "
"використано темну схему кольорів, результат буде малоконтрастним: чорний над "
"майже чорним кольором."

#: content/docs/use/kirigami/style-colors.md:32
#: content/docs/use/kirigami/style-typography.md:127
msgid "Theme"
msgstr "Тема"

#: content/docs/use/kirigami/style-colors.md:34
msgid ""
"For more information about the Kirigami Theme class, see the [API docs](docs:"
"kirigami2;Kirigami::PlatformTheme)"
msgstr ""
"Щоб дізнатися більше про клас тем Kirigami, ознайомтеся із [документацією "
"щодо програмного інтерфейсу](docs:kirigami2;Kirigami::PlatformTheme)"

#: content/docs/use/kirigami/style-colors.md:36
msgid ""
"`Kirigami.Theme` is an attached property, therefore is available to use in "
"any QML item. It contains as properties all the colors available in the "
"palette, and what palette to use, as the `colorSet` property."
msgstr ""
"`Kirigami.Theme` є долученою властивістю, тому нею можна користуватися у "
"будь-якому записі QML. Вона містить як властивості усі доступні кольори "
"палітри і дані щодо палітри, яку має бути використано у властивості "
"`colorSet`."

#: content/docs/use/kirigami/style-colors.md:41
#: content/docs/use/kirigami/style-colors.md:82
msgid "Example:"
msgstr "Приклад:"

#: content/docs/use/kirigami/style-colors.md:52
msgid ""
"<!-- TODO\n"
"screenshot of a qml file with an annotated UI showing all the \n"
"available color\n"
"-->\n"
msgstr ""
"<!-- TODO\n"
"знімок вікна файла qml із анотованим інтерфейсом, у якому показано \n"
"усі доступні кольори\n"
"-->\n"

#: content/docs/use/kirigami/style-colors.md:57
msgid "Color Set"
msgstr "Встановлення кольору"

#: content/docs/use/kirigami/style-colors.md:59
msgid ""
"Depending on where a control is located, it should use a different color "
"set: for instance, (with the Breeze light color theme) in itemviews, the "
"normal background is almost white, while in other regions, such as toolbars "
"or dialogs, the normal background color is gray."
msgstr ""
"Залежно від місця розташування елемента керування, він використовуватиме "
"різні набори кольорів. Наприклад, (якщо використано світлу тему кольорів "
"Breeze) на панелях списку звичайне тло майже біле, а в інших областях, "
"зокрема на панелях інструментів, звичайне тло є сірим."

#: content/docs/use/kirigami/style-colors.md:64
msgid ""
"If you set a color set for an item, all of its child items (recursively) "
"will inherit it automatically (unless the property `inherit` has explicitly "
"been set to `false`, which should always be done when the developer wants to "
"force a specific color set) so it is easy to change colors for an entire "
"hierarchy of items without touching any of the items themselves."
msgstr ""
"Якщо ви визначаєте набір кольорів для запису, усі його дочірні записи "
"(рекурсивно) успадкують його автоматично (якщо для властивості `inherit` не "
"буде явним чином встановлено значення `false`, що завжди слід робити, коли "
"розробник хоче примусово встановити певний набір кольорів), тому дуже просто "
"змінити кольори для усієї ієрархії записів без безпосередньої зміни кольорів "
"для кожного із записів цієї ієрархії."

#: content/docs/use/kirigami/style-colors.md:70
msgid "`Kirigami.Theme` supports 5 different color sets:"
msgstr "У `Kirigami.Theme` передбачено підтримку 5 різних наборів кольорів:"

#: content/docs/use/kirigami/style-colors.md:72
msgid ""
"View: Color set for item views, usually the lightest of all (in light color "
"themes)"
msgstr ""
"View: набір кольорів для панелей записів, зазвичай, найсвітліший з усіх (у "
"світлих темах кольорів)"

#: content/docs/use/kirigami/style-colors.md:74
msgid "Window: **Default** Color set for windows and \"chrome\" areas"
msgstr "Window: **типовий** набір кольорів для вікон і «хромованих» областей"

#: content/docs/use/kirigami/style-colors.md:75
msgid "Button: Color set used by buttons"
msgstr "Button: набір кольорів, який використовують для кнопок"

#: content/docs/use/kirigami/style-colors.md:76
msgid "Selection: Color set used by selected areas"
msgstr "Selection: набір кольорів, який використовують для позначених областей"

#: content/docs/use/kirigami/style-colors.md:77
msgid "Tooltip: Color set used by tooltips"
msgstr "Tooltip: набір кольорів, який використовують для підказок"

#: content/docs/use/kirigami/style-colors.md:78
msgid ""
"Complementary: Color set meant to be complementary to Window: usually is "
"dark even in light themes. May be used for \"emphasis\" in small areas of "
"the application"
msgstr ""
"Complementary: набір кольорів, який має доповнювати Window: зазвичай, є "
"темним навіть у світлих темах. Ним можна скористатися для «акцентування» "
"невеликих частин інтерфейсу програми."

#: content/docs/use/kirigami/style-colors.md:89
msgid "The comments assume the system uses the Breeze Light color theme"
msgstr ""
"У коментарях припускаємо, що у системі використано тему кольорів «Світла "
"Breeze»"

#: content/docs/use/kirigami/style-colors.md:92
msgid "A gray color will be used, as the default color set is Window"
msgstr ""
"Буде використано сірий колір, оскільки типовим набором кольорів є Window"

#: content/docs/use/kirigami/style-colors.md:96
msgid "The text will be near-black, as is defined in the Window color set"
msgstr "Текст буде майже чорним, як визначено у наборі кольорів Window"

#: content/docs/use/kirigami/style-colors.md:103
msgid "Use the set for ItemViews"
msgstr "Використовуємо набір для ItemViews"

#: content/docs/use/kirigami/style-colors.md:106
#: content/docs/use/kirigami/style-colors.md:129
msgid "Do not inherit from the parent"
msgstr "Не успадковуємо від батьківського об'єкта"

#: content/docs/use/kirigami/style-colors.md:109
msgid "This will be a near-white color"
msgstr "Це буде майже білий колір"

#: content/docs/use/kirigami/style-colors.md:114
msgid ""
"This will be a near-white color too, as the colorSet is inherited from the "
"parent and will be View"
msgstr ""
"Цей колір також буде майже білим, оскільки colorSet успадковано з "
"батьківського елемента, отже ним буде View"

#: content/docs/use/kirigami/style-colors.md:119
msgid "The text will be near-black, as is defined in the View color set"
msgstr "Текст буде майже чорним, як визначено у наборі кольорів View"

#: content/docs/use/kirigami/style-colors.md:126
msgid "Use the Complementary set"
msgstr "Використовуємо набір Complementary"

#: content/docs/use/kirigami/style-colors.md:132
msgid ""
"This will be near-black as in the Complementary color set the background "
"color is dark."
msgstr ""
"Цей колір буде майже чорним, оскільки у наборі кольорів Complementary колір "
"тла є темним."

#: content/docs/use/kirigami/style-colors.md:137
msgid ""
"The text will be near-white, as is defined in the Complementary color set"
msgstr "Текст буде майже білим, як визначено у наборі кольорів Complementary"

#: content/docs/use/kirigami/style-colors.md:146
msgid ""
"Some components such as Labels will automatically inherit by default the "
"color set, some other components have a fixed color set, for instance "
"Buttons are fixed to the `Button` color set. If it's desired for the button "
"to inherit the parent color set, the `inherit` property should be explicitly "
"set to `true`:"
msgstr ""
"Деякі компоненти, зокрема мітки (Label), типово автоматично успадкують набір "
"кольорів, деякі інші компоненти мають фіксований набір кольорів. Наприклад, "
"із кнопками (Button) пов'язано набір кольорів `Button`. Якщо бажаним є "
"успадковування кнопкою батьківського набору кольорів, для властивості "
"`inherit` слід явним чином встановити значення `true`:"

#: content/docs/use/kirigami/style-colors.md:162
msgid ""
"![Screenshot of a comparison between a button that inherits and one that "
"does not](buttonsinherit.png)"
msgstr ""
"![Знімок вікна із порівнянням між кнопкою, яка успадковує властивості, і "
"кнопкою, яка не успадковує властивості](buttonsinherit.png)"

#: content/docs/use/kirigami/style-colors.md:164
msgid "Using Custom Colors"
msgstr "Використання нетипових кольорів"

#: content/docs/use/kirigami/style-colors.md:166
msgid ""
"Although it's discouraged to use hardcoded colors, Kirigami offers a more "
"maintainable way to assign a custom hardcoded palette to an item and all its "
"children, that will allow to define such custom colors in one place and one "
"only:"
msgstr ""
"Хоча не рекомендовано використовувати жорстко прописані кольори, у Kirigami "
"передбачено зручніший у сенсі супроводу спосіб призначення нетипової жорстко "
"прописаної палітри для запису і усіх його дочірніх записів. Цей спосіб надає "
"змогу визначити такі нетипові кольори одноразово і у єдиному місці коду:"

#: content/docs/use/kirigami/style-colors.md:173
msgid ""
"![Screenshot showing the code above with qmlscene, we can see two rectangles "
"with two different colors](customcolors.png)"
msgstr ""
"![Знімок вікна із кодом, який наведено вище, обробленим у qmlscene, можна "
"бачити два прямокутники із двома різними кольорами](customcolors.png)"

#: content/docs/use/kirigami/style-typography.md:0
msgid "Typography"
msgstr "Типографія"

#: content/docs/use/kirigami/style-typography.md:10
msgid "Headings"
msgstr "Заголовки"

#: content/docs/use/kirigami/style-typography.md:12
msgid ""
"Kirigami provides an [heading element](docs:kirigami2;Heading) that can be "
"used for page or section titles."
msgstr ""
"У Kirigami передбачено [елемент заголовка](docs:kirigami2;Heading), яким "
"можна скористатися для заголовків сторінок або розділів."

#: content/docs/use/kirigami/style-typography.md:40
msgid "Heading"
msgstr "Заголовок"

#: content/docs/use/kirigami/style-typography.md:42
msgid "Labels"
msgstr "Мітки"

#: content/docs/use/kirigami/style-typography.md:44
msgid "Text elements should use the Label element from QtQuick Controls 2."
msgstr ""
"Текстові елементи мають використовувати елемент Label з QtQuick Controls 2."

#: content/docs/use/kirigami/style-typography.md:53
msgid "Text Alignment"
msgstr "Вирівнювання тексту"

#: content/docs/use/kirigami/style-typography.md:55
msgid ""
"You can align your text elements using the horizontalAlignment property of "
"the text element."
msgstr ""
"Ви можете вирівнювати ваші текстові елементи за допомогою властивості "
"horizontalAlignment текстового елемента."

#: content/docs/use/kirigami/style-typography.md:79
msgid "Text centered"
msgstr "Центрований текст"

#: content/docs/use/kirigami/style-typography.md:102
msgid "Text right aligned"
msgstr "Вирівняний праворуч текст"

#: content/docs/use/kirigami/style-typography.md:104
msgid "Rich Text"
msgstr "Форматований текст"

#: content/docs/use/kirigami/style-typography.md:106
msgid ""
"QML allows you to display (and edit) rich text. The behavior can be "
"controlled via the [textFormat](https://doc.qt.io/qt-5/qml-qtquick-text."
"html#textFormat-prop) property."
msgstr ""
"У QML передбачено можливість показу (і редагування) форматованого тексту. "
"Поведінкою засобу форматування можна керувати за допомогою властивості "
"[textFormat](https://doc.qt.io/qt-5/qml-qtquick-text.html#textFormat-prop)."

#: content/docs/use/kirigami/style-typography.md:125
msgid "Displaying rich text"
msgstr "Показ форматованого тексту"

#: content/docs/use/kirigami/style-typography.md:129
msgid ""
"The font size of the Kirigami [Theme](docs:kirigami2;Theme) is available as "
"`Kirigami.Theme.defaultFont.pointSize` in your application."
msgstr ""
"Доступ до розміру шрифту [теми](docs:kirigami2;Theme) Kirigami у вашій "
"програмі можна отримати за допомогою `Kirigami.Theme.defaultFont.pointSize`."

#~ msgid "![A tool button](controls-toolbutton.png)"
#~ msgstr "![Кнопка-інструмент](controls-toolbutton.png)"

#~ msgid "![A set of switches](controls-switch.png)"
#~ msgstr "![Набір перемикачів](controls-switch.png)"

#~ msgid "![A set of sliders](controls-sliders.png)"
#~ msgstr "![Набір повзунків](controls-sliders.png)"

#~ msgid "![Sheet header](sheet_header.png)"
#~ msgstr "![Шапка аркуша](sheet_header.png)"

#~ msgid "![Sheet footer](sheet_footer.png)"
#~ msgstr "![Підвал аркуша](sheet_footer.png)"

#~ msgid "![Sheet with a listview](sheet_listview.png)"
#~ msgstr "![Аркуш на панелі списку](sheet_listview.png)"

#~ msgid "![A busy indicator](busyindicator.png)"
#~ msgstr "![Індикатор зайнятості](busyindicator.png)"

#~ msgid "![Screenshot of a CardsListView](cardslistview.png)"
#~ msgstr "![Знімок CardsListView](cardslistview.png)"

#~ msgid "![](card1.png)"
#~ msgstr "![](card1.png)"

#~ msgid ""
#~ "| Kirigami Unit | Pixels | | ------ | ------ | | smallSpacing | 4px | | "
#~ "largeSpacing | 8px | | gridUnit | 18px |"
#~ msgstr ""
#~ "| Одиниця Kirigami | Пікселі | | ------ | ------ | | smallSpacing | 4пк | "
#~ "| largeSpacing | 8пк | | gridUnit | 18пк |"

#~ msgid ""
#~ "| Project | What it is | Links | | --- | --- | --- | | <img src=\"https://"
#~ "apps.kde.org/app-icons/org.kde.calindori.svg\" width=\"50\" height="
#~ "\"50\"><br />Calindori | A touch friendly calendar application designed "
#~ "for mobile devices | [KDE Apps page](https://apps.kde.org/en/"
#~ "calindori)<br />[KDE Invent page](https://invent.kde.org/plasma-mobile/"
#~ "calindori) | | <img src=\"https://apps.kde.org/app-icons/org.kde."
#~ "kdeconnect.kcm.svg\" width=\"50\" height=\"50\"><br />KDE Connect | A "
#~ "multi-platform app that allows your devices to communicate (eg: your "
#~ "phone and your computer). | [Home page](https://kdeconnect.kde.org/)<br /"
#~ ">[KDE Community Wiki page](https://community.kde.org/KDEConnect)<br /"
#~ ">[KDE Invent page](https://invent.kde.org/network/kdeconnect-kde) | | "
#~ "<img src=\"https://invent.kde.org/graphics/koko/-/raw/master/logo.png\" "
#~ "width=\"50\" height=\"50\"><br />Koko | An image viewer designed for "
#~ "desktop and touch devices. | [Userbase page](https://userbase.kde.org/"
#~ "Koko)<br />[KDE Invent page](https://invent.kde.org/graphics/koko) | | "
#~ "<img src=\"https://apps.kde.org/app-icons/org.kde.kontrast.svg\" width="
#~ "\"50\" height=\"50\"><br />Kontrast | A color contrast checker that tells "
#~ "you if your color combinations are accessible for people with color "
#~ "vision deficiencies. | [KDE Apps page](https://apps.kde.org/en/"
#~ "kontrast)<br />[KDE Invent page](https://invent.kde.org/accessibility/"
#~ "kontrast) |"
#~ msgstr ""
#~ "| Проєкт | Призначення | Посилання | | --- | --- | --- | | <img src="
#~ "\"https://apps.kde.org/app-icons/org.kde.calindori.svg\" width=\"50\" "
#~ "height=\"50\"><br />Calindori | Програма-календар для мобільних пристроїв "
#~ "із сенсорним керуванням | [Сторінка на KDE Apps](https://apps.kde.org/en/"
#~ "calindori)<br />[Сторінка на KDE Invent](https://invent.kde.org/plasma-"
#~ "mobile/calindori) | | <img src=\"https://apps.kde.org/app-icons/org.kde."
#~ "kdeconnect.kcm.svg\" width=\"50\" height=\"50\"><br />KDE Connect | "
#~ "Багатоплатформова програма, яка уможливлює обмін даними між пристроями "
#~ "(наприклад вашим телефоном і комп'ютером). | [Домашня сторінка](https://"
#~ "kdeconnect.kde.org/)<br />[Сторінка у вікі спільноти KDE](https://"
#~ "community.kde.org/KDEConnect)<br />[Сторінка на KDE Invent](https://"
#~ "invent.kde.org/network/kdeconnect-kde) | | <img src=\"https://invent.kde."
#~ "org/graphics/koko/-/raw/master/logo.png\" width=\"50\" height=\"50\"><br /"
#~ ">Koko | Програма для перегляду зображень, яка може працювати на звичайних "
#~ "комп'ютерах і на пристроях із сенсорним керуванням. | [Сторінка на "
#~ "Userbase](https://userbase.kde.org/Koko)<br />[Сторінка на KDE Invent]"
#~ "(https://invent.kde.org/graphics/koko) | | <img src=\"https://apps.kde."
#~ "org/app-icons/org.kde.kontrast.svg\" width=\"50\" height=\"50\"><br /"
#~ ">Kontrast | Програма для перевірки контрастності кольорів, яка повідомить "
#~ "вам, чи є ваша комбінація кольорів доступною для користувачів із вадами у "
#~ "сприйнятті кольорів. | [Сторінка на KDE Apps](https://apps.kde.org/en/"
#~ "kontrast)<br />[Сторінка на KDE Invent](https://invent.kde.org/"
#~ "accessibility/kontrast) |"

#~ msgid ""
#~ "| Project | What it is | Links | | --- | --- | --- | | <img src=\"https://"
#~ "apps.kde.org/app-icons/org.kde.discover.svg\" width=\"50\" height="
#~ "\"50\"><br />Discover | An application that helps you find and install "
#~ "applications, games, and tools. | [KDE Apps page](https://apps.kde.org/en/"
#~ "discover)<br />[KDE Userbase page](https://userbase.kde.org/Discover)<br /"
#~ ">[KDE Invent page](https://invent.kde.org/plasma/discover) | | <img src="
#~ "\"https://apps.kde.org/app-icons/org.kde.elisa.svg\" width=\"50\" height="
#~ "\"50\"><br />Elisa | A music player that strives to be simple and nice to "
#~ "use. | [Home page](https://elisa.kde.org/)<br />[KDE Apps page](https://"
#~ "apps.kde.org/en/elisa)<br />[KDE Community Wiki page](https://community."
#~ "kde.org/KDEConnect)<br />[KDE Invent page](https://invent.kde.org/"
#~ "multimedia/elisa) | | <img src=\"https://invent.kde.org/utilities/"
#~ "kongress/-/raw/master/org.kde.kongress.svg\" width=\"50\" height="
#~ "\"50\"><br />Kongress | A companion application for conference attendees. "
#~ "| [KDE Invent page](https://invent.kde.org/utilities/kongress) | | <img "
#~ "src=\"https://apps.kde.org/app-icons/org.kde.neochat.svg\" width=\"50\" "
#~ "height=\"50\"><br />NeoChat | A client for Matrix, the decentralized "
#~ "communication protocol for instant messaging. | [KDE Apps page](https://"
#~ "apps.kde.org/en/neochat)<br />[KDE Invent page](https://invent.kde.org/"
#~ "network/neochat) |"
#~ msgstr ""
#~ "| Проєкт | Призначення | Посилання | | --- | --- | --- | | <img src="
#~ "\"https://apps.kde.org/app-icons/org.kde.discover.svg\" width=\"50\" "
#~ "height=\"50\"><br />Discover | Програма, яка допоможе вам знайти і "
#~ "встановити пакунки з іншими програмами, іграми та інструментами. | "
#~ "[Сторінка на KDE Apps](https://apps.kde.org/en/discover)<br />[Сторінка "
#~ "на KDE Userbase](https://userbase.kde.org/Discover)<br />[Сторінка на KDE "
#~ "Invent](https://invent.kde.org/plasma/discover) | | <img src=\"https://"
#~ "apps.kde.org/app-icons/org.kde.elisa.svg\" width=\"50\" height="
#~ "\"50\"><br />Elisa | Музичний програвач — простий і приємний у "
#~ "користуванні. | [Домашня сторінка](https://elisa.kde.org/)<br />[Сторінка "
#~ "на KDE Apps](https://apps.kde.org/en/elisa)<br />[Сторінка у вікі "
#~ "спільноти KDE](https://community.kde.org/KDEConnect)<br />[Сторінка на "
#~ "KDE Invent](https://invent.kde.org/multimedia/elisa) | | <img src="
#~ "\"https://invent.kde.org/utilities/kongress/-/raw/master/org.kde.kongress."
#~ "svg\" width=\"50\" height=\"50\"><br />Kongress | Програма-компаньйон для "
#~ "учасників конференцій. | [Сторінка на KDE Invent](https://invent.kde.org/"
#~ "utilities/kongress) | | <img src=\"https://apps.kde.org/app-icons/org.kde."
#~ "neochat.svg\" width=\"50\" height=\"50\"><br />NeoChat | Клієнт Matrix, "
#~ "децентралізованого протоколу спілкування для миттєвого обміну "
#~ "повідомленнями. | [Сторінка на KDE Apps](https://apps.kde.org/en/"
#~ "neochat)<br />[Сторінка на KDE Invent](https://invent.kde.org/network/"
#~ "neochat) |"

#~ msgid ""
#~ "| Page | Topic | | --- | --- | | [Understanding CMakeLists](/docs/"
#~ "kirigami/advanced-understanding_cmakelists) | Learn all about CMake and "
#~ "how to compile your applications. | | [Figuring out main.cpp](/docs/"
#~ "kirigami/advanced-maincpp) | Getting to grips with the central C++ file "
#~ "that handles your applications' initialisation. | | [Connect logic to "
#~ "your QML user interface](/docs/kirigami/advanced-connect_backend) | Add "
#~ "advanced functionality to your Kirigami application and connect it to "
#~ "your UI. |"
#~ msgstr ""
#~ "| Сторінка | Тема | | --- | --- | | [Розбираємося із CMakeLists](/docs/"
#~ "kirigami/advanced-understanding_cmakelists) | Дізнайтеся усе про CMake і "
#~ "те, як збирати ваші програми. | | [Вивчаємо main.cpp](/docs/kirigami/"
#~ "advanced-maincpp) | Розбираємо до дрібниць центральний файл мовою C++, "
#~ "який обробляє ініціалізацію ваших програм. | | [З'єднання логіки з вашим "
#~ "інтерфейсом користувача QML](/docs/kirigami/advanced-connect_backend) | "
#~ "Додавання додаткових функціональних можливостей до вашої програми "
#~ "Kirigami і поєднання їх із вашим інтерфейсом користувача. |"

#~ msgid ""
#~ "| Resource | Topic | | --- | --- | | [Wikibooks C++](https://en.wikibooks."
#~ "org/wiki/C%2B%2B_Programming) | A comprehensive wikibook with C++ lessons "
#~ "and exercises | | [W3Schools C++](https://www.w3schools.com/cpp/cpp_intro."
#~ "asp) | A set of C++ tutorials and other resources aimed at beginners | | "
#~ "[LearnCpp](https://www.learncpp.com/) | Tutorials to get to grips with C+"
#~ "+ | | [cppreference](https://en.cppreference.com/w/) | A reference site "
#~ "for C++ |"
#~ msgstr ""
#~ "| Ресурс | Тема | | --- | --- | | [Вікіпідручник з C++](https://en."
#~ "wikibooks.org/wiki/C%2B%2B_Programming) | Повноцінна вікікнига із уроками "
#~ "та вправами з C++ | | [W3Schools C++](https://www.w3schools.com/cpp/"
#~ "cpp_intro.asp) | Набір підручників з C++ та інших ресурсів для "
#~ "початківців | | [LearnCpp](https://www.learncpp.com/) | Підручники для "
#~ "засвоєння C++ | | [cppreference](https://en.cppreference.com/w/) | "
#~ "Довідковий сайт щодо C++ |"

#~ msgid "controller.h"
#~ msgstr "controller.h"

#~ msgid "controller.cpp"
#~ msgstr "controller.cpp"

#~ msgid "In the `.cpp` file we have two methods, `instance` and `aboutData`."
#~ msgstr "У файлі `.cpp` маємо два методи: `instance` і `aboutData`."

#~ msgid ""
#~ "`instance` just returns a `Controller` object and `aboutData` returns our "
#~ "application data."
#~ msgstr ""
#~ "`instance` просто повертає об'єкт `Controller`, а `aboutData` повертає "
#~ "дані нашої програми."

#~ msgid "introduction"
#~ msgstr "вступ"

#~ msgid "style"
#~ msgstr "стиль"

#~ msgid "components"
#~ msgstr "компоненти"

#~ msgid "advanced"
#~ msgstr "Додатково"
