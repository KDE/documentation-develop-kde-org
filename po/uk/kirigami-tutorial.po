#
# Yuri Chornoivan <yurchor@ukr.net>, 2021, 2022, 2023, 2024, 2025.
msgid ""
msgstr ""
"Project-Id-Version: documentation-develop-kde-org 1.0\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2025-01-08 01:51+0000\n"
"PO-Revision-Date: 2025-01-08 08:41+0200\n"
"Last-Translator: Yuri Chornoivan <yurchor@ukr.net>\n"
"Language-Team: Ukrainian <trans-uk@lists.fedoraproject.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=4; plural=n==1 ? 3 : n%10==1 && n%100!=11 ? 0 : n"
"%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
"X-Generator: Lokalize 23.04.3\n"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Getting started with Kirigami"
msgstr "Вступ до Kirigami"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Kirigami"
msgstr "Kirigami"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Introduction"
msgstr "Вступ"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Style"
msgstr "Стиль"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Components"
msgstr "Компоненти"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Advanced"
msgstr "Додатково"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Kirigami Addons"
msgstr "Додатки Kirigami"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Learning to create your first applications using Kirigami\n"
msgstr "Створюємо ваші перші програми за допомогою Kirigami\n"

#: content/docs/getting-started/kirigami/_index.md:24
msgid ""
"This tutorial will guide you through the process of creating your own "
"convergent application using the [Kirigami framework](/frameworks/kirigami). "
"A *convergent application*, in this context, means people can use the "
"program easily regardless of the device it is running on. If it is on a "
"desktop computer, it will adapt to a large screen and a mouse and keyboard; "
"if it is being used on a mobile device, it will accept input from a "
"touchscreen and adapt to a smaller portrait screen. And so on."
msgstr ""
"У цьому розділі підручника ми ознайомимося із процесом створення вашої "
"власної універсальної програми за допомогою [бібліотеки Kirigami](/"
"frameworks/kirigami). Термін *універсальна програма* у цьому контексті "
"означає, що програмою можна буде без проблем користуватися на будь-яких "
"пристроях, на яких її запущено. Якщо програму буде запущено на звичайному "
"комп'ютері, вона пристосується до великого екрана та користування за "
"допомогою миші та клавіатури; якщо ж програму буде запущено на мобільному "
"пристрої, вона працюватиме із сенсорним екраном та пристосується до малого "
"екрана у книжковому режимі. Тощо."

#: content/docs/getting-started/kirigami/_index.md:32
msgid ""
"Kirigami is built on top of the QML language and Qt Quick Controls 2 "
"components provided by the Qt project. QML has built in support for touch "
"systems, which makes it ideal for mobile apps. Qt Quick components are "
"reusable visual items we can use when building our applications' interfaces. "
"Kirigami is a set of Qt Quick components designed for creating convergent "
"applications."
msgstr ""
"Kirigami побудовано на основі мови програмування QML і компонентів Qt Quick "
"Controls 2, які надаються у межах проєкту Qt. QML побудовано з врахуванням "
"підтримки систем із сенсорним керуванням, що робить його ідеальним для "
"програм для мобільних пристроїв. Компоненти Qt Quick є придатними для "
"повторного використання візуальними елементами, якими ми можемо скористатися "
"при побудові інтерфейсів наших програм. Kirigami — набір компонентів Qt "
"Quick, які розроблено для створення універсальних програм."

#: content/docs/getting-started/kirigami/_index.md:38
msgid ""
"While you will use QML to create the visual part of your application, the "
"business logic—the code that does the heavy lifting for your application's "
"functionality—is usually created in C++ for performance reasons. We will "
"also explore how to integrate our business logic with our UI in the "
"tutorials below."
msgstr ""
"Одночасно із використанням QML для створення візуальної частини програми, "
"робочу логіку — код, який надаватиме вашій програмі функціональних "
"можливостей — зазвичай, пишуть на C++ з міркувань швидкодії. У наведених "
"нижче розділах підручника ми також вивчимо питання інтеграції робочої логіки "
"із інтерфейсом користувача."

#: content/docs/getting-started/kirigami/addons-about/index.md:0
msgid "FormCard About pages"
msgstr "Сторінки «Про програму» FormCard"

#: content/docs/getting-started/kirigami/addons-about/index.md:0
msgid "Learn to create About pages to credit your application."
msgstr ""
"Дізнайтеся про те, як створювати сторінки «Про програму» для опису вашої "
"програми."

#: content/docs/getting-started/kirigami/addons-about/index.md:8
#: content/docs/getting-started/kirigami/addons-delegates/index.md:8
#: content/docs/getting-started/kirigami/addons-introduction/index.md:8
msgid ""
"Kirigami Addons is an additional set of visual components that work well on "
"mobile and desktop and are guaranteed to be cross-platform. It uses Kirigami "
"under the hood to create its components."
msgstr ""
"Додатки Kirigami — це додатковий набір візуальних компонентів, які добре "
"працюють на мобільних пристроях і комп'ютерах і гарантовано є "
"багатоплатформовими. З лаштунками вони використовують Kirigami для створення "
"своїх компонентів."

#: content/docs/getting-started/kirigami/addons-about/index.md:10
msgid ""
"Some of those components allow you to credit your work and the work of other "
"contributors in your project, as well as mention the frameworks being used "
"in your application: [AboutKDE](https://api.kde.org/frameworks/kirigami-"
"addons/html/classAboutKDE.html) and AboutPage."
msgstr ""
"Деякі з цих компонентів надають змогу показати вашу роботу та роботу інших "
"учасників у вашому проєкті, а також згадати бібліотеки, які використовуються "
"у вашій програмі: [Про KDE](https://api.kde.org/frameworks/kirigami-addons/"
"html/classAboutKDE.html) і AboutPage."

#: content/docs/getting-started/kirigami/addons-about/index.md:12
msgid "About KDE"
msgstr "Про KDE"

#: content/docs/getting-started/kirigami/addons-about/index.md:14
msgid ""
"Each new button we created in the previous step should open a new page. You "
"can add new pages by instantiating them as [Components](docs:qtqml;QtQml."
"Component) and then using `pageStack.layers.push()` for each button to load "
"that page in our `Main.qml`:"
msgstr ""
"Кожна нова кнопка, яку ми створили на попередньому кроці, має відкривати "
"нову сторінку. Ви можете додати нові сторінки, створивши їх як [компоненти]"
"(docs:qtqml;QtQml.Component), а потім використавши `pageStack.layers.push()` "
"для кожної кнопки, щоб завантажити цю сторінку до нашого `Main.qml`:"

#: content/docs/getting-started/kirigami/addons-about/index.md:18
msgid ""
"That's it really! All it takes is instantiating `FormCard.AboutKDE`. You "
"should see something like this after clicking the AboutKDE button:"
msgstr ""
"Ось і справді! Усе, що потрібно, це створити екземпляр `FormCard.AboutKDE`. "
"Ви маєте побачити щось подібне після натискання кнопки AboutKDE:"

#: content/docs/getting-started/kirigami/addons-about/index.md:22
msgid "About Page"
msgstr "Сторінка «Про програму»"

#: content/docs/getting-started/kirigami/addons-about/index.md:24
msgid ""
"The application's AboutPage is slightly more complex, but it's still very "
"simple to use."
msgstr ""
"Сторінка AboutPage програми є дещо складнішою, але і нею дуже просто "
"користуватися."

#: content/docs/getting-started/kirigami/addons-about/index.md:26
msgid ""
"For a simple about page that uses the data set in by `KAboutData::"
"setApplicationData(aboutData);` in `main.cpp` add the following to your "
"`Main.qml`:"
msgstr ""
"Щоб отримати просту інформаційну сторінку, де використано набір даних "
"`KAboutData::setApplicationData(aboutData);` у `main.cpp`, додайте таке до "
"вашого `Main.qml`:"

#: content/docs/getting-started/kirigami/addons-about/index.md:30
msgid "The About page of our application should look like this:"
msgstr "Сторінка «Про програму» нашої програми має виглядати так:"

#: content/docs/getting-started/kirigami/addons-about/index.md:34
msgid "Using JSON instead of KAboutData"
msgstr "Використання JSON замість KAboutData"

#: content/docs/getting-started/kirigami/addons-about/index.md:36
msgid ""
"Instead of letting your about page get information from [KAboutData](docs:"
"kcoreaddons;KAboutData), it is possible to pass a JSON object directly. You "
"will still need to use [QApplication::setWindowIcon()](docs:qtwidgets;"
"QApplication::setWindowIcon) in your `main.cpp` in order for your "
"application icon to show up."
msgstr ""
"Замість того, щоб надавати вашій сторінці «Про програму» інформації з "
"[KAboutData](docs:kcoreaddons;KAboutData), можна передати об'єкт JSON "
"безпосередньо. Вам все одно потрібно буде використовувати [QApplication::"
"setWindowIcon()](docs:qtwidgets;QApplication::setWindowIcon) у вашому `main."
"cpp`, щоб було показано піктограму вашої програми."

#: content/docs/getting-started/kirigami/addons-about/index.md:38
msgid "Create a `MyAboutPage.qml` like this:"
msgstr "Створіть `MyAboutPage.qml` з таким вмістом:"

#: content/docs/getting-started/kirigami/addons-about/index.md:42
msgid "And then adjust your `Main.qml` to include your new about page:"
msgstr ""
"І внесіть зміни до `Main.qml` так, щоб включити до нього нашу нову "
"інформаційну сторінку:"

#: content/docs/getting-started/kirigami/addons-about/index.md:46
msgid ""
"The main JSON object here contains the keys `displayName`, `productName`, "
"`homepage` and so on. The keys `authors`, `credits`, `translators` and "
"`licenses` can each be passed an array of objects. The objects passed to "
"`authors`, `credits` and `translators` share the same keys so that they can "
"be displayed each in their own section, while `licenses` includes the keys "
"`name`, `text` and `spdx` for each license added, as it is not uncommon for "
"the same project to include multiple licenses."
msgstr ""
"Головний об'єкт JSON містить ключі `displayName`, `productName`, `homepage` "
"тощо. Кожному з ключів `authors`, `credits`, `translators` і `licenses` "
"можна передати масив об'єктів. Об'єкти, передані до `authors`, `credits` і "
"`translators`, мають однакові ключі, тому їх можна показувати у окремих "
"розділах для кожного, тоді як `licenses` включає ключі `name`, `text` і "
"`spdx` для кожної доданої ліцензії, оскільки часто той самий проєкт "
"ліцензовано з використанням різних ліцензій."

#: content/docs/getting-started/kirigami/addons-about/index.md:48
msgid ""
"These keys are optional, but a reasonable minimum amount of keys is expected "
"to make your application have no empty fields: `displayName`, `version`, "
"`description`, `homepage`, `copyrightStatement` and `authors`. You are "
"encouraged to fill as many key as possible, however."
msgstr ""
"Ці ключі є необов'язковими, але очікуваною є розумна мінімальна кількість "
"ключів, щоб ваша програма не мала порожніх полів: `displayName`, `version`, "
"`description`, `homepage`, `copyrightStatement` і `authors`. Проте вам "
"рекомендується заповнити якомога більше ключів."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:0
msgid "Form delegates in your settings pages"
msgstr "Делегати форми на наших сторінках параметрів"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:0
msgid "Create elegant custom settings pages."
msgstr "Створіть елегантні нетипові сторінки параметрів."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:10
msgid ""
"You have learned how to add About and AboutKDE pages to your application. "
"Now you will be able to use their same inner components to create your "
"settings pages."
msgstr ""
"Ви навчилися додавати сторінки About та AboutKDE до вашої програми. Тепер ви "
"зможете використовувати їхні внутрішні компоненти для створення сторінок "
"налаштувань."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:12
msgid "The project structure should look like this:"
msgstr "Структура проєкту має виглядати так:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:23
msgid "Needed Changes"
msgstr "Потрібні зміни"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:25
msgid "Change `Main.qml` to include our new Settings page:"
msgstr ""
"Внесемо зміни до `Main.qml` так, щоб включити до нього нашу нову сторінку "
"Settings:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:85
msgid ""
"We can now start checking out the components used to create our Settings "
"page: the Form Card and its Delegates."
msgstr ""
"Тепер ми можемо розпочати перевірку компонентів, які використовуються для "
"створення сторінки налаштувань: картки форми та її делегатів."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:87
msgid "Form Delegates"
msgstr "Делегати форми"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:89
msgid "FormCard and FormCardPage"
msgstr "FormCard і FormCardPage"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:91
msgid ""
"[FormCard.FormCard](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormCard.html) is the main component we will be using to group all its "
"child components, the Delegates."
msgstr ""
"[FormCard.FormCard](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormCard.html) є головним компонентом, яким ми користуватимемося для "
"групування його дочірніх компонентів, делегатів."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:93
msgid ""
"We used a form card in the [Kirigami Addons introduction](/docs/getting-"
"started/kirigami/addons-introduction) before. Its main purpose is to serve "
"as a container for other components while following a color different from "
"the background, in a similar manner to a [Kirigami.Card](docs:kirigami2;"
"Card)."
msgstr ""
"Раніше ми скористалися карткою форми у [вступі до додатків Kirigami](/docs/"
"getting-started/kirigami/addons-introduction). Її основним призначенням є "
"робота контейнером для інших компонентів, маючи колір, який відрізняється "
"від кольору тла, подібно до [Kirigami.Card](docs:kirigami2;Card)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:95
msgid "Create a new `SettingsPage.qml` file:"
msgstr "Створіть файл `SettingsPage.qml`:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:103
#: content/docs/getting-started/kirigami/addons-delegates/index.md:107
msgid "This is where all our delegates go!"
msgstr "Ось куди ми впишемо усі делегати!"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:112
msgid ""
"Since we are making a separate QML file for our Settings page, and since we "
"need to prepare for potential scrolling in our page, we use a `FormCard."
"FormCardPage`, which inherits [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage)."
msgstr ""
"Оскільки ми створюємо окремий файл QML для нашої сторінки налаштувань і "
"оскільки нам потрібно підготуватися до можливого гортання нашої сторінки, ми "
"використовуємо `FormCard.FormCardPage`, який успадковує [Kirigami."
"ScrollablePage](docs:kirigami2;ScrollablePage)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:114
msgid ""
"The nice thing about the form card page is that it comes with an internal "
"layout, so no additional ColumnLayout is needed and our delegates can be "
"added directly to it."
msgstr ""
"Приємна особливість сторінки картки форми полягає у тому, що вона має "
"внутрішній макет, тому додатковий ColumnLayout не потрібен, і наших "
"делегатів можна додавати безпосередньо до нього."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:116
msgid ""
"{{< alert color=\"info\" title=\"Note\" >}} It is possible to use FormCard "
"delegates directly with a Kirigami.ScrollablePage, but in that case you will "
"need to add your own layouts. {{< /alert >}}"
msgstr ""
"{{< alert color=\"info\" title=\"Зауваження\" >}} Можна використовувати "
"делегати FormCard безпосередньо за допомогою Kirigami.ScrollablePage, але у "
"цьому випадку вам доведеться додати ваші власні компонування. {{< /alert >}}"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:120
msgid "FormHeader"
msgstr "FormHeader"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:122
msgid ""
"For every [FormCard](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormCard.html) you want to create, you can create a [FormHeader]"
"(https://api.kde.org/frameworks/kirigami-addons/html/classFormHeader.html) "
"just before it. The header uses bold text and shows up right above the form "
"card."
msgstr ""
"Для кожної [FormCard](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormCard.html), яку ви хочете створити, ви можете створити [FormHeader]"
"(https://api.kde.org /frameworks/kirigami-addons/html/classFormHeader.html) "
"безпосередньо перед ним. У заголовку використовується напівжирний текст, "
"який буде показано безпосередньо над карткою форми."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:133
#: content/docs/getting-started/kirigami/addons-delegates/index.md:141
msgid "Our delegates go here..."
msgstr "Тут будуть наші делегати…"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:146
msgid "FormTextDelegate and FormSectionText"
msgstr "FormTextDelegate і FormSectionText"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:148
msgid "Let's start simple, with plain text."
msgstr "Розпочнімо із простого — звичайного тексту."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:150
msgid ""
"`FormSectionText` simply adds a thin delegate containing a label. "
"`FormTextDelegate` has text and a grayed out description."
msgstr ""
"`FormSectionText` просто додає тонкий делегат, що містить мітку. "
"`FormTextDelegate` містить текст і показаний сірим опис."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:186
msgid ""
"We add some dummy text for the hypothetical theme detection. If we wanted to "
"have actual color scheme detection, in the future it could be done similarly "
"to [Neochat](https://apps.kde.org/neochat) ([code here](https://github.com/"
"KDE/neochat/blob/master/src/colorschemer.cpp)), making use of a C++ model "
"with [KColorSchemeManager](docs:kconfigwidgets;KColorSchemeManager)."
msgstr ""
"Ми додаємо деякий фіктивний текст для виявлення гіпотетичної теми. Якби ми "
"хотіли мати фактичне визначення схеми кольорів, у майбутньому це можна було "
"б зробити подібно до [Neochat](https://apps.kde.org/neochat) ([код тут]"
"(https://github.com/KDE/neochat/blob/master/src/colorschemer.cpp)), "
"використовуючи модель C++ із [KColorSchemeManager](docs:kconfigwidgets;"
"KColorSchemeManager)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:188
msgid ""
"In the Online Accounts section, we see an additional property, `leading`. We "
"can add an [Item](docs:qtquick;Item) to it so that it appears before the "
"text. Its opposite property, `trailing`, would be able to show an Item after "
"the text, but we won't use it in our program."
msgstr ""
"У розділі «Облікові записи в інтернеті» ми бачимо додаткову властивість "
"`leading`. Ми можемо додати до нього [Item](docs:qtquick;Item), щоб він "
"з'являвся перед текстом. Його протилежна властивість, `trailing`, надає "
"можливість показувати елемент після тексту, але ми не будемо використовувати "
"його у нашій програмі."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:190
msgid ""
"We use a [Kirigami.Icon](docs:kirigami2;Icon) here for simplicity, but this "
"could also be implemented using a [Kirigami.Avatar](docs:kirigami2;Avatar) "
"that grabs the information from a model, as is done in Neochat [here]"
"(https://invent.kde.org/network/neochat/-/blob/master/src/qml/Settings/"
"AccountsPage.qml)."
msgstr ""
"Ми використовуємо тут [Kirigami.Icon](docs:kirigami2;Icon) для простоти, але "
"це також можна реалізувати за допомогою [Kirigami.Avatar](docs:kirigami2;"
"Avatar), який збирає інформацію з моделі, як це робиться у Neochat [тут]"
"(https://invent.kde.org/network/neochat/-/blob/master/src/qml/Settings/"
"AccountsPage.qml)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:192
msgid "It should end up looking like this:"
msgstr "Врешті, маємо отримати таке:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:196
msgid "FormButtonDelegate"
msgstr "FormButtonDelegate"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:198
msgid ""
"The [FormButtonDelegate](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormButtonDelegate.html) is visually similar to a FormTextDelegate, but "
"it is clickable and shows an arrow pointing to the right. We used it in the "
"[Kirigami Addons introduction](/docs/getting-started/kirigami/addons-"
"introduction) before."
msgstr ""
"[FormButtonDelegate](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormButtonDelegate.html) візуально схожий на FormTextDelegate, але його "
"можна натиснути, і на ньому показано стрілку, що вказує праворуч. Раніше ми "
"використовували його у [вступі до додатків Kirigami](/docs/getting-started/"
"kirigami/addons-introduction)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:200
msgid ""
"While the FormTextDelegate had the `leading` and `trailing` properties to "
"show an item before and after the main content, the FormButtonDelegate only "
"has the `leading` property, because the right side is occupied by the arrow."
msgstr ""
"У той час як FormTextDelegate мав властивості `leading` і `trailing` для "
"показу елемента до та після основного вмісту, FormButtonDelegate має лише "
"властивість `leading`, оскільки права сторона зайнята стрілкою."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:241
msgid ""
"We use its `icon.name` property to set a plus (+) icon to appear after the "
"space where the `leading` would appear, and before the main content. This is "
"a common pattern to indicate your button will add something to a list."
msgstr ""
"Ми використовуємо його властивість `icon.name`, щоб установити піктограму "
"плюса (+), яка з'являється після місця, де з'являтиметься `leading`, і перед "
"основним вмістом. Це загальний шаблон, який вказує, що ваша кнопка додасть "
"щось до списку."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:243
msgid ""
"Since this example is for simple illustrative purposes, we don't delve deep "
"into what would be done once the button is clicked: it just prints \"Clicked!"
"\" to the terminal. We _could_ make a new page for account creation that "
"adds another user to a model, then push the page into view, similarly to "
"what we did in `Main.qml`."
msgstr ""
"Оскільки цей приклад наведено для простої ілюстрації, ми не заглиблюємось у "
"те, що буде зроблено після натискання кнопки: він просто друкує \"Clicked!\" "
"до терміналу. Ми _можемо_ створити нову сторінку для створення облікового "
"запису, яка додає іншого користувача до моделі, а потім розмістимо сторінку "
"в полі зору, подібно до того, що ми зробили в `Main.qml`."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:247
msgid "FormRadioDelegate, FormCheckDelegate and FormSwitchDelegate"
msgstr "FormRadioDelegate, FormCheckDelegate і FormSwitchDelegate"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:249
msgid ""
"The RadioButton, CheckBox and Switch are very commonly used components in "
"any user interface. Kirigami Addons provides them as [FormRadioDelegate]"
"(https://api.kde.org/frameworks/kirigami-addons/html/classFormRadioDelegate."
"html), [FormCheckDelegate](https://api.kde.org/frameworks/kirigami-addons/"
"html/classFormCheckDelegate.html) and [FormSwitchDelegate](https://api.kde."
"org/frameworks/kirigami-addons/html/classFormSwitchDelegate.html)."
msgstr ""
"RadioButton, CheckBox і Switch є дуже поширеними компонентами для будь-якого "
"інтерфейсу користувача. Додатки Kirigami надають їх як [FormRadioDelegate]"
"(https://api.kde.org/frameworks/kirigami-addons/html/classFormRadioDelegate."
"html), [FormCheckDelegate](https://api.kde.org/frameworks/kirigami-addons/"
"html/classFormCheckDelegate.html) і [FormSwitchDelegate](https://api.kde.org/"
"frameworks/kirigami-addons/html/classFormSwitchDelegate.html)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:251
msgid ""
"Their only main properties are `text` and `description`. They are different "
"in usage because they all inherit [AbstractButton](docs:qtquickcontrols;"
"QtQuick.Controls.AbstractButton), and so you are expected to use its signals "
"and handlers: checked and onChecked, toggled and onToggled, clicked and "
"onClicked."
msgstr ""
"Їх єдиними основними властивостями є `text` і `description`. Вони "
"відрізняються у використанні, тому що всі вони успадковують [AbstractButton]"
"(docs:qtquickcontrols;QtQuick.Controls.AbstractButton), і тому ви повинні "
"використовувати його сигнали та обробники: checked і onChecked, toggled і "
"onToggled, clicked і onClicked."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:253
msgid ""
"We want to create some autosave functionality in our application, and we "
"want to only show its settings if the user has enabled this functionality. "
"Create a new section using a [FormCard](https://api.kde.org/frameworks/"
"kirigami-addons/html/classFormCard.html) and a [FormHeader](https://api.kde."
"org/frameworks/kirigami-addons/html/classFormHeader.html), then add a "
"[FormSwitchDelegate](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormSwitchDelegate.html) and a [FormRadioDelegate](https://api.kde.org/"
"frameworks/kirigami-addons/html/classFormRadioDelegate.html)."
msgstr ""
"Ми хочемо створити деякі функції автозбереження у нашій програмі, і ми "
"хочемо показувати її налаштування, лише якщо користувач увімкнув цю функцію. "
"Створіть новий розділ за допомогою [FormCard](https://api.kde.org/frameworks/"
"kirigami-addons/html/classFormCard.html) і [FormHeader](https://api.kde.org/"
"frameworks/ kirigami-addons/html/classFormHeader.html), потім додайте "
"[FormSwitchDelegate](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormSwitchDelegate.html) і [FormRadioDelegate](https:// api.kde.org/"
"frameworks/kirigami-addons/html/classFormRadioDelegate.html)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:280
msgid ""
"We bind the visibility of each radio button to a switch, so they only appear "
"when the switch is enabled."
msgstr ""
"Ми пов'яжемо видимість кожного пункту варіанта із перемикачем, тому їх буде "
"показано, лише якщо увімкнено перемикач."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:282
msgid "Best Practices"
msgstr "Найкращі підходи"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:284
msgid "<details><summary>Click here to read more</summary>\n"
msgstr "<details><summary>Натисніть тут, щоб дізнатися більше</summary>\n"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:286
msgid ""
"If you have some programming background in imperative languages such as C++, "
"you might be tempted to set the `checked` property of the switch to turn the "
"visibility of the radio buttons to `true` with a JavaScript assignment such "
"as:"
msgstr ""
"Якщо ви маєте досвід програмування в імперативних мовах, таких як C++, у вас "
"може виникнути спокуса встановити властивість `checked` перемикача, щоб "
"змінити видимість пунктів варіантів на `true` за допомогою призначення "
"JavaScript, наприклад:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:296
msgid ""
"This is not very efficient for QML's declarative language and its signals "
"and slots. Try to use QML bindings like in the case of `visible: autosave."
"checked` as much as possible instead of JavaScript expressions."
msgstr ""
"Це не дуже ефективно для декларативної мови QML та її сигналів і слотів. "
"Намагайтеся якомога більше використовувати прив'язки QML, як у випадку "
"`visible: autosave.checked` замість виразів JavaScript."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:298
msgid ""
"See [this page](https://doc.qt.io/qt-6/qtquick-bestpractices.html#prefer-"
"declarative-bindings-over-imperative-assignments) for details."
msgstr ""
"Див. [цю сторінку](https://doc.qt.io/qt-6/qtquick-bestpractices.html#prefer-"
"declarative-bindings-over-imperative-assignments), щоб дізнатися більше."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:300
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:602
#: content/docs/getting-started/kirigami/introduction-actions/index.md:80
#: content/docs/getting-started/kirigami/introduction-actions/index.md:173
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:207
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:58
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:212
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:247
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:265
msgid "</details>\n"
msgstr "</details>\n"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:306
msgid ""
"To test our checkbox, we can add a new [FormCheckDelegate](https://api.kde."
"org/frameworks/kirigami-addons/html/classFormCheckDelegate.html) to our "
"General section."
msgstr ""
"Щоб перевірити наш пункт варіанта, ми можемо додати новий [FormCheckDelegate]"
"(https://api.kde.org/frameworks/kirigami-addons/html/classFormCheckDelegate."
"html) до нашого розділу «Загальне»."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:331
msgid ""
"Here we use the `onToggled` [signal handler](https://doc.qt.io/qt-6/qtqml-"
"syntax-signals.html) to show some dummy text to simulate a tray icon "
"appearing in the system. If you really wanted to, you could easily implement "
"a tray icon using [SystemTrayIcon](https://doc.qt.io/qt-6/qml-qt-labs-"
"platform-systemtrayicon.html)."
msgstr ""
"Тут ми використовуємо `onToggled` [обробник сигналів](https://doc.qt.io/qt-6/"
"qtqml-syntax-signals.html), щоб показати деякий фіктивний текст для імітації "
"піктограми у лотку, що з'являється у системі. Якщо ви справді захочете, ви "
"можете легко додати піктограму у лотку за допомогою [SystemTrayIcon](https://"
"doc.qt.io/qt-6/qml-qt-labs-platform-systemtrayicon.html)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:333
msgid "So far our application should look like this:"
msgstr "На цьому кроці вікно нашої програми має виглядати так:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:337
msgid "FormComboBoxDelegate"
msgstr "FormComboBoxDelegate"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:339
msgid ""
"The common ComboBox component can be created using a [FormComboBoxDelegate]"
"(https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormComboBoxDelegate.html)."
msgstr ""
"Типовий компонент ComboBox можна створити за допомогою [FormComboBoxDelegate]"
"(https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormComboBoxDelegate.html)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:341
msgid ""
"This combobox has several useful properties we can make use of: `editable`, "
"`displayText` and `displayMode`."
msgstr ""
"Цей спадний список має декілька корисних властивостей, якими ми можемо "
"скористатися: `editable`, `displayText` and `displayMode`."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:343
msgid ""
"Setting `editable: true` allows the user to edit the text of the combobox, "
"which is useful in case adding new combobox options is needed:"
msgstr ""
"Налаштування `editable: true` надає змогу користувачеві редагувати текст "
"спадного списку, що корисно, якщо потрібно додати нові пункти до спадного "
"списку:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:347
msgid ""
"Whenever you need to show additional text before each option, you can use "
"something like `displayText: \"Profile: \" + currentText`:"
msgstr ""
"Щоразу, коли вам потрібно показати додатковий текст перед кожним пунктом, ви "
"можете використати щось подібне до `displayText: \"Profile: \" + "
"currentText`:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:351
msgid ""
"And the most interesting one, which we will be using in our example, is "
"`displayMode`. It can have three options:"
msgstr ""
"І найцікавішим, який ми будемо використовувати в нашому прикладі, є "
"`displayMode`. Він може мати три варіанти:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:353
msgid ""
"**FormComboBoxDelegate.ComboBox**: the standard small box showing a list of "
"options."
msgstr ""
"**FormComboBoxDelegate.ComboBox**: стандартна мала панель зі списком пунктів."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:357
msgid ""
"**FormComboBoxDelegate.Dialog**: a dialog showing a list of options in the "
"middle of the window, like a [Kirigami.OverlaySheet](docs:kirigami2;"
"OverlaySheet)."
msgstr ""
"**FormComboBoxDelegate.Dialog**: діалогове вікно, у якому буде показано "
"список пунктів посередині вікна, подібне до [Kirigami.OverlaySheet](docs:"
"kirigami2;OverlaySheet)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:361
msgid ""
"**FormComboBoxDelegate.Page**: a new page containing a list of options shown "
"in a separate window."
msgstr ""
"**FormComboBoxDelegate.Page**: нова сторінка, що містить список пунктів, які "
"показано в окремому вікні."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:365
msgid ""
"Add the following between the \"Current Color Scheme\" and \"Show Tray Icon"
"\" delegates in your \"General\" form card."
msgstr ""
"Додайте таке між делегатами \"Current Color Scheme\" і \"Show Tray Icon\" у "
"картці форми \"General\"."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:378
msgid "With the checkbox, our Settings page should look like this:"
msgstr "З пунктом для позначки наша сторінка «Параметри» має виглядати так:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:382
msgid "FormDelegateSeparator"
msgstr "FormDelegateSeparator"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:384
msgid ""
"Our Settings page is taking shape, but each section is starting to get long. "
"We can add a few FormDelegateSeparators to make our page tidier:"
msgstr ""
"Наша сторінка налаштувань набуває форми, але її розділи стають надто "
"довгими. Ми можемо додати кілька FormDelegateSeparators, щоб зробити нашу "
"сторінку більш охайною:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:388
msgid ""
"Generally, you may use separators whenever you see major distinctions "
"between components, although the choice of where to place them is ultimately "
"yours. For example, in the General section, the checkbox differs from its "
"previous components as it doesn't start with text; in the Autosave section, "
"the separator groups the radio buttons together; and in the Accounts "
"section, adding a separator between the last account and the button provides "
"some additional focus to the button."
msgstr ""
"Як правило, ви можете використовувати роздільники щоразу, коли бачите великі "
"відмінності між компонентами, хоча вибір місця їх розміщення залишається за "
"вами. Наприклад, у розділі «Загальні» пункт варіанта відрізняється від "
"попередніх компонентів тим, що він не починається з тексту; у розділі "
"автозбереження роздільник об'єднує перемикачі; а в розділі «Облікові записи» "
"додавання роздільника між останнім обліковим записом і кнопкою забезпечує "
"додатковий акцент на кнопці."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:390
msgid ""
"The `above` and `below` properties are rather self-explanatory when it comes "
"to their use: you pass the `id` of the components above and below the "
"separator. When they are set, the separator will swiftly disappear whenever "
"the above or below item is highlighted/hovered. They are most useful, for "
"instance, when you need to generate components dynamically and you can't "
"automatically assume which item will come immediately before or after the "
"separator. That would be the case in the Accounts section of our application "
"once the logic to add new accounts were actually implemented, in which case "
"we could always grab the last item in the model to do so."
msgstr ""
"Властивості `above` і `below` досить зрозумілі, коли йдеться про їхнє "
"використання: ви передаєте `id` компонентів над і під роздільником. Коли їх "
"установлено, роздільник швидко зникатиме, при підсвічуванні або наведенні "
"вказівника миші на пункт вище або нижче. Вони найбільш корисні, наприклад, "
"коли вам потрібно генерувати компоненти динамічно, а ви не можете "
"автоматично спрогнозувати, який елемент буде безпосередньо перед "
"роздільником або після нього. Так було б у розділі «Облікові записи» нашої "
"програми, де було реалізовано логіку додавання нових облікових записів, коли "
"ми завжди могли б отримати останній елемент у моделі, щоб зробити це."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:394
msgid ""
"Notice how the separator above the tray icon setting does not appear while "
"it is hovered."
msgstr ""
"Зверніть увагу на те, що роздільник над налаштуванням піктограми у лотку не "
"з'являється, якщо на нього навести вказівник."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:0
msgid "Introduction to Kirigami Addons"
msgstr "Вступ до додатків Kirigami"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:0
msgid "Get acquainted with Kirigami Addons components"
msgstr "Знайомимося із компонентами додатків Kirigami"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:10
msgid ""
"Here you will be setting up your new Kirigami Addons project and be "
"introduced to a few useful components."
msgstr ""
"Тут ви налаштуєте свій новий проєкт додатків Kirigami і познайомитеся з "
"кількома корисними компонентами."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:12
msgid ""
"These components make use of KDE's localization facilities, so before we "
"start using these, we will need to set a little project that makes use of "
"[KLocalizedContext](docs:ki18n;KLocalizedContext)."
msgstr ""
"Ці компоненти використовують засоби локалізації KDE, тому перед тим, як ми "
"почнемо ними користуватися, нам потрібно буде налаштувати невеликий проєкт, "
"який використовує [KLocalizedContext](docs:ki18n;KLocalizedContext)."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:14
msgid "Setting up your project"
msgstr "Налаштовування вашого проекту"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:16
msgid "The initial project structure will look like so:"
msgstr "Початкова структура проєкту має бути такою:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:25
#: content/docs/getting-started/kirigami/introduction-actions/index.md:145
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:94
msgid "Tip"
msgstr "Підказка"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:27
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:96
msgid "You can quickly create this file structure with:"
msgstr "Ви можете швидко створити цю файлову систему ось так:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:37
msgid "We start by using a very standard `CMakeLists.txt`:"
msgstr "Ми почнемо з використання зовсім стандартного `CMakeLists.txt`:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:41
msgid "The interesting part will be the `main.cpp`:"
msgstr "Цікавою частиною буде `main.cpp`:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:45
msgid ""
"If you have read our [KXmlGui tutorial](/docs/getting-started/kxmlgui) or "
"the last Kirigami tutorial on the [Kirigami About page](/docs/getting-"
"started/kirigami/advanced-add_about_page), much of this will seem familiar "
"to you."
msgstr ""
"Якщо ви вже прочитали наш [підручник з KXmlGui](/docs/getting-started/"
"kxmlgui) або останній підручник з Kirigami на [сторінці про Kirigami](/docs/"
"getting-started/kirigami/advanced-add_about_page), ви вже знайомі зі значною "
"частиною цього розділу."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:47
msgid ""
"We create our application and use [KAboutData's](docs:kcoreaddons;"
"KAboutData) default constructor to add the metadata of our application, add "
"ourselves as an author, and then use [setApplicationData()](docs:kcoreaddons;"
"KAboutData::setApplicationData) to finish the process. For later, we also "
"set an application icon that comes from the system theme."
msgstr ""
"Ми створюємо нашу програму та використовуємо типовий конструктор [KAboutData]"
"(docs:kcoreaddons;KAboutData), щоб додати метадані нашої програми, додаємо "
"себе як автора, а потім використовуємо [setApplicationData()](docs:"
"kcoreaddons;KAboutData::setApplicationData), щоб завершити процес. Надалі ми "
"також встановлюємо піктограму програми, яка походить із загальносистемної "
"теми."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:49
msgid ""
"We then use a lambda in [qmlRegisterSingletonType](docs:qtqml;QQmlEngine::"
"qmlRegisterSingletonType) to directly send the metadata of our application "
"to the QML side, exposing its properties."
msgstr ""
"Далі ми використаємо лямбду у [qmlRegisterSingletonType](docs:qtqml;"
"QQmlEngine::qmlRegisterSingletonType) для безпосереднього надсилання "
"метаданих вашої програми на бік QML, відкриваючи її властивості."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:51
msgid ""
"We then instantiate our QML engine, and set its [context](docs:qtqml;"
"QQmlContext) to use KDE's [KLocalizedContext](docs:ki18n;KLocalizedContext), "
"used to integrate translated strings, passing the just created engine as a "
"parameter."
msgstr ""
"Потім ми створюємо екземпляр нашого рушія QML і встановлюємо його [контекст]"
"(docs:qtqml;QQmlContext) на використання [KLocalizedContext](docs:ki18n;"
"KLocalizedContext) KDE, який використовується для інтеграції перекладених "
"рядків, передаючи щойно створений рушій як параметр."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:53
msgid ""
"We simply load our QML file from the resource file, and now we just need to "
"take care of our initial QML file."
msgstr ""
"Ми просто завантажуємо наш файл QML із файла ресурсів, і тепер нам потрібно "
"лише подбати про наш початковий файл QML."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:55
msgid "FormCard and FormButtonDelegate"
msgstr "FormCard і FormButtonDelegate"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:57
msgid ""
"The idea for our app is to design our own Kirigami Addons gallery, "
"showcasing multiple components, one per page. The main page will contain a "
"simple list of buttons in a [ColumnLayout](https://doc.qt.io/qt-6/qml-"
"qtquick-layouts-columnlayout.html), each opening a separate page."
msgstr ""
"Ідея нашого додатка полягає в тому, щоб розробити власну галерею додатків "
"Kirigami, демонструючи кілька компонентів, по одному на сторінку. Головна "
"сторінка міститиме простий список кнопок у [ColumnLayout](https://doc.qt.io/"
"qt-6/qml-qtquick-layouts-columnlayout.html), кожна з яких відкриватиме "
"окрему сторінку."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:59
msgid "Initially, our `Main.qml` should look like this:"
msgstr "Спочатку, наш `Main.qml` має виглядати так:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:63
msgid ""
"We use our handy [pageStack](/docs/getting-started/kirigami/components-"
"pagerow_pagestack) to set the initial page to a [Kirigami.ScrollablePage]"
"(docs:kirigami2;ScrollablePage)."
msgstr ""
"Ми скористаємося нашим зручним [pageStack](/docs/getting-started/kirigami/"
"components-pagerow_pagestack) для встановлення для початкової сторінки "
"варіанта [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage)."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:65
msgid ""
"While we could use a [FormLayout](/docs/getting-started/kirigami/components-"
"formlayouts) together with [QtQuick Controls components](components-"
"controls) to achieve our goal, here you will be introduced to [FormCard]"
"(https://api.kde.org/frameworks/kirigami-addons/html/classFormCard.html)."
msgstr ""
"Хоча ми могли б використовувати [FormLayout](/docs/getting-started/kirigami/"
"components-formlayouts) разом із [компонентами QtQuick Controls](components-"
"controls) для досягнення нашої мети, тут ви познайомитеся з [FormCard]"
"(https://api.kde.org/frameworks/kirigami-addons/html/classFormCard.html)."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:67
msgid ""
"The main purpose of a FormCard is to serve as a container for other "
"components while following a color different from the background, in a "
"similar manner to a [Kirigami.Card](docs:kirigami2;Card), but for settings "
"windows. You can have multiple FormCards in your application to indicate "
"different sections. Your FormCard is also expected to be a direct child of a "
"ColumnLayout."
msgstr ""
"Основне призначення FormCard — слугувати контейнером для інших компонентів, "
"використовуючи колір, відмінний від фону, подібно до [Kirigami.Card](docs:"
"kirigami2;Card), але для вікон налаштувань. Ви можете мати кілька FormCards "
"у своїй програмі для позначення різних розділів. Очікується, що ваша "
"FormCard буде прямою дочірньою формою ColumnLayout."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:69
msgid ""
"Importing `org.kde.kirigamiaddons.formcard` makes all FormCard components "
"available to your QML file."
msgstr ""
"Імпортування `org.kde.kirigamiaddons.formcard` робить доступними для вашого "
"файла QML усі компоненти FormCard."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:71
msgid ""
"We will have only a single section in our main page, so we add a single "
"FormCard:"
msgstr ""
"У нас буде лише один розділ на нашій головній сторінці, тому ми додамо одну "
"FormCard:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:75
msgid ""
"The great thing about FormCard is that it does automatic layouting for you. "
"In other words, just the order of its components is enough to indicate their "
"position inside the FormCard, no [Layout attached properties](https://doc.qt."
"io/qt-6/qml-qtquick-layouts-layout.html) are necessary and you are expected "
"not to use [anchors](https://doc.qt.io/qt-6/qtquick-positioning-anchors."
"html) or [positioners](https://doc.qt.io/qt-6/qtquick-positioning-layouts."
"html)."
msgstr ""
"Чудова особливість FormCard полягає в тому, що вона виконує автоматичне "
"компонування за вас. Іншими словами, лише порядку його компонентів "
"достатньо, щоб вказати їхнє розташування всередині FormCard — не потрібно "
"ніяких [прикріплених властивостей компонування](https://doc.qt.io/qt-6/qml-"
"qtquick-layouts-layout.html), і немає потреби у використанні [прив'язок]"
"(https://doc.qt.io/qt-6/qtquick-positioning-anchors.html) або [позиціонерів]"
"(https://doc.qt.io /qt-6/qtquick-positioning-layouts.html)."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:77
msgid "We can simply add a few buttons inside our FormCard:"
msgstr "Ми можемо просто додати декілька кнопок всередину нашого FormCard:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:81
msgid ""
"That's it! The buttons are not usable just yet, but we are now set up to "
"play with our About pages!"
msgstr ""
"Ось і все! Кнопками ще не можна скористатися, але ми налаштували усе для "
"користування нашими сторінками «Про програму»!"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:83
msgid "We then build and run it like so:"
msgstr "Тепер можна зібрати і запустити усе ось так:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:92
msgid ""
"To see other ways to build your application (for example, on Windows), see "
"the [Getting Started with Kirigami](/docs/getting-started/kirigami/"
"introduction-getting_started) page."
msgstr ""
"Щоб ознайомитися із іншими способами зібрати нашу програму (наприклад, у "
"Windows), прочитайте сторінку [Вступ до Kirigami](/docs/getting-started/"
"kirigami/introduction-getting_started)."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:0
msgid "About page"
msgstr "Сторінка «Про програму»"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:0
msgid "Informations about your application"
msgstr "Відомості щодо вашої програми"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:10
msgid ""
"[Kirigami.AboutPage](docs:kirigami2;AboutPage) allows you to have a page "
"that shows the copyright notice of the application together with the list of "
"contributors and some information of which platform it's running on."
msgstr ""
"[Kirigami.AboutPage](docs:kirigami2;AboutPage) надає вам змогу показувати "
"дані щодо авторських прав на програму, список учасників розробки та деякі "
"відомості щодо того, на якій платформі запущено програму."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:12
msgid ""
"First, we are going to edit our `main.cpp` file from previous tutorials."
msgstr ""
"Спочатку, ми внесемо зміни до нашого файла `main.cpp` з попередніх частин "
"підручника."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:14
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:195
msgid "main.cpp"
msgstr "main.cpp"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:18
msgid ""
"In the `main.cpp` file we include [KAboutData](docs:kcoreaddons;KAboutData), "
"a core KDE frameworks component that lets us store information about our "
"application. This information can then be reused by many other KDE "
"Frameworks components. We instantiate a new `aboutData` object with its "
"fairly complete default constructor and add author information."
msgstr ""
"У файлі «main.cpp» ми включаємо [KAboutData](docs:kcoreaddons;KAboutData), "
"який є основним компонентом KDE Frameworks, який надає нам змогу зберігати "
"відомості щодо програми, які згодом можна повторно використати у багатьох "
"інших компонентах KDE Frameworks. Ми створюємо екземпляр нового об'єкта "
"`aboutData` із його очевидно повним типовим конструктором та додаємо дані "
"щодо авторства."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:20
msgid ""
"After all the required information has been set, we call [KAboutData::"
"setApplicationData](docs:kcoreaddons;KAboutData::setApplicationData) to "
"initialize the properties of the [QApplication ](docs:qtwidgets;"
"QApplication) object."
msgstr ""
"Після встановлення усіх потрібних відомостей ми викликаємо [KAboutData::"
"setApplicationData](docs:kcoreaddons;KAboutData::setApplicationData) для "
"ініціалізації властивостей об'єкта [QApplication ](docs:qtwidgets;"
"QApplication)."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:22
msgid ""
"We then create a [qmlRegisterSingletonType()](docs:qtqml;QQmlEngine::"
"qmlRegisterSingletonType). This is used to allow us to import the C++ code "
"as a module in our `main.qml` with `import org.kde.example 1.0`."
msgstr ""
"Потім ми створюємо [qmlRegisterSingletonType()](docs:qtqml;QQmlEngine::"
"qmlRegisterSingletonType). Ця функція надає нам змогу імпортувати код C++ як "
"модуль у нашому `main.qml` за допомогою інструкції `import org.kde.example "
"1.0`."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:24
msgid ""
"Its first argument is the URI that will be used for the import, the second "
"and third arguments are major and minor versions respectively, the fourth is "
"the type name, the name that we will call when accessing our `About` type, "
"and the last is a reference to the C++ object that is exposed to QML. In the "
"latter's case, we use a [lambda](https://en.cppreference.com/w/cpp/language/"
"lambda) to instantiate the `aboutData` of our application in place."
msgstr ""
"Першим аргументом є адреса, яку буде використано для імпортування, другим і "
"третім аргументами є основна і проміжна версії, відповідно, четвертим "
"аргументом є назва типу, назва, яку ми викликатимемо при доступі до методів "
"нашого типу `About`. Останнім аргументом є посилання на об'єкт C++, доступ "
"до якого буде відкрито для QML. В останньому випадку ми використовуємо "
"[лямбду](https://en.cppreference.com/w/cpp/language/lambda) для створення "
"екземпляра `aboutData` нашої програми на місці."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:26
msgid "main.qml"
msgstr "main.qml"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:30
msgid ""
"First, we use the import we defined in the `main.cpp` file, namely `org.kde."
"example`. We then add a [Kirigami.Action](docs:kirigami2;Action) to our "
"[global drawer](docs:kirigami2;GlobalDrawer) that will send us to the About "
"page, and create a component with a [Kirigami.AboutPage](docs:kirigami2;"
"AboutPage) in it, which expects a [KAboutData::applicationData()](docs:"
"kcoreaddons;KAboutData::applicationData) object. We exposed precisely that "
"in our `main.cpp` and called it `About`, so we can pass it here."
msgstr ""
"Спершу ми використовуємо імпортування, яке ми визначити у файлі `main.cpp`, "
"а саме `org.kde.example`. Потім додаємо [Kirigami.Action](docs:kirigami2;"
"Action) на нашу [загальну висувну панель](docs:kirigami2;GlobalDrawer). "
"Відповідна кнопка надаватиме нам змогу переходити на сторінку «Про "
"програму». Створюємо на загальній панелі компонент з [Kirigami.AboutPage]"
"(docs:kirigami2;AboutPage) на ньому, яка очікуватиме об'єкт [KAboutData::"
"applicationData()](docs:kcoreaddons;KAboutData::applicationData). Сторінка "
"«Про програму» матиме лише одну властивість — `aboutData`. Ми відкрили саме "
"це у нашому `main.cpp` і назвали його `About`, тому тут можемо це пропустити."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:33
msgid "CMakeLists"
msgstr "CMakeLists"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:37
msgid ""
"In the `CMakeLists.txt` file in our top-level folder, be sure to have "
"`CoreAddons` in your [find_package()](https://cmake.org/cmake/help/latest/"
"command/find_package.html) call. It is needed for [KAboutData](docs:"
"kcoreaddons;KAboutData)."
msgstr ""
"У файлі `CMakeLists.txt` у найвищій теці проєкту додайте `CoreAddons` до "
"виклику [find_package()](https://cmake.org/cmake/help/latest/command/"
"find_package.html). Цей пакунок потрібен для [KAboutData](docs:kcoreaddons;"
"KAboutData)."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:41
msgid ""
"In the `CMakeLists.txt` file in the `src/` directory, nothing is needed "
"since we instantiated out `aboutData` in place."
msgstr ""
"У файлі `CMakeLists.txt` у каталозі `src/` дописувати нічого не потрібно, "
"оскільки ми створюємо екземпляр з `aboutData` на місці."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:44
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:323
msgid "Running the application"
msgstr "Запуск програми"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:46
msgid ""
"Now if you run your application and trigger the \"About\" action in the "
"global drawer you should see our about page."
msgstr ""
"Тепер, якщо ви запустите програму і скористаєтеся пунктом «About» на "
"загальній висувній панелі, ви побачите нашу сторінку відомостей щодо "
"програми."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:48
msgid "![Screenshot of the Kirigami About Page](about-page.png)"
msgstr "![Знімок сторінки «Про програму» Kirigami](about-page.png)"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:0
msgid "Connect logic to your QML user interface"
msgstr "З'єднання логіки з вашим інтерфейсом користувача QML"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:0
msgid ""
"Connect a backend to do calculations and supply your user interface with "
"data to display"
msgstr ""
"З'єднання модуля для виконання обчислень і надання інтерфейсу даних для "
"показу"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:10
msgid ""
"To integrate logic into the application, we need C++ backend classes that "
"can do the important calculations. Writing logic in the QML files is "
"discouraged, so try to move as much as possible to the backend, so QML is "
"purely used for displaying the user interface, which is what it is best at."
msgstr ""
"Щоб інтегрувати логіку до самої програми нам знадобляться класи модуля "
"обробки мовою C++, які зможуть виконувати важливі обчислення. Не варто "
"вписувати логіку до самих файлів QML — слід переносити якомога більшу її "
"частину до модуля обробки, щоб код QML використовувався лише для показу "
"інтерфейсу користувача — того, для чого його, власне, призначено."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:12
msgid ""
"For your new backend class, create two new files called `backend.cpp` and "
"`backend.h`. Don't forget to add the new cpp file to the executable in `src/"
"CMakeLists.txt`, next to main.cpp."
msgstr ""
"Для нового класу модуля обробки створіть два файли із назвами `backend.cpp` "
"і `backend.h`. Не забудьте додати нові файли cpp до модуля збирання "
"виконуваного файла у `src/CMakeLists.txt`, поруч із main.cpp."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:14
msgid "Add the following content to the new header file (`backend.h`):"
msgstr "Додайте такі рядки до нового файла заголовків (`backend.h`):"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:29
msgid ""
"The `backend.cpp` file containing the definitions is similarly empty right "
"now, it should contain something like the following:"
msgstr ""
"Файл `backend.cpp`, який має містити визначення, так само зараз є порожнім. "
"У ньому мають міститися десь такі рядки:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:40
msgid ""
"Currently the user interface doesn't know about your backend class. To "
"change that, we need to register the new type in `main.cpp`. The backend "
"will be created as a singleton, that means it will only be created once and "
"exist through the whole time from starting the application to closing it."
msgstr ""
"На цей момент інтерфейсу користувача нічого не відомо про клас модуля "
"обробки. Щоб повідомити про модуль, нам слід зареєструвати новий тип у `main."
"cpp`. Модуль обробки буде створено як одинак, що означає, що його буде "
"створено лише одноразово і він існуватиме увесь час — від запуску програми "
"до завершення її роботи."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:42
msgid ""
"Right after creating the [QQmlApplicationEngine](docs:qtqml;"
"QQmlApplicationEngine), add the [type registration](https://doc.qt.io/qt-6/"
"qtqml-cppintegration-definetypes.html) to `main.cpp` as follows:"
msgstr ""
"Одразу після створення [QQmlApplicationEngine](docs:qtqml;"
"QQmlApplicationEngine), додайте [реєстрацію типу](https://doc.qt.io/qt-6/"
"qtqml-cppintegration-definetypes.html) до `main.cpp` ось так:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:48
msgid "Don't forget to include the new header file at the top of `main.cpp`."
msgstr ""
"Не забудьте додати новий файл заголовків у початковій частині `main.cpp`."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:50
msgid ""
"From now on, the backend will be known to QML as `Backend`. It is contained "
"in a module called `org.kde.example`. Since the module is part of the "
"application, you don't need to worry about versioning it, just stay with "
"`1.0` and use it consistently throughout the application."
msgstr ""
"З цього моменту у QML модуль обробки буде відомий як `Backend`. Він "
"міститиметься у модулі із назвою `org.kde.example`. Оскільки модуль є "
"частиною програми, вам не варто перейматися щодо встановлення його версій, "
"просто лишіть версію `1.0` і використовуйте його послідовно у всій програмі."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:52
msgid "In `main.qml`, import the new module:"
msgstr "У `main.qml` імпортуйте новий модуль:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:57
msgid ""
"Now we have connected the class holding the future logic to the application, "
"but it still doesn't do anything. To change that, let's add a property to "
"the class. Properties are a lot more than a simple variable. They can inform "
"the UI about changes so it can update the right areas."
msgstr ""
"Тепер клас, який містить майбутню логіку, з'єднано із програмою, але він усе "
"ще не виконує ніяких корисних дій. Щоб змінити це, давайте додамо до класу "
"властивість. Призначення властивостей є набагато ширшим за прості змінні. "
"Вони можуть інформувати інтерфейс користувача щодо змін, щоб той міг "
"оновлювати належні області."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:59
msgid ""
"Right under the [Q_OBJECT](docs:qtcore;QObject::Q_OBJECT) macro, add a new "
"[Q_PROPERTY](docs:qtcore;QObject::Q_PROPERTY)."
msgstr ""
"Одразу після макроса [Q_OBJECT](docs:qtcore;QObject::Q_OBJECT) додайте новий "
"макрос [Q_PROPERTY](docs:qtcore;QObject::Q_PROPERTY)."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:65
msgid ""
"This may seem like a lot of code to just read and write some code from the "
"backend. However, a closer look reveals that reading the property from the "
"UI can already run some logic—same when it is written to. In this case, it "
"will automatically inform the frontend and backend of changes."
msgstr ""
"Здається, забагато коду для простого читання і написання коду модуля "
"обробки, чи не так? Але прискіпливіший погляд показує, що читання "
"властивості з інтерфейсу вже може запускати логіку. Те саме стосується "
"запису. У цьому випадку код автоматично інформує оболонку і модуль обробки "
"про зміни."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:67
msgid ""
"The reading and writing is based on the concept of [getter and setter "
"functions](https://www.w3schools.com/cpp/cpp_encapsulation.asp). Go ahead "
"and add a new private attribute to your class that holds the data, as well "
"as the relevant getter and setter functions."
msgstr ""
"Читання і запис засновано на концепції [функцій отримання та встановлення "
"значень](https://www.w3schools.com/cpp/cpp_encapsulation.asp), тому додайте "
"новий закритий (приватний) атрибут, який міститиме дані, до вашого класу у "
"описаний спосіб, а також додайте відповідні функції отримання та "
"встановлення значень."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:73
msgid "To the public section, add"
msgstr "У розділі public додайте"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:80
msgid ""
"The first function is the getter, the second the setter, and the third a "
"signal that is emitted when the property is changed. The signal doesn't need "
"any implementation in `backend.cpp` file, since it doesn't do much more than "
"being emitted, but the getter and setter need to be implemented similar to "
"the following:"
msgstr ""
"Перша функція є отримувачем даних, друга — встановлювачем, а третя — "
"сигналом, який видається, коли змінюється значення властивості. Сигнал не "
"потребує реалізації у файлі `backend.cpp`, оскільки він не виконує майже "
"нічого, окрім видання, але функції отримання та встановлення значення має "
"бути реалізовано десь так:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:94
msgid ""
"As you can see, when the setter is called, the signal will be emitted, and "
"inform the ui and backend of the change."
msgstr ""
"Як можна бачити, при виклику функції встановлення значення буде видано "
"сигнал, отже про зміну буде проінформовано інтерфейс користувача і модуль "
"обробки."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:96
msgid ""
"To display the text, add a heading to `main.qml` under the `title` property "
"of the [Kirigami.Page](docs:kirigami2;Page) element already contained in the "
"template."
msgstr ""
"Щоб показати текст у `main.qml` додайте заголовок під властивістю `title` "
"елемента [Kirigami.Page](docs:kirigami2;Page), який вже міститься у шаблоні."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:98
msgid "The resulting code in that part of the file should look like this:"
msgstr "Код-результат у тій частині файла має виглядати ось так:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:101
#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:112
#: content/docs/getting-started/kirigami/components-actions/index.md:35
#: content/docs/getting-started/kirigami/components-actions/index.md:140
#: content/docs/getting-started/kirigami/components-actions/index.md:285
#: content/docs/getting-started/kirigami/components-card/index.md:67
#: content/docs/getting-started/kirigami/components-listview/index.md:305
#: content/docs/getting-started/kirigami/components-listview/index.md:314
#: content/docs/getting-started/kirigami/introduction-actions/index.md:53
#: content/docs/getting-started/kirigami/introduction-actions/index.md:123
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:25
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:45
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:87
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:21
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:40
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:50
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:82
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:136
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:151
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:186
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:215
msgid "..."
msgstr "..."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:118
msgid "Now compile and start your program again."
msgstr "Тепер зберіть і запустіть вашу програму знову."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:120
msgid "Congratulations, you learned:"
msgstr "Вітаємо, ви навчилися:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:121
msgid "How to register backend types to QML"
msgstr "Як реєструвати типи модулів обробки у QML"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:122
msgid "Add new elements to the QML file"
msgstr "Додавати нові елементи до файла QML"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:123
msgid "Create new QObject subclasses"
msgstr "Створювати підкласи QObject"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:124
msgid "How to add properties and what they do"
msgstr "Як додавати властивості і для чого вони потрібні"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:125
msgid "What signals are"
msgstr "Що таке сигнали"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:127
msgid ""
"If you want to know more about the integration between QML and C++, we "
"recommend reading the [official Qt documentation](https://doc.qt.io/qt-6/"
"qtqml-cppintegration-definetypes.html)."
msgstr ""
"Якщо ви хочете дізнатися про інтеграцію між QML і C++, ми рекомендуємо "
"ознайомитися із [офіційною документацією до Qt](https://doc.qt.io/qt-6/qtqml-"
"cppintegration-definetypes.html)."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:0
msgid "Connect models to your QML user interface"
msgstr "З'єднання моделей з вашим інтерфейсом користувача QML"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:0
msgid "Connect models from C++ backend to QML frontend"
msgstr "З'єднання моделей з модуля обробки на C++ із оболонкою на QML"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:8
msgid ""
"As shown from the [previous tutorial](/docs/getting-started/kirigami/"
"advanced-connect_backend/), you can connect C++ code to QML by creating a "
"class that will be treated as just another component in QML. However, you "
"may want to represent more complicated data, such as data that needs to act "
"as a custom [ListModel](docs:qtquick;qml-qtqml-models-listmodel.html) or in "
"some way needs to be delegated from a [Repeater](docs:qtquick;qml-qtquick-"
"repeater.html)."
msgstr ""
"Як показано у [попередньому розділі підручника](/docs/getting-started/"
"kirigami/advanced-connect_backend/), ви можете з'єднати код мовою C++ із "
"кодом QML шляхом створення класу, який буде оброблено як ще один компонент у "
"QML. Втім, може виникнути потреба у представленні складніших даних, зокрема "
"даних, які мають працювати як нетипова [ListModel](docs:qtquick;qml-qtqml-"
"models-listmodel.html), або даних, які має бути делеговано з [Repeater](docs:"
"qtquick;qml-qtquick-repeater.html)."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:16
msgid ""
"We can create our own [models](docs:qtcore;qabstractlistmodel.html) from the "
"C++ side, and declare how the data from that model should be represented on "
"the QML frontend."
msgstr ""
"Ми можемо створювати власні [моделі](docs:qtcore;qabstractlistmodel.html) на "
"боці C++ і оголошувати, як дані з відповідної моделі має бути представлено в "
"оболонці QML."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:20
msgid "Preparing the Class"
msgstr "Приготування класу"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:22
msgid ""
"In this tutorial, we will create a class that contains a QMap, where a "
"QString is used as a key and QStringList objects are used as values. The "
"frontend will be able to read and display the keys and values and be simple "
"to use just like a one-dimensional array. It should look similar to a QML "
"ListModel."
msgstr ""
"У цих настановах ми створимо клас, який містить QMap, де як ключ буде "
"використано QString, а як значення буде використано об'єкти QStringList. "
"Оболонка зможе читати і показувати ключі і значення і буде простою у "
"використанні, зовсім як одновимірний масив. Усе це має виглядати подібним до "
"ListModel у QML."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:27
msgid ""
"To do this, we need to declare a class that inherits from "
"[QAbstractListModel](docs:qtcore;qabstractlistmodel.html). Let's also add in "
"some add data to the QMap. These declarations will be located in `model.h`."
msgstr ""
"Для цього нам потрібно оголосити клас, який успадковує властивості від "
"[QAbstractListModel](docs:qtcore;qabstractlistmodel.html). Давайте також "
"додамо якісь дані до QMap. Ці оголошення будуть зберігатися у `model.h`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:32
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:65
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:73
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:292
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:430
#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:43
#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:88
#: content/docs/getting-started/kirigami/components-actions/index.md:16
#: content/docs/getting-started/kirigami/components-actions/index.md:40
#: content/docs/getting-started/kirigami/components-actions/index.md:190
#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:14
#: content/docs/getting-started/kirigami/components-card/index.md:97
#: content/docs/getting-started/kirigami/components-chips/index.md:112
#: content/docs/getting-started/kirigami/components-controls/index.md:115
#: content/docs/getting-started/kirigami/components-drawers/index.md:73
#: content/docs/getting-started/kirigami/components-drawers/index.md:147
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:106
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:127
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:139
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:159
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:350
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:58
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:201
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:25
#: content/docs/getting-started/kirigami/introduction-pages/index.md:33
#: content/docs/getting-started/kirigami/introduction-pages/index.md:53
#: content/docs/getting-started/kirigami/style-colors/index.md:28
msgid "Note"
msgstr "Нотатка"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:34
msgid ""
"If you are following along, please remember to update your `CMakeLists.txt` "
"file!"
msgstr ""
"Якщо ви послідовно виконуєте наші настанови, будь ласка, не забудьте оновити "
"ваш файл `CMakeLists.txt`!"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:53
msgid ""
"Of course, we can't just display this class as is. We also need to tell QML "
"on how to represent this data in the class. We can do this by overriding "
"three virtual functions that are essential at doing this, all of which do "
"their own tasks."
msgstr ""
"Звичайно ж, ми не можемо показати цей клас без обробки. Нам також слід "
"повідомити QML про те, як представити ці дані у класі. Зробити це можна "
"перевизначенням трьох віртуальних функцій, які є критичними для нашого "
"завдання, і кожна з яких виконує власні завдання."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:58
msgid ""
"`rowCount()` - Think of this function as a way to tell QML how many items "
"are in the model to represent."
msgstr ""
"`rowCount()` — цю функцію можна уявляти як спосіб повідомити QML про те, "
"скільки записів представляє модель."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:60
msgid ""
"`roleNames()` - You can think of role names as property names attached to "
"data in QML. This function allows you to create those roles."
msgstr ""
"`roleNames()` — назви ролей можна уявляти як назви властивостей, які "
"пов'язано із даними у QML. За допомогою цієї функції можна створювати такі "
"ролі."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:62
msgid ""
"`data()` - This function is called when you want to retrieve the data that "
"corresponds to the role names from the model."
msgstr ""
"`data()` — цю функцію буде викликано, коли ви захочете отримати дані, які "
"відповідають назвам ролей з моделі."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:67
msgid ""
"The custom role names created by `roleNames()` are only usable when a model "
"is being delegated, and are not usable outside of it. See [Models and Views]"
"(docs:qtquick;qtquick-modelviewsdata-modelview.html#models)."
msgstr ""
"Нетипові назви ролей, які створено `roleNames()`, можна використовувати, "
"лише якщо модель було делеговано, і не можна використовувати поза нею. Див. "
"[Моделі і перегляди](docs:qtquick;qtquick-modelviewsdata-modelview."
"html#models)."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:75
msgid ""
"Technically, models in Qt are represented as tables, with rows and columns. "
"So, what overriding `rowCount()` does is tell Qt how many rows are in a "
"model. Since we are just dealing with a one-dimensional array in this "
"tutorial, you can just think of \"rows\" as \"number of elements.\""
msgstr ""
"З технічної точки зору, моделі у Qt представляються як таблиці з рядками і "
"стовпчиками. Отже, перевизначення `rowCount()` повідомляє Qt про кількість "
"рядків у моделі. Оскільки у цьому підручнику ми маємо справу лише із "
"одновимірним масивом, можна собі це уявляти яка «рядки» як «кількість "
"елементів»."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:82
msgid "Overriding and Implementing `rowCount()`"
msgstr "Перевизначення і реалізація `rowCount()`"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:84
msgid ""
"Let's override the function in the header file. The `rowCount()` comes with "
"its own parameter, but will not be used in this example and is excluded."
msgstr ""
"Давайте перевизначимо функцію у файлів заголовків. `rowCount()` має власний "
"параметр, але його не буде використано у цьому прикладі, і його буде "
"виключено."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:95
msgid "Then, let's declare how many rows are in this model in `model.cpp`."
msgstr ""
"Тепер, давайте оголосимо, скільки рядків буде у цій моделі у `model.cpp`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:105
msgid "Overriding and Implementing `roleNames()`"
msgstr "Перевизначення і реалізація `roleNames()`"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:107
msgid ""
"Before we override `roleNames()`, we need to declare what the roles are in "
"the C++ side using an public `enum` variable. The reason for this is because "
"these values from the `enum` variable are passed into `data()` every time "
"QML accesses a corresponding role, and as such we can make `data()` return "
"what we want."
msgstr ""
"До того, як ми перевизначимо `roleNames()`, нами потрібно оголосити ролі на "
"боці C++ за допомогою відкритої змінної `enum`. Причиною цього є те, що ці "
"значення зі змінної `enum` буде передано до `data()` під час кожного доступу "
"QML до відповідної ролі, а тому ми можемо зробити так, що `data()` повертала "
"потрібні нам дані."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:113
msgid ""
"Let's begin with creating the `enum` variable for roles, where each value is "
"a role for the C++ side."
msgstr ""
"Почнімо зі створення змінної `enum` для ролей, де кожне значення буде роллю "
"на боці C++."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:130
msgid ""
"Once we have that settled, we can finally create what these roles are in the "
"QML side using a [QHash](docs:qtcore;qhash.html) where the keys are the "
"enumerated values paired with [QByteArrays](docs:qtcore;qbytearray.html). "
"The text in the QByteArray is what's used in the actual QML code."
msgstr ""
"Щойно код буде написано, ми нарешті можемо визначити ці ролі на боці QML за "
"допомогою [QHash](docs:qtcore;qhash.html), де ключі будуть нумерованими "
"значеннями, які буде пов'язано із [QByteArrays](docs:qtcore;qbytearray."
"html). Текстом у QByteArray буде те, що буде використано у самому коді QML."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:144
msgid ""
"In our example model, the role \"species\" can be used to retrieve the "
"QString key \"Feline\", \"Fox\", \"Goat\", each in a separate delegate. The "
"same can be done with the QStringList values for the character names list."
msgstr ""
"У нашому прикладі моделі роллю «species» можна скористатися для отримання "
"ключа QString «Feline», «Fox», «Goat», кожного в окремому делегаті. Те саме "
"можна зробити за допомогою значень QStringList для списку назв персонажів."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:149
msgid "Overriding and Implementing `data()`"
msgstr "Перевизначення і реалізація `data()`"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:151
msgid ""
"There are two parameters that are passed in `data()`: `index` and `role`. "
"`index` is the location of where the data is when being delegated. As "
"previously stated, `role` is used by QML to get specific data returned when "
"it's accessing a role."
msgstr ""
"У `data()` передаються два параметри: `index` і `role`. `index` — місце, де "
"перебувають дані, коли їх делеговано. Як ми вже зазначали, `role` "
"використовується у QML для отримання специфічних даних, які програма "
"повертає, коли відбувається доступ до ролі."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:156
msgid ""
"In `data()`, we can use a `switch` statement to return the appropriate data "
"and data type depending on the role, which is possible as `data()` returns a "
"[QVariant](docs:qtcore;qvariant.html). We still need to make sure we get the "
"appropriate location of the data, though. In this example below, you can see "
"that a new iterator variable is being declared, which is set from the "
"beginning of the list plus the row of the index and the data that the "
"iterator is pointing to is what is being returned."
msgstr ""
"У `data()` ми можемо скористатися інструкцією `switch` для повернення "
"відповідних даних, а тип даних залежатиме від ролі, що є можливим, оскільки "
"`data()` повертає [QVariant](docs:qtcore;qvariant.html). Втім, нам усе ще "
"потрібно переконатися, що ми отримуємо належне місце у даних. У прикладі "
"нижче можна бачити, що оголошено нову змінну-ітератор, значення якої "
"встановлюється на початку списку з додаванням індексу рядка, а дані, на які "
"цей ітератор вказує, — це те, що буде повернуто."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:164
msgid ""
"We can't just return whatever data we want though. We may be trying to bind "
"data to a property with an incompatible data type, such as a QStringList to "
"a QString. You may have to do data conversion in order for the data to be "
"displayed properly."
msgstr ""
"Втім, ми не можемо просто повернути будь-які бажані дані. Можлива спроба "
"прив'язування даних до властивості із несумісним типом даних, зокрема "
"QStringList до QString. Можливо, слід виконати перетворення даних, щоб їх "
"можна було показати належним чином."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:194
msgid "Allow the Class to be Declared in QML"
msgstr "Уможливлення оголошення класу у QML"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:196
msgid "Let's not forget to make our class usable in QML."
msgstr "Не забуваймо уможливити використання нашого класу у QML."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:206
msgid "Class Usage in QML"
msgstr "Використання класів у QML"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:208
msgid ""
"The QML file that is used will just contain three [Kirigami.AbstractCard]"
"(docs:kirigami2;AbstractCard) components, where the key is the header and "
"the value is the content. These cards are created by delegating an "
"AbstractCard using a Repeater, where the custom model we created acts as the "
"model. The data is accessed using word `model`, followed by the roles we "
"declared in `roleNames()`."
msgstr ""
"Використаний файл QML буде містити лише три компоненти [Kirigami."
"AbstractCard](docs:kirigami2;AbstractCard), де ключем буде заголовок, а "
"значенням — вміст. На цей момент ці картки створено делегуванням "
"AbstractCard з використанням Repeater, де створена нами нетипова модель "
"працює як модель. Доступ до моделі здійснюється за допомогою слова `model`, "
"за яким слід вказати ролі, які ми оголосили у `roleNames()`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:249
msgid "![App Screenshot](app_screenshot.png)"
msgstr "![Знімок вікна програми](app_screenshot.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:251
msgid "Data Modification"
msgstr "Внесення змін до даних"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:253
msgid "Editing Data Using `dataChanged()` and `setData()`"
msgstr "Редагування даних за допомогою `dataChanged()` і `setData()`"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:255
msgid ""
"You may encounter a situation where you want to modify data in the model, "
"and have the changes reflected on the frontend side. Every time we change "
"data in the model, we must emit the `dataChanged()` signal which will apply "
"those changes on the frontend side at the specific cells specified in its "
"arguments. In this tutorial, we can just use the `index` argument of "
"`setData()`."
msgstr ""
"Може так статися, що вам потрібно буде змінити дані у моделі та відтворити "
"зміни на боці оболонки. Кожного разу, коли ми змінюємо дані у моделі, нам "
"слід надсилати сигнал `dataChanged()`, який застосує ці зміни на боці "
"оболонки у вказаних у її аргументах комірках. У цьому підручнику ми можемо "
"просто скористатися аргументом `index` у `setData()`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:261
msgid ""
"`setData()` is a virtual function you can override so that attempting to "
"modify the data from the frontend side automatically reflects those changes "
"on the backend side. It requires three parameters:"
msgstr ""
"`setData()` є віртуальною функцією, яку ви можете перевизначити так, щоб "
"спроба внесення змін до даних з боку оболонки автоматично призводила до "
"внесення цих змін на боці модуля обробки. Функції слід передати три "
"аргументи:"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:265
msgid "`index` - The location of the data."
msgstr "`index` — місце даних."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:266
msgid "`value` - The contents of the new data."
msgstr "`value` — вміст нових даних."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:267
msgid ""
"`role` - In this context, the role here is used to tell views how they "
"should handle data. The role here should be `Qt::EditRole`."
msgstr ""
"`role` — у цьому контексті роль використовується для повідомлення панелям "
"перегляду про те, як слід обробляти дані. Роллю тут має бути `Qt::EditRole`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:270
msgid ""
"The `role` parameter in this case is used to ensure `setData()` can be "
"edited via user input (Qt::EditRole). Using `index`, we can use that to "
"determine the location of where the data should be edited with the contents "
"of `value`."
msgstr ""
"Параметр `role` у цьому випадку використано для того, щоб забезпечити "
"можливість редагувати `setData()` за введеними користувачем даних (Qt::"
"EditRole). За допомогою `index` ми можемо скористатися цим для визначення "
"місця, де має бути змінено дані за вмістом `value`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:294
msgid ""
"`setData()` does not automatically emit `dataChanged()` and that still has "
"to be done manually."
msgstr ""
"`setData()` не надсилає `dataChanged()` автоматично, це слід зробити вручну."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:299
msgid ""
"Let's update the QML code so that we can open up a prompt that allows us to "
"edit the model using a Controls.Button attached to the cards."
msgstr ""
"Давайте оновимо код QML так, щоб він міг відкривати запит, за допомогою "
"якого ми зможемо редагувати модель з використанням кнопки Controls.Button, "
"яку пов'язано із картками."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:363
msgid ""
"Now, whenever the values of the model change in the frontend, the changes "
"should automatically update on the backend."
msgstr ""
"Тепер, кожного разу, коли значення моделі буде змінено в оболонці, зміни "
"мають автоматично оновити дані модуля обробки."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:370
msgid "![app_screenshot_1.png](app_screenshot_1.png)"
msgstr "![app_screenshot_1.png](app_screenshot_1.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:376
msgid "![app_screenshot_2.png](app_screenshot_2.png)"
msgstr "![app_screenshot_2.png](app_screenshot_2.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:382
msgid "Adding Rows"
msgstr "Додавання рядків"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:384
msgid ""
"We added a way to modify the data in existing keys of the QMap, and in the "
"front end, this is reflected as modifying the contents inside the "
"AbstractCards. But what if we need to add a new key entry in the QMap and "
"have that reflected on the QML side? Let's do this by creating a new method "
"that is callable on the QML side to perform this task."
msgstr ""
"Нами додано спосіб внесення змін до даних у наявних ключах QMap і в оболонці "
"— це відповідає зміні вмісту в AbstractCards. Але що, якщо нам потрібно "
"додати новий запис ключа до QMap і відтворити дані на боці QML? Давайте "
"зробимо це шляхом створення нового методу, який можна буде викликати на боці "
"QML для виконання цього завдання."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:390
msgid ""
"To make the method visible in QML, we must use the Q_OBJECT macro in the "
"class, and begin the method declaration with the Q_INVOKABLE macro. This "
"method will also include a string parameter, which is intended to be the new "
"key in the QMap."
msgstr ""
"Щоб зробити цей метод видимим у QML, нам слід скористатися у класі макросом "
"Q_OBJECT і почати оголошення методу за допомогою макроса Q_INVOKABLE. Цей "
"метод також включатиме рядковий параметр, який має бути новим ключем у QMap."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:406
msgid ""
"Inside of this method, we need to tell Qt that we want to create more rows "
"in the model. This is done by calling `beginInsertRows()` to begin our row "
"adding operation, followed by inserting whatever we need, then use "
"`endInsertRows()` to end the operation. We still need to emit "
"`dataChanged()` at the end, however. This time, we are going to update all "
"rows, from the first row to the last one as the QMap may alphabetically "
"reorganize itself, and we need to catch that across all rows."
msgstr ""
"Всередині цього методу нам слід повідомити Qt про те, що ми хочемо створити "
"додаткові рядки у моделі. Зробити це можна за допомогою виклику "
"`beginInsertRows()` для започаткування нашої дії з додавання рядка, після "
"чого слід виконати вставляння потрібного пункту, а потім скористатися "
"`endInsertRows()` для завершення дії. Наприкінці, нам, як і раніше, слід "
"надіслати `dataChanged()`. Цього разу ми збираємося оновити усі рядки, від "
"першого до останнього, оскільки QMap може оновлювати список за абеткою, і "
"нам потрібно зробити це для усіх рядків."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:414
msgid ""
"When calling `beginInsertRows()`, we need to first pass in a QModelIndex "
"class to specify the location of where the new rows should be added, "
"followed by what the new first and last row numbers are going to be. In this "
"tutorial, the first argument will just be `QModelIndex()` as there is no "
"need to use the parameter here. We can just use the current row size for the "
"first and last row number, as we'll just be adding one row at the end of the "
"model."
msgstr ""
"При виклику `beginInsertRows()` нам спочатку слід передати клас QModelIndex "
"для визначення місця, куди слід додавати нові рядки, а потім вказати, якими "
"будуть номери першого і останнього рядка. У цьому підручнику першим "
"аргументом буде просто `QModelIndex()`, оскільки тут немає потреби у "
"використанні параметра. Ми можемо просто скористатися розміром поточного "
"рядка для номерів першого і останнього рядка, оскільки ми просто додаємо "
"один рядок наприкінці моделі."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:432
msgid ""
"The `dataChanged()` function uses QModelIndex as the data type for its "
"parameters. However, we can convert integers in QModelIndex data types using "
"the `index()` function."
msgstr ""
"У функції `dataChanged()` використано як тип даних для параметрів "
"QModelIndex. Втім, ми можемо перетворити цілі числа у типах даних "
"QModelIndex за допомогою функції `index()`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:438
msgid ""
"Let's update the QML code so we are given the ability to add a new key to "
"the QMap."
msgstr ""
"Оновімо код QML так, щоб надати йому можливість додавати новий ключ до QMap."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:457
msgid "Clear TextField every time it's done"
msgstr "Спорожнення TextField при кожному завершенні обробки"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:478
msgid ""
"Now, we should be given a new action at the top of the app that brings up a "
"prompt that allows to add a new element to the model, with our own custom "
"data."
msgstr ""
"Тепер у нас буде новий пункт дії у верхній частині вікна програми, який "
"викликатиме запит, за допомогою якого можна буде додати до моделі новий "
"елемент із нашими власними нетиповими даними."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:485
msgid "![app_screenshot_add_1.png](app_screenshot_add_1.png)"
msgstr "![app_screenshot_add_1.png](app_screenshot_add_1.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:491
msgid "![app_screenshot_add_2.png](app_screenshot_add_2.png)"
msgstr "![app_screenshot_add_2.png](app_screenshot_add_2.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:497
msgid "Removing Rows"
msgstr "Вилучення рядків"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:499
msgid ""
"The way remove rows is similar to adding rows. Let's create another method "
"that we'll call in QML. This time, we will use an additional parameter, and "
"that is an integer that is the row number. The species name is used to "
"delete the key from the QMap, while the row number will be used to delete "
"the row on the front end."
msgstr ""
"Спосіб вилучення рядків є подібним до способу додавання рядків. Створімо ще "
"один метод, який ми викликатимемо з QML. Цього разу ми скористаємося "
"додатковим параметром, і це буде ціле число, номер рядка. Назву species буде "
"використано для вилучення ключа з QMap, а номер рядка буде використано для "
"вилучення рядка в оболонці."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:526
msgid ""
"Now, let's update the application so a \"Delete\" button appears alongside "
"the edit button, and hook it up to our delete method."
msgstr ""
"Тепер оновімо програму так, щоб з'явилася кнопка «Delete» поряд із кнопкою "
"редагування, і пов'яжімо цю кнопку із нашим методом вилучення."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:570
msgid "![app_screenshot_del_1.png](app_screenshot_del_1.png)"
msgstr "![app_screenshot_del_1.png](app_screenshot_del_1.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:576
msgid "![app_screenshot_del_2.png](app_screenshot_del_2.png)"
msgstr "![app_screenshot_del_2.png](app_screenshot_del_2.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:582
msgid "Full Code"
msgstr "Код повністю"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:584
msgid "<details><summary>Main.qml</summary>\n"
msgstr "<details><summary>Main.qml</summary>\n"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:588
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:595
msgid ""
"</details>\n"
"<br>\n"
msgstr ""
"</details>\n"
"<br>\n"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:591
msgid "<details><summary>model.h</summary>\n"
msgstr "<details><summary>model.h</summary>\n"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:598
msgid "<details><summary>model.cpp</summary>\n"
msgstr "<details><summary>model.cpp</summary>\n"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:604
msgid "More Information"
msgstr "Докладніше"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:606
msgid ""
"For more information, see [Using C++ Models with Qt Quick Views](docs:"
"qtquick;qtquick-modelviewsdata-cppmodels.html) and [Model/View Programming]"
"(docs:qtquick;model-view-programming.html)."
msgstr ""
"Щоб дізнатися більше, ознайомтеся із розділами [Використання моделей C++ на "
"панелях Qt Quick](docs:qtquick;qtquick-modelviewsdata-cppmodels.html) та "
"[Програмування на основі моделі-панелі перегляду](docs:qtquick;model-view-"
"programming.html)."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:0
msgid "Figuring out main.cpp"
msgstr "Розбираємося у main.cpp"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:0
msgid "Understanding the central file of our backend code\n"
msgstr "Розбираємося із центральним файлом нашого коду модуля обробки\n"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:11
msgid "The role of main.cpp"
msgstr "Роль main.cpp"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:13
msgid ""
"While QML is used for the front-end of Kirigami applications, the backend is "
"usually written in C++ thanks to this language's speed and flexibility. "
"While in previous pages we have covered QML in a lot of depth, we'll need to "
"gain an understanding of our backend C++ code in order to make applications "
"that are more useful than what we can achieve with pure QML."
msgstr ""
"Хоча для оболонок програм на основі Kirigami використовується QML, модулі "
"обробки, зазвичай, пишуть мовою C++ через її швидкість та гнучкість. На "
"попередніх сторінках ми доволі докладно розбиралися із кодом QML, а тепер "
"нам треба розібратися із кодом мовою C++ нашого модуля обробки, щоб зробити "
"програми кориснішими за ті, які ми могли б написати, використовуючи лише QML."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:15
msgid ""
"Here, we'll be going over the `main.cpp` file we created in the [Getting "
"Started](/docs/getting-started/kirigami/introduction-getting_started) page "
"so that we can better understand what is going on in the central C++ file of "
"our application. While this is a basic `main.cpp`, the features we will go "
"over will remain essential no matter what kind of application you decide to "
"create."
msgstr ""
"У цьому розділі ми вивчимо файл `main.cpp`, який було створено на сторінці "
"[Вступ](/docs/getting-started/kirigami/introduction-getting_started) з метою "
"удосконалення знань щодо того, що відбувається у центральному файлі мовою C+"
"+ нашої програми. Хоча це базовий варіант `main.cpp`, можливості, які ми "
"вивчатимемо, лишатимуться характерними для будь-яких програм, які ви "
"створюватимете."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:17
msgid "What it does"
msgstr "Призначення"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:21
msgid ""
"First we must include a number of Qt [header files](https://www.learncpp.com/"
"cpp-tutorial/header-files/), allowing us to use their functions. In this "
"case, we include a number of Qt headers that handle application logic, and "
"to allow us to read QML files."
msgstr ""
"Спочатку нам слід включити декілька [файлів заголовків Qt](https://www."
"learncpp.com/cpp-tutorial/header-files/), за допомогою яких ми зможемо "
"скористатися відповідними функціями. У нашому випадку ми включимо заголовки "
"Qt, які пов'язано із обробкою логіки програми, і які нададуть нам змогу "
"читати файли QML."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:23
msgid ""
"We then create a [QApplication](docs:qtwidgets;QApplication) instance which "
"we call `app`. Passing [argc and argv](https://www.learncpp.com/cpp-tutorial/"
"command-line-arguments/) to the constructor is required for the call."
msgstr ""
"Далі, ми створюємо екземпляр [QApplication](docs:qtwidgets;QApplication), "
"який ми назвемо `app`. Для цього виклику слід передати [argc і argv](https://"
"www.learncpp.com/cpp-tutorial/command-line-arguments/) конструктору."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:25
msgid ""
"We also set some metadata relating to the application. These include the "
"organisation that created the application, the organisation's website, and "
"the name of the application. We set these properties by calling "
"[QApplication](docs:qtwidgets;QApplication), instantiating an object that "
"comes from [QCoreApplication](docs:qtcore;QCoreApplication) and provides the "
"[event loop](docs:qtcore;QCoreApplication::exec) for applications regardless "
"of whether they have a GUI or not (so if we ran our program without the GUI, "
"this metadata would still be set)."
msgstr ""
"Ми також встановимо значення деяких метаданих, пов'язаних із програмою. "
"Серед цих даних організація, якою створено програму, сайт організації та "
"назва програми. Ми встановлюємо значення цих властивостей викликом "
"[QApplication](docs:qtwidgets;QApplication), створенням екземпляра об'єкта, "
"який походить від [QCoreApplication](docs:qtcore;QCoreApplication) і "
"забезпечує роботу [циклу обробки подій](docs:qtcore;QCoreApplication::exec) "
"для програм, незалежно від того, мають ці програми графічний інтерфейс чи ні "
"(отже, якщо ми запустимо нашу програму без графічного інтерфейсу, значення "
"для цих метаданих все одно буде встановлено)."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:27
msgid ""
"To make our app look good with KDE's [Breeze icons](https://invent.kde.org/"
"frameworks/breeze-icons) and [Breeze style](https://invent.kde.org/plasma/"
"breeze) on non-Plasma environments such as Windows or GNOME, we need to do "
"three things:"
msgstr ""
"Щоб наша програма виглядала добре з [піктограмами Breeze](https://invent.kde."
"org/frameworks/breeze-icons) та [стилем Breeze](https://invent.kde.org/"
"plasma/breeze) KDE у середовищах, відмінних від Плазми, зокрема у Windows "
"або GNOME, нам потрібно виконати три дії:"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:29
msgid ""
"initialize the theming facilities of [KIconThemes](https://invent.kde.org/"
"frameworks/kiconthemes) on platforms where icon themes aren't part of the "
"system (like Windows or MacOS) with `KIconTheme::initTheme()`"
msgstr ""
"ініціалізувати можливості роботи з темами  [KIconThemes](https://invent.kde."
"org/frameworks/kiconthemes) на платформах, де теми піктограм не є частиною "
"системи (наприклад, у Windows або MacOS), за допомогою `KIconTheme::"
"initTheme()`"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:30
msgid ""
"set the QStyle with [QApplication::setStyle()](docs:qtwidgets;QApplication::"
"setStyle) to force Breeze instead of the native platform style"
msgstr ""
"встановити QStyle за допомогою [QApplication::setStyle()](docs:qtwidgets;"
"QApplication::setStyle) для примусового використання Breeze замість "
"природного стилю платформи"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:31
msgid ""
"set the QtQuick Controls style with [QQuickStyle::setStyle()](docs:"
"qtquickcontrols;QQuickStyle::setStyle) to force Breeze with KDE's [qqc2-"
"desktop-style](https://invent.kde.org/frameworks/qqc2-desktop-style)"
msgstr ""
"встановити стиль QtQuick Controls за допомогою [QQuickStyle::setStyle()]"
"(docs:qtquickcontrols;QQuickStyle::setStyle) для примусового встановлення "
"Breeze за допомогою [qqc2-desktop-style](https://invent.kde.org/frameworks/"
"qqc2-desktop-style) KDE"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:33
msgid ""
"The call to `KIconTheme::initTheme()` needs to be done before creating the "
"QApplication and lets the app find Breeze icons to use. Setting the QStyle "
"to Breeze is needed because we used QApplication for our app instead of "
"[QGuiApplication](docs:qtgui;QGuiApplication). Actual interface controls in "
"the window like buttons and checkboxes will follow Breeze by using `qqc2-"
"desktop-style`."
msgstr ""
"Виклик `KIconTheme::initTheme()` має бути виконано до створення "
"QApplication. Він дозволяє програмі знайти піктограми Breeze, які слід "
"використати. Для QStyle слід встановити значення Breeze, оскільки для нашої "
"програми ми використали QApplication замість [QGuiApplication](docs:qtgui;"
"QGuiApplication). Справжні елементи керування інтерфейсу у вікні, зокрема "
"кнопки і пункти, використовуватимуть Breeze через використання `qqc2-desktop-"
"style`."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:35
msgid ""
"The [QQmlApplicationEngine](docs:qtqml;QQmlApplicationEngine) lets us load "
"an application from a QML file, which we do in the next line. In `engine."
"loadFromModule(\"org.kde.tutorial\", \"Main\");` we load our QML from the "
"URI import defined in CMake."
msgstr ""
"[QQmlApplicationEngine](docs:qtqml;QQmlApplicationEngine) надає нам "
"можливість завантажувати програму з файла QML, що ми і робимо у наступному "
"рядку. У `engine.loadFromModule(\"org.kde.tutorial\", \"Main\");` ми "
"завантажуємо наш QML з імпорту адрес, який визначено у CMake."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:37
msgid ""
"Next, we check if our engine correctly loaded the QML file by checking that "
"the engine's [rootObjects()](docs:qtqml;QQmlApplicationEngine::rootObjects) "
"list is not empty. We can then run our application with [app.exec()](docs:"
"qtcore;QCoreApplication::exec)."
msgstr ""
"Далі, ми перевіримо, чи наш рушій належним чином завантажив файл QML, "
"перевіривши, чи список [rootObjects()](docs:qtqml;QQmlApplicationEngine::"
"rootObjects) рушія є порожнім. Далі, ми можемо запустити нашу програму за "
"допомогою [app.exec()](docs:qtcore;QCoreApplication::exec)."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:0
msgid "Understanding CMakeLists"
msgstr "Розбираємося із CMakeLists"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:0
msgid "Getting to grips with how CMakeLists.txt files work\n"
msgstr "Ознайомлюємося із тим, як працюють файли CMakeLists.txt\n"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:11
msgid "CMake"
msgstr "CMake"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:12
msgid ""
"In our introductory tutorial, we used [CMake](https://cmake.org/) as the "
"build system for our application, but we only really paid close attention to "
"one of our `CMakeLists.txt` files. Here, we're going to go over how it works "
"in a bit more detail."
msgstr ""
"У нашому вступному підручнику ми використали [CMake](https://cmake.org/) як "
"систему збирання для нашої програми, але приділили увагу лише одному з "
"файлів `CMakeLists.txt`. Цей розділ ми присвятимо докладнішому вивченню "
"принципів його роботи."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:14
msgid ""
"CMake is useful because it allows us to automate much of the stuff that "
"needs to be done before compilation."
msgstr ""
"CMake є корисним, оскільки за його допомогою ми можемо автоматизувати більшу "
"частину роботи, яку слід виконати до компіляції."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:16
msgid "The root CMakeLists.txt"
msgstr "Кореневий CMakeLists.txt"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:18
msgid "You might remember this `CMakeLists.txt` file from the first tutorial:"
msgstr "Можливо, ви пам'ятаєте цей файл `CMakeLists.txt` з першого підручника:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:22
msgid ""
"The first line, `cmake_minimum_required()` sets the version of CMake we will "
"be calling."
msgstr ""
"Перший рядок, `cmake_minimum_required()`, встановлює версію CMake, яку буде "
"викликано."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:24
msgid ""
"After that, `project(kirigami-tutorial)` defines the name of the project."
msgstr "Після цього `project(kirigami-tutorial)` визначає назву проєкту."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:26
msgid ""
"Then we get to a section where we include a number of necessary CMake and "
"KDE settings by using [extra-cmake-modules](https://api.kde.org/ecm/). They "
"provide a set of useful utilities:"
msgstr ""
"Далі, маємо розділ, у якому ми включимо декілька потрібних параметрів CMake "
"і KDE за допомогою [extra-cmake-modules](https://api.kde.org/ecm/). Вони "
"забезпечують роботу корисних допоміжних інструментів:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:28
msgid ""
"[KDEInstallDirs](https://api.kde.org/ecm/kde-module/KDEInstallDirs6.html) "
"provides convenience variables such as `${KDE_INSTALL_TARGETS_DEFAULT_ARGS}"
"`, `${KDE_INSTALL_QMLDIR}`, `${KDE_INSTALL_BINDIR}` and `"
"${KDE_INSTALL_LIBDIR}`."
msgstr ""
"У [KDEInstallDirs](https://api.kde.org/ecm/kde-module/KDEInstallDirs6.html) "
"передбачено зручні змінні, зокрема `${KDE_INSTALL_TARGETS_DEFAULT_ARGS}`, `"
"${KDE_INSTALL_QMLDIR}`, `${KDE_INSTALL_BINDIR}` та `${KDE_INSTALL_LIBDIR}`."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:29
msgid ""
"[KDECMakeSettings](https://api.kde.org/ecm/kde-module/KDECMakeSettings.html) "
"provides things like `CMAKE_AUTORCC ON`, an `uninstall` target that can be "
"used with `cmake --build build/ --target uninstall`, and `ENABLE_CLAZY`."
msgstr ""
"[KDECMakeSettings](https://api.kde.org/ecm/kde-module/KDECMakeSettings.html) "
"містить речі, подібні до `CMAKE_AUTORCC ON`, ціль `uninstall`, якою можна "
"скористатися за допомогою `cmake --build build/ --target uninstall`, і "
"`ENABLE_CLAZY`."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:30
msgid ""
"[KDECompilerSettings](https://api.kde.org/ecm/kde-module/KDECMakeSettings."
"html) provides a minimum C++ standard, compiler flags such as `-pedantic`, "
"and best practices macros like `-DQT_NO_CAST_FROM_ASCII` to require explicit "
"conversions such as `QStringLiteral()`."
msgstr ""
"[KDECompilerSettings](https://api.kde.org/ecm/kde-module/KDECMakeSettings."
"html) містить мінімальний стандарт C++, прапорці компіляції, зокрема `-"
"pedantic`, і найкращі стандартні макроси, зокрема `-DQT_NO_CAST_FROM_ASCII` "
"для встановлення вимог щодо явних перетворень, зокрема `QStringLiteral()`."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:31
msgid ""
"[ECMFindQmlModule](https://api.kde.org/ecm/module/ECMFindQmlModule.html) "
"provides a way to ensure a runtime QML dependency is found at compile time."
msgstr ""
"[ECMFindQmlModule](https://api.kde.org/ecm/module/ECMFindQmlModule.html) "
"містить спосіб забезпечення виявлення динамічної залежності QML під час "
"компіляції."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:32
msgid ""
"[ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule.html) provides "
"CMake commands like `ecm_add_qml_module()` and `ecm_target_qml_sources()`."
msgstr ""
"[ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule.html) містить "
"команди CMake, зокрема `ecm_add_qml_module()` і `ecm_target_qml_sources()`."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:34
msgid ""
"The following section is important, because it specifies which dependencies "
"we'll be bringing in at compile time. Let's look at the first:"
msgstr ""
"Наступний розділ є важливим, оскільки у ньому визначають, які залежності ми "
"використовуватимемо під час компіляції. Погляньмо на початок:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:38
msgid ""
"[find_package()](https://cmake.org/cmake/help/latest/command/find_package."
"html) finds and loads the external library and its components."
msgstr ""
"[find_package()](https://cmake.org/cmake/help/latest/command/find_package."
"html) знаходить і завантажує зовнішню бібліотеку та її компоненти."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:39
msgid ""
"`REQUIRED` tells CMake to exit with an error if the package cannot be found."
msgstr ""
"`REQUIRED` повідомляє CMake, що програма має повідомити про помилку, якщо "
"пакунок не буде знайдено."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:40
msgid ""
"`COMPONENTS` is a parameter that precedes the specific components of the "
"framework we will include."
msgstr ""
"`COMPONENTS` — параметр, який передує специфічним компонентам бібліотеки, "
"які ми включатимемо."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:41
msgid ""
"Each word after `COMPONENTS` refers to a specific component of the library."
msgstr "Кожне слово після `COMPONENTS` вказує на компонент бібліотеки."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:45
msgid ""
"If you are looking to add any components listed in the [KDE API "
"documentation](https://api.kde.org/) to your application, you may check the "
"right sidebar for how to add the component with CMake. For instance, for "
"[Kirigami](docs:kirigami2;), you will find something like "
"`find_package(KF6Kirigami)`, which with the addition of ECM becomes:"
msgstr ""
"Якщо ви хочете додати будь-які компоненти зі списку у [документації до "
"програмного інтерфейсу KDE](https://api.kde.org/) до вашої програми, ви "
"можете звернутися до коду правої бічної панелі, щоб ознайомитися зі способом "
"додавання компонента за допомогою CMake. Наприклад, для [Kirigami](docs:"
"kirigami2;) ви побачите щось подібне до `find_package(KF6Kirigami)`, що з "
"додаванням ECM стає чимось подібним до такого:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:51
msgid ""
"Pay close attention to your included components, as omitting ones used in "
"our code will stop our application from compiling."
msgstr ""
"Значну увагу слід звернути на включення компонентів, оскільки пропускання "
"компонентів, які використано у вашому коді, призведе до неможливості зібрати "
"вашу програму."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:55
msgid ""
"The install line instructs CMake to install the desktop file in `"
"${KDE_INSTALL_APPDIR}`, which on Linux translates to `$XDG_DATA_DIRS/"
"applications`, usually `/usr/share/applications`, and on Windows translates "
"to `C:/Program Files/${PROJECT_NAME}/bin/data/applications`:"
msgstr ""
"Рядок встановлення повідомляє CMake, що слід встановити стільничний файл до `"
"${KDE_INSTALL_APPDIR}`, що у Linux буде перенесено як `$XDG_DATA_DIRS/"
"applications`, зазвичай `/usr/share/applications`, а у Windows буде "
"перенесено як `C:/Program Files/${PROJECT_NAME}/bin/data/applications`:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:59
msgid ""
"The final line lets CMake print out which packages it has found, and it "
"makes compilation fail immediately if it encounters an error:"
msgstr ""
"Останній рядок дозволяє CMake вивести список пакунків, які було знайдено, і "
"призводить до негайного припинення компіляції, якщо станеться помилка:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:63
msgid ""
"And above that, `add_subdirectory(src)` points CMake into the `src/` "
"directory, where it finds another `CMakeLists.txt` file."
msgstr ""
"А вище, `add_subdirectory(src)` вказує CMake каталог `src/`, де програма "
"знайде інший файл `CMakeLists.txt`."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:65
msgid "src/CMakeLists.txt"
msgstr "src/CMakeLists.txt"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:69
msgid ""
"While the first file handled metadata and finding libraries, this one will "
"consist of handling dependencies and installing the application. It has the "
"following CMake calls:"
msgstr ""
"Перший файл обробляв метадані і пошук бібліотек, цей файл містить команди "
"обробки залежностей та встановлення програми. У ньому містяться такі виклики "
"CMake:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:71
msgid ""
"[add_executable()](https://cmake.org/cmake/help/latest/command/"
"add_executable.html) creates the executable target we will use to run our "
"project."
msgstr ""
"[add_executable()](https://cmake.org/cmake/help/latest/command/"
"add_executable.html) створює виконуваний файл, яким ми користуватимемося для "
"запуску результатів нашого проєкту."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:72
msgid ""
"`ecm_add_qml_module()` creates a QML module target that will be accessible "
"via the \"org.kde.tutorial\" import."
msgstr ""
"`ecm_add_qml_module()` створює ціль — модуль QML, — доступ до якої "
"здійснюватиметься за допомогою імпортування «org.kde.tutorial»."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:73
msgid ""
"[target_sources()](https://cmake.org/cmake/help/latest/command/"
"target_sources.html) adds C++ source files to the executable target."
msgstr ""
"[target_sources()](https://cmake.org/cmake/help/latest/command/"
"target_sources.html) додає файли початкового коду мовою C++ до виконуваної "
"цілі проєкту."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:74
msgid "`ecm_target_qml_sources()` adds QML files to the module."
msgstr "`ecm_target_qml_sources()` додає до модуля файли QML."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:75
msgid ""
"[target_link_libraries()](https://cmake.org/cmake/help/latest/command/"
"target_link_libraries.html) links the C++ libraries used in our code to our "
"executable. Kirigami is not included here because we are using only its QML "
"module."
msgstr ""
"[target_link_libraries()](https://cmake.org/cmake/help/latest/command/"
"target_link_libraries.html) пов'язує ціль із бібліотеками C++, які "
"використовуються у нашому коді для створення виконуваного файла. Kirigami не "
"включено сюди, оскільки ми використовуємо лише її модуль QML."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:76
msgid ""
"[install()](https://cmake.org/cmake/help/latest/command/install.html) "
"installs the executable to the system."
msgstr ""
"[install()](https://cmake.org/cmake/help/latest/command/install.html) "
"встановлює виконуваний файл у системі."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:78
msgid ""
"The documentation for the two ECM commands can be found in the [extra-cmake-"
"modules API for ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule."
"html)."
msgstr ""
"Документацію з двох команд ECM можна знайти у [програмному інтерфейсі extra-"
"cmake-modules для ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule."
"html)."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:80
msgid ""
"The call to `ecm_add_qml_module()` was used here to modify the traditional C+"
"+ source code executable target and turn it into something that can accept "
"QML files and C++ source code that is accessible from QML in what is called "
"[using the executable as backing target for a QML module](https://doc.qt.io/"
"qt-6/qt-add-qml-module.html#executable-as-a-qml-module). This means the QML "
"files are run directly as part of the application, which is often the case "
"for applications."
msgstr ""
"Виклик `ecm_add_qml_module()` тут було використано, щоб модифікувати "
"традиційну ціль збирання початкового коду C++, виконуваний файл, і "
"перетворити її на щось, що може приймати файли QML, і початковий код C++ "
"буде доступним з QML у межах того, що називається [використання виконуваного "
"файла як резервної цілі для модуля QML](https://doc.qt.io/qt-6/qt-add-qml-"
"module.html#executable-as-a-qml-module). Це означає, що файли QML "
"запускаються безпосередньо як частина програми, що часто буває для програм."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:82
msgid ""
"You may also create a separate QML module that does not use the executable "
"as backing target using `ecm_add_qml_module()`. In this case, you'd create a "
"library target using [add_library()](https://cmake.org/cmake/help/latest/"
"command/add_library.html), link it to an existing executable target using "
"`target_link_libraries()`, and in addition to installing the library with "
"`install()` you will need to finalize the QML module with "
"[ecm_finalize_qml_module()](https://api.kde.org/ecm/module/ECMQmlModule."
"html) so it can generate two files: `qmldir` and `qmltypes`. These files are "
"used by QtQuick applications to find separate QML modules."
msgstr ""
"Ви також можете створити окремий модуль QML, який не використовує "
"виконуваний файл як резервну ціль, за допомогою `ecm_add_qml_module()`. У "
"цьому випадку ви могли б створити ціль-бібліотеку з використанням "
"[add_library()](https://cmake.org/cmake/help/latest/command/add_library."
"html), скомпонувати її із наявною ціллю — виконуваним файлом — за допомогою "
"`target_link_libraries()`, і на додачу до встановлення бібліотеки за "
"допомогою `install()` вам довелося б створити остаточну версію модуля QML за "
"допомогою [ecm_finalize_qml_module()](https://api.kde.org/ecm/module/"
"ECMQmlModule.html), так, щоб він міг створити два файли: `qmldir` і "
"`qmltypes`. Ці файли програми QtQuick використовують для пошуку окремих "
"модулів QML."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:84
msgid ""
"The method for creating a separate QML module is better exemplified in "
"[Using separate files](/content/docs/getting-started/kirigami/introduction-"
"separatefiles)."
msgstr ""
"Спосіб створення окремого модуля QML краще описано у розділі щодо "
"[використання окремих файлів](/content/docs/getting-started/kirigami/"
"introduction-separatefiles)."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:86
msgid ""
"These are additions provided by extra-cmake-modules to make the use of [Qt "
"declarative registration](https://doc.qt.io/qt-6.7/cmake-build-qml-"
"application.html) (the [replacement to Qt resource files](https://doc.qt.io/"
"qt-5/resources.html)) easier."
msgstr ""
"Ці доповнення, які містяться у extra-cmake-modules, призначено для спрощення "
"використання [декларативної реєстрації Qt](https://doc.qt.io/qt-6.7/cmake-"
"build-qml-application.html) ([заміни файлів ресурсів Qt](https://doc.qt.io/"
"qt-5/resources.html))."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:90
msgid ""
"These libraries should match the components that we included in our previous "
"`CMakeLists.txt` file, otherwise these components will not be included and "
"our application won't compile."
msgstr ""
"Ці бібліотеки мають відповідати компонентам, які ми включили до нашого "
"попереднього файла `CMakeLists.txt` — інакше ці компоненти не буде включено "
"і нашу програму не можна буде зібрати."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:94
msgid ""
"The documentation for all three commands can be found in the [extra-cmake-"
"modules API for ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule."
"html)."
msgstr ""
"Документацію до усіх трьох команд ECM можна знайти у [програмному інтерфейсі "
"extra-cmake-modules для ECMQmlModule](https://api.kde.org/ecm/module/"
"ECMQmlModule.html)."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:96
msgid "src/components/CMakeLists.txt"
msgstr "src/components/CMakeLists.txt"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:98
msgid ""
"In the tutorial about [how to split your code into separate files](/docs/"
"getting-started/kirigami/introduction-separatefiles#preparing-cmake-for-the-"
"new-files), a new CMake file was introduced to allow for separate QML "
"modules:"
msgstr ""
"У підручнику щодо того, як [поділити ваш код на окремі файли](/docs/getting-"
"started/kirigami/introduction-separatefiles#preparing-cmake-for-the-new-"
"files) було впроваджено новий файл CMake для забезпечення роботи окремих "
"модулів QML:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:102
msgid ""
"The requirement for this file to be read by CMake is adding a call to "
"`add_subdirectory()` in the `src/CMakeLists.txt` pointing to it."
msgstr ""
"Щоб цей файл прочитала CMake слід додати виклик `add_subdirectory()` до `src/"
"CMakeLists.txt`, який вказуватиме сюди."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:104
#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:96
msgid ""
"We create a new target called `kirigami-hello-components` and then turn it "
"into a QML module using [ecm_add_qml_module()](https://api.kde.org/ecm/"
"module/ECMQmlModule.html) under the import name `org.kde.tutorial."
"components` and add the relevant QML files."
msgstr ""
"Ми створюємо нову ціль із назвою `kirigami-hello-components`, а потім "
"перетворюємо її на модуль QML за допомогою using [ecm_add_qml_module()]"
"(https://api.kde.org/ecm/module/ECMQmlModule.html) із назвою імпортування "
"`org.kde.tutorial.components` і додаємо пов'язані файли QML."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:106
msgid ""
"The call to [add_library()](https://cmake.org/cmake/help/latest/command/"
"add_library.html) generates a new target called `kirigami-hello-components`. "
"This target will have its own set of source code files, QML files, link its "
"own libraries and so on, but it needs to be linked to the executable, but "
"once it is compiled it needs to be linked to the executable created in the "
"`src/CMakeLists.txt`. This is done by adding the target name to the list of "
"libraries that will be linked to the executable in `target_link_libraries()`."
msgstr ""
"Виклик [add_library()](https://cmake.org/cmake/help/latest/command/"
"add_library.html) створює нову ціль із назвою `kirigami-hello-components`. "
"Ця ціль матиме власний набір файлів початкового коду, файлів QML, компонує "
"власні бібліотеки тощо, але її доведеться скомпонувати з виконуваним файлом, "
"а коли її буде скомпільовано, її слід скомпонувати із виконуваним файлом, "
"який створено у `src/CMakeLists.txt`. Ця мета досягається додаванням назви "
"цілі до списку бібліотек, які буде скомпоновано до виконуваного файла у "
"`target_link_libraries()`."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:108
msgid ""
"The call to `ecm_add_qml_module()` changes the library to allow it to accept "
"QML files as before, but this time we need to use [GENERATE_PLUGIN_SOURCE]"
"(https://api.kde.org/ecm/module/ECMQmlModule.html). When the executable is "
"used as a backing target (like with `kirigami-hello`) it doesn't need to "
"generate plugin code since it's built into the executable; with separate QML "
"modules like `kirigami-hello-components` the plugin code is necessary."
msgstr ""
"Виклик `ecm_add_qml_module()` змінює бібліотеку так, щоб дозволити їй "
"приймати файли QML, як і раніше, але цього разу нам слід скористатися "
"[GENERATE_PLUGIN_SOURCE](https://api.kde.org/ecm/module/ECMQmlModule.html). "
"Якщо як резервну ціль використано виконуваний файл (як у `kirigami-hello`), "
"вона не потребує створення коду додатка, оскільки її буде зібрано до "
"виконуваного файла; із окремими модулями QML, зокрема `kirigami-hello-"
"components`, код додатка є обов'язковим."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:110
msgid ""
"Upstream Qt's [qt_add_qml_module()](https://doc.qt.io/qt-6/qt-add-qml-module."
"html#targets-and-plugin-targets) by default generates a plugin together with "
"the QML module, but KDE's `ecm_add_qml_module()` by default does not for "
"backwards compatibility."
msgstr ""
"Основна команда Qt [qt_add_qml_module()](https://doc.qt.io/qt-6/qt-add-qml-"
"module.html#targets-and-plugin-targets) типово створює додаток разом із "
"модулем QML, а `ecm_add_qml_module()` KDE типово не робить цього з міркувань "
"зворотної сумісності."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:112
msgid ""
"Another thing that is necessary for separate QML modules is to finalize the "
"target. This mainly means CMake generates two files, [qmldir and qmltypes]"
"(https://doc.qt.io/qt-6/qtqml-modules-qmldir.html), which describe the QML "
"modules we have and exports their symbols for use in the library. They are "
"important when installing your application so that the executable being run "
"is able to find where the QML files for each module are, so they are "
"automatically added to the target."
msgstr ""
"Іншою річчю, яка потрібна для окремих модулів QML, є завершення цілі. Це, в "
"основному, означає, що CMake створює два файли, [qmldir і qmltypes](https://"
"doc.qt.io/qt-6/qtqml-modules-qmldir.html), які описують наші модулі QML та "
"експортує їхні символи для використання у бібліотеці. Вони є важливими при "
"встановленні вашої програми, щоб запущений виконуваний файл міг знайти "
"місце, де перебувають файли кожного модуля QML, щоб їх можна було "
"автоматично додати до цілі."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:114
msgid "You can then just install the target as before."
msgstr "Далі ви можете встановити ціль, як і раніше."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:116
msgid ""
"Next time you need to add more QML files, remember to include them in this "
"file. C++ files that use the [QML_ELEMENT](https://doc.qt.io/qt-6/qtqml-"
"cppintegration-definetypes.html) keyword which we will see much later in the "
"tutorial can also be added here using `target_sources()`. You can logically "
"separate your code by creating more QML modules with different imports as "
"needed."
msgstr ""
"Наступного разу, коли вам буде потрібно додати файли QML, не забудьте "
"включити їх до цього файла. Файли C++, які використовують ключове слово "
"[QML_ELEMENT](https://doc.qt.io/qt-6/qtqml-cppintegration-definetypes.html), "
"які ми побачимо набагато пізніше у цьому підручнику, також можна додати саме "
"тут за допомогою `target_sources()`. Якщо потрібно, ви можете логічно "
"розділити ваш код створенням додаткових модулів QML із різними "
"імпортуваннями."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:118
msgid "This setup will be useful when developing most Kirigami apps."
msgstr ""
"Такими налаштуваннями можна скористатися для створення більшості програм на "
"основі Kirigami."

#: content/docs/getting-started/kirigami/components-actions/index.md:0
msgid "Actions based components"
msgstr "Компоненти на основі дій"

#: content/docs/getting-started/kirigami/components-actions/index.md:0
msgid "Kirigami's Actions are used to add functionality to components.\n"
msgstr ""
"Дії (Actions) у Kirigami використовують для додавання функціональних "
"можливостей до компонентів.\n"

#: content/docs/getting-started/kirigami/components-actions/index.md:10
#: content/docs/getting-started/kirigami/introduction-actions/index.md:16
msgid "Actions"
msgstr "Дії"

#: content/docs/getting-started/kirigami/components-actions/index.md:12
msgid ""
"A [Kirigami.Action](docs:kirigami2;Action) consists of a clickable action "
"whose appearance depends on where it is added. Typically it is a button with "
"an icon and text."
msgstr ""
"[Kirigami.Action](docs:kirigami2;Action) складається із придатного до "
"натискання пункту, вигляд якого залежить від того, де його додано. Типово, "
"це кнопка із піктограмою та текстом."

#: content/docs/getting-started/kirigami/components-actions/index.md:14
msgid ""
"We can use these to provide our applications with easy-to-reach actions that "
"are essential to their functionality."
msgstr ""
"Діями можна скористатися для надання нашій програмі легкодоступних дій, які "
"є критичними для виконання нею функціональних можливостей."

#: content/docs/getting-started/kirigami/components-actions/index.md:18
msgid ""
"Kirigami Actions inherit from [QtQuick.Controls.Action](docs:qtquickcontrols;"
"QtQuick.Controls.Action) and can be assigned shortcuts."
msgstr ""
"Дії Kirigami успадковують від [QtQuick Controls Action](docs:qtquickcontrols;"
"QtQuick.Controls.Action), і з ними можна пов'язувати клавіатурні скорочення."

#: content/docs/getting-started/kirigami/components-actions/index.md:23
msgid ""
"Like [QtQuick Controls Actions](docs:qtquickcontrols;QtQuick.Controls."
"Action), they can be assigned to menu items and toolbar buttons, but also to "
"multiple other Kirigami components."
msgstr ""
"Подібно до [дій Control QtQuick](docs:qtquickcontrols;QtQuick.Controls."
"Action), їх можна пов'язати із пунктами меню і кнопками панелі інструментів, "
"а також декількома іншими компонентами Kirigami."

#: content/docs/getting-started/kirigami/components-actions/index.md:42
msgid ""
"The [icon.name](https://doc.qt.io/qt-6/qml-qtquick-controls2-action."
"html#icon.name-prop) property takes names for system-wide icons following "
"the FreeDesktop specification. These icons and icon names can be viewed with "
"KDE's CuttleFish application which comes with [plasma-sdk](https://invent."
"kde.org/plasma/plasma-sdk), or by visiting [FreeDesktop's icon naming "
"specification](https://specifications.freedesktop.org/icon-naming-spec/icon-"
"naming-spec-latest.html)."
msgstr ""
"Властивість [icon.name](https://doc.qt.io/qt-6/qml-qtquick-controls2-action."
"html#icon.name-prop) визначає назву загальносистемної піктограми за "
"специфікацією FreeDesktop. Піктограми і назви піктограм можна переглянути за "
"допомогою програми CuttleFish KDE, яка є частиною [plasma-sdk](https://"
"invent.kde.org/plasma/plasma-sdk), або відвідавши [сторінку специфікації "
"назв піктограм FreeDesktop](https://specifications.freedesktop.org/icon-"
"naming-spec/icon-naming-spec-latest.html)."

#: content/docs/getting-started/kirigami/components-actions/index.md:46
msgid ""
"One feature offered by Kirigami Actions on top of QtQuick Actions is the "
"possibility to nest actions."
msgstr ""
"Однією з можливостей, які пропонуються діями Kirigami, окрім дій QtQuick, є "
"можливість вкладення дій одна в одну."

#: content/docs/getting-started/kirigami/components-actions/index.md:66
msgid ""
"Another feature of Kirigami Actions is to provide various hints to items "
"using actions about how they should display the action. These are primarily "
"handled by the [displayHint](docs:kirigami2;Action::displayHint) and "
"[displayComponent](docs:kirigami2;Action::displayComponent) properties."
msgstr ""
"Ще однією можливістю дій Kirigami є надання різноманітних настанов щодо "
"показу дії для пунктів, для яких використовуються дії. В основному, за ці "
"настанови відповідають властивості [displayHint](docs:kirigami2;Action::"
"displayHint) і [displayComponent](docs:kirigami2;Action::displayComponent)."

#: content/docs/getting-started/kirigami/components-actions/index.md:70
msgid ""
"These properties will be respected by the item if possible. For example, the "
"following action will be displayed as a [TextField](docs:qtquickcontrols;"
"QtQuick.Controls.TextField) with the item trying its best to keep itself "
"visible as long as possible."
msgstr ""
"Ці властивості буде враховано пунктом, якщо це можливо. Наприклад, наведену "
"нижче дію буде показано як [TextField](docs:qtquickcontrols;QtQuick.Controls."
"TextField), а її пункт намагатиметься максимально зберігати видимість."

#: content/docs/getting-started/kirigami/components-actions/index.md:87
msgid "Using actions in other components"
msgstr "Використання дій у інших компонентах"

#: content/docs/getting-started/kirigami/components-actions/index.md:89
msgid ""
"As mentioned in the [introduction tutorial for actions](/docs/getting-"
"started/kirigami/introduction-actions), Kirigami Actions are [contextual](/"
"docs/getting-started/kirigami/introduction-actions#actions-are-contextual), "
"which means they show up in different places depending on where you put "
"them. In addition to that, they also have different representations for "
"desktop and mobile."
msgstr ""
"Як вже було згадано у [вступі щодо дій](/docs/getting-started/kirigami/"
"introduction-actions), Kirigami Actions є [контекстуальними](/docs/getting-"
"started/kirigami/introduction-actions#actions-are-contextual), тобто їх буде "
"показано у різних місцях, залежно від того, де ви їх розмістите. Крім того, "
"вони матимуть різне представлення для робочих станцій та мобільних пристроїв."

#: content/docs/getting-started/kirigami/components-actions/index.md:91
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:69
msgid "Page"
msgstr "Сторінка"

#: content/docs/getting-started/kirigami/components-actions/index.md:93
msgid ""
"A [Kirigami.Page](docs:kirigami2;Page) shows Actions on the right of the top "
"header in desktop mode, and on a footer in mobile mode."
msgstr ""
"[Kirigami.Page](docs:kirigami2;Page) показує пункти дій праворуч від "
"верхнього заголовка у режимі робочої станції та на нижній панелі у режимі "
"мобільного пристрою."

#: content/docs/getting-started/kirigami/components-actions/index.md:99
msgid "Page actions on the desktop"
msgstr "Пункти дій сторінки на робочій станції"

#: content/docs/getting-started/kirigami/components-actions/index.md:101
msgid "Page actions on a mobile device"
msgstr "Пункти дій на мобільному комп'ютері"

#: content/docs/getting-started/kirigami/components-actions/index.md:105
#: content/docs/getting-started/kirigami/components-drawers/index.md:14
#: content/docs/getting-started/kirigami/introduction-actions/index.md:100
#: content/docs/getting-started/kirigami/introduction-actions/index.md:137
msgid "Global drawer"
msgstr "Загальна панель"

#: content/docs/getting-started/kirigami/components-actions/index.md:107
msgid ""
"The [Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) is a menu-like "
"sidebar that provides an action based navigation to your application. This "
"is where nested actions are useful because it is possible to create nested "
"navigation:"
msgstr ""
"[Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) є подібною до меню "
"бічною панеллю, яка забезпечує роботу навігації на основі дій у вашій "
"програмі. Це місце, де корисними є вкладені дії, оскільки воно уможливлює "
"створення вкладеної навігації:"

#: content/docs/getting-started/kirigami/components-actions/index.md:146
msgid "Global Drawer actions on the desktop"
msgstr "Пункти дій загальних панелей на робочій станції"

#: content/docs/getting-started/kirigami/components-actions/index.md:150
msgid ""
"You can read more about Global Drawers in the [documentation page for "
"drawers](../components-drawers#globaldrawer)."
msgstr ""
"Почитати більше про загальних панелей можна на [сторінці документації до "
"панелей](../components-drawers#globaldrawer)."

#: content/docs/getting-started/kirigami/components-actions/index.md:152
msgid "Context drawer"
msgstr "Контекстна панель"

#: content/docs/getting-started/kirigami/components-actions/index.md:154
msgid ""
"A [Kirigami.ContextDrawer](docs:kirigami2;ContextDrawer) consists of an "
"additional set of actions that are hidden behind a three-dots menu on the "
"top right in desktop mode or on the bottom right in mobile mode if there is "
"no space. It is used to display actions that are only relevant to a specific "
"page. You can read more about them in our [Kirigami Drawers](/docs/getting-"
"started/kirigami/components-drawers) tutorial."
msgstr ""
"[Kirigami.ContextDrawer](docs:kirigami2;ContextDrawer) складається з "
"додаткового набору дій, які приховано за меню з трьох крапок у верхньому "
"правому куті вікна у режимі робочої станції або у нижньому правому куті у "
"режимі мобільного пристрою, якщо у вікні недостатньо місця. Його "
"використовують для показу пунктів дій, які стосуються лише певної сторінки. "
"Докладніше про такі висувні панелі можна прочитати у нашому [підручнику з "
"висувних панелей Kirigami](/docs/getting-started/kirigami/components-"
"drawers)."

#: content/docs/getting-started/kirigami/components-actions/index.md:165
msgid "ActionTextFields"
msgstr "ActionTextFields"

#: content/docs/getting-started/kirigami/components-actions/index.md:167
msgid ""
"A [Kirigami.ActionTextField](docs:kirigami2;ActionTextField) is used to add "
"some contextual actions to a text field, for example to clear the text, or "
"to search for the text."
msgstr ""
"[Kirigami.ActionTextField](docs:kirigami2;ActionTextField) використовується "
"для додавання контекстних дій до поля для введення тексту, наприклад, для "
"вилучення тексту або пошуку за введеним текстовим критерієм."

#: content/docs/getting-started/kirigami/components-actions/index.md:186
msgid ""
"In this example, we are creating a \"clear\" button for a search field that "
"is only visible when text is entered."
msgstr ""
"У цьому прикладі ми створюємо кнопку вилучення тексту для поля пошуку, яку "
"буде показано, лише якщо до поля введено якийсь текст."

#: content/docs/getting-started/kirigami/components-actions/index.md:188
msgid "![Search field with text: \"I want ](searchfield.webp)"
msgstr "![Поле пошуку із текстом: \"I want ](searchfield.webp)"

#: content/docs/getting-started/kirigami/components-actions/index.md:192
msgid ""
"You should rarely use an ActionTextField directly. [SearchField](docs:"
"kirigami2;SearchField) and [PasswordField](docs:kirigami2;PasswordField) "
"both inherit from `ActionTextField` and are likely to cover your desired use-"
"case."
msgstr ""
"Потреба у безпосередньому використанні ActionTextField виникає дуже нечасто. "
"І [SearchField](docs:kirigami2;SearchField), і [PasswordField](docs:"
"kirigami2;PasswordField) успадковують від `ActionTextField` і, ймовірно, "
"пасують до усіх випадків використання."

#: content/docs/getting-started/kirigami/components-actions/index.md:196
msgid "SwipeListItem"
msgstr "SwipeListItem"

#: content/docs/getting-started/kirigami/components-actions/index.md:198
msgid ""
"A [Kirigami.SwipeListItem](docs:kirigami2;SwipeListItem) is a delegate "
"intended to support extra actions. When using a mouse, its actions will "
"always be shown. On a touch device, they can be shown by dragging the item "
"with the handle. In the following pictures, these are the icons to the right."
msgstr ""
"[Kirigami.SwipeListItem](docs:kirigami2;SwipeListItem) представником "
"об'єкта, який призначено для забезпечення підтримки додаткових дій. Якщо "
"використовується миша, його дії буде показано завжди. На сенсорному пристрої "
"доступ до дій можна отримати перетягуванням пункту за допомогою елемента "
"керування. На наведених нижче зображеннях ці піктограми показано праворуч."

#: content/docs/getting-started/kirigami/components-actions/index.md:214
msgid "do something"
msgstr "якісь дії"

#: content/docs/getting-started/kirigami/components-actions/index.md:221
msgid "SwipeListItem on a computer"
msgstr "SwipeListItem на комп'ютері"

#: content/docs/getting-started/kirigami/components-actions/index.md:223
msgid "SwipeListItem on a mobile device"
msgstr "SwipeListItem на мобільному пристрої"

#: content/docs/getting-started/kirigami/components-actions/index.md:225
msgid "ActionToolBar"
msgstr "ActionToolBar"

#: content/docs/getting-started/kirigami/components-actions/index.md:227
msgid ""
"A [Kirigami.ActionToolBar](docs:kirigami2;ActionToolBar) is a toolbar built "
"out of a list of actions. By default, each action that will fit in the "
"toolbar will be represented by a [ToolButton](docs:qtquickcontrols;QtQuick."
"Controls.ToolButton), with those that do not fit being moved into a menu at "
"the end of the toolbar."
msgstr ""
"[Kirigami.ActionToolBar](docs:kirigami2;ActionToolBar) — панель "
"інструментів, яку побудовано на основі списку дій. Типово, кожен пункт дії, "
"який вміщується на панель інструментів, буде представлено [ToolButton](docs:"
"qtquickcontrols;QtQuick.Controls.ToolButton), а ті, які не вмістилися, буде "
"пересунуто до меню у кінцевій частині панелі інструментів."

#: content/docs/getting-started/kirigami/components-actions/index.md:230
msgid ""
"Like [ActionTextField](docs:kirigami2;ActionTextField), you may not need to "
"use [ActionToolBar](docs:kirigami2;ActionToolBar) directly as it is used by "
"page headers and cards to provide their action display."
msgstr ""
"Подібно до [ActionTextField](docs:kirigami2;ActionTextField), [ActionToolBar]"
"(docs:kirigami2;ActionToolBar) не варто використовувати безпосередньо, "
"оскільки він використовується заголовками сторінок і картками для "
"забезпечення показу їхніх пунктів дій."

#: content/docs/getting-started/kirigami/components-actions/index.md:262
msgid "A horizontal toolbar being displayed at the top of the application"
msgstr ""
"Горизонтальна панель інструментів, яку показано у верхній частині вікна "
"програми"

#: content/docs/getting-started/kirigami/components-actions/index.md:264
msgid ""
"You can read more about [ActionToolBar](docs:kirigami2;ActionToolBar) "
"components in their [dedicated documentation page](../components-"
"actiontoolbar/)."
msgstr ""
"Із докладнішим описом компонентів [ActionToolBar](docs:kirigami2;"
"ActionToolBar) можна ознайомитися за допомогою [спеціалізованої сторінки "
"документації](../components-actiontoolbar/)."

#: content/docs/getting-started/kirigami/components-actions/index.md:266
#: content/docs/getting-started/kirigami/components-card/index.md:0
msgid "Cards"
msgstr "Карти"

#: content/docs/getting-started/kirigami/components-actions/index.md:268
msgid ""
"A [Kirigami.Card](docs:kirigami2;Card) is used to display a collection of "
"information or actions together. These actions can be added to the `actions` "
"group, similarly to previous components."
msgstr ""
"[Kirigami.Card](docs:kirigami2;Card) використовують для показу збірки "
"відомостей або набору кнопок. Ці кнопки можна додати до групи `actions`, "
"подібно до попередніх компонентів."

#: content/docs/getting-started/kirigami/components-actions/index.md:304
msgid ""
"![Screenshot of a full-fledged Card with a banner background behind its "
"title, white background behind its text, and two actions with icons and a "
"hamburger menu at the bottom](card.png)"
msgstr ""
"![Знімок повноцінної Card із банером-тлом під її заголовком, білим тлом під "
"її текстом та двома кнопками дій із піктограмами та меню-гамбургером внизу]"
"(card.png)"

#: content/docs/getting-started/kirigami/components-actions/index.md:310
msgid ""
"For more information consult the [component page for Cards](../components-"
"card/)."
msgstr ""
"Докладніший опис можна знайти на [сторінці компонентів для карток](../"
"components-card/)."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:0
msgid "Action toolbars"
msgstr "Панелі інструментів дій"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:0
msgid "Create your own customisable tool bars with the ActionToolBar component"
msgstr ""
"Створення власних налаштовуваних панелей інструментів за допомогою "
"компонента ActionToolBar"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:10
msgid ""
"While Kirigami pages allow you to easily place a set of actions in the page "
"header, there are times when you might prefer to have something more "
"flexible."
msgstr ""
"Хоча сторінки Kirigami надають вам змогу без проблем розташовувати набір "
"кнопок дій у шапці сторінки, іноді варто скористатися гнучкішим інструментом."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:12
msgid ""
"Kirigami provides the component [Kirigami.ActionToolBar](docs:kirigami2;"
"ActionToolBar). It displays a list of [Kirigami.Action](docs:kirigami2;"
"Action) objects and will display as many of them as possible, providing an "
"overflow menu for the ones that don't fit. The ActionToolBar is dynamic and "
"will move actions in and out of the overflow menu depending on the size "
"available to it."
msgstr ""
"До складу Kirigami включено компонент [Kirigami.ActionToolBar](docs:"
"kirigami2;ActionToolBar). Він показує список об'єктів [Kirigami.Action](docs:"
"kirigami2;Action) так, щоб область перегляду вмістила якомога більше "
"об'єктів, надаючи меню переповнення із тими об'єктами, які не вмістилися до "
"області перегляду. ActionToolBar є динамічним об'єктом — пересуває пункти до "
"меню переповнення і з меню переповнення, залежно від доступного розміру."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:16
msgid ""
"This page assumes you are familiar with [Kirigami.Action](docs:kirigami2;"
"Action) objects. If you are not, you can learn all about them in our "
"beginner tutorial or in [the dedicated documentation page for them](../"
"components-actions/)."
msgstr ""
"На цій сторінці ми припускаємо, що ви вже познайомилися із об'єктами "
"[Kirigami.Action](docs:kirigami2;Action). Якщо це не так, ви можете "
"дізнатися про них усе у нашому початковому підручнику або на [спеціальній "
"сторінці документації щодо них](../components-actions/)."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:20
msgid "Creating our first ActionToolBar"
msgstr "Створюємо нашу першу ActionToolBar"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:22
msgid ""
"The layout and location of your [Kirigami.ActionToolBar](docs:kirigami2;"
"ActionToolBar) are really up to you, though for the sake of user-"
"friendliness it is usually a good idea to stick to UI conventions and put "
"your toolbar near the top or bottom of your page and to have it spread width "
"wise."
msgstr ""
"Компонування і розташування вашого [Kirigami.ActionToolBar](docs:kirigami2;"
"ActionToolBar) визначається лише вами, хоча з міркувань зручності у "
"користуванні, зазвичай, варто користуватися традиційними принципами і "
"розташовувати панель інструментів у верхній або нижній частині сторінки, "
"розтягнувши її на усю ширину області перегляду."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:24
msgid ""
"Like most other action-holding components, [Kirigami.ActionToolBar](docs:"
"kirigami2;ActionToolBar) has an [actions](docs:kirigami2;ActionToolBar::"
"actions) property. We can assign an array of [Kirigami.Action](docs:"
"kirigami2;Action) components to this property."
msgstr ""
"Подібно до більшості компонентів, які містять пункти дій, [Kirigami."
"ActionToolBar](docs:kirigami2;ActionToolBar) має властивість [actions](docs:"
"kirigami2;ActionToolBar::actions). Пов'язати із цією властивістю можна масив "
"компонентів [Kirigami.Action](docs:kirigami2;Action)."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:77
msgid "ActionToolBar with enough space for all children"
msgstr "ActionToolBar із достатнім простором для усіх дочірніх елементів"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:79
msgid "ActionToolBar with overflow menu containing children"
msgstr "ActionToolBar із переповненим меню, що містить дочірні пункти"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:83
msgid "Alignment"
msgstr "Вирівнювання"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:85
msgid ""
"By default, actions in the [ActionToolBar]([Kirigami.ActionToolBar](docs:"
"kirigami2;ActionToolBar)) will be left aligned. This might not be desirable "
"in all situations. Thankfully we can change this with the [alignment](docs:"
"kirigami2;ActionToolBar::alignment) property. We can set this property to a "
"range of values, but the three most relevant ones are `Qt.AlignLeft`, `Qt."
"AlignCenter`, and `Qt.AlignRight` (which deal with [horizontal alignment]"
"(docs:qtcore;Qt::Alignment))."
msgstr ""
"Типово, пункти дій на [ActionToolBar]([Kirigami.ActionToolBar](docs:"
"kirigami2;ActionToolBar)) буде вирівняно ліворуч. Таке вирівнювання є не "
"завжди бажаним. На щастя, ми можемо змінити це за допомогою властивості "
"[alignment](docs:kirigami2;ActionToolBar::alignment). Для цієї властивості "
"ви можете встановити діапазон значень, але трьома найпоширенішими для "
"ActionToolBar є `Qt.AlignLeft`, `Qt.AlignCenter` і `Qt.AlignRight` (які "
"стосуються [горизонтального вирівнювання](docs:qtcore;Qt::Alignment))."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:131
#: content/docs/getting-started/kirigami/components-card/index.md:209
#: content/docs/getting-started/kirigami/components-controls/index.md:48
#: content/docs/getting-started/kirigami/components-controls/index.md:107
#: content/docs/getting-started/kirigami/components-controls/index.md:166
#: content/docs/getting-started/kirigami/components-controls/index.md:219
#: content/docs/getting-started/kirigami/components-controls/index.md:275
#: content/docs/getting-started/kirigami/components-controls/index.md:325
#: content/docs/getting-started/kirigami/components-controls/index.md:389
#: content/docs/getting-started/kirigami/components-controls/index.md:439
#: content/docs/getting-started/kirigami/components-controls/index.md:514
#: content/docs/getting-started/kirigami/components-dialogs/index.md:62
#: content/docs/getting-started/kirigami/components-dialogs/index.md:123
#: content/docs/getting-started/kirigami/components-dialogs/index.md:177
#: content/docs/getting-started/kirigami/components-dialogs/index.md:244
#: content/docs/getting-started/kirigami/components-dialogs/index.md:319
#: content/docs/getting-started/kirigami/components-drawers/index.md:65
#: content/docs/getting-started/kirigami/components-drawers/index.md:132
#: content/docs/getting-started/kirigami/components-progressbars/index.md:64
#: content/docs/getting-started/kirigami/introduction-actions/index.md:90
#: content/docs/getting-started/kirigami/style-colors/index.md:155
#: content/docs/getting-started/kirigami/style-typography/index.md:70
#: content/docs/getting-started/kirigami/style-typography/index.md:111
#: content/docs/getting-started/kirigami/style-typography/index.md:164
#: content/docs/getting-started/kirigami/style-typography/index.md:213
#: content/docs/getting-started/kirigami/style-typography/index.md:264
#: content/docs/getting-started/kirigami/style-typography/index.md:315
#: content/docs/getting-started/kirigami/style-typography/index.md:365
msgid "<br>\n"
msgstr "<br>\n"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:133
msgid ""
"![ActionToolBar with children center-aligned](/docs/getting-started/kirigami/"
"components-actiontoolbar/ActionToolBar-aligned.webp)"
msgstr ""
"![ActionToolBar із вирівняними за центром дочірніми елементами](/docs/"
"getting-started/kirigami/components-actiontoolbar/ActionToolBar-aligned.webp)"

#: content/docs/getting-started/kirigami/components-card/index.md:0
msgid ""
"A card serves as an overview and entry point for more detailed information "
"and can offer direct access to the most important actions of an item.\n"
msgstr ""
"Картка слугує як панель огляду та вхідна позиція для отримання докладніших "
"відомостей і може пропонувати безпосередній доступ до найважливіших дій над "
"пунктом.\n"

#: content/docs/getting-started/kirigami/components-card/index.md:11
msgid ""
"The Kirigami types [AbstractCard](docs:kirigami2;AbstractCard) and [Card]"
"(docs:kirigami2;Card) are used to implement the popular card component used "
"on many mobile and web platforms. Cards can be used to display a collection "
"of information or actions in an attractive and distinctive way."
msgstr ""
"Типи Kirigami [AbstractCard](docs:kirigami2;AbstractCard) і [Card](docs:"
"kirigami2;Card) використовують для реалізації популярного компонента картки, "
"який використовується на багатьох мобільних платформах та інтернет-"
"платформах. Картками можна скористатися для показу збірки відомостей або "
"пунктів дій у привабливий та виразний спосіб."

#: content/docs/getting-started/kirigami/components-card/index.md:13
msgid ""
"Kirigami also offers 3 kinds of [views](https://doc.qt.io/qt-6/qtquick-"
"modelviewsdata-modelview.html) and [positioners](https://doc.qt.io/qt-6/"
"qtquick-positioning-layouts.html) to aid you in presenting your cards with "
"beautiful and responsive layouts."
msgstr ""
"Крім того, Kirigami пропонує 3 типи [панелей перегляду](https://doc.qt.io/"
"qt-6/qtquick-modelviewsdata-modelview.html) і [засобів розташування](https://"
"doc.qt.io/qt-6/qtquick-positioning-layouts.html), які допоможуть вам у "
"представленні ваших карток з використанням красивих і чутливих до дій "
"користувача компонувань."

#: content/docs/getting-started/kirigami/components-card/index.md:15
msgid "AbstractCard"
msgstr "AbstractCard"

#: content/docs/getting-started/kirigami/components-card/index.md:17
msgid ""
"A [Kirigami.AbstractCard](docs:kirigami2;AbstractCard) is the simplest type "
"of card. It's just a rectangle with a shadow, which can contain any [Item]"
"(docs:qtquick;QtQuick.Item) in it. It can also have Items assigned to its "
"[header](docs:kirigami2;templates::AbstractCard::header) or [footer](docs:"
"kirigami2;templates::AbstractCard::footer) properties. In this case a "
"[Kirigami.Heading](docs:kirigami2;Heading) is its `header` and a [Controls."
"Label](docs:qtquickcontrols;QtQuick.Controls.Label) is the card's "
"[contentItem](https://doc.qt.io/Qt-6/qml-qtquick-controls-control."
"html#contentItem-prop)."
msgstr ""
"[Kirigami.AbstractCard](docs:kirigami2;AbstractCard) є найпростішим типом "
"картки. Це лише прямокутник з тінню, який може містити у собі будь-який "
"[Item](docs:qtquick;QtQuick.Item). На ній також можуть міститися пункти, які "
"пов'язано із його властивостями [header](docs:kirigami2;templates::"
"AbstractCard::header) або [footer](docs:kirigami2;templates::AbstractCard::"
"footer). У цьому випадку [`Kirigami.Heading`](docs:kirigami2;Heading) є його "
"шапкою, а [`Controls.Label`](docs:qtquickcontrols;QtQuick.Controls.Label), є "
"[contentItem](https://doc.qt.io/Qt-6/qml-qtquick-controls-control."
"html#contentItem-prop)."

#: content/docs/getting-started/kirigami/components-card/index.md:41
msgid ""
"![Screenshot of an Abstract Card, a simple rectangular button with left-"
"aligned text](/docs/getting-started/kirigami/components-card/abstract-card."
"png)"
msgstr ""
"![Знімок абстрактної картки, простої прямокутної кнопки з вирівняним ліворуч "
"текстом](/docs/getting-started/kirigami/components-card/abstract-card.png)"

#: content/docs/getting-started/kirigami/components-card/index.md:48
msgid "Card"
msgstr "Картка"

#: content/docs/getting-started/kirigami/components-card/index.md:50
msgid ""
"A [Kirigami.Card](docs:kirigami2;Card) inherits from [AbstractCard](docs:"
"kirigami2;AbstractCard) and provides more features out of the box. Cards "
"inherit the same [header](docs:kirigami2;templates::AbstractCard::header) "
"and [footer](docs:kirigami2;templates::AbstractCard::footer) from an "
"Abstract Card, but you are encouraged to use a [banner](docs:kirigami2;Card::"
"banner) and a set of [Kirigami.Action](docs:kirigami2;Action) in the "
"`actions` group instead."
msgstr ""
"[Kirigami.Card](docs:kirigami2;Card) є нащадком [`Kirigami.AbstractCard`]"
"(docs:kirigami2;AbstractCard) і від початку надає більше можливостей. Картки "
"успадковують [заголовок](docs:kirigami2;templates::AbstractCard::header) і "
"[підвал](docs:kirigami2;templates::AbstractCard::footer) від абстрактної "
"картки, але вам варто замість них скористатися [банером](docs:kirigami2;"
"Card::banner) і набором [Kirigami.Action](docs:kirigami2;Action) у групі "
"`actions`."

#: content/docs/getting-started/kirigami/components-card/index.md:72
msgid "The title can be positioned in the banner"
msgstr "Заголовок може бути розташовано банері"

#: content/docs/getting-started/kirigami/components-card/index.md:87
msgid ""
"![Screenshot of a full-fledged Card with a banner background behind its "
"title, white background behind its text, and two actions with icons and a "
"hamburger menu at the bottom](/docs/getting-started/kirigami/components-card/"
"card1.png)"
msgstr ""
"![Знімок повноцінної Card із банером-тлом під її заголовком, білим тлом під "
"її текстом та двома кнопками дій із піктограмами та меню-гамбургером внизу](/"
"docs/getting-started/kirigami/components-card/card1.png)"

#: content/docs/getting-started/kirigami/components-card/index.md:93
msgid "CardsLayout"
msgstr "CardsLayout"

#: content/docs/getting-started/kirigami/components-card/index.md:95
msgid ""
"A [Kirigami.CardsLayout](docs:kirigami2;CardsLayout) is most useful when the "
"cards being presented are either not instantiated by a model or are "
"instantiated by a model that always has very few items. They are presented "
"as a grid of two columns which will remain centered if the application is "
"really wide, or become a single column if there is not enough space for two "
"columns, such as a mobile phone screen."
msgstr ""
"[`Kirigami.CardsLayout`](docs:kirigami2;CardsLayout) є найкориснішим, коли "
"екземпляри представлених карток створюються моделлю або моделлю, яка завжди "
"складається із дуже малої кількості елементів. Вони представляються як "
"таблиця з двох стовпчиків, які залишаються центрованими, якщо вікно програми "
"є досить широким, і стає одностовпчиковою, якщо для двох стовпчиків "
"недостатньо місця, зокрема на екрані мобільного телефону."

#: content/docs/getting-started/kirigami/components-card/index.md:99
msgid ""
"[`CardsListView`](docs:kirigami2;CardsListView) is better suited for larger "
"models."
msgstr ""
"[`CardsListView`](docs:kirigami2;CardsListView) краще пасує для більших "
"моделей."

#: content/docs/getting-started/kirigami/components-card/index.md:103
msgid "Important"
msgstr "Важливе"

#: content/docs/getting-started/kirigami/components-card/index.md:105
msgid ""
"A [CardsLayout](docs:kirigami2;CardsLayout) should always be contained "
"within a [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html)."
msgstr ""
"[CardsLayout](docs:kirigami2;CardsLayout) має завжди міститися у "
"[ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout.html)."

#: content/docs/getting-started/kirigami/components-card/index.md:109
msgid ""
"A card can optionally be oriented horizontally. In this case it will be "
"wider than tall, and is better suited to being placed in a [ColumnLayout]"
"(https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout.html). If you must "
"put it in a [CardsLayout](docs:kirigami2;CardsLayout), it will have a "
"[maximumColumns](docs:kirigami2;CardsLayout::maximumColumns) of `2` by "
"default."
msgstr ""
"Якщо потрібно, картку може бути зорієнтовано горизонтально. У цьому випадку "
"вікно буде ширшим, ніж вищим — його краще пристосовано до розташування у "
"[ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout."
"html). Якщо вам потрібно вписати його у [CardsLayout](docs:kirigami2;"
"CardsLayout), його типовим значенням [maximumColumns](docs:kirigami2;"
"CardsLayout::maximumColumns) буде 2."

#: content/docs/getting-started/kirigami/components-card/index.md:145
msgid ""
"![Screenshot of a CardsLayout showing two side by side cards in portrait "
"orientation on top of a card in landscape orientation, all with different "
"components being used](/docs/getting-started/kirigami/components-card/"
"cardslayout.png)"
msgstr ""
"![Знімок CardsLayout, де показано картки, які розташовано поруч, у книжковій "
"орієнтації над карткою у альбомній орієнтації; усі з різними використаними "
"компонентами](/docs/getting-started/kirigami/components-card/cardslayout.png)"

#: content/docs/getting-started/kirigami/components-card/index.md:151
msgid "CardsListView"
msgstr "CardsListView"

#: content/docs/getting-started/kirigami/components-card/index.md:153
msgid ""
"A [Kirigami.CardsListView](docs:kirigami2;CardsListView) is a list view that "
"can be used with [AbstractCard](docs:kirigami2;AbstractCard) components."
msgstr ""
"[Kirigami.CardsListView](docs:kirigami2;CardsListView) є панеллю перегляду "
"списком, якою можна скористатися за допомогою компонентів [AbstractCard]"
"(docs:kirigami2;AbstractCard)."

#: content/docs/getting-started/kirigami/components-card/index.md:155
msgid ""
"A [CardsListView](docs:kirigami2;CardsListView) will stretch child cards to "
"its own width. This component should therefore only be used with cards which "
"will look good at any horizontal size. Use of a [Card](docs:kirigami2;Card) "
"component inside it is discouraged, unless it has [Qt.Horizontal](docs:"
"qtcore;Qt::Orientation) as its [headerOrientation](docs:kirigami2;templates::"
"AbstractCard::headerOrientation) property."
msgstr ""
"[CardsListView](docs:kirigami2;CardsListView) розтягуватиме дочірні картки "
"до власної ширини. Тому цей компонент слід використовувати із картками, які "
"виглядатимуть добре за будь-якого горизонтального розміру. Не варто "
"використовувати компонент [Card](docs:kirigami2;Card) всередині, якщо не "
"встановлено значення [Qt.Horizontal](docs:qtcore;Qt::Orientation) для його "
"властивості [headerOrientation](docs:kirigami2;templates::AbstractCard::"
"headerOrientation)."

#: content/docs/getting-started/kirigami/components-card/index.md:157
msgid ""
"The choice between using this view with [AbstractCard](docs:kirigami2;"
"AbstractCard) components or a conventional [ListView](docs:qtquick;QtQuick."
"ListView) with [AbstractListItem](docs:kirigami2;AbstractListItem)/"
"[BasicListItem](docs:kirigami2;BasicListItem) components is purely an "
"aesthetic one."
msgstr ""
"Вибір щодо використання цієї панелі перегляду з компонентами [AbstractCard]"
"(docs:kirigami2;AbstractCard) або типовим [ListView](docs:qtquick;QtQuick."
"ListView) з компонентами [`AbstractListItem`](docs:kirigami2;"
"AbstractListItem)/[BasicListItem](docs:kirigami2;BasicListItem) є суто "
"справою естетичних смаків."

#: content/docs/getting-started/kirigami/components-card/index.md:169
msgid "NOTE: never put a Layout as contentItem as it will cause binding loops"
msgstr ""
"УВАГА! Ніколи не робіть Layout contentItem, оскільки це призведе до "
"циклічної прив'язки"

#: content/docs/getting-started/kirigami/components-card/index.md:179
msgid "IMPORTANT: never put the bottom margin"
msgstr "ВАЖЛИВО! Ніколи не встановлюйте нижнє поле"

#: content/docs/getting-started/kirigami/components-card/index.md:211
msgid ""
"![Screenshot of a CardsListView, which is a simple vertical list of cards in "
"landscape mode](/docs/getting-started/kirigami/components-card/cardslistview."
"png)"
msgstr ""
"![Знімок CardsListView, який є простим вертикальним списком карток у режимі "
"альбому](/docs/getting-started/kirigami/components-card/cardslistview.png)"

#: content/docs/getting-started/kirigami/components-chips/index.md:0
msgid "Chips"
msgstr "Чіпси"

#: content/docs/getting-started/kirigami/components-chips/index.md:0
msgid "Chips are small elements typically used to list out related properties."
msgstr ""
"Чіпси — малі елементи, які типово використовують для зберігання списків "
"пов'язаних властивостей."

#: content/docs/getting-started/kirigami/components-chips/index.md:9
msgid ""
"[Kirigami.Chip](docs:kirigami2;Chip) components are small elements inherited "
"from [AbstractButton](https://doc.qt.io/qt-6/qml-qtquick-controls2-"
"abstractbutton.html) used for displaying common properties or filters of "
"something. These are typically text elements, which is also interactable and "
"comes with an optional delete button."
msgstr ""
"Компоненти [Kirigami.Chip](docs:kirigami2;Chip) є малими елементами, які "
"успадковують властивості від [AbstractButton](https://doc.qt.io/qt-6/qml-"
"qtquick-controls2-abstractbutton.html) і які використовують для показу "
"типових властивостей або фільтрів чогось. Типово, це текстові елементи, з "
"якими можна взаємодіяти і які містять необов'язкову кнопку вилучення даних."

#: content/docs/getting-started/kirigami/components-chips/index.md:14
msgid "![Example Chips in Kirigami Gallery](chips_kirigami_gallery.png)"
msgstr "![Приклад чіпсів у галереї Kirigami](chips_kirigami_gallery.png)"

#: content/docs/getting-started/kirigami/components-chips/index.md:16
msgid "Quick Start"
msgstr "Початкові зауваження"

#: content/docs/getting-started/kirigami/components-chips/index.md:18
msgid ""
"Chips can easily be added using the `Kirigami.Chip` component. By assigning "
"a string to its `text` field, we give chips their name."
msgstr ""
"Чіпси можна без проблем додати за допомогою компонента `Kirigami.Chip`. "
"Наданням рядкових даних для поля `text` чіпса ми надаємо чіпсу назву."

#: content/docs/getting-started/kirigami/components-chips/index.md:55
msgid "![Declaring and Displaying Chips](chips_usage.png)"
msgstr "![Оголошення і показ чіпсів](chips_usage.png)"

#: content/docs/getting-started/kirigami/components-chips/index.md:57
msgid "{{< /section-right >}} {{< /sections >}}"
msgstr "{{< /section-right >}} {{< /sections >}}"

#: content/docs/getting-started/kirigami/components-chips/index.md:60
msgid "With Repeaters (Recommended)"
msgstr "Із повторювачами (рекомендовано)"

#: content/docs/getting-started/kirigami/components-chips/index.md:62
msgid ""
"Since chips are meant to be used more than once, you'll likely want to use "
"some kind of list data structure and iterate over them to display the chips. "
"To do this, we need a [ListModel](https://doc.qt.io/qt-6/qml-qtqml-models-"
"listmodel.html) and a [Repeater](https://doc.qt.io/qt-6/qml-qtquick-repeater."
"html) component."
msgstr ""
"Оскільки чіпси призначено для багаторазового використання, ймовірно, вам "
"потрібна буде певна структура спискових даних та ітерація за ними для показу "
"чіпсів. Для цього нам знадобляться компоненти [ListModel](https://doc.qt.io/"
"qt-6/qml-qtqml-models-listmodel.html) і [Repeater](https://doc.qt.io/qt-6/"
"qml-qtquick-repeater.html)."

#: content/docs/getting-started/kirigami/components-chips/index.md:69
msgid ""
"The ListModel is used as storage for the chips. To populate the ListModel "
"(and therefore chips), we declare a couple of ListElement components, which "
"contains a field known as `text`. We can use this string assigned from here "
"to the `text` field for each repeated chip."
msgstr ""
"ListModel буле використано як сховище для чіпсів. Для заповнення ListModel "
"(і отже, чіпсів), ми оголошуємо двійко компонентів ListElement, які містять "
"поле, відоме як `text`. Ми можемо скористатися цим рядком, який тут "
"пов'язано із полем `text`, для кожного повторюваного чіпса."

#: content/docs/getting-started/kirigami/components-chips/index.md:74
msgid ""
"The Repeater is used for displaying the chips. First, we need to set the "
"`model` field of the Repeater to our ListModel, or create the ListModel "
"inside of repeater. Then, we declare the `Kirigami.Chip` component inside of "
"the Repeater, and assign its `text` field with the element's data using the "
"`modelData` property."
msgstr ""
"Repeater буде використано для показу чіпсів. Спочатку, для поля `model` "
"Repeater встановлюємо нашу ListModel або створюємо ListModel у повторювачі. "
"Далі, ми оголошуємо компонент `Kirigami.Chip` всередині Repeater і "
"пов'язуємо його поле `text` із даними елемента за допомогою властивості "
"`modelData`."

#: content/docs/getting-started/kirigami/components-chips/index.md:114
msgid ""
"You can dynamically append and remove data from the ListModel, and the "
"Repeater will automatically make those changes. However, simply changing a "
"specific item from either the Repeater or ListModel does not affect the "
"other, and requires the changing of both, unless something like "
"[QAbstractListModel](https://doc.qt.io/qt-6/qabstractlistmodel.html) is "
"used. See [Example Application](#example-application) for more information."
msgstr ""
"Ви можете у динамічному режимі додавати дані до ListModel або вилучати дані "
"з неї, а Repeater вноситиме зміни автоматично. Втім, проста зміна певного "
"запису з Repeater або ListModel не вплине на інший компонент і потребує "
"внесення змін до обох, якщо не використано щось подібне до "
"[QAbstractListModel](https://doc.qt.io/qt-6/qabstractlistmodel.html). Див. "
"[приклад програми](#example-application), щоб дізнатися більше."

#: content/docs/getting-started/kirigami/components-chips/index.md:123
msgid "Example Application"
msgstr "Приклад програми"

#: content/docs/getting-started/kirigami/components-chips/index.md:125
msgid ""
"The example application below showcases how chips can be used in programs "
"such as to-do lists."
msgstr ""
"У прикладі програми, який наведено нижче, висвітлено можливість використання "
"чіпсів у програмах, зокрема у списках завдань."

#: content/docs/getting-started/kirigami/components-chips/index.md:130
msgid "![Chips Example Application](chips_example_app.png)"
msgstr "![Приклад програми з чіпсами](chips_example_app.png)"

#: content/docs/getting-started/kirigami/components-controls/index.md:0
msgid "Controls and interactive elements"
msgstr "Керування і інтерактивні елементи"

#: content/docs/getting-started/kirigami/components-controls/index.md:0
msgid ""
"Make your apps more interactive by using buttons, selection controls, "
"sliders, and text fields."
msgstr ""
"Надання вашими програмам додаткової інтерактивності за допомогою кнопок, "
"елементів керування вибором, повзунками та полями для введення тексту."

#: content/docs/getting-started/kirigami/components-controls/index.md:11
msgid ""
"Kirigami makes use of a wide selection of different interactive elements "
"from Qt that you can use in your applications. Each different type has "
"slightly different interaction styles, visual styles, and functionality. "
"Using the right type of control in your application can help make your user "
"interface more responsive and intuitive."
msgstr ""
"Kirigami використовує широкий діапазон різних інтерактивних елементів Qt, "
"якими ви можете скористатися у ваших програмах. Різні типи мають дещо різні "
"стилі взаємодії, візуальні стилі та функціональні можливості. Використання "
"належного типу засобу керування у вашій програмі може допомогти зробити "
"інтерфейс користувача зручнішим та інтуїтивно зрозумілішим."

#: content/docs/getting-started/kirigami/components-controls/index.md:13
msgid "Buttons"
msgstr "Кнопки"

#: content/docs/getting-started/kirigami/components-controls/index.md:15
msgid ""
"In Kirigami apps, we use buttons from QtQuick Controls. Using them is pretty "
"straightforward: we set the text to the [text](https://doc.qt.io/qt-6/qml-"
"qtquick-controls2-abstractbutton.html#text-prop) property and any action we "
"want it to perform is set to the [onClicked](docs:qtquickcontrols;QtQuick."
"Controls.AbstractButton::clicked) property."
msgstr ""
"У програмах Kirigami ми використовуємо кнопки з QtQuick Controls. "
"Користування кнопками є доволі простим: ми призначаємо фрагмент тексту для "
"властивості [text](https://doc.qt.io/qt-6/qml-qtquick-controls2-"
"abstractbutton.html#text-prop), усі дії, які слід виконати вписуємо у "
"властивість [onClicked](docs:qtquickcontrols;QtQuick.Controls."
"AbstractButton::clicked)."

#: content/docs/getting-started/kirigami/components-controls/index.md:50
msgid ""
"![A window containing a button \"Beep\" in the center, which when clicked "
"shows a passive notification \"Boop\" at the bottom of the window](/docs/"
"getting-started/kirigami/components-controls/controls-button.webp)"
msgstr ""
"![Вікно, що містить кнопку «Beep» у центрі. Натискання цієї кнопки "
"призводить до показу пасивного сповіщення «Boop» у нижній частині вікна](/"
"docs/getting-started/kirigami/components-controls/controls-button.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:56
msgid "Toggleable buttons"
msgstr "Кнопки-перемикачі"

#: content/docs/getting-started/kirigami/components-controls/index.md:58
msgid ""
"The behavior of buttons can be changed to make them toggleable: in this "
"mode, they will stay pressed until clicked on once more. This mode can be "
"activated by setting their [checkable](https://doc.qt.io/qt-6/qml-qtquick-"
"controls2-abstractbutton.html#checkable-prop) property to `true`; we can "
"also set buttons to be toggled on by default by setting [checked](https://"
"doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton.html#checked-prop) to "
"`true`."
msgstr ""
"Змінити поведінку кнопок можна зробивши їх кнопками-перемикачами: у цьому "
"режимі вони лишатимуться натиснутими, аж доки їх не буде натиснуто ще раз. "
"Цей режим можна активувати встановленням для властивості [checkable](https://"
"doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton.html#checkable-prop) "
"значення `true`; ми можемо також зробити кнопки типово перемкнутими "
"встановленням для властивості [checked](https://doc.qt.io/qt-6/qml-qtquick-"
"controls2-abstractbutton.html#checked-prop) значення `true`."

#: content/docs/getting-started/kirigami/components-controls/index.md:60
msgid ""
"We can get the most out of toggleable buttons by using the "
"`onCheckedChanged` signal handler which is [automatically generated](https://"
"doc.qt.io/qt-6/qtqml-syntax-signals.html#property-change-signal-handlers) "
"from the [checked](https://doc.qt.io/qt-6/qml-qtquick-controls2-"
"abstractbutton.html#checked-prop) signal. It works similarly to `onClicked`, "
"except here the assigned action will be executed when the button's state "
"changes. It is a boolean property, which can come in handy for specific use "
"cases."
msgstr ""
"Отримати максимум від кнопок-перемикачів можна за допомогою обробника "
"сигналу `onCheckedChanged`, який буде [автоматично створено](https://doc.qt."
"io/qt-6/qtqml-syntax-signals.html#property-change-signal-handlers) з сигналу "
"[checked](https://doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton."
"html#checked-prop). Вона працює подібно до `onClicked`, але тут пов'язану "
"дію буде виконано, коли змінюється стан кнопки. Це булева властивість, яка "
"може бути надзвичайно зручною у певних випадках."

#: content/docs/getting-started/kirigami/components-controls/index.md:62
msgid ""
"In this example, we set the visibility of an inline drawer according to the "
"status of a toggleable button:"
msgstr ""
"У цьому прикладі ми встановлюємо видимість вбудованої панелі за станом "
"кнопки-перемикача:"

#: content/docs/getting-started/kirigami/components-controls/index.md:109
msgid ""
"![A window containing a toggleable button \"Hide inline drawer\" in the "
"center which when toggled hides the \"Peekaboo\" inline drawer](/docs/"
"getting-started/kirigami/components-controls/controls-togglebutton.webp)"
msgstr ""
"![Вікно, у якому міститься кнопка-перемикач «Приховати вбудовану висувну "
"панель» у центрі. Якщо натиснути цю кнопку, програма приховає вбудовану "
"висувну панель «Пікабу»](/docs/getting-started/kirigami/components-controls/"
"controls-togglebutton.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:117
msgid ""
"With the default Breeze theme in KDE Plasma it can be hard to tell whether a "
"button is toggled, since buttons are coloured blue when they are clicked on. "
"Make sure you take this into account when creating your application: a "
"different control might be more user friendly."
msgstr ""
"У типовій темі Breeze Плазми KDE може бути важко розрізнити стани кнопки-"
"перемикача, оскільки при натисканні кнопки зафарбовуються синім кольором. "
"Врахуйте це під час створення вашої програми: інший засіб керування може "
"бути зручнішим для користувача."

#: content/docs/getting-started/kirigami/components-controls/index.md:121
msgid "Toolbar buttons"
msgstr "Кнопки панелі інструментів"

#: content/docs/getting-started/kirigami/components-controls/index.md:123
msgid ""
"There is a specific button type meant for use in toolbars, [Controls."
"ToolButton](docs:qtquickcontrols;QtQuick.Controls.ToolButton). The most "
"obvious difference between this and a conventional [Button](docs:"
"qtquickcontrols;QtQuick.Controls.Button) is the styling, with toolbuttons "
"being flat (though this is alterable with the boolean property [flat]"
"(https://doc.qt.io/qt-6/qml-qtquick-controls2-button.html#flat-prop))."
msgstr ""
"Існує специфічний тип кнопок, який призначено для використання на панелях "
"користувачів, [Controls.ToolButton](docs:qtquickcontrols;QtQuick.Controls."
"ToolButton). Найочевиднішою відмінністю між цією кнопкою і звичайною "
"[кнопкою](docs:qtquickcontrols;QtQuick.Controls.Button) є стилізація — "
"кнопки інструментів плоскі (хоча це і можна змінити за допомогою булевої "
"властивості [flat](https://doc.qt.io/qt-6/qml-qtquick-controls2-button."
"html#flat-prop))."

#: content/docs/getting-started/kirigami/components-controls/index.md:168
msgid ""
"![A window showing a custom toolbar in the window header simulating a "
"Kirigami.globalToolBar, with a left menu icon that shows a passive "
"notification \"Kirigami Pages and Actions are better!\" and a right "
"toolbutton \"Beep\" which is completely flat simulating a Kirigami.Action](/"
"docs/getting-started/kirigami/components-controls/controls-toolbutton.webp)"
msgstr ""
"![Вікно, у якому показано нетипову панель інструментів у заголовку вікна, "
"які імітує Kirigami.globalToolBar, із лівою піктограмою меню, яка показує "
"пасивне сповіщення «Сторінки і дії Kirigami — кращі!», і правою кнопкою-"
"інструментом «Дзинь», яка є повністю плоскою і імітує Kirigami.Action](/docs/"
"getting-started/kirigami/components-controls/controls-toolbutton.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:174
msgid "Selection controls"
msgstr "Засоби позначення"

#: content/docs/getting-started/kirigami/components-controls/index.md:176
msgid ""
"Selection controls let users make a choice or pick an option. There are "
"different types that are best suited to different situations."
msgstr ""
"За допомогою засобів позначення користувачі можуть зробити вибір або вибрати "
"певний варіант. Існують різні типи, які пристосовано до різних ситуацій."

#: content/docs/getting-started/kirigami/components-controls/index.md:178
msgid "Checkboxes"
msgstr "Позначки"

#: content/docs/getting-started/kirigami/components-controls/index.md:180
msgid ""
"A [Controls.CheckBox](docs:qtquickcontrols;QtQuick.Controls.CheckBox) is "
"meant for options where the choices are non-exclusive and where each option "
"has a clear alternative."
msgstr ""
"[Controls.CheckBox](docs:qtquickcontrols;QtQuick.Controls.CheckBox) "
"призначено для випадків, коли вибір не є взаємовиключним, а кожний пункт має "
"чітку альтернативу."

#: content/docs/getting-started/kirigami/components-controls/index.md:221
msgid ""
"![A window showing two checkboxes where more than one checkbox can be ticked "
"at the same time](/docs/getting-started/kirigami/components-controls/"
"controls-checkbox.webp)"
msgstr ""
"![Вікно, у якому показано два поля для позначок, де можна позначати декілька "
"пунктів одночасно](/docs/getting-started/kirigami/components-controls/"
"controls-checkbox.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:227
msgid ""
"As you can see, they are simple to use. The [checked](https://doc.qt.io/qt-6/"
"qml-qtquick-controls2-abstractbutton.html#checked-prop) property holds a "
"boolean value determining whether or not they have been checked."
msgstr ""
"Як можна бачити, ними просто користуватися. Властивість [checked](https://"
"doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton.html#checked-prop) "
"містить булеве значення, що визначає, чи було пункт позначено."

#: content/docs/getting-started/kirigami/components-controls/index.md:229
msgid "Radio buttons"
msgstr "Кнопки варіантів"

#: content/docs/getting-started/kirigami/components-controls/index.md:231
msgid ""
"A [Controls.RadioButton](docs:qtquickcontrols;QtQuick.Controls.RadioButton) "
"is designed for situations where the user must choose one option from a set "
"of several options."
msgstr ""
"[Controls.RadioButton](docs:qtquickcontrols;QtQuick.Controls.RadioButton) "
"призначено для випадків, коли користувач має вибрати варіант із набору з "
"декількох варіантів."

#: content/docs/getting-started/kirigami/components-controls/index.md:233
msgid ""
"Radio buttons are exclusive by default: only one button can be checked in "
"the same parent item."
msgstr ""
"Кнопки варіантів є типово взаємно виключними: одночасно у батьківському "
"елементі може бути позначено лише одну кнопку."

#: content/docs/getting-started/kirigami/components-controls/index.md:235
msgid ""
"Like checkboxes, they can be set to be checked or unchecked by default with "
"the [checked](https://doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton."
"html#checked-prop) property."
msgstr ""
"Подібно до кнопок-позначок, для них можна типово встановити стан "
"позначеності або непозначеності за допомогою властивості [checked](https://"
"doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton.html#checked-prop)."

#: content/docs/getting-started/kirigami/components-controls/index.md:277
msgid ""
"![A window showing two radio buttons where only one radio button can be "
"ticked at the same time](/docs/getting-started/kirigami/components-controls/"
"controls-radiobutton.webp)"
msgstr ""
"![Вікно, у якому показано дві кнопки-перемикачі, де одночасно можна "
"позначати лише один пункт](/docs/getting-started/kirigami/components-"
"controls/controls-radiobutton.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:283
msgid "Switches"
msgstr "Перемикачі"

#: content/docs/getting-started/kirigami/components-controls/index.md:285
msgid ""
"On the desktop, changing settings usually involves changing the setting and "
"then applying it by clicking on an \"Apply\" or \"OK\" button. On mobile, we "
"can use a [Controls.Switch](docs:qtquickcontrols;QtQuick.Controls.Switch) "
"instead."
msgstr ""
"На звичайному комп'ютері зміна параметрів, зазвичай, включає зміну "
"параметра, а потім застосування параметра натисканням кнопки «Застосувати» "
"або «Гаразд». На мобільному пристрої ми можемо замість цих кнопок можна "
"скористатися [Controls.Switch](docs:qtquickcontrols;QtQuick.Controls.Switch)."

#: content/docs/getting-started/kirigami/components-controls/index.md:287
msgid ""
"Switches can be toggled between an on and off state. They can be toggled by "
"clicking or tapping on them, or they can be dragged towards the on or off "
"position. Once again, switches can be set to be on or off by default with "
"the [checked](https://doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton."
"html#checked-prop) property."
msgstr ""
"Перемикачі можна перемикати між увімкненим і вимкненим станами. Їх можна "
"натискати або торкатися їх, їх можна також перетягувати між позиціями "
"«увімкнено» і «вимкнено». Знову ж таки, типово для перемикачів можна "
"встановлювати стани «увімкнено» і «вимкнено» за допомогою властивості "
"[checked](https://doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton."
"html#checked-prop)."

#: content/docs/getting-started/kirigami/components-controls/index.md:327
msgid ""
"![A window showing two evenly-spaced switches that function as toggles](/"
"docs/getting-started/kirigami/components-controls/controls-switch.webp)"
msgstr ""
"![Вікно, у якому показано два рівномірно розташовані перемикачі](/docs/"
"getting-started/kirigami/components-controls/controls-switch.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:333
msgid "Sliders"
msgstr "Повзунки"

#: content/docs/getting-started/kirigami/components-controls/index.md:335
msgid ""
"Sliders allow users to select certain values by sliding a handle along a "
"track. There are several types that you can choose from depending on the "
"values you'd like your users to choose in your application."
msgstr ""
"За допомогою повзунків користувачі можуть вибрати певні значення "
"перетягуванням елемента керування уздовж доріжки. Маємо декілька типів, один "
"з яких ви можете вибрати, залежно від значень, які користувачі мають "
"вибирати у вашій програмі."

#: content/docs/getting-started/kirigami/components-controls/index.md:337
msgid "Standard and tickmarked sliders"
msgstr "Стандартні повзунки і повзунки із позначками"

#: content/docs/getting-started/kirigami/components-controls/index.md:339
msgid ""
"A standard [Controls.Slider](docs:qtquickcontrols;QtQuick.Controls.Slider) "
"provides the user with very fine control over the selection they wish to "
"make."
msgstr ""
"За допомогою стандартного [Controls.Slider](docs:qtquickcontrols;QtQuick."
"Controls.Slider) користувач може точно вказати вибране значення."

#: content/docs/getting-started/kirigami/components-controls/index.md:341
msgid ""
"In Left to Right mode, sliders go left to right to increase when in "
"horizontal orientation, while in Right to Left mode they go in the reverse "
"direction. In both modes, sliders in vertical orientation go from the bottom "
"up."
msgstr ""
"У режимі зліва праворуч повзунки рухаються зліва праворуч для збільшення при "
"горизонтальній орієнтації, а у режимі справа ліворуч вони рухаються в "
"оберненому напрямку. В обох режимах повзунки у вертикальній орієнтації "
"рухаються знизу вгору."

#: content/docs/getting-started/kirigami/components-controls/index.md:343
msgid ""
"The coloration provides a visual indicator of how large the value you are "
"selecting is."
msgstr ""
"Розфарбовування є візуальним індикатором того, наскільки великим є вибране "
"значення."

#: content/docs/getting-started/kirigami/components-controls/index.md:345
msgid "Sliders have a few important properties we must pay attention to:"
msgstr ""
"У повзунків декілька важливих властивостей, на які слід звернути увагу:"

#: content/docs/getting-started/kirigami/components-controls/index.md:347
msgid ""
"[value](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider.html#value-"
"prop): contains the value at which the handle is placed, and can also be set "
"manually to provide a default starting value"
msgstr ""
"[value](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider.html#value-"
"prop): містить значення, на якому розташовано повзунок, і яке може бути "
"встановлено вручну для надання типового початкового значення"

#: content/docs/getting-started/kirigami/components-controls/index.md:348
msgid ""
"[to](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider.html#to-prop): "
"defines the range of the slider by specifying the maximum value it can go to"
msgstr ""
"[to](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider.html#to-prop): "
"визначає діапазон повзунка, вказуючи максимальне значення, до якого його "
"можна пересунути"

#: content/docs/getting-started/kirigami/components-controls/index.md:349
msgid ""
"[orientation](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider."
"html#orientation-prop): allows the slider to be set to a vertical "
"orientation with [Qt.Vertical](https://doc.qt.io/qt-6/qt.html#Orientation-"
"enum)"
msgstr ""
"[orientation](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider."
"html#orientation-prop): надає змогу встановлювати вертикальну орієнтацію "
"повзунка за допомогою [Qt.Vertical](https://doc.qt.io/qt-6/qt."
"html#Orientation-enum)"

#: content/docs/getting-started/kirigami/components-controls/index.md:391
msgid ""
"![A window showing a vertical slider with its current value underneath it](/"
"docs/getting-started/kirigami/components-controls/controls-slider.webp)"
msgstr ""
"![Вікно із показаним вертикальним повзунком з поточним значенням під "
"повзунком](/docs/getting-started/kirigami/components-controls/controls-"
"slider.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:397
msgid ""
"Another useful property we can use is [stepSize](https://doc.qt.io/qt-6/qml-"
"qtquick-controls2-slider.html#stepSize-prop). Setting this to a numerical "
"value allows us to create a slider that snaps onto values that are multiples "
"of the specified `stepSize`, with these multiples being indicated by "
"tickmarks. Therefore if we set this property to `2.0`, when the user drags "
"the slider handle, they will only be able to select `0.0`, `2.0`, `4.0`, "
"etc. up to the value specified in the `to` property."
msgstr ""
"Ще однією корисною властивістю є [stepSize](https://doc.qt.io/qt-6/qml-"
"qtquick-controls2-slider.html#stepSize-prop). Встановлення для цієї "
"властивості числового значення надає нам змогу створити повзунок, який "
"прилипатиме до значень, кратних до вказаного значення `stepSize`, а самі ці "
"кратні значення вказуються позначками на лінії руху повзунка. Отже, якщо ми "
"встановимо для властивості значення `2.0`, коли користувач перетягуватиме "
"повзунок, він зможе вибрати лише значення `0.0`, `2.0`, `4.0` тощо, аж до "
"значення, яке вказано за допомогою властивості `to`."

#: content/docs/getting-started/kirigami/components-controls/index.md:441
msgid ""
"![A window showing a set of tickmarked sliders that are symmetrically "
"divided, with each division being called a step](/docs/getting-started/"
"kirigami/components-controls/controls-slidersteps.webp)"
msgstr ""
"![Вікно, у якому показано набір повзунків зі шкалою, які поділено "
"симетрично, де кожна поділка називається кроком](/docs/getting-started/"
"kirigami/components-controls/controls-tickmarkedsliders.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:447
msgid "Range sliders"
msgstr "Повзунки із діапазоном"

#: content/docs/getting-started/kirigami/components-controls/index.md:449
msgid ""
"QtQuick Controls also provides [Controls.RangeSliders](docs:qtquickcontrols;"
"QtQuick.Controls.RangeSlider). These have two handles, hence allowing you to "
"define a range of numbers between the two handles."
msgstr ""
"До складу QtQuick Controls включено також [Controls.RangeSliders](docs:"
"qtquickcontrols;QtQuick.Controls.RangeSlider). Такі повзунки мають два "
"елементи керування, отже надає вам змогу визначити діапазон чисел між цими "
"двома елементами керування."

#: content/docs/getting-started/kirigami/components-controls/index.md:451
msgid ""
"Two new properties are important to keep in mind: [first.value](https://doc."
"qt.io/qt-6/qml-qtquick-controls2-rangeslider.html#first-prop) and [second."
"value](https://doc.qt.io/qt-6/qml-qtquick-controls2-rangeslider.html#second-"
"prop), which hold the values of the two handles. Like the [value](https://"
"doc.qt.io/qt-6/qml-qtquick-controls2-slider.html#value-prop) property of the "
"standard sliders, these can be pre-set."
msgstr ""
"Слід звернути увагу на дві нові властивості: [first.value](https://doc.qt.io/"
"qt-6/qml-qtquick-controls2-rangeslider.html#first-prop) і [second.value]"
"(https://doc.qt.io/qt-6/qml-qtquick-controls2-rangeslider.html#second-prop), "
"у яких зберігаються значення для двох елементів керування. Подібно до "
"властивості [value](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider."
"html#value-prop) стандартних повзунків, ці значення цих властивостей можна "
"вказати наперед."

#: content/docs/getting-started/kirigami/components-controls/index.md:516
msgid ""
"![A window showing a range slider, followed by a few labels underneath and a "
"button with a checkmark icon](/docs/getting-started/kirigami/components-"
"controls/controls-rangeslider.webp)"
msgstr ""
"![Вікно, у якому показано повзунок діапазону, піда яким розміщено декілька "
"міток і кнопку з піктограмою позначки](/docs/getting-started/kirigami/"
"components-controls/controls-rangeslider.webp)"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:0
msgid "Dialog types"
msgstr "Типи вікон"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:0
msgid "Various ways to serve and input data."
msgstr "Різноманітні способи обслуговувати і вводити дані."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:10
msgid ""
"A [Kirigami.Dialog](docs:kirigami2;Dialog) is a simple component that you "
"can use to supplement the content being displayed on an application's page. "
"It can display non-interactive content (only text) and interactive content "
"(forms, listviews and buttons)."
msgstr ""
"[Kirigami.Dialog](docs:kirigami2;Dialog) є простим компонентом, яким ви "
"можете скористатися для надання даних, які буде показано на сторінці "
"програми. Він може показувати неінтерактивні дані (лише текст) та "
"інтерактивні дані (форми, списки з вибором та кнопки)."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:12
msgid ""
"They can be dismissed by clicking or tapping outside of their area or by "
"clicking the close button on the header."
msgstr ""
"Їх можна закривати клацанням або торканням поза областю накладки, а також "
"натисканням кнопки закриття на панелі заголовка."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:14
msgid "Dialog"
msgstr "Діалогове вікно"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:16
msgid ""
"A standard Kirigami.Dialog is used to create custom dialogs. They are very "
"easy to extend:"
msgstr ""
"Стандартний Kirigami.Dialog використовують для створення нетипових "
"діалогових вікон. Такі вікна дуже просто розширити:"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:64
msgid "![Simple dialog containing only text](dialog.webp)"
msgstr "![Просте діалогове вікно, у якому міститься лише текст](dialog.webp)"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:70
msgid ""
"As shown in the [introduction tutorial about dialogs](/docs/getting-started/"
"kirigami/introduction-dialogs), it is also possible to capture a "
"`standardButton(button)` to assign some behavior to it, like a binding to "
"enable it only under certain conditions."
msgstr ""
"Як показано у [вступній частині підручника щодо діалогових вікон](/docs/"
"getting-started/kirigami/introduction-dialogs), також можна захопити "
"`standardButton(button)` для пов'язування з нею певної поведінки, зокрема "
"прив'язкою її вмикання до певних умов."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:72
msgid ""
"This type of dialog is generic and applies to most use cases, and it works "
"well with complex interactive content (especially views):"
msgstr ""
"Цей тип діалогових вікон є загальним і застосовним у більшості випадків. Він "
"добре працює із складним інтерактивним вмістом (особливо, панелями "
"перегляду):"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:101
msgid "hints for the dialog dimensions"
msgstr "підказки щодо розмірів діалогового вікна"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:125
msgid "![A simple scrollable dialog](scrollabledialog.webp)"
msgstr "![Просте діалогове вікно з гортанням](scrollabledialog.webp)"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:131
msgid ""
"In most cases however you will likely want to use one of its derived dialog "
"types, [Kirigami.PromptDialog](docs:kirigami2;PromptDialog) or [Kirigami."
"MenuDialog](docs:kirigami2;MenuDialog)."
msgstr ""
"Втім, у більшості випадків вам, ймовірно, варто скористатися одним із "
"похідних типів діалогових вікон, [Kirigami.PromptDialog](docs:kirigami2;"
"PromptDialog) або [Kirigami.MenuDialog](docs:kirigami2;MenuDialog)."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:133
msgid "PromptDialog"
msgstr "PromptDialog"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:135
msgid ""
"A [Kirigami.PromptDialog](docs:kirigami2;PromptDialog) is essentially a "
"dialog with a built-in label and default [contentPadding](docs:kirigami2;"
"PromptDialog::contentPadding) that is used to prompt the user for some "
"information. This type of dialog is supposed to be used only for simple yes/"
"no prompts or brief requests for user input."
msgstr ""
"[Kirigami.PromptDialog](docs:kirigami2;PromptDialog) на базовому рівні є "
"діалоговим вікном із вбудованою міткою та типовим [contentPadding](docs:"
"kirigami2;PromptDialog::contentPadding), який використовують для надсилання "
"користувачеві запиту щодо певної інформації. Вважається, що цей тип "
"діалогових вікон використовується лише для простих запитів із відповіддю "
"«так» чи «ні» або для коротких запитів із введенням тексту користувачем."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:137
msgid ""
"Its main property is [Kirigami.Dialog.subtitle](docs:kirigami2;PromptDialog::"
"subtitle), to which you would add text. If any QML component is added as a "
"child of the prompt dialog, that component will take the place of the "
"subtitle instead, and this can be explicitly specified with [Kirigami.Dialog."
"mainItem](docs:kirigami2;Dialog::mainItem)."
msgstr ""
"Його головною властивістю є [Kirigami.Dialog.subtitle](docs:kirigami2;"
"PromptDialog::subtitle). До неї ви маєте додати текст. Якщо як дочірній "
"елемент діалогового вікна запиту буде додано будь-який компонент QML, цей "
"компонент займе місце підзаголовка, і це можна явно вказати за допомогою "
"[Kirigami.Dialog.mainItem](docs:kirigami2;Dialog::mainItem)."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:179
msgid "![A simple prompt dialog containing only text](promptdialog.webp)"
msgstr ""
"![Просте діалогове вікно із запитом, у якому міститься лише текст]"
"(promptdialog.webp)"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:246
msgid "![A PromptDialog with a custom TextField](promptdialogtextfield.webp)"
msgstr "![PromptDialog із нетиповим TextField](promptdialogtextfield.webp)"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:252
msgid "MenuDialog"
msgstr "MenuDialog"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:254
msgid ""
"The [Kirigami.MenuDialog](docs:kirigami2;MenuDialog) is a specialized dialog "
"that is used to list a selection of clickable options for the user using its "
"[actions](docs:kirigami2;MenuDialog::actions) property."
msgstr ""
"[Kirigami.MenuDialog](docs:kirigami2;MenuDialog) — спеціалізоване діалогове "
"вікно, яке використовують для показу користувачеві списку вибору з придатних "
"до клацання пунктів з використанням властивості [actions](docs:kirigami2;"
"MenuDialog::actions)."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:321
msgid ""
"![A simple MenuDialog listing actions like Play and Pause for media]"
"(menudialog.webp)"
msgstr ""
"![Просте вікно MenuDialog зі списком дій, зокрема «Пуск» і «Пауза» для "
"мультимедійних даних](menudialog.webp)"

#: content/docs/getting-started/kirigami/components-drawers/index.md:0
msgid "Drawers"
msgstr "Висувні панелі"

#: content/docs/getting-started/kirigami/components-drawers/index.md:0
msgid ""
"Drawers provide applications with quick access to controls and pages of your "
"application."
msgstr ""
"Висувні панелі надають змогу створювати програми із панелями швидкого "
"доступу до елементів керування та сторінок програми."

#: content/docs/getting-started/kirigami/components-drawers/index.md:10
msgid ""
"Drawers are panels that slide out of the sides of the application window. "
"They can be populated with interactive elements such as Kirigami Actions, "
"buttons, text, and more."
msgstr ""
"Висувні панелі є панелями, які висуваються з боків вікна програми. На ці "
"панелі можна додати інтерактивні елементи, подібні до кнопок дій Kirigami, "
"простих кнопок дій, текстових міток тощо."

#: content/docs/getting-started/kirigami/components-drawers/index.md:12
msgid ""
"Drawers come in different types, shapes, and forms. In this page we will go "
"over each type and provide an overview of their characteristics."
msgstr ""
"Висувні панелі можуть належати до різних типів, можуть мати різні форми. На "
"цій сторінці ми опишемо усі типи і оглянемо їхні характеристики."

#: content/docs/getting-started/kirigami/components-drawers/index.md:16
msgid ""
"The global drawer is a standard feature in KDE's mobile applications and can "
"sometimes be found in their desktop incarnations too. It contains an "
"application's main menu: included here are any functions that are not "
"specific to the current page but still significant to general navigation or "
"interaction within the application."
msgstr ""
"Загальна панель є стандартною можливістю у мобільних програмах KDE, яку "
"іноді можна знайти і у їхніх варіантах для звичайних комп'ютерів. На ній "
"міститься головне меню програми: до нього включено усі функції, які не є "
"специфічними для поточної сторінки, але є важливими для загальної навігації "
"або взаємодії у програмі."

#: content/docs/getting-started/kirigami/components-drawers/index.md:18
msgid ""
"It can be activated by tapping the hamburger menu or by swiping from the "
"left edge to the middle of the screen in Left to Right mode or from the "
"right edge in Right to Left mode."
msgstr ""
"Її можна активувати натисканням кнопки меню-гамбургера або рухом пальця від "
"лівого краю до середини екрана у режимі зліва праворуч або від правого краю "
"у режимі справа ліворуч."

#: content/docs/getting-started/kirigami/components-drawers/index.md:20
msgid ""
"[Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) components are what we "
"use to create such drawers. These are set to the [globalDrawer](docs:"
"kirigami2;AbstractApplicationWindow::globalDrawer) property of the [Kirigami."
"ApplicationWindow](docs:kirigami2;ApplicationWindow) that forms the basis of "
"our Kirigami application."
msgstr ""
"Компоненти [Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) є тим, чим "
"ми користуємося для створення таких висувних панелей. Назви цих панелей "
"записують до властивості [globalDrawer](docs:kirigami2;"
"AbstractApplicationWindow::globalDrawer) [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow), яка складає основу нашої програми Kirigami."

#: content/docs/getting-started/kirigami/components-drawers/index.md:67
msgid ""
"![Screenshot of a global drawer in desktop mode that looks like a sidebar](/"
"docs/getting-started/kirigami/components-drawers/globaldrawer_simple.webp)"
msgstr ""
"![Знімок загальної висувної панелі у режимі робочої станції, коли вона "
"виглядає як бічна панель](/docs/getting-started/kirigami/components-drawers/"
"globaldrawer_simple.webp)"

#: content/docs/getting-started/kirigami/components-drawers/index.md:75
msgid ""
"The [titleIcon](docs:kirigami2;GlobalDrawer::titleIcon) property takes names "
"for system-wide icons according to the FreeDesktop specification. These "
"icons and icon names can be viewed with KDE's CuttleFish application which "
"comes with [plasma-sdk](https://invent.kde.org/plasma/plasma-sdk), or by "
"visiting [FreeDesktop's icon naming specification](https://specifications."
"freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html)."
msgstr ""
"Властивість [titleIcon](docs:kirigami2;GlobalDrawer::titleIcon) визначає "
"назву загальносистемної піктограми за специфікацією FreeDesktop. Піктограми "
"і назви піктограм можна переглянути за допомогою програми CuttleFish KDE, "
"яка є частиною [plasma-sdk](https://invent.kde.org/plasma/plasma-sdk), або "
"відвідавши [сторінку специфікації назв піктограм FreeDesktop](https://"
"specifications.freedesktop.org/icon-naming-spec/icon-naming-spec-latest."
"html)."

#: content/docs/getting-started/kirigami/components-drawers/index.md:79
msgid "Header"
msgstr "Шапка"

#: content/docs/getting-started/kirigami/components-drawers/index.md:81
msgid ""
"Headers can be used to place sticky components at the top of your global "
"drawer. Header components will stay in place even if your global drawer "
"contains nested Kirigami actions that replace the current layer on the "
"global drawer."
msgstr ""
"Шапками можна скористатися для розташування липких компонентів поверх вашої "
"загальної панелі. Компоненти шапки лишаються на місці, навіть якщо загальна "
"панель містить вкладені дії Kirigami, які замінюють поточний шар на "
"загальній панелі."

#: content/docs/getting-started/kirigami/components-drawers/index.md:83
msgid ""
"Your chosen header component can be set with the global drawer's `header` "
"property, and it will replace the global drawer's title. This is useful to "
"add a `Kirigami.SearchField`, for example:"
msgstr ""
"Вибраний вами компонент шапки можна встановити за допомогою властивості "
"`header` загальної панелі. Він замінить собою заголовок загальної висувної "
"панелі. Це корисно, наприклад, для додавання `Kirigami.SearchField`:"

#: content/docs/getting-started/kirigami/components-drawers/index.md:134
msgid ""
"Our global drawer now shows the search bar component we set as the header"
msgstr ""
"Тепер на нашій загальній панелі буде показано компонент панелі пошуку, який "
"ми визначили як шапку"

#: content/docs/getting-started/kirigami/components-drawers/index.md:141
msgid "Adapting for the desktop"
msgstr "Адаптування для робочої станції"

#: content/docs/getting-started/kirigami/components-drawers/index.md:143
msgid ""
"While panel-style global drawers can be useful in mobile environments, they "
"might be too large on the desktop, especially when the application has few "
"actions."
msgstr ""
"Хоча загальні панелі у стилі звичайних панелей можуть бути корисними у "
"середовищах мобільних пристроїв, вони можуть бути надто великими на "
"звичайних комп'ютерах, особливо якщо у програмі небагато пунктів дій."

#: content/docs/getting-started/kirigami/components-drawers/index.md:145
msgid ""
"Thankfully, Kirigami global drawers provide an [isMenu](docs:kirigami2;"
"GlobalDrawer::isMenu) property. When set to `true`, they turn into more "
"traditional menus only on the desktop."
msgstr ""
"На щастя, у загальних панелей Kirigami є властивість [isMenu](docs:kirigami2;"
"GlobalDrawer::isMenu). Якщо для неї встановлено значення `true`, наші "
"загальні панелі перетворюються у традиційніші меню лише на робочих станціях."

#: content/docs/getting-started/kirigami/components-drawers/index.md:149
msgid "In this menu mode, headers and banners are not visible."
msgstr "У цьому режимі меню заголовки і банери є невидимими."

#: content/docs/getting-started/kirigami/components-drawers/index.md:162
msgid "Kirigami Actions here..."
msgstr "Ось дії Kirigami..."

#: content/docs/getting-started/kirigami/components-drawers/index.md:171
msgid "Global drawer in menu mode, without a header or banner"
msgstr "Загальна висувна панель у режимі меню, без шапки або банера"

#: content/docs/getting-started/kirigami/components-drawers/index.md:177
msgid "Context Drawers"
msgstr "Контекстні висувні панелі"

#: content/docs/getting-started/kirigami/components-drawers/index.md:179
msgid ""
"While a [Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) displays global "
"actions available throughout your application, a [Kirigami.ContextDrawer]"
"(docs:kirigami2;ContextDrawer) should be used to display actions that are "
"only relevant in certain contexts. This is usually used in separate [pages](/"
"docs/getting-started/kirigami/introduction-pages)."
msgstr ""
"[Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) показує загальні кнопки "
"дій, які доступні у вашій програмі, а [Kirigami.ContextDrawer](docs:"
"kirigami2;ContextDrawer) слід користуватися для показу дій, які стосуються "
"лише певних контекстів. Ним, зазвичай, користуються на окремих [сторінках](/"
"docs/getting-started/kirigami/introduction-pages)."

#: content/docs/getting-started/kirigami/components-drawers/index.md:181
msgid ""
"A context drawer will only show up if any [contextualActions](docs:kirigami2;"
"Page::contextualActions) have been created as part of the [Page.actions "
"group](docs:kirigami2;Page::actions). It also behaves differently depending "
"on whether it is being used on a mobile platform or on a desktop."
msgstr ""
"Контекстну висувну панель буде показано, якщо було створено якусь "
"[contextualActions](docs:kirigami2;Page::contextualActions), як частину "
"[групи Page.actions](docs:kirigami2;Page::actions). Вона також поводиться по-"
"різному, залежно від того, є платформа мобільною чи стільничною."

#: content/docs/getting-started/kirigami/components-drawers/index.md:183
msgid ""
"On a desktop, when a window has enough space, contextual actions show up as "
"part of the `actions` group in the top toolbar. When space is limited, such "
"as on a mobile device or in a narrow window, contextual actions are hidden "
"behind a hamburger menu on the right side. This is different from other "
"actions in the `actions` group, namely `actions.main`, `actions.left` and "
"`actions.right`; these do not get hidden in space-constrained windows, and "
"are instead collapsed into their respective icons."
msgstr ""
"На робочій станції, якщо у вікна достатньо місця, пункти контекстних дій "
"буде показано як частину групи `actions` на верхній панелі інструментів. "
"Якщо місце обмежено, зокрема на мобільних пристроях або у вузьких вікнах, "
"пункти контекстних дій буде приховано за меню-гамбургером у правій частині "
"вікна. Ця поведінка є відмінною від інших пунктів дій у групі `actions`, "
"зокрема `actions.main`, `actions.left` і `actions.right`; ці пункти дій не "
"буде приховано у вікнах із обмеженим розміром. Замість того, їх буде "
"згорнуто до відповідних піктограм."

#: content/docs/getting-started/kirigami/components-drawers/index.md:189
msgid "Context drawer with contextual actions hidden"
msgstr "Контекстна висувна панель із прихованими контекстними пунктами дій"

#: content/docs/getting-started/kirigami/components-drawers/index.md:191
msgid "Context drawer showing all contextual actions"
msgstr ""
"Контекстна висувна панель із показаними усіма контекстними пунктами дій"

#: content/docs/getting-started/kirigami/components-drawers/index.md:195
msgid ""
"On mobile, the drawer always consists of actions hidden behind a hamburger "
"menu. It can be activated by tapping the hamburger menu or by swiping from "
"the right edge to the middle of the screen in Left to Right mode or from the "
"left edge in Right to Left mode."
msgstr ""
"На мобільних пристроях висувна панель завжди складається з пунктів дій, які "
"сховано під меню-гамбургером. Її можна активувати натисканням кнопки меню-"
"гамбургера або проведенням пальцем від правого краю до середини екрана у "
"режимі зліва праворуч або від лівого краю у режимі справа ліворуч."

#: content/docs/getting-started/kirigami/components-drawers/index.md:199
msgid "Same example above, running in mobile mode"
msgstr "Той самий приклад, що і вище, але у режимі мобільного пристрою"

#: content/docs/getting-started/kirigami/components-drawers/index.md:201
msgid "Context drawer open in mobile mode"
msgstr "Відкрита контекстна висувна панель у режимі мобільного пристрою"

#: content/docs/getting-started/kirigami/components-drawers/index.md:205
msgid "Modal and Inline drawers"
msgstr "Модальні і вбудовані панелі"

#: content/docs/getting-started/kirigami/components-drawers/index.md:207
msgid ""
"Kirigami offers two additional types of drawers, modal drawers and inline "
"drawers. They are quite similar to each other: both span the entirety of the "
"application's width or height and can be placed on the edges of the app "
"window. However, they do react differently to user interaction."
msgstr ""
"У Kirigami передбачено два додаткових типи висувних панелей, модальні "
"висувні панелі і вбудовані висувні панелі. Вони доволі подібні між собою: "
"обидві займають усю ширину і висоту вікна програми і можуть бути розташовані "
"на краях вікна програми. Втім, вони по-різному взаємодіють із користувачем."

#: content/docs/getting-started/kirigami/components-drawers/index.md:209
msgid ""
"Modal drawers are hidden by default and darken the rest of the application, "
"being dismissed when clicking on a darkened area."
msgstr ""
"Модальні висувні панелі, які типово приховано, затемнюють решту вікна "
"програми і закриваються, якщо відбудеться клацання на затемненій області."

#: content/docs/getting-started/kirigami/components-drawers/index.md:210
msgid ""
"Inline drawers are shown by default and allow the user to still interact "
"with the rest of the application without being dismissed, and do not darken "
"other areas."
msgstr ""
"Вбудовані висувні панелі типово показані і надають змогу користувачеві "
"продовжувати взаємодію із рештою програми без закриття панелей, і вони не "
"затемнюють решту вікна програми."

#: content/docs/getting-started/kirigami/components-drawers/index.md:212
msgid ""
"This kind of drawer is open ended and flexible, but generally, you may want "
"to use this kind of drawer when you want a small list of options to appear "
"on a long press or right click."
msgstr ""
"Цей тип висувної панелі є відкритим і гнучким, але загалом, ви можете "
"скористатися тим типом висувної панелі, коли вам потрібно показати невеликий "
"список пунктів при довгому натисканні або клацанні правою кнопкою миші."

#: content/docs/getting-started/kirigami/components-drawers/index.md:214
msgid ""
"These two drawers are so similar because they can, in fact, be implemented "
"using the same Kirigami component: [Kirigami.OverlayDrawer](docs:kirigami2;"
"OverlayDrawer). Here are a few important inherited properties of this "
"component to keep in mind:"
msgstr ""
"Ці дві висувні панелі є подібними, оскільки вони, фактично, можуть бути "
"реалізовані за допомогою одного компонента — [Kirigami.OverlayDrawer](docs:"
"kirigami2;OverlayDrawer). Ось декілька важливих успадкованих властивостей "
"цього компонента, про які слід пам'ятати:"

#: content/docs/getting-started/kirigami/components-drawers/index.md:216
msgid ""
"[Popup.modal](https://doc.qt.io/qt-6/qml-qtquick-controls2-popup.html#modal-"
"prop) controls whether the drawer will be modal or inline depending on a "
"boolean value."
msgstr ""
"[Popup.modal](https://doc.qt.io/qt-6/qml-qtquick-controls2-popup.html#modal-"
"prop) керує тим, буде висувна панель модальною чи вбудованою, залежно від "
"цього булевого значення."

#: content/docs/getting-started/kirigami/components-drawers/index.md:217
msgid ""
"[Drawer.edge](https://doc.qt.io/qt-6/qml-qtquick-controls2-drawer.html#edge-"
"prop) controls which edge of the application window the drawer will appear "
"on; options for this property are part of the [Edge enum](docs:qtcore;Qt::"
"RightEdge), namely `Qt.TopEdge`, `Qt.RightEdge`, `Qt.BottomEdge`, and `Qt."
"LeftEdge`."
msgstr ""
"[Drawer.edge](https://doc.qt.io/qt-6/qml-qtquick-controls2-drawer.html#edge-"
"prop) керує тим, з якого з країв вікна програми з'являтиметься панель; "
"варіантами значення цієї властивості є частиною [переліку Edge](docs:qtcore;"
"Qt::RightEdge), а саме, `Qt.TopEdge`, `Qt.RightEdge`, `Qt.BottomEdge` і `Qt."
"LeftEdge`."

#: content/docs/getting-started/kirigami/components-drawers/index.md:218
msgid ""
"[Popup.contentItem](https://doc.qt.io/qt-6/qml-qtquick-controls2-popup."
"html#contentItem-prop) contains the component that will form the content of "
"your drawer."
msgstr ""
"[Popup.contentItem](https://doc.qt.io/qt-6/qml-qtquick-controls2-popup."
"html#contentItem-prop) містить компонент, який формуватиме вміст вашої "
"висувної панелі."

#: content/docs/getting-started/kirigami/components-drawers/index.md:241
msgid "Set modal to false to make this drawer inline!"
msgstr ""
"Встановіть для `modal` значення `false`, щоб зробити цю висувну панель "
"вбудованою!"

#: content/docs/getting-started/kirigami/components-drawers/index.md:262
msgid "Modal drawer not visible"
msgstr "Модальна висувна панель є невидимою"

#: content/docs/getting-started/kirigami/components-drawers/index.md:264
msgid "Modal drawer at the bottom edge of the screen"
msgstr "Модальна висувна панель з нижнього краю екрана"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:0
msgid "Form layouts"
msgstr "Компонування форми"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:0
msgid "Easily create attractive interaction areas with Kirigami FormLayouts"
msgstr ""
"Просте створення привабливих областей взаємодії з користувачем за допомогою "
"FormLayout з Kirigami"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:10
msgid ""
"[Kirigami.FormLayout](docs:kirigami2;FormLayout) components make it easy for "
"you to create forms that conform to the [KDE Human Interface Guidelines]"
"(https://develop.kde.org/hig/). They are optimal for settings dialogs and "
"for large groups of controls and input fields that are related to each other."
msgstr ""
"Компоненти [Kirigami.FormLayout](docs:kirigami2;FormLayout) спрощують для "
"вас створення форм, які відповідають [настановам зі створення зручних "
"інтерфейсів KDE](https://develop.kde.org/hig/). Вони є оптимальними для "
"вікон параметрів роботи програми або великих груп елементів керування та "
"полів введення, які пов'язано між собою."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:12
msgid ""
"When provided with enough space, form layouts will take up two columns. The "
"column on the left will be occupied by the labels provided for the form's "
"children components, while the right will be taken up by the children "
"components themselves. In more space-constrained windows (or on mobile), "
"forms will consist of a single vertical column with the labels of children "
"components being placed above their respective component."
msgstr ""
"Якщо місця достатньо, компонування форм виконуватиметься у два стовпчики. "
"Лівий стовпчик буде заповнено мітками, які надано для дочірніх компонентів "
"форми, а правий — самими дочірніми компонентами. У вікнах із обмеженим "
"простором (або на мобільних пристроях) форми складатимуться з одного "
"вертикального стовпчика із мітками дочірніх компонентів, які розташовано над "
"відповідними компонентами."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:14
msgid "Simple form"
msgstr "Проста форма"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:16
msgid ""
"[Kirigami.FormLayout](docs:kirigami2;FormLayout) components are similar in "
"use to [QtQuick Layout](https://doc.qt.io/qt-6/qtquicklayouts-index.html) "
"components such as [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html) or [RowLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"rowlayout.html). The child components will be automatically arranged "
"according to the size available to the form layout."
msgstr ""
"Компоненти [Kirigami.FormLayout](docs:kirigami2;FormLayout) подібні у "
"використанні до компонентів [компонування QtQuick](https://doc.qt.io/qt-6/"
"qtquicklayouts-index.html), зокрема [ColumnLayout](https://doc.qt.io/qt-6/"
"qml-qtquick-layouts-columnlayout.html) або [RowLayout](https://doc.qt.io/"
"qt-6/qml-qtquick-layouts-rowlayout.html). Дочірні компоненти буде "
"автоматично упорядковано відповідно до розміру, який доступний до "
"компонування форми."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:18
msgid ""
"Children of a [Kirigami.FormLayout](docs:kirigami2;FormLayout) have a "
"property named [Kirigami.FormData.label](docs:kirigami2;FormLayoutAttached::"
"label). This property lets you set the label that will be provided for the "
"child component in question."
msgstr ""
"Дочірні компоненти [Kirigami.FormLayout](docs:kirigami2;FormLayout) мають "
"властивість із назвою [Kirigami.FormData.label](docs:kirigami2;"
"FormLayoutAttached::label). Ця властивість надає вам змогу встановити мітку, "
"яку буде надано для відповідного дочірнього компонента."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:54
msgid "A simple form layout in desktop mode"
msgstr "Просте компонування форми у стільничному режимі"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:60
msgid "Sections and separators"
msgstr "Розділи і роздільники"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:62
msgid ""
"FormLayouts can also be divided into sections. Setting where a section "
"starts is as easy as setting a child component's [Kirigami.FormData."
"isSection](docs:kirigami2;FormLayoutAttached::isSection) to true. This will "
"provide the component with some extra margin at the top to demarcate the "
"start of the new section."
msgstr ""
"Крім того, компонування форм може бути поділено на розділи. Встановлення "
"місця, де починається розділ, зводиться до встановлення значення властивості "
"[Kirigami.FormData.isSection](docs:kirigami2;FormLayoutAttached::isSection) "
"компонента `true`. Це надасть компоненту додаткове поле згори для позначення "
"початку нового розділу."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:64
msgid ""
"[Kirigami.Separator](docs:kirigami2;Separator) components are best suited "
"for starting new sections. Separators are used to draw a thin horizontal "
"line, demarcating the end of a section. If you would rather not have a line "
"drawn between sections, you can use a standard QML [Item](docs:qtquick;"
"QtQuick.Item) property. Alternatively you could use the [Kirigami.FormData."
"isSection](docs:kirigami2;FormLayoutAttached::isSection) property on any "
"other component."
msgstr ""
"Компоненти [Kirigami.Separator](docs:kirigami2;Separator) найкраще підходять "
"для початку нових розділів. Роздільники використовують для малювання тонкої "
"горизонтальної лінії, яка позначатиме кінець розділу. Якщо ви не хочете, щоб "
"між розділами було намальовано лінію, ви можете скористатися стандартною "
"властивістю [Item](docs:qtquick;QtQuick.Item) QML. Крім того, ви можете "
"скористатися властивістю [Kirigami.FormData.isSection](docs:kirigami2;"
"FormLayoutAttached::isSection) для будь-якого іншого компонента."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:66
msgid ""
"However, this is not recommended. On components where [Kirigami.FormData."
"isSection](docs:kirigami2;FormLayoutAttached::isSection) is set to `true`, "
"the label text provided for this component's [Kirigami.FormData.label](docs:"
"kirigami2;FormLayoutAttached::label) property will be displayed as the "
"section's header text."
msgstr ""
"Втім, не рекомендуємо це робити. Для компонентів, для яких для властивості "
"[Kirigami.FormData.isSection](docs:kirigami2;FormLayoutAttached::isSection) "
"встановлено значення true, текст мітки властивості компонента [Kirigami."
"FormData.label](docs:kirigami2;FormLayoutAttached::label) буде показано як "
"текст заголовка розділу."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:68
#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:28
msgid "Warning"
msgstr "Попередження"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:70
msgid ""
"This does not apply to every component, hence the recommendation that you "
"use [Kirigami.Separator](docs:kirigami2;Separator) or [Item](docs:qtquick;"
"QtQuick.Item) components in places where you would like to use a header text."
msgstr ""
"Це стосується не кожного компонента, отже рекомендуємо використовувати "
"[Kirigami.Separator](docs:kirigami2;Separator) або [Item](docs:qtquick;"
"QtQuick.Item) там, де вам потрібно скористатися текстом заголовка."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:74
msgid ""
"This header text is larger than the normal label text, and provides users "
"with a nice visual cue of what the form layout section is about."
msgstr ""
"Цей текст заголовка є більшим за розміром за звичайний текст мітки і надає "
"користувачеві чудову візуальну підказку щодо того, для чого призначено "
"розділ компонування форми."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:130
msgid "A form layout with sections"
msgstr "Компонування форми з розділами"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:137
msgid "Checkable children"
msgstr "Дочірній елемент — пункт для позначення"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:139
msgid ""
"A handy feature of [Kirigami.FormLayout](docs:kirigami2;FormLayout) is that "
"you can add checkboxes to its children. This can be useful in settings pages "
"where you might want to let the user enable or disable a setting, and also "
"want the user to provide some extra information in a component such as a "
"textfield."
msgstr ""
"Зручною можливістю [Kirigami.FormLayout](docs:kirigami2;FormLayout) є "
"можливість додавання пунктів позначок до його дочірніх елементів. Нею можна "
"скористатися на сторінках параметрів, де у вас може виникнути потреба у "
"наданні користувачу можливості увімкнути або вимкнути щось, а також наданні "
"користувачу додаткової інформації у компонентах, подібних до поля для "
"введення тексту."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:167
msgid "A form layout with checkable label."
msgstr "Компонування форми з придатною для позначення міткою."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:173
msgid "Forcing a desktop or mobile layout"
msgstr "Примусове визначення компонування — комп'ютер чи мобільний пристрій"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:175
msgid ""
"If you would rather have your form layout stay consistent regardless of your "
"application's environment, you can use the [wideMode](docs:kirigami2;"
"FormLayout::wideMode) property of the [Kirigami.FormLayout](docs:kirigami2;"
"FormLayout) component:"
msgstr ""
"Якщо ви надаєте перевагу збереженню однорідності вигляду компонування форми, "
"незалежно від середовища програми, ви можете скористатися властивістю "
"[wideMode](docs:kirigami2;FormLayout::wideMode) компонента [Kirigami."
"FormLayout](docs:kirigami2;FormLayout):"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:177
msgid ""
"When set to `true`, the form layout will be structured in a desktop-"
"optimized widescreen (double-column) layout"
msgstr ""
"Якщо встановлено значення `true`, компонування форми буде структуровано для "
"широкоекранного представлення на комп'ютері (у два стовпчики)"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:178
msgid ""
"When set to `false`, the form layout will be structured in a mobile layout "
"(single column)"
msgstr ""
"Якщо встановлено значення `false`, компонування форми буде структуровано для "
"мобільного пристрою (в один стовпчик)"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:205
msgid "A form layout with forced mobile layout"
msgstr "Компонування форми з примусовим мобільним компонуванням"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:211
msgid "Aligning your labels"
msgstr "Вирівнювання ваших міток"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:213
msgid ""
"There are instances when you want a label to be assigned to components that "
"have more than one line or to a list of components. This can be achieved by "
"putting the [Kirigami.FormData.label](docs:kirigami2;FormLayoutAttached::"
"label) in the [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html), as you might have noticed in [Sections and Separators]"
"(#sections-and-separators). By default the label is positioned in the "
"vertical center of the layout, which is not always desirable. We can change "
"this with help of [Kirigami.FormData.labelAlignment](docs:kirigami2;"
"FormLayoutAttached::labelAlignment)."
msgstr ""
"Іноді виникає потреба у наданні мітці значення компонентів, які складаються "
"з декількох рядків, або списку компонентів. Досягти бажаного результату "
"можна вставленням [Kirigami.FormData.label](docs:kirigami2;"
"FormLayoutAttached::label) до [ColumnLayout](https://doc.qt.io/qt-6/qml-"
"qtquick-layouts-columnlayout.html), як ви могли помітити у розділі [Розділи "
"і роздільники](#sections-and-separators). Типово, мітку буде розташовано у "
"центрі компонування за вертикаллю, що не завжди є бажаним. Змінити "
"розташування можна за допомогою [Kirigami.FormData.labelAlignment](docs:"
"kirigami2;FormLayoutAttached::labelAlignment)."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:239
msgid "A form layout with top-aligned label"
msgstr "Компонування форми з вирівняною вгору міткою"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:245
msgid ""
"Setting the label alignment is particularly convenient to manage components "
"or lists of components whose size you do not know beforehand. [Elisa]"
"(https://apps.kde.org/elisa) is a very good example of this:"
msgstr ""
"Встановлення вирівнювання мітки зручне для керування компонентами або "
"списками компонентів, чи розмір наперед невідомий. [Elisa](https://apps.kde."
"org/elisa) є чудовим прикладом цього:"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:247
msgid ""
"The Comment label is only top aligned when its corresponding component has "
"more than one line"
msgstr ""
"Мітку Comment буде вирівняно вгору, коли її відповідний компонент "
"складається з декількох рядків"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:249
msgid "We can do something similar to this with a JavaScript ternary operator:"
msgstr ""
"Ми можемо зробити щось подібне до цього за допомогою тернарного оператора "
"JavaScript:"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:0
msgid "Inline messages"
msgstr "Вбудовані повідомлення"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:0
msgid "Display messages related to the content in your application"
msgstr "Показ повідомлень, які пов'язано із вмістом у вашій програмі"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:10
msgid ""
"Inline messages provide an immediate way for you to notify your users about "
"something that happened while using the application."
msgstr ""
"За допомогою вбудованих повідомлень реалізовано спосіб негайного сповіщення "
"користувача щодо того, що сталося під час користування програмою."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:12
msgid "Basic inline message"
msgstr "Базове вбудоване повідомлення"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:14
msgid ""
"[Kirigami.InlineMessage](docs:kirigami2;InlineMessage) components have two "
"important properties to be mindful of:"
msgstr ""
"У компонентів [Kirigami.InlineMessage](docs:kirigami2;InlineMessage) є дві "
"важливих властивості, про які варто згадати:"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:15
msgid ""
"[visible](https://doc.qt.io/qt-6/qml-qtquick-item.html#visible-prop): by "
"default this is set to false, so that the message only appears when you "
"explicitly want it to. This can be overridden if you wish by setting it to "
"true. When a hidden inline message is set to be visible, you get a nice "
"animation."
msgstr ""
"[visible](https://doc.qt.io/qt-6/qml-qtquick-item.html#visible-prop): "
"типово, для цієї властивості встановлено значення false, отже повідомлення "
"буде показано, лише якщо ви явно цього захочете. Якщо хочете, таку поведінку "
"можна змінити встановленням значення true. Якщо для вбудованого повідомлення "
"увімкнути видимість, користувач побачить чудову анімацію."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:16
msgid ""
"[text](docs:kirigami2;templates::InlineMessage::text): here is where you set "
"the text of your inline message."
msgstr ""
"[text](docs:kirigami2;templates::InlineMessage::text): тут можна встановити "
"текст вашого вбудованого повідомлення."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:49
msgid ""
"![A window showing a button which when clicked makes an inline message with "
"light blue background pop up with text above it, near the top of the "
"application](/docs/getting-started/kirigami/components-inlinemessages/"
"inlinemessages-simple.png)"
msgstr ""
"![Вікно, у якому показано кнопку, яка після натискання піднімає вбудоване "
"повідомлення зі світло-синім тлом і текстом над ним у верхній частині вікна "
"програми](/docs/getting-started/kirigami/components-inlinemessages/"
"inlinemessages-simple.png)"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:55
msgid "Different types"
msgstr "Інші типи"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:57
msgid ""
"Standard inline messages are like the ones above: they have a blue "
"background and a default icon. We can change that with the [type](docs:"
"kirigami2;templates::InlineMessage::type) property, which lets us set our "
"inline message to a different type. There are four types we can choose from:"
msgstr ""
"Стандартні вбудовані повідомлення подібні до показано вище: вони мають синє "
"тло і типову піктограму. Змінити це можна за допомогою властивості [type]"
"(docs:kirigami2;templates::InlineMessage::type), яка надає нам змогу "
"встановити для нашого вбудованого повідомлення інший тип. Передбачено чотири "
"типи, одним з яких ми можемо скористатися:"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:59
msgid ""
"**Information** (`Kirigami.MessageType.Information`): the default. Has a "
"blue background, an 'i' icon, and is used to announce a result or tell the "
"user something general. It is not necessary to manually set it."
msgstr ""
"**Інформування** (`Kirigami.MessageType.Information`): стандартний. Має синє "
"тло, піктограму «i» і використовується для оголошення про результат або "
"сповіщення користувача про щось загальне. Цей тип не потрібно встановлювати "
"вручну."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:60
msgid ""
"**Positive** (`Kirigami.MessageType.Positive`): has a green background, tick "
"icon, and indicates that something went well."
msgstr ""
"**Позитивний** (`Kirigami.MessageType.Positive`): має зелене тло, піктограму "
"позначки і вказує на те, що щось виконано вдало."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:61
msgid ""
"**Warning** (`Kirigami.MessageType.Warning`): has an orange background, an "
"exclamation-mark icon, and can be used to warn the user about something they "
"should be mindful of."
msgstr ""
"**Попередження** (`Kirigami.MessageType.Warning`): має помаранчеве тло, "
"піктограму знака оклику; можна скористатися для попередження користувача про "
"те, що на щось слід звернути увагу."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:62
msgid ""
"**Error** (`Kirigami.MessageType.Error`): has a red background, a cross "
"icon, and can be used to tell the user that something has gone wrong."
msgstr ""
"**Помилка** (`Kirigami.MessageType.Error`): має червоне тло, піктограму-"
"хрест; можна скористатися для повідомлення користувачеві про те, що щось не "
"так."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:105
msgid ""
"![A window showcasing all four inline message types in blue, green, orange "
"and red](/docs/getting-started/kirigami/components-inlinemessages/"
"inlinemessages-types.png)"
msgstr ""
"![Вікно, у якому показано усі чотири типи вбудованих повідомлень синім, "
"зеленим, помаранчевим та червоним кольором](/docs/getting-started/kirigami/"
"components-inlinemessages/inlinemessages-types.png)"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:111
msgid "Customising text and icons"
msgstr "Налаштовування тексту і піктограм"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:113
msgid ""
"Inline messages support rich text, which can be defined with simple HTML-"
"like markup. This allows you to add some formatting to your inline message's "
"text or even include an external web link if you want to."
msgstr ""
"У вбудованих повідомленнях передбачено підтримку форматування тексту, яку "
"можна визначити за допомогою простої HTML-подібної розмітки. Це надає вам "
"змогу додавати певне форматування до тексту ваших вбудованих повідомлень або "
"навіть, якщо хочете, включити зовнішнє інтернет-посилання."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:122
msgid "Note that when you use quotes in a string you will have to escape them!"
msgstr ""
"Зауважте, що якщо ви використовуєте лапки у рядку, вам слід їх екранувати!"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:133
msgid ""
"![An inline message with rich text and a hyperlink](/docs/getting-started/"
"kirigami/components-inlinemessages/inlinemessages-richtext.png)"
msgstr ""
"![Вбудоване повідомлення із форматованим текстом та гіперпосиланням](/docs/"
"getting-started/kirigami/components-inlinemessages/inlinemessages-richtext."
"png)"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:139
msgid ""
"You can also customise the icon that appears on the top left of your message "
"by providing a system icon name for the [icon.source](docs:kirigami2;"
"templates::InlineMessage::icon) property. These icon names should correspond "
"to icons installed on your system; you can use an application such as "
"Cuttlefish provided by [plasma-sdk](https://invent.kde.org/plasma/plasma-"
"sdk) to browse and search the icons available on your system, and see what "
"their names are."
msgstr ""
"Ви також можете налаштувати піктограму, яку буде показано у верхньому лівому "
"куті повідомлення, вказавши назву загальносистемної піктограми у властивості "
"[icon.source](docs:kirigami2;templates::InlineMessage::icon). Ці назви "
"піктограм відповідають піктограмам, які встановлено у системі; ви можете "
"скористатися програмою, подібною до Cuttlefish з [plasma-sdk](https://invent."
"kde.org/plasma/plasma-sdk), для перегляду і пошуку піктограм, які доступні у "
"вашій системі, а також визначення їхніх назв."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:158
msgid ""
"![An inline message with a custom icon](/docs/getting-started/kirigami/"
"components-inlinemessages/inlinemessages-icon.png)"
msgstr ""
"![Вбудоване повідомлення із нетиповою піктограмою](/docs/getting-started/"
"kirigami/components-inlinemessages/inlinemessages-icon.png)"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:164
msgid "Using actions in inline messages"
msgstr "Використання пунктів дій у вбудованих повідомленнях"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:166
msgid ""
"If your messages need to be interactive, you can attach Kirigami actions to "
"your inline messages. Like with pages, you can do this by setting the "
"[InlineMessage.actions](docs:kirigami2;templates::InlineMessage::actions) "
"property to either a [Kirigami.Action](docs:kirigami2;Action) or an array "
"containing [Kirigami.Action](docs:kirigami2;Action) components."
msgstr ""
"Якщо ваші повідомлення мають бути інтерактивними, ви можете долучити до "
"ваших вбудованих повідомлень кнопки дій Kirigami. Подібно до сторінок, ви "
"можете зробити це встановленням властивості [InlineMessage.actions](docs:"
"kirigami2;templates::InlineMessage::actions) вбудованого повідомлення у "
"значення [Kirigami.Action](docs:kirigami2;Action) або у значення масиву, що "
"містить компоненти [Kirigami.Action](docs:kirigami2;Action)."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:207
msgid ""
"![An inline message with two actions](/docs/getting-started/kirigami/"
"components-inlinemessages/inlinemessages-actions.png)"
msgstr ""
"![Вбудоване повідомлення із двома пунктами дій](/docs/getting-started/"
"kirigami/components-inlinemessages/inlinemessages-actions.png)"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:213
msgid "Close buttons"
msgstr "Кнопки закриття"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:215
msgid ""
"Inline messages provide a close button that can be used to easily dismiss "
"them."
msgstr ""
"До вбудованого повідомлення додається кнопка закриття, якою можна "
"скористатися для прибирання панелей повідомлень."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:217
msgid ""
"By default, this close button is hidden, but this can be overridden by "
"setting the [showCloseButton](docs:kirigami2;templates::InlineMessage::"
"showCloseButton) property to `true`."
msgstr ""
"Типово, цю кнопку закриття приховано, але таку поведінку можна "
"перевизначити, встановивши для властивості [showCloseButton](docs:kirigami2;"
"templates::InlineMessage::showCloseButton) значення `true`."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:236
msgid ""
"![An inline message with close button to its right side](/docs/getting-"
"started/kirigami/components-inlinemessages/inlinemessages-closebutton.png)"
msgstr ""
"![Вбудоване повідомлення із кнопкою закриття праворуч від нього](/docs/"
"getting-started/kirigami/components-inlinemessages/inlinemessages-"
"closebutton.png)"

#: content/docs/getting-started/kirigami/components-listview/index.md:0
msgid "List views"
msgstr "Списки"

#: content/docs/getting-started/kirigami/components-listview/index.md:0
msgid "A list view can help you easily display many components dynamically.\n"
msgstr ""
"Панель перегляду списку може спростити для вас динамічний показ багатьох "
"компонентів.\n"

#: content/docs/getting-started/kirigami/components-listview/index.md:11
msgid ""
"[Listviews](docs:qtquick;QtQuick.ListView) can help you display objects from "
"a model in an attractive way. To use a list view, you have to keep track of "
"three things:"
msgstr ""
"[Панелі списків](docs:qtquick;QtQuick.ListView) можуть допомогти у показі "
"об'єктів на основі моделі у привабливий спосіб. Щоб правильно користуватися "
"панеллю списку, вам слід стежити за трьома речима:"

#: content/docs/getting-started/kirigami/components-listview/index.md:13
msgid ""
"The **model**, which contains the data you want your list view to display"
msgstr ""
"**Моделлю**, яка містить дані, які має бути показано на вашій панелі списку"

#: content/docs/getting-started/kirigami/components-listview/index.md:14
msgid ""
"The **delegate**, which defines how each element in the model will be "
"displayed"
msgstr "**Делегата**, який визначає, як буде показано кожне з елементів моделі"

#: content/docs/getting-started/kirigami/components-listview/index.md:15
msgid ""
"The **list view** itself, which will display information from the model "
"according to the delegate"
msgstr ""
"Самої **панелі списку**, на якій буде показано відомості щодо моделі, "
"відповідно до параметрів делегата"

#: content/docs/getting-started/kirigami/components-listview/index.md:17
msgid ""
"If you would like further clarification, the Qt documentation has [an "
"informative page](https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview."
"html) on the topic."
msgstr ""
"Якщо вам потрібні додаткові пояснення, у документації Qt є [інформативна "
"сторінка](https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview.html) щодо "
"цього питання."

#: content/docs/getting-started/kirigami/components-listview/index.md:19
msgid "Essentials of models and views"
msgstr "Базові дані щодо моделей та панелей перегляду"

#: content/docs/getting-started/kirigami/components-listview/index.md:21
msgid "A list view has two essential properties we must pay attention to:"
msgstr ""
"У панелі списку є дві ключові властивості, на які нам слід звернути увагу:"

#: content/docs/getting-started/kirigami/components-listview/index.md:23
msgid ""
"[model](https://doc.qt.io/qt-6/qml-qtquick-listview.html#model-prop), which "
"accepts the data or the `id` of the object that holds the data"
msgstr ""
"[model](https://doc.qt.io/qt-6/qml-qtquick-listview.html#model-prop), яка "
"приймає дані або `id` об'єкта, який містить дані"

#: content/docs/getting-started/kirigami/components-listview/index.md:24
msgid ""
"[delegate](https://doc.qt.io/qt-6/qml-qtquick-listview.html#delegate-prop), "
"which accepts the component we will use to display the data in the model"
msgstr ""
"[delegate](https://doc.qt.io/qt-6/qml-qtquick-listview.html#delegate-prop), "
"яка приймає компонент, якими ми скористаємося для показу даних у моделі"

#: content/docs/getting-started/kirigami/components-listview/index.md:26
msgid ""
"The model is not visible, as it only contains data. Typically the delegate "
"will be wrapped in a Component so that it is reusable: it serves as a "
"blueprint for how to instantiate each delegate."
msgstr ""
"Модель є невидимою, оскільки вона лише містить дані. Типово, делегат буде "
"загорнуто до Component, щоб його можна було використати повторно: він слугує "
"як шаблон того, як створити екземпляр кожного делегата."

#: content/docs/getting-started/kirigami/components-listview/index.md:28
msgid ""
"Here is an example that contains exactly one list view, one model and one "
"delegate, using a [Kirigami.SubtitleDelegate](docs:kirigami2;"
"SubtitleDelegate):"
msgstr ""
"Тут наведено приклад, який містить точно одну панель перегляду списку, одну "
"модель та один делегат, з використанням [Kirigami.SubtitleDelegate](docs:"
"kirigami2;SubtitleDelegate):"

#: content/docs/getting-started/kirigami/components-listview/index.md:62
msgid "And the exact same example, inline:"
msgstr "І точно той самий приклад, вбудований:"

#: content/docs/getting-started/kirigami/components-listview/index.md:92
msgid "Understanding models"
msgstr "Розбираємося із моделями"

#: content/docs/getting-started/kirigami/components-listview/index.md:94
msgid ""
"The model contains the data that will be used to populate the list view. "
"Different ways to use models have different ways to access the data:"
msgstr ""
"Модель містить дані, які буде використано для заповнення панелі перегляду "
"списку. Для різних способів використання моделей передбачено різні способи "
"доступу до даних:"

#: content/docs/getting-started/kirigami/components-listview/index.md:96
msgid "WAY TO USE"
msgstr "СПОСІБ ВИКОРИСТАННЯ"

#: content/docs/getting-started/kirigami/components-listview/index.md:96
msgid "HOW TO ACCESS"
msgstr "ДОСТУП"

#: content/docs/getting-started/kirigami/components-listview/index.md:96
msgid "WHEN TO USE"
msgstr "УМОВИ ВИКОРИСТАННЯ"

#: content/docs/getting-started/kirigami/components-listview/index.md:98
msgid "Qt models with more than one role"
msgstr "Моделі Qt із декількома ролями"

#: content/docs/getting-started/kirigami/components-listview/index.md:98
msgid "model.index, model.somerole"
msgstr "model.index, model.somerole"

#: content/docs/getting-started/kirigami/components-listview/index.md:98
msgid "In most cases"
msgstr "У більшості випадків"

#: content/docs/getting-started/kirigami/components-listview/index.md:99
msgid "Qt models with one role"
msgstr "Моделі Qt з однією роллю"

#: content/docs/getting-started/kirigami/components-listview/index.md:99
msgid "model.index, model.somerole, model.modelData"
msgstr "model.index, model.somerole, model.modelData"

#: content/docs/getting-started/kirigami/components-listview/index.md:99
msgid "In most cases, for prototyping"
msgstr "У більшості випадків для прототипізації"

#: content/docs/getting-started/kirigami/components-listview/index.md:100
msgid "JavaScript array model"
msgstr "Модель масиву JavaScript"

#: content/docs/getting-started/kirigami/components-listview/index.md:100
#: content/docs/getting-started/kirigami/components-listview/index.md:101
msgid "model.index, model.modelData"
msgstr "model.index, model.modelData"

#: content/docs/getting-started/kirigami/components-listview/index.md:100
#: content/docs/getting-started/kirigami/components-listview/index.md:101
msgid "For prototyping"
msgstr "Для прототипізації"

#: content/docs/getting-started/kirigami/components-listview/index.md:101
msgid "Integer model"
msgstr "Цілочисельна модель"

#: content/docs/getting-started/kirigami/components-listview/index.md:103
msgid ""
"You can read about [other ways to use models in the Qt documentation]"
"(https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview.html)."
msgstr ""
"Ви можете ознайомитися із [іншими способами використання моделей у "
"документації Qt](https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview."
"html)."

#: content/docs/getting-started/kirigami/components-listview/index.md:105
msgid ""
"In the table above, \"Qt models\" refers to both C++-specific models like "
"[QAbstractListModel](https://doc.qt.io/qt-6/qabstractlistmodel.html) and QML-"
"specific models like ListModel. This tutorial page will only focus on QML-"
"specific models. Farther ahead we provide a tutorial for [Connecting C++ "
"models to QML using QAbstractListModel](/docs/getting-started/kirigami/"
"advanced-connect_models)."
msgstr ""
"У наведеній вище таблиці «Моделі Qt» означають і C++-специфічні моделі, "
"подібні до [QAbstractListModel](https://doc.qt.io/qt-6/qabstractlistmodel."
"html), і QML-специфічні моделі, зокрема ListModel. На цій сторінці "
"підручника акцент зроблено на QML-специфічних моделях. Далі ми наведемо "
"настанови щодо [з'єднання моделей C++ із QML за допомогою QAbstractListModel]"
"(/docs/getting-started/kirigami/advanced-connect_models)."

#: content/docs/getting-started/kirigami/components-listview/index.md:107
msgid ""
"The `model.index` property is made available to every model and contains the "
"index (the position) of each delegate. It can be shortened to `index` for "
"convenience."
msgstr ""
"Властивість `model.index` зроблено доступною для будь-якої моделі. Вона "
"містить індекс (позиція) кожного делегата. Її можна скоротити до `index` для "
"зручності."

#: content/docs/getting-started/kirigami/components-listview/index.md:109
msgid ""
"The `model.somerole` property mentioned above is just a placeholder, it is "
"not a specific property that comes from QML: `somerole` can be any role that "
"is defined by the model. In the first code example of this page shown above "
"the table, the `plasmaProductsModel` model has the `product` and `target` "
"roles, which can be accessed with `model.product` and `model.target`, "
"respectively."
msgstr ""
"Властивість `model.якась_роль`, про яку ми згадували вище, є лише "
"замінником. Це не специфічна властивість, яка надходить від QML: записом "
"`якась_роль` може бути будь-яка роль, яку визначено моделлю. У першому "
"прикладі коду на цій сторінці, який показано над таблицею, "
"модель`plasmaProductsModel` містить ролі `product` і `target`, доступ до "
"яких можна здійснювати за допомогою `model.product` і `model.target`, "
"відповідно."

#: content/docs/getting-started/kirigami/components-listview/index.md:111
msgid ""
"Just as `model.index` can be shortened to `index`, each `model.somerole` "
"property can be shorted to just `somerole` (like `product`) for convenience, "
"but it is recommended that they be turned into required properties:"
msgstr ""
"Так само, як `model.index` можна скоротити до `index`, кожну властивість "
"`model.якась_роль` можна скоротити до простого `якась_роль` (наприклад, "
"`product`) для зручності, але рекомендуємо перетворювати їх до потрібних "
"властивостей:"

#: content/docs/getting-started/kirigami/components-listview/index.md:148
msgid ""
"Additionally, if the model contains only one role or has no role at all, its "
"data can also be accessed with the property `model.modelData`, which can "
"also be shortened to `modelData` (and as such would also need to be a "
"required property):"
msgstr ""
"Крім того, якщо модель містить лише одну роль або взагалі не містить ролі, "
"доступ до даних також можна здійснювати за допомогою властивості `model."
"modelData`, що можна скоротити до `modelData` (і як така також має бути "
"обов'язковою властивістю):"

#: content/docs/getting-started/kirigami/components-listview/index.md:179
msgid "This matches model.software"
msgstr "Це відповідає model.software"

#: content/docs/getting-started/kirigami/components-listview/index.md:186
msgid ""
"For comparison, here is how the above code would look like with a "
"[JavaScript array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/"
"Reference/Global_Objects/Array), with no role:"
msgstr ""
"Для порівняння, ось як наведених вище код міг би виглядати з [масивом "
"JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript/"
"Reference/Global_Objects/Array), без ролі:"

#: content/docs/getting-started/kirigami/components-listview/index.md:215
msgid ""
"Using an integer for the model can be useful for very specific cases, namely "
"prototyping and tests:"
msgstr ""
"Використання цілого числа для моделі може бути корисним для дуже специфічних "
"випадків, а саме, прототипізації та тестування:"

#: content/docs/getting-started/kirigami/components-listview/index.md:244
msgid "Understanding views and delegates"
msgstr "Розбираємося із переглядами і делегатами"

#: content/docs/getting-started/kirigami/components-listview/index.md:246
msgid "Let's go back to the original example:"
msgstr "Повернімося до початкового прикладу:"

#: content/docs/getting-started/kirigami/components-listview/index.md:259
#: content/docs/getting-started/kirigami/components-listview/index.md:391
msgid "anchors.fill: parent"
msgstr "anchors.fill: parent"

#: content/docs/getting-started/kirigami/components-listview/index.md:280
msgid ""
"Unlike the model (which merely contains data) and a delegate [Component]"
"(docs:qtqml;QtQml.Component) (which only appears when instantiated), the "
"view is a visual component immediately instantiated and so it needs to "
"either have its dimensions set or use anchors or Layouts."
msgstr ""
"На відміну від моделі (яка, в основному, містить дані) і [компонента](docs:"
"qtqml;QtQml.Component) делегата (який з'являється, лише якщо створено "
"екземпляр), панель перегляду є візуальним компонентом, екземпляр якого "
"створюється негайно, і тому потребує або встановлення його розмірностей, або "
"використання прив'язок чи компонувань."

#: content/docs/getting-started/kirigami/components-listview/index.md:282
msgid ""
"As views are commonly lists of content the user would want to scroll "
"through, when they are added to a [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage), views become the main content with little padding around "
"them, and there is no need to make it fill the page. When the view is added "
"to a simple [Kirigami.Page](docs:kirigami2;Page), it will require to set its "
"dimensions properly before it will show up. In other words: in the "
"scrollable page above, `anchors.fill: parent` is not required; if a simple "
"page was used, it would be required."
msgstr ""
"Оскільки панелі перегляду є типово списками вмісту, які користувач міг би "
"гортати, при їхньому додаванні до [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage), панелі перегляду стають переглядами основних даних із "
"невеличкою фаскою навколо, і немає потреби заповнювати вмістом усю сторінку. "
"Якщо панель перегляду додано до простої [Kirigami.Page](docs:kirigami2;"
"Page), доведеться встановлювати її розмірності належним чином, перш ніж її "
"буде показано. Іншими словами, на панелі із гортанням вище `anchors.fill: "
"parent` є необов'язковим; якщо було б використано просту сторінку, ця "
"інструкція була б обов'язковою."

#: content/docs/getting-started/kirigami/components-listview/index.md:284
msgid ""
"There are multiple views APIs can be used, some from Qt and some from "
"Kirigami. Here are the most commonly used ones:"
msgstr ""
"Можна використовувати декілька програмних інтерфейсів панелей перегляду, "
"деякі походять з Qt, а деякі — з Kirigami. Ось найпоширеніші:"

#: content/docs/getting-started/kirigami/components-listview/index.md:286
msgid "Qt's [ListView](docs:qtquick;QtQuick.ListView)"
msgstr "[ListView](docs:qtquick;QtQuick.ListView) Qt"

#: content/docs/getting-started/kirigami/components-listview/index.md:287
msgid "Qt's [GridView](docs:qtquick;QtQuick.GridView)"
msgstr "[GridView](docs:qtquick;QtQuick.GridView) Qt"

#: content/docs/getting-started/kirigami/components-listview/index.md:288
msgid "Qt's [TableView](docs:qtquick;QtQuick.TableView)"
msgstr "[TableView](docs:qtquick;QtQuick.TableView) Qt"

#: content/docs/getting-started/kirigami/components-listview/index.md:289
msgid "Qt's [TreeView](docs:qtquick;QtQuick.TreeView)"
msgstr "[TreeView](docs:qtquick;QtQuick.TreeView) Qt"

#: content/docs/getting-started/kirigami/components-listview/index.md:290
msgid "Kirigami's [CardsListView](docs:kirigami2;CardsListView)"
msgstr "[CardsListView](docs:kirigami2;CardsListView) Kirigami"

#: content/docs/getting-started/kirigami/components-listview/index.md:291
msgid "Kirigami's [ColumnView](docs:kirigami2;ColumnView)"
msgstr "[ColumnView](docs:kirigami2;ColumnView) Kirigami"

#: content/docs/getting-started/kirigami/components-listview/index.md:293
msgid ""
"The delegate on the other hand always need to have its dimensions set. "
"Generally its dimensions are set to use only the full width of the view."
msgstr ""
"Для делегата, з іншого боку, завжди має бути встановлено розмірності. "
"Загалом, його розмірності буде встановлено лише так, щоб використовувати усю "
"ширину панелі перегляду."

#: content/docs/getting-started/kirigami/components-listview/index.md:295
msgid "Common mistakes"
msgstr "Типові помилки"

#: content/docs/getting-started/kirigami/components-listview/index.md:297
msgid ""
"The above means that delegates should not have bottom anchors, since the "
"delegate doesn't need to have the same height as the view. In other words, "
"you will probably never want to use `anchors.fill: parent`."
msgstr ""
"Вище сказане означає, що делегати не повинні мати нижніх прив'язок, оскільки "
"делегат не повинен мати тієї самої висоти, що і панель перегляду. Іншими "
"словами, у вас, ймовірно, ніколи не виникатиме потреби використовувати "
"`anchors.fill: parent`."

#: content/docs/getting-started/kirigami/components-listview/index.md:299
msgid ""
"Additionally, while it is possible to set its dimensions using the parent "
"and anchors, which is usually the view's contentItem, like so:"
msgstr ""
"Крім того, хоча можна встановити його розмірності за допомогою parent і "
"прив'язок, яким, зазвичай, є contentItem панелі перегляду, ось так:"

#: content/docs/getting-started/kirigami/components-listview/index.md:309
msgid ""
"It is not guaranteed that the delegate's parent will be a view, and so it "
"should be avoided. Instead, use the [ListView.view](https://doc.qt.io/qt-6/"
"qml-qtquick-listview.html#view-attached-prop) attached property to point to "
"the delegate's parent view:"
msgstr ""
"Не гарантовано, що батьківським елементом делегата буде панель перегляду, і "
"тому такого коду слід уникати. Замість цього, скористайтеся долученою "
"властивістю [ListView.view](https://doc.qt.io/qt-6/qml-qtquick-listview."
"html#view-attached-prop) для вказування батьківської панелі перегляду "
"делегата:"

#: content/docs/getting-started/kirigami/components-listview/index.md:320
msgid ""
"The most common use of a delegate is within a [Component](docs:qtqml;QtQml."
"Component), which does not instantiate the delegate immediately. When a view "
"is constructed, the delegate is then used as a blueprint to make each item "
"in the view."
msgstr ""
"Найпоширенішим використанням делегата є використання у межах [Component]"
"(docs:qtqml;QtQml.Component), що не створює екземпляра делегата негайно. При "
"побудові панелі перегляду делегат буде використано як шаблон для створення "
"усіх елементів на панелі перегляду."

#: content/docs/getting-started/kirigami/components-listview/index.md:322
msgid ""
"While you can make your own custom components to be used as delegates "
"without delegate-specific Qt APIs (for example, a Layout containing a few "
"Items), QtQuick Controls does provide delegate APIs that are simpler to use:"
msgstr ""
"Хоча ви ви можете створювати власні нетипові компоненти, які буде "
"використано як делегати без специфічних для делегата програмних інтерфейсів "
"Qt (наприклад, компонування, що містить небагато записів Item), QtQuick "
"Controls надає у ваше розпорядження програмні інтерфейси, якими простіше "
"скористатися:"

#: content/docs/getting-started/kirigami/components-listview/index.md:324
msgid ""
"[ItemDelegate](docs:qtquickcontrols;QtQuick.Controls.ItemDelegate) "
"(delegates with only text)"
msgstr ""
"[ItemDelegate](docs:qtquickcontrols;QtQuick.Controls.ItemDelegate) "
"(делегати, які містять лише текст)"

#: content/docs/getting-started/kirigami/components-listview/index.md:325
msgid ""
"[CheckDelegate](docs:qtquickcontrols;QtQuick.Controls.CheckDelegate) "
"(delegates with a checkbox)"
msgstr ""
"[CheckDelegate](docs:qtquickcontrols;QtQuick.Controls.CheckDelegate) "
"(делегати з пунктом із позначкою)"

#: content/docs/getting-started/kirigami/components-listview/index.md:326
msgid ""
"[RadioDelegate](docs:qtquickcontrols;QtQuick.Controls.RadioDelegate) "
"(delegates with a radio)"
msgstr ""
"[RadioDelegate](docs:qtquickcontrols;QtQuick.Controls.RadioDelegate) "
"(делегати із варіантом вибору)"

#: content/docs/getting-started/kirigami/components-listview/index.md:327
msgid ""
"[SwitchDelegate](docs:qtquickcontrols;QtQuick.Controls.SwitchDelegate) "
"(delegates with a switch)"
msgstr ""
"[SwitchDelegate](docs:qtquickcontrols;QtQuick.Controls.SwitchDelegate) "
"(делегати з перемикачем)"

#: content/docs/getting-started/kirigami/components-listview/index.md:328
msgid ""
"[SwipeDelegate](docs:qtquickcontrols;QtQuick.Controls.SwipeDelegate) "
"(delegates that can be swiped)"
msgstr ""
"[SwipeDelegate](docs:qtquickcontrols;QtQuick.Controls.SwipeDelegate) "
"(делегати, над якими можна проводити пальцем)"

#: content/docs/getting-started/kirigami/components-listview/index.md:330
msgid "You should prefer using the upstream Qt delegates where possible."
msgstr ""
"Вам слід надавати перевагу використанню делегатів основної бібліотеки Qt "
"там, де це можливо."

#: content/docs/getting-started/kirigami/components-listview/index.md:332
msgid ""
"On top of these Qt delegates, Kirigami provides its own equivalents, with "
"the added functionality of subtitles and icons:"
msgstr ""
"Над цими делегатами Qt Kirigami надає у ваше розпорядження власні "
"еквіваленти із доданими функціональними можливостями підзаголовків і "
"піктограм:"

#: content/docs/getting-started/kirigami/components-listview/index.md:334
msgid "[TitleSubtitle](docs:kirigami2;TitleSubtitle)"
msgstr "[TitleSubtitle](docs:kirigami2;TitleSubtitle)"

#: content/docs/getting-started/kirigami/components-listview/index.md:335
msgid "[IconTitleSubtitle](docs:kirigami2;IconTitleSubtitle)"
msgstr "[IconTitleSubtitle](docs:kirigami2;IconTitleSubtitle)"

#: content/docs/getting-started/kirigami/components-listview/index.md:336
msgid "[SubtitleDelegate](docs:kirigami2;SubtitleDelegate)"
msgstr "[SubtitleDelegate](docs:kirigami2;SubtitleDelegate)"

#: content/docs/getting-started/kirigami/components-listview/index.md:337
msgid "[CheckSubtitleDelegate](docs:kirigami2;CheckSubtitleDelegate)"
msgstr "[CheckSubtitleDelegate](docs:kirigami2;CheckSubtitleDelegate)"

#: content/docs/getting-started/kirigami/components-listview/index.md:338
msgid "[RadioSubtitleDelegate](docs:kirigami2;RadioSubtitleDelegate)"
msgstr "[RadioSubtitleDelegate](docs:kirigami2;RadioSubtitleDelegate)"

#: content/docs/getting-started/kirigami/components-listview/index.md:339
msgid "[SwitchSubtitleDelegate](docs:kirigami2;SwitchSubtitleDelegate)"
msgstr "[SwitchSubtitleDelegate](docs:kirigami2;SwitchSubtitleDelegate)"

#: content/docs/getting-started/kirigami/components-listview/index.md:341
msgid ""
"The API ending with \"Delegate\" can be set as a direct delegate of the "
"view, just like the previous examples that used Controls.ItemDelegate:"
msgstr ""
"Елементи програмного інтерфейсу, назви яких завершуються на «Delegate», "
"можна встановлювати як безпосередні делегати панелі перегляду, як у "
"попередніх прикладах, де використано Controls.ItemDelegate:"

#: content/docs/getting-started/kirigami/components-listview/index.md:377
msgid ""
"Both TitleSubtitle and IconTitleSubtitle are expected to be used to override "
"a Qt delegate's contentItem, for example:"
msgstr ""
"Обидва, TitleSubtitle і IconTitleSubtitle, вважаються такими, які слід "
"використовувати для  перевизначення contentItem делегата Qt, приклад:"

#: content/docs/getting-started/kirigami/components-listview/index.md:417
msgid ""
"A practical example of using Kirigami delegates can be seen in the "
"[ListItemTest file in the Kirigami Repository](https://invent.kde.org/"
"frameworks/kirigami/-/blob/master/tests/ListItemTest.qml)."
msgstr ""
"Із практичним прикладом використання делегатів Kirigami можна ознайомитися у "
"[файлі ListItemTest у сховищі Kirigami](https://invent.kde.org/frameworks/"
"kirigami/-/blob/master/tests/ListItemTest.qml)."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:0
msgid "Page rows and page stacks"
msgstr "Ряди сторінок і стоси сторінок"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:0
msgid ""
"Add flow to your application: Add, remove and replace pages in different ways"
msgstr ""
"Додавання у програму динаміки: різні способи додавання, вилучення і зміни "
"сторінок"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:10
msgid "A row of pages"
msgstr "Рядок сторінок"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:12
msgid ""
"We have seen so far that one of the core components of a Kirigami window is "
"a [Kirigami.Page](docs:kirigami2;Page). A single page can envelop the whole "
"screen of the application, or it can be shown together with other pages at "
"the same time, if there is space."
msgstr ""
"Досі ми бачили, що одним з основних компонентів вікна Kirigami є [Kirigami."
"Page](docs:kirigami2;Page). Одна сторінка може включати увесь екран "
"програми, або її може бути показано разом із іншими сторінками, якщо "
"достатньо місця."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:14
msgid ""
"Whenever a page gets added, or *pushed*, it appears to the right of the "
"existing page(s), forming a row. This row of pages can be managed with the "
"fittingly named [Kirigami.PageRow](docs:kirigami2;PageRow)."
msgstr ""
"Кожного разу, коли додається або «виштовхується» сторінка, вона з'являється "
"праворуч від наявних сторінок, формуючи рядок. Керувати цим рядком сторінок "
"можна за допомогою відповідно названого [Kirigami.PageRow](docs:kirigami2;"
"PageRow)."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:16
msgid "A minimal page row with a single page could look like this:"
msgstr "Мінімальний рядок сторінок із однією сторінкою має виглядати ось так:"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:42
msgid "A single page with light blue color to show the page's dimensions"
msgstr ""
"Одинарна сторінка із світло-блакитним кольором для демонстрації розмірів "
"сторінки"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:44
msgid ""
"There are two improvements that can be done here. The first is that, with "
"[initialPage](docs:kirigami2;PageRow::initialPage), we can both set "
"`mainPage` to be the first page that appears in the page row, and have its "
"dimensions be managed by the page row instead of via manual [anchors]"
"(https://doc.qt.io/qt-6/qtquick-positioning-anchors.html), [positioners]"
"(https://doc.qt.io/qt-6/qtquick-positioning-layouts.html) or [layouts]"
"(https://doc.qt.io/qt-6/layout.html). The second is to have a toolbar, which "
"can be set by defining a toolbar style with [globalToolBar.style](docs:"
"kirigami2;PageRow::globalToolBar). There are a few styles we can choose "
"from, but we'll go with [Kirigami.ApplicationHeaderStyle.Auto](docs:"
"kirigami2;templates::ApplicationHeader::headerStyle) for now."
msgstr ""
"Тут можна використати два удосконалення. Перше полягає у тому, що за "
"допомогою [initialPage](docs:kirigami2;PageRow::initialPage) ми можемо "
"одразу встановити `mainPage` першою сторінкою, яка з'являтиметься у рядку "
"сторінок, і наказати системі керувати її розмірностями з рядка сторінок, "
"замість ручного встановлення [прив'язок](https://doc.qt.io/qt-6/qtquick-"
"positioning-anchors.html), [засобів позиціювання](https://doc.qt.io/qt-6/"
"qtquick-positioning-layouts.html) або [компонувань](https://doc.qt.io/qt-6/"
"layout.html). Друге полягає у додаванні панелі інструментів, яку можна "
"встановити визначенням стилю панелі інструментів за допомогою [globalToolBar."
"style](docs:kirigami2;PageRow::globalToolBar). Існує декілька стилів, один з "
"яких можна вибрати, але поки ми скористаємося [Kirigami."
"ApplicationHeaderStyle.Auto](docs:kirigami2;templates::ApplicationHeader::"
"headerStyle)."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:67
msgid ""
"A single page with toolbar and light blue color to show the page's dimensions"
msgstr ""
"Одинарна сторінка з панеллю інструментів та світло-блакитним кольором для "
"показу розмірів сторінки"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:69
msgid ""
"There are only two ways of adding pages to a page row: by setting its "
"[initialPage](docs:kirigami2;PageRow::initialPage) (which can optionally "
"take an array of pages) or by using [push()](docs:kirigami2;PageRow::push). "
"To delete a page from the page row, you should use [pop()](docs:kirigami2;"
"PageRow::pop), whereas [goBack()](docs:kirigami2;PageRow::goBack) or "
"[goForward()](docs:kirigami2;PageRow::goForward) can be used to navigate "
"between pages."
msgstr ""
"Існує лише два способи додавання сторінок до рядка сторінок: встановленням "
"його [initialPage](docs:kirigami2;PageRow::initialPage) (значенням якого, "
"якщо потрібно може бути масив сторінок) або шляхом використання [push()]"
"(docs:kirigami2;PageRow::push). Щоб вилучити сторінку з рядка сторінок, вам "
"слід скористатися [pop()](docs:kirigami2;PageRow::pop), а [goBack()](docs:"
"kirigami2;PageRow::goBack) або [goForward()](docs:kirigami2;PageRow::"
"goForward) можна скористатися для навігації сторінками."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:115
msgid "Initial page with light blue color"
msgstr "Початкова сторінка зі світло-блакитним кольором"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:117
msgid ""
"Upon clicking \\\"Push!\\\", a second page with light green color shows up"
msgstr ""
"Після натискання «Push!» буде показано другу сторінку із світло-зеленим "
"кольором"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:119
msgid "The application's stack of pages"
msgstr "Стос сторінок програми"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:121
msgid ""
"If a [Kirigami.PageRow](docs:kirigami2;PageRow) with a toolbar looks "
"familiar to you, that is because you have seen it before. An "
"[ApplicationWindow.pageStack](docs:kirigami2;AbstractApplicationWindow::"
"pageStack) is nothing more than a very convenient, global page row. Every "
"function available to a `PageRow` is also available to the `pageStack`."
msgstr ""
"Якщо [Kirigami.PageRow](docs:kirigami2;PageRow) із панеллю інструментів "
"виглядає для вас знайомим, це через те, що ви його вже бачили. "
"[ApplicationWindow.pageStack](docs:kirigami2;AbstractApplicationWindow::"
"pageStack) є не більше, ніж дуже зручним загальним рядком сторінок. Усі "
"функції, які є доступними для `PageRow`, також доступні для `pageStack`."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:123
msgid ""
"The previous example can be reduced significantly with a `pageStack`, with "
"the added bonus of navigation actions:"
msgstr ""
"Попередній приклад можна значно скоротити за допомогою `pageStack`, із "
"додаванням бонуса дій з навігації:"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:171
msgid ""
"In general you'll want to use a `pageStack` rather than implement your own "
"[PageRow](docs:kirigami2;PageRow), especially when your application gets "
"bigger and you need your components living in separate files. If you create "
"your window in your `Main.qml` using a [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow), a component residing in another file can still "
"directly invoke the global `pageStack` by means of a call to the "
"[applicationWindow()](docs:kirigami2;AbstractApplicationWindow::"
"applicationWindow):"
msgstr ""
"Загалом, вам варто користуватися `pageStack`, а не реалізувати ваш власний "
"[PageRow](docs:kirigami2;PageRow), особливо якщо ваша програма зростає і "
"виникає потреба у поділі ваших компонентів між окремими файлами. Якщо ви "
"створюєте ваше вікно у вашому `Main.qml` за допомогою [Kirigami."
"ApplicationWindow](docs:kirigami2;ApplicationWindow), компонент, що "
"зберігається в іншому файлі збереже можливість безпосередньо викликати "
"загальний `pageStack` шляхом виклику [applicationWindow()](docs:kirigami2;"
"AbstractApplicationWindow::applicationWindow):"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:174
msgid "\"Main.qml\""
msgstr "\"Main.qml\""

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:185
msgid "and"
msgstr "і"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:188
msgid "\"BasicPage.qml\""
msgstr "\"BasicPage.qml\""

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:214
msgid "Clicking the button pushes a new page with help of applicationWindow"
msgstr ""
"Натискання кнопки виштовхує нову сторінку за допомогою applicationWindow"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:0
msgid "Progress bars and indicators"
msgstr "Смужки поступу і індикатори"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:0
msgid "Provide your users with loading state information using progress bars."
msgstr ""
"Надання вашим користувачам даних щодо стану завантаження за допомогою смужок "
"поступу."

#: content/docs/getting-started/kirigami/components-progressbars/index.md:10
msgid ""
"Whenever your application does something that takes a noticeable amount of "
"time, you will want to use a visual element that tells the user that "
"something is happening in the background."
msgstr ""
"Кожного разу, коли ваша програма виконує якісь завдання, для виконання яких "
"потрібно доволі багато часу, вам знадобиться візуальний елемент, який "
"повідомлятиме користувачу про те, що щось відбувається у фоновому режимі."

#: content/docs/getting-started/kirigami/components-progressbars/index.md:12
msgid ""
"QtQuick Controls provides two useful components that you can use to this end."
msgstr ""
"У QtQuick Controls передбачено два корисних компоненти, якими ви можете "
"скористатися для виконання цього завдання."

#: content/docs/getting-started/kirigami/components-progressbars/index.md:14
msgid "Progress bar"
msgstr "Панель поступу"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:16
msgid ""
"[Controls.ProgressBar](docs:qtquickcontrols;QtQuick.Controls.ProgressBar) is "
"a component that lets you easily include progress bars in your application. "
"There are four main properties you will need to use:"
msgstr ""
"[Controls.ProgressBar](docs:qtquickcontrols;QtQuick.Controls.ProgressBar) є "
"компонентом, який надає вам змогу просто включити смужки поступу до вашої "
"програми. Існує чотири основних властивості, якими вам потрібно буде "
"скористатися:"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:18
msgid ""
"[from](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#from-"
"prop): the minimum value represented by the start of the progress bar"
msgstr ""
"[from](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#from-"
"prop): мінімальне значення, яке відповідає початку смужки поступу"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:19
msgid ""
"[to](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#to-prop): "
"the maximum value represented by the end of the progress bar"
msgstr ""
"[to](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#to-prop): "
"максимальне значення, яке відповідає кінцю смужки поступу"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:20
msgid ""
"[value](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#value-"
"prop): the current value of the action that is in progress (e.g. 50% loaded)"
msgstr ""
"[value](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#value-"
"prop): поточне значення рівня виконання дії (наприклад, отримано 50% даних)"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:21
msgid ""
"[indeterminate](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar."
"html#indeterminate-prop): if the action that is in process currently has no "
"clear progress value, you can set this property to `true` to show the user "
"that something is happening but its progress is not yet clear (but will be "
"soon)."
msgstr ""
"[indeterminate](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar."
"html#indeterminate-prop): якщо дія, яка зараз виконується не має точного "
"значення рівня поступу, ви можете встановити для цієї властивості значення "
"`true` для показу користувачу того, що щось відбувається, але параметри "
"поступу цього не є очевидними (але невдовзі ці параметри буде отримано)."

#: content/docs/getting-started/kirigami/components-progressbars/index.md:52
msgid "value: 50"
msgstr "значення: 50"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:66
msgid "Above: progress bar at 50%; below: indeterminate progress bar"
msgstr "Вище: смужка поступу на рівні 50%; нижче: невизначена смужка поступу"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:72
msgid "Busy indicator"
msgstr "Індикатор зайнятості"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:74
msgid ""
"In cases where loading times are shorter or measuring progress is not "
"feasible, you can instead use [Controls.BusyIndicator](docs:qtquickcontrols;"
"QtQuick.Controls.BusyIndicator). This component provides a simple spinning "
"wheel that shows users that something is happening."
msgstr ""
"У випадках, коли час завантаження є коротшим або вимірювання поступу "
"неможливе, ви можете скористатися [Controls.BusyIndicator](docs:"
"qtquickcontrols;QtQuick.Controls.BusyIndicator). Цей компонент забезпечує "
"роботу простого обертового коліщатка, яке показує користувачам, що щось "
"відбувається."

#: content/docs/getting-started/kirigami/components-progressbars/index.md:76
msgid ""
"If you want the indicator to stop running, you can do so by setting the "
"[running](https://doc.qt.io/qt-6/qml-qtquick-controls2-busyindicator."
"html#running-prop) property to false, in which case the ."
msgstr ""
"Якщо ви хочете, щоб індикатор припинив показ поступу, ви можете зробити це "
"встановленням для властивості [running](https://doc.qt.io/qt-6/qml-qtquick-"
"controls2-busyindicator.html#running-prop) значення `false`."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:0
msgid "Scrollable pages and list views"
msgstr "Сторінки і панелі списків із гортанням"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:0
msgid ""
"Scrollable pages are useful when combined with vertical components or "
"dynamic components such as List Views."
msgstr ""
"Сторінки із гортанням є корисними у поєднанні із вертикальними компонентами "
"або динамічними компонентами, зокрема панелями списків."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:10
msgid "Kirigami.ScrollablePage"
msgstr "Kirigami.ScrollablePage"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:12
msgid ""
"A [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage) is a page that "
"holds scrollable content, such as a [ListView](docs:qtquick;QtQuick."
"ListView). Scrolling, as well as scrolling indicators, are automatically "
"managed."
msgstr ""
"[`Kirigami.ScrollablePage`](docs:kirigami2;ScrollablePage) є сторінкою, яка "
"містить дані з можливістю гортання, зокрема [ListView](docs:qtquick;QtQuick."
"ListView). Гортання і індикатори гортання керуються автоматично."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:18
msgid "The rectangle will automatically be scrollable"
msgstr "Прямокутник буде автоматично створено придатним до гортання"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:26
msgid ""
"In almost every other way, a scrollable page is the same as a normal page."
msgstr ""
"У майже будь-який інший спосіб, сторінка з гортанням є подібною до звичайної "
"сторінки."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:30
msgid ""
"Do not put a [ScrollView](docs:qtquickcontrols;QtQuick.Controls.ScrollView) "
"inside of a [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage); "
"children of a `Kirigami.ScrollablePage` are already inside a `ScrollView`."
msgstr ""
"Не вписуйте `ScrollView` всередину [ScrollView](docs:qtquickcontrols;QtQuick."
"Controls.ScrollView); дочірні об'єкти [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage) вже перебувають у `ScrollView`."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:35
msgid "ListView in a ScrollablePage"
msgstr "ListView у ScrollablePage"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:37
msgid ""
"When the direct children of a [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) extend vertically beyond the size of the page itself, a "
"scrollbar appears at the right edge of the page and the page will be "
"scrollable."
msgstr ""
"Якщо безпосередні дочірні елементи [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) розширюються вертикально за розмір самої сторінки, у правій "
"частині сторінки з'являється смужка гортання, а сторінка стає сторінкою із "
"гортанням."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:41
msgid ""
"Two scrollable pages, both containing a ListView with custom contents "
"(screenshot of NeoChat)"
msgstr ""
"Дві сторінки із гортанням, обидві містять ListView із нетиповим вмістом "
"(знімок вікна NeoChat)"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:43
msgid ""
"Often you have more than one child in your [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage), and positioning items can be tricky—especially in "
"combination with a [ListView](docs:qtquick;QtQuick.ListView)."
msgstr ""
"Часто на [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage) міститься "
"більше одного дочірнього елемента, а розташовування елементів може бути "
"складною справою — особливо у поєднанні із [ListView](docs:qtquick;QtQuick."
"ListView)."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:46
msgid ""
"For non-visual components, having them inside the [ListView](docs:qtquick;"
"QtQuick.ListView) component won't change the visuals of the page, so we can "
"move them inside the scope of the list view. Same for elements anchored to "
"the center of the page, such as placeholder messages for empty list views."
msgstr ""
"Для невізуальних компонентів розташування у компоненті [ListView](docs:"
"qtquick;QtQuick.ListView) не змінює вигляду сторінки. Тому ми можемо "
"пересунути їх всередину області видимості панелі списку. Те саме стосується "
"елементів, які пов'язано із центром сторінки, зокрема повідомлень-замінників "
"для порожніх панелей списків."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:49
msgid ""
"For other items, it might make sense to move them to the header or footer of "
"the [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage). This is often "
"the case for search bars."
msgstr ""
"Інші ж елементи варто пересувати у шапку або підвал [Kirigami.ScrollablePage]"
"(docs:kirigami2;ScrollablePage). Так часто роблять із панелями пошуку."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:52
msgid "PlaceholderMessage"
msgstr "PlaceholderMessage"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:54
msgid ""
"It is possible to add a [Kirigami.PlaceholderMessage](docs:kirigami2;"
"PlaceholderMessage) with some instructions in case the list view is empty."
msgstr ""
"Можна додати [Kirigami.PlaceholderMessage](docs:kirigami2;"
"PlaceholderMessage) із певними настановами, якщо панель списку є порожньою."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:68
msgid "More code..."
msgstr "Ще код…"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:71
msgid "Model code..."
msgstr "Код моделі…"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:76
msgid "Search in the ListView"
msgstr "Пошук у ListView"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:78
msgid ""
"A search field is often added to a [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) to filter the [ListView](docs:qtquick;QtQuick.ListView). "
"This can be done by changing the default [titleDelegate](docs:kirigami2;"
"Page::titleDelegate) to use a [Kirigami.SearchField](docs:kirigami2;"
"SearchField) instead."
msgstr ""
"Поле пошуку часто додають до [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) для фільтрування [ListView](docs:qtquick;QtQuick.ListView). "
"Зробити це можна замінивши типовий [titleDelegate](docs:kirigami2;Page::"
"titleDelegate) на [Kirigami.SearchField](docs:kirigami2;SearchField)."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:95
msgid "Rest of listview code..."
msgstr "Решта коду listview…"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:100
msgid "Hint"
msgstr "Підказка"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:102
msgid ""
"You can use [KSortFilterProxyModel](docs:kitemmodels;SortFilterModel) from "
"[KItemModel](docs:kitemmodels) to easily add filtering capability directly "
"in QML without any need for C++ code."
msgstr ""
"Ви можете скористатися [KSortFilterProxyModel](docs:kitemmodels;"
"SortFilterModel) з [KItemModel](docs:kitemmodels) для спрощення додавання "
"можливостей фільтрування безпосередньо до QML без потреби у коді C++."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:108
msgid "Pull to refresh"
msgstr "Отримання для оновлення даних"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:110
msgid ""
"Another function provided by this component is a \"pull-to-refresh\" action. "
"To use this, activate it as follows:"
msgstr ""
"Іншою функцією, яка надається цим компонентом є дія «виштовхнути, щоб "
"освіжити». Щоб скористатися цією дією, активуйте її ось так:"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:123
msgid ""
"NOTE: MyModel doesn't come from the components, it's purely an example on "
"how it can be used together with some application logic that can update the "
"list model and signals when it's done."
msgstr ""
"Зауваження: MyModel не походить від компонентів. Це просто приклад того, як "
"нею можна скористатися разом із певною логікою програми, яка може оновлювати "
"список моделі і сигналізувати про завершення роботи."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:135
msgid ""
"By pulling down, you can also activate a special mode with a larger top "
"margin which makes single-handed use of the application easier."
msgstr ""
"Крім того, перетягуванням вниз ви можете активувати спеціальний режим із "
"більшим верхнім полем, яке спрощує користування програмою однією рукою."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:0
msgid "Adding actions"
msgstr "Дії з додавання"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:0
msgid ""
"Learning more about Kirigami's Actions will help us make our application "
"more useful.\n"
msgstr ""
"Ширші знання щодо дій Kirigami допоможуть нам зробити нашу програму "
"кориснішою.\n"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:10
msgid "Recap"
msgstr "Коротке повторення"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:12
msgid ""
"So far, we built a simple app that can display cards. However, there is "
"currently no way for the user to add new cards to the card view."
msgstr ""
"Досі, нами побудовано просту програму, яка показує картки. Втім, у ній ще не "
"передбачено способу додавання нових карток до панелі перегляду карток."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:14
msgid ""
"In this tutorial, we'll be looking at Kirigami actions. These will help us "
"add interactivity to our app in a consistent, fast, and accessible way."
msgstr ""
"У цій частині підручника ми розглянемо дії Kirigami. Ці дії допоможуть нам "
"додати інтерактивності нашій програмі у сумісний, швидкий і доступний спосіб."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:18
msgid ""
"A [Kirigami.Action](docs:kirigami2;Action) encapsulates a user interface "
"action. We can use these to provide our applications with easy-to-reach "
"actions that are essential to their functionality."
msgstr ""
"Дія [Kirigami.Action](docs:kirigami2;Action) є контейнером для дії з "
"інтерфейсом користувача. Діями можна скористатися для надання нашій програмі "
"легкодоступних дій, які є критичними для виконання нею функціональних "
"можливостей."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:20
msgid ""
"If you have used Kirigami apps before, you have certainly interacted with "
"Kirigami actions. In this image, we can see actions to the right of the page "
"title with various icons. Kirigami actions can be displayed in several ways "
"and can do a wide variety of things."
msgstr ""
"Якщо ви раніше користувалися програмами Kirigami, ви напевне взаємодіяли із "
"діями Kirigami. На цьому зображенні ми можемо бачити кнопки дій праворуч від "
"заголовка сторінки із різноманітними піктограмами. Дії Kirigami може бути "
"показано у декілька способів. Вони можуть виконувати широкий діапазон "
"завдань."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:30
msgid "Adding countdowns"
msgstr "Додавання відліків"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:32
msgid ""
"A countdown app is pretty useless without the ability to add countdowns. "
"Let's create an action that'll let us do this."
msgstr ""
"Програма із зворотним відліком буде непотрібною без можливості додавання "
"зворотних відліків. Давайте створимо дію, яка надасть нам змогу додавати "
"зворотні відліки."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:40
msgid "Other page properties..."
msgstr "Інші властивості сторінки…"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:58
msgid ""
"We are placing our [Kirigami.Action](docs:kirigami2;Action) within our main "
"page from the previous tutorials. If we wanted to, we could add more actions "
"to our page (and even nest actions within actions!)."
msgstr ""
"Ми розташовуємо нашу [Kirigami.Action](docs:kirigami2;Action) на нашій "
"основній сторінці з попередніх підручників. Якщо нам потрібно, ми можемо "
"додати інші кнопки дій на нашій сторінці (і навіть вкласти дії у інші дії!)."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:60
msgid ""
"The brackets `[]` used above are similar to [JavaScript arrays](https://www."
"w3schools.com/js/js_arrays.asp), which means you can pass one or more things "
"to them, separated by comma:"
msgstr ""
"Дужки `[]`, які використано вище, є подібними до дужок [масивів JavaScript]"
"(https://www.w3schools.com/js/js_arrays.asp), що означає, що ви можете "
"передати їм одну або декілька речей, відокремлених комами:"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:63
msgid "General JavaScript array of components:"
msgstr "Загальний масив компонентів JavaScript:"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:65
msgid "Passing an array of Kirigami actions to QML:"
msgstr "Передавання масиву дій Kirigami до QML:"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:69
msgid ""
"The `id` and `text` properties should be familiar from previous tutorials. "
"However, the inherited [Action.icon](https://doc.qt.io/qt-6/qml-qtquick-"
"controls2-action.html#icon-prop) property should be interesting: it is an "
"object with several properties letting you display certain icons for your "
"actions. Fortunately, to use KDE icons all we need to do is provide the name "
"property for the icon property, `icon.name`."
msgstr ""
"Із властивостями `id` і `text` ми вже познайомилися у попередніх розділах "
"підручника. Втім, нас має зацікавити нова властивість [Action.icon](https://"
"doc.qt.io/qt-6/qml-qtquick-controls2-action.html#icon-prop): це об'єкт із "
"декількома властивостями, за допомогою якого можна показувати певні "
"піктограми для наших дій. На щастя, щоб скористатися піктограмами KDE "
"достатньо надати назву для властивості піктограми, `icon.name`."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:71
msgid "Viewing the available icons"
msgstr "Перегляд доступних піктограм"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:73
msgid ""
"<details>\n"
"<summary>Click here to see how to check the available icons on your system</"
"summary>\n"
"<br>\n"
"Cuttlefish is a KDE application that lets you view all the icons that you "
"can use for your application. It offers a number of useful features such as "
"previews of their appearance across different installed themes, previews at "
"different sizes, and more. You might find it a useful tool when deciding on "
"which icons to use in your application.<br><br>\n"
msgstr ""
"<details>\n"
"<summary>Натисніть тут, щоб ознайомитися із тим, як переглянути доступні "
"піктограми у вашій системі</summary>\n"
"<br>\n"
"Cuttlefish — програма KDE, за допомогою якої ви можете переглянути усі "
"піктограми, якими можна скористатися у вашій програмі. У програмі "
"передбачено декілька корисних можливостей, зокрема попередній перегляд "
"вигляду піктограм у різних встановлених темах, попередній перегляд із "
"різними розмірами тощо. Можливо, програма буде корисною для вас із метою "
"визначення, які піктограми варто використати у вашій програмі.<br><br>\n"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:78
msgid ""
"Many of KDE's icons follow the FreeDesktop Icon Naming specification. "
"Therefore, you might also find it useful to consult The FreeDesktop "
"project's website, [which lists all cross-desktop compatible icon names]"
"(https://specifications.freedesktop.org/icon-naming-spec/icon-naming-spec-"
"latest.html)."
msgstr ""
"У багатьох піктограмах KDE використано специфікацію назв піктограм "
"FreeDesktop. Через це, вам також буде корисним звернутися до сайта проєкту "
"FreeDesktop, [де наведено список усіх сумісних із різними стільничними "
"середовищами назв піктограм](https://specifications.freedesktop.org/icon-"
"naming-spec/icon-naming-spec-latest.html)."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:84
msgid ""
"The [onTriggered](docs:qtquickcontrols;QtQuick.Controls.Action::triggered) "
"signal handler is the most important. This is what our action will do when "
"it is used. You'll notice that in our example we're using the method "
"[kountdownModel.append](https://doc.qt.io/qt-6/qml-qtqml-models-listmodel."
"html#append-method) of the `kountdownModel` we created in our previous "
"tutorial. This method lets us append a new element to our list model. We are "
"providing it with an object (indicated by curly braces `{}`) that has the "
"relevant properties for our countdowns (`name`, `description`, and a "
"placeholder `date`)."
msgstr ""
"Найважливішою є обробник сигналів [onTriggered](docs:qtquickcontrols;QtQuick."
"Controls.Action::triggered). Вона визначає те, що буде виконано, коли "
"використовуватиметься наша дія. Ви можете зауважити, що у нашому прикладі ми "
"використовуємо метод `kountdownModel.append` [kountdownModel.append](https://"
"doc.qt.io/qt-6/qml-qtqml-models-listmodel.html#append-method), який було "
"створено у попередньому розділі нашого підручника. За допомогою цього методу "
"можна додати новий елемент до нашої моделі списку. Ми надаємо методу об'єкт "
"(позначений фігурними дужками `{}`), який має відповідні властивості для "
"наших відліків (`name`, `description` та замінник `date`)."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:92
msgid ""
"Each time we click our \\\"Add kountdown\\\" button on the top right, our "
"custom countdown is added"
msgstr ""
"Кожного разу, коли ми натискатимемо кнопку «Add kountdown» у верхній правій "
"частині вікна, додаватиметься наш нетиповий відлік."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:94
msgid "Mobile version"
msgstr "Мобільна версія"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:106
msgid ""
"The next component is a [Kirigami.GlobalDrawer](docs:kirigami2;"
"GlobalDrawer). It shows up as a [hamburger menu](https://en.wikipedia.org/"
"wiki/Hamburger_button). By default it opens a sidebar, which is especially "
"useful on mobile, as the user can just swipe in a side of the screen to open "
"it. Global drawers are useful for global navigation and actions. We are "
"going to create a simple global drawer that includes a \"quit\" button."
msgstr ""
"Наступним компонентом є [Kirigami.GlobalDrawer](docs:kirigami2;"
"GlobalDrawer). Він показує [меню-гамбургер](https://en.wikipedia.org/wiki/"
"Hamburger_button). Типово, він відкриває бічну панель, яка є особливо "
"корисною на мобільних пристроях, оскільки користувач може просто провести "
"пальцем збоку екрана, щоб відкрити його. Загальні висувні панелі корисні для "
"загальної навігації та кнопок дій. Ми збираємося створити просту загальну "
"висувну панель, на якій буде показано кнопку «Вийти»."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:111
msgid "Other window properties..."
msgstr "Інші властивості вікна…"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:128
msgid ""
"Here, we put our global drawer inside our application window. The main "
"property we need to pay attention to is [GlobalDrawer.actions](docs:"
"kirigami2;GlobalDrawer::actions), which takes the form of an array of "
"[Kirigami.Action](docs:kirigami2;Action) components. This action has an "
"appropriate icon and executes the [Qt.quit()](docs:qtqml;QtQml.Qt::quit) "
"function when triggered, closing the application."
msgstr ""
"Тут ми розмістили нашу загальну висувну панель у нашому вікні програми. "
"Головною властивістю, якій ми маємо приділити увагу, є [GlobalDrawer.actions]"
"(docs:kirigami2;GlobalDrawer::actions). Ця властивість приймає значення "
"масиву компонентів [Kirigami.Action](docs:kirigami2;Action). Ця дія має "
"відповідну піктограму і запускає функцію [Qt.quit()](docs:qtqml;QtQml.Qt::"
"quit), яка завершує роботу програми."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:131
msgid ""
"Since we are keeping our global drawer simple for now, we are setting the "
"[GlobalDrawer.isMenu](docs:kirigami2;GlobalDrawer::isMenu) property to "
"`true`. This displays our global drawer as a normal application menu, taking "
"up less space than the default global drawer pane."
msgstr ""
"Оскільки ми поки зберігаємо простоту нашої загальної висувної панелі, ми "
"встановлюємо для [GlobalDrawer.isMenu](docs:kirigami2;GlobalDrawer::isMenu) "
"значення true. У результаті нашу загальну висувну панель буде показано як "
"звичайне меню програми, яке займатиме менше місця за типову загальну висувну "
"панель."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:139
msgid "Global drawer as a menu"
msgstr "Загальна панель як меню"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:147
msgid ""
"The [Actions based components](/docs/getting-started/kirigami/components-"
"actions/) page of these docs provides further detail on Kirigami Actions and "
"how they can be used."
msgstr ""
"Сторінка [заснованих на Actions компонентів](/docs/getting-started/kirigami/"
"components-actions/) у розділі «Компоненти» цієї документації містить "
"докладніші відомості щодо дій Kirigami та їхнього використання."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:151
msgid "Actions are contextual"
msgstr "Дії є контекстними"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:153
msgid ""
"Kirigami components are designed in such a way that the place where you put "
"Kirigami Actions is relevant. As seen above, if you add actions to a "
"[Kirigami.Page](docs:kirigami2;Page), [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage) or any other derivative Page component, they will "
"show up on the right side of the header in desktop mode, and on the bottom "
"in mobile mode."
msgstr ""
"Компоненти Kirigami розроблено так, щоб місце, де ви розташуєте кнопки дій "
"Kirigami, було відповідним. Як можна бачити вище, якщо ви додаєте кнопки дій "
"до [Kirigami.Page](docs:kirigami2;Page), [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage) або будь-якому іншому похідному від Page "
"компоненті, їх буде показано у правій частині заголовка у режимі робочої "
"станції і у нижній частині сторінки у режимі мобільного пристрою."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:155
msgid ""
"Similarly, if Kirigami Actions are added to a [Kirigami.GlobalDrawer](docs:"
"kirigami2;GlobalDrawer), they will show up in the resulting drawer or menu."
msgstr ""
"Так само, якщо дії Kirigami буде додано до [Kirigami.GlobalDrawer](docs:"
"kirigami2;GlobalDrawer), їх буде показано на висувній панелі або у меню."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:157
msgid ""
"Other examples of Kirigami Actions showing up differently depending on their "
"parent component are:"
msgstr ""
"Інші приклади дій Kirigami, які показано по-різному, залежжжно від їхнього "
"батьківського компонента:"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:159
msgid ""
"[Kirigami.ContextDrawer](docs:kirigami2;ContextDrawer) - [ContextDrawer "
"tutorial here](/docs/getting-started/kirigami/components-drawers#context-"
"drawers)"
msgstr ""
"[Kirigami.ContextDrawer](docs:kirigami2;ContextDrawer) — [підручник з "
"ContextDrawer тут](/docs/getting-started/kirigami/components-drawers#context-"
"drawers)"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:160
msgid ""
"[Kirigami.AbstractCard](docs:kirigami2;AbstractCard) and derivatives - [Card "
"tutorial here](/docs/getting-started/kirigami/components-card)"
msgstr ""
"[Kirigami.AbstractCard](docs:kirigami2;AbstractCard) і похідні — [підручник "
"з карток тут](/docs/getting-started/kirigami/components-card)"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:161
msgid ""
"[Kirigami.Dialog](docs:kirigami2;Dialog) and derivatives - [Dialog tutorial "
"here](/docs/getting-started/kirigami/components-dialogs)"
msgstr ""
"[Kirigami.Dialog](docs:kirigami2;Dialog) і похідні — [підручник з Dialog тут]"
"(/docs/getting-started/kirigami/components-dialogs)"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:162
msgid ""
"[Kirigami.ActionToolBar](docs:kirigami2;ActionToolBar) - [ActionToolBar "
"tutorial here](/docs/getting-started/kirigami/components-"
"actions#actiontoolbar)"
msgstr ""
"[Kirigami.ActionToolBar](docs:kirigami2;ActionToolBar) - [підручник з "
"ActionToolBar](/docs/getting-started/kirigami/components-"
"actions#actiontoolbar)"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:164
msgid "Among other Kirigami components."
msgstr "Серед інших компонентів Kirigami."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:166
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:200
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:258
msgid "Our app so far"
msgstr "Наша програма на поточний момент"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:168
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:202
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:260
msgid ""
"<details>\n"
"<summary><b>Main.qml:</b></summary>\n"
msgstr ""
"<details>\n"
"<summary><b>Main.qml:</b></summary>\n"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:0
msgid "Adding a dialog"
msgstr "Додавання діалогового вікна"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:0
msgid "Getting to grips with Kirigami dialogs.\n"
msgstr "Знайомимося із діалоговими вікнами Kirigami.\n"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:11
msgid "Making our app useful"
msgstr "Робимо нашу програму корисною"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:13
msgid ""
"We have a window, we have cards, and we have actions. Yet, we still need to "
"find some way of inputting a name, description, and date of our choice."
msgstr ""
"У нас є вікно, у нас є картки і у нас є дії. Але нам усе ще потрібне спосіб "
"введення назви, опису та вибраної дати."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:15
msgid ""
"One way we could do this is by creating a new page where we place the "
"required input elements. However, a whole page dedicated to providing a "
"name, description, and date seems a bit excessive."
msgstr ""
"Одним зі способів досягти потрібного результату є створення сторінки, на "
"якій ми розташуємо потрібні нам елементи для введення даних. Втім, надавати "
"цілу сторінку для введення назви, опис та дати забагато."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:17
msgid "Instead, we'll be using a dialog."
msgstr "Замість цього ми скористаємося діалоговим вікном."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:19
msgid "![Dialog appearing in the middle of the application](dialog.webp)"
msgstr ""
"![Діалогове вікно, що з'являється посередині вікна програми](dialog.webp)"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:21
msgid "Opening the dialog"
msgstr "Відкриття діалогового вікна"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:37
msgid ""
"First we edit the action from the previous tutorial: just a [Kirigami.Action]"
"(docs:kirigami2;Action) that triggers the dialog's [open()](docs:"
"qtquickcontrols;QtQuick.Controls.Popup::open) function."
msgstr ""
"Спочатку внесемо зміни до дії з попереднього розділу підручника — просто "
"додамо [Kirigami.Action](docs:kirigami2;Action), яка вмикає функцію [open()]"
"(docs:qtquickcontrols;QtQuick.Controls.Popup::open) діалогового вікна."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:39
msgid "Countdown-adding dialogs"
msgstr "Зворотний відлік — додавання діалогових вікон"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:41
msgid ""
"The new component we add is a [Kirigami.Dialog](docs:kirigami2;Dialog). "
"Dialogs appear at the center of the window and can be used to provide extra "
"information relevant to the current content. They can't be moved, but they "
"adapt their own size to the window."
msgstr ""
"Новим компонентом, який ми додаємо є [Kirigami.Dialog](docs:kirigami2;"
"Dialog). Діалогові вікна з'являються у центрі вікна. Ними можна скористатися "
"для надання додаткових відомостей, які пов'язано із поточним вмістом вікна. "
"Їх не можна пересувати, але їхній розмір адаптується до розміру головного "
"вікна."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:53
msgid "Form layouts help align and structure a layout with several inputs"
msgstr ""
"Компонування форми допомагають вирівняти і структурувати компонування із "
"декількома елементами введення"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:55
msgid "Textfields let you input text in a thin textbox"
msgstr ""
"Об'єкти Textfield надають вам змогу вводити текст у вузькому полі для "
"введення тексту"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:58
msgid "Provides a label attached to the textfield"
msgstr "Надає доступ до мітки, яку пов'язано із текстовим полем"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:60
msgid ""
"What to do after input is accepted (i.e. pressed Enter) In this case, it "
"moves the focus to the next field"
msgstr ""
"Що робити після прийняття вхідних даних (тобто натискання клавіші Enter)? У "
"цьому випадку фокусування буде пересунуто на наступне поле"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:68
msgid "Again, it moves the focus to the next field"
msgstr "Знову ж таки, пересуває фокусування до наступного поля"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:74
msgid ""
"D means a required number between 1-9, 9 means a required number between 0-9"
msgstr ""
"D означає обов'язкове число у діапазоні 1-9, 9 — обов'язкове число у "
"діапазоні 0-9"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:77
msgid "Here we confirm the operation just like clicking the OK button"
msgstr "Тут ми підтверджуємо дію, подібно до натискання кнопки «Гаразд»"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:85
msgid "The dialog logic goes here"
msgstr "Тут маємо логіку діалогового вікна"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:91
msgid ""
"Dialogs by default have a [header](https://doc.qt.io/qt-6/qml-qtquick-"
"controls-dialog.html#header-prop) and a [footer](https://doc.qt.io/qt-6/qml-"
"qtquick-controls-dialog.html#footer-prop), both inherited from [Controls."
"Dialog](docs:qtquickcontrols;QtQuick.Controls.Dialog)."
msgstr ""
"У діалогових вікон, типово, є [заголовок](https://doc.qt.io/qt-6/qml-qtquick-"
"controls-dialog.html#header-prop) і [підвал](https://doc.qt.io/qt-6/qml-"
"qtquick-controls-dialog.html#footer-prop), обидва успадковані від [Controls."
"Dialog](docs:qtquickcontrols;QtQuick.Controls.Dialog)."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:93
msgid ""
"The header by default includes a [title](https://doc.qt.io/qt-6/qml-qtquick-"
"controls-dialog.html#title-prop) and a close button that can be disabled "
"with [showCloseButton](docs:kirigami2;Dialog::showCloseButton). The footer "
"by default includes a close button, and it can be overridden with "
"[standardButtons](https://doc.qt.io/qt-6/qml-qtquick-controls-dialog."
"html#standardButtons-prop)."
msgstr ""
"До заголовка, типово, включають [назву](https://doc.qt.io/qt-6/qml-qtquick-"
"controls-dialog.html#title-prop) і кнопку закриття, яку можна вимкнути за "
"допомогою [showCloseButton](docs:kirigami2;Dialog::showCloseButton). До "
"підвалу, типово, включено кнопку закриття, і цю поведінку можна "
"перевизначити за допомогою [standardButtons](https://doc.qt.io/qt-6/qml-"
"qtquick-controls-dialog.html#standardButtons-prop)."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:95
msgid ""
"We first set it to show an \"Ok\" button and a \"Cancel\" button, add some "
"padding, and add a reasonable [preferredWidth](docs:kirigami2;Dialog::"
"preferredWidth). The preferred width is the default expected size of the "
"dialog, which can increase if needed. We can use standard [Kirigami.Units]"
"(docs:kirigami2;Kirigami::Platform::Units) that we will revisit later on."
msgstr ""
"Спочатку, ми налаштуємо його на показ кнопки «Гаразд» і «Скасувати», додамо "
"фаски, та додамо прийнятну [preferredWidth](docs:kirigami2;Dialog::"
"preferredWidth). Пріоритетною шириною є типовий очікуваний розмір "
"діалогового вікна. Її може бути збільшено, якщо це потрібно. Ми можемо "
"скористатися стандартним [Kirigami.Units](docs:kirigami2;Kirigami::Platform::"
"Units), до якого ми ще звернемося пізніше."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:97
msgid ""
"Then we come to a [Kirigami.FormLayout](docs:kirigami2;FormLayout). Unlike a "
"[ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout."
"html), the layout of its child components is automatic and centered, with "
"optional labels. As the name implies, it is used to create input forms."
msgstr ""
"Далі, ми переходимо до [Kirigami.FormLayout](docs:kirigami2;FormLayout). На "
"відміну від [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html), компонування його дочірніх компонентів є автоматичним і "
"центрованим з необов'язковими мітками. Як можна зрозуміти з назви, його "
"використовують для створення форм введення даних."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:99
msgid ""
"These form layouts are designed to work with a variety of different input "
"types, though we're sticking to simple [Controls.Textfield](docs:"
"qtquickcontrols;QtQuick.Controls.TextField) inputs that give us simple text "
"boxes to write things in."
msgstr ""
"Ці компонування форм розроблено для роботи із різними типами полів введення, "
"хоча тут ми використовуємо прості поля [Controls.Textfield](docs:"
"qtquickcontrols;QtQuick.Controls.TextField), якщо відповідають простим "
"текстовим блоками для вписування простих текстових фрагментів."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:101
msgid "We have created Textfield elements that act as:"
msgstr "Нами створено елементи Textfield, які працюють як:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:103
msgid "Input for the name of our countdown"
msgstr "Поле для введення назви нашого відліку"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:104
msgid "Input for the description of our countdown"
msgstr "Поле для введення опису нашого відліку"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:105
msgid ""
"Input for the date we are counting down towards, which must be provided in a "
"`YYYY-MM-DD` format"
msgstr ""
"Поле для введення дати, до якої ми ведемо відлік і яка надається у форматі "
"`YYYY-MM-DD`"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:107
msgid ""
"Within each of these [Controls.Textfield](docs:qtquickcontrols;QtQuick."
"Controls.TextField) elements, we are setting a [Kirigami.FormData.label]"
"(docs:kirigami2;FormLayoutAttached::label) property that lets us define "
"labels for them. The form will present the correct labels to the left of "
"each of these text input fields."
msgstr ""
"У кожному з цих елементів [Controls.Textfield](docs:qtquickcontrols;QtQuick."
"Controls.TextField) ми встановлюємо властивість [Kirigami.FormData.label]"
"(docs:kirigami2;FormLayoutAttached::label), що надає нам змогу визначити для "
"них мітки. Форма покаже належні мітки ліворуч від кожного з цих полів для "
"введення тексту."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:109
msgid ""
"Finally, we are also setting the [onAccepted](https://doc.qt.io/qt-6/qml-"
"qtquick-textinput.html#accepted-signal) property to trigger the "
"[forceActiveFocus()](https://doc.qt.io/qt-6/qml-qtquick-item."
"html#forceActiveFocus-method) method of the following field; this will "
"switch the active field once the user hits the ENTER key, improving the "
"usability of the form."
msgstr ""
"Нарешті, ми також встановлюємо властивість [onAccepted](https://doc.qt.io/"
"qt-6/qml-qtquick-textinput.html#accepted-signal) для вмикання методу "
"[forceActiveFocus()](https://doc.qt.io/qt-6/qml-qtquick-item."
"html#forceActiveFocus-method) наступного поля; це призведе до перемикання "
"активного поля, щойно користувач натисне клавішу ENTER, удосконалюючи "
"зручність форми."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:111
msgid ""
"We have also set a property called [inputMask](https://doc.qt.io/qt-6/qml-"
"qtquick-textinput.html#inputMask-prop) on the text field for our date. "
"Setting this to `D999-99-99` prevents users from entering something that "
"might break the functionality of the application (such as text), restricting "
"them to only entering digits which we can then try to parse into a date "
"object."
msgstr ""
"Ми також встановлюємо для текстового поля для нашої дати властивість із "
"назвою [inputMask](https://doc.qt.io/qt-6/qml-qtquick-textinput."
"html#inputMask-prop). Встановлення значення `D999-99-99` забороняє "
"користувачеві вводити будь-що, що може зашкодити нормальній роботі програми "
"(наприклад, звичайний текст). Користувач зможе вводити лише цифри, які "
"згодом може бути перетворено на об'єкт дати."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:113
msgid ""
"Once the user interface for the dialog is done, we need to change how it "
"behaves. For this we need three things:"
msgstr ""
"Щойно роботу над інтерфейсом користувача діалогового вікна завершено, нам "
"потрібно змінити поведінку вікна. Для цього нам потрібно три речі:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:115
msgid "Show the Ok button only when the required fields are filled"
msgstr "Показ кнопки «Гаразд», лише якщо заповнено обов'язкові поля"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:116
msgid "Add the input information to the model"
msgstr "Додавання вхідних даних до моделі"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:117
msgid "Clear the input form"
msgstr "Очищення форми введення даних"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:121
msgid ""
"... Once the Kirigami.Dialog is initialized, we want to create a custom "
"binding to only make the Ok button visible if the required text fields are "
"filled. For this we use Kirigami.Dialog.standardButton(button):"
msgstr ""
"…Щойно Kirigami.Dialog буде ініціалізовано, нам потрібно буде створити "
"нетипову прив'язку такого різновиду, що кнопка «Гаразд» стала видимою, лише "
"якщо буде заповнено обов'язкові текстові поля. Для цього ми скористаємося "
"Kirigami.Dialog.standardButton(button):"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:129
msgid "() => is a JavaScript arrow function"
msgstr "() => є функцією стрілочки JavaScript"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:133
msgid ""
"The binding is created, but we still need to make it unclickable unless the "
"fields are filled"
msgstr ""
"Прив'язку створено, але нам усе ще потрібно зробити її непридатною до "
"клацання, якщо не заповнено поля"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:142
msgid ""
"The first thing that needs to be done is create a binding between the OK "
"button's [enabled](https://doc.qt.io/qt-6/qml-qtquick-controls-popup."
"html#enabled-prop) property and a check on whether the fields are filled, "
"which in this case needs to be done with [Qt.binding()](https://doc.qt.io/"
"qt-6/qtqml-syntax-propertybinding.html#creating-property-bindings-from-"
"javascript) in JavaScript. In effect, the line:"
msgstr ""
"Першим, що слід зробити, є створення зв'язку між властивістю [enabled]"
"(https://doc.qt.io/qt-6/qml-qtquick-controls-popup.html#enabled-prop) кнопки "
"«Гаразд» і перевіркою того, чи заповнено поля, що у цьому випадку слід "
"зробити за допомогою [Qt.binding()](https://doc.qt.io/qt-6/qtqml-syntax-"
"propertybinding.html#creating-property-bindings-from-javascript) у "
"JavaScript. У результаті рядок:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:148
msgid ""
"is similar to the QML bindings we have seen so far, like in the following "
"pseudo-code:"
msgstr "є подібним до прив'язок QML, які ми досі мали, як у такому псевдокоді:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:154
msgid ""
"The signal handler that triggers the Ok button is [onAccepted](https://doc."
"qt.io/qt-6/qml-qtquick-controls-dialog.html#accepted-signal). It remains "
"empty and without doing anything if the required fields are filled; "
"otherwise, it will add the input to the model and clear the dialog for the "
"next time it is opened."
msgstr ""
"Обробником сигналів, який вмикатиме кнопку «Гаразд», є [onAccepted](https://"
"doc.qt.io/qt-6/qml-qtquick-controls-dialog.html#accepted-signal). Він "
"лишається порожнім і таким, що не виконуватиме ніяких дій, якщо обов'язкові "
"поля заповнено; у інших випадках він додаватиме поле введення до моделі і "
"спорожнятиме діалогове вікно для наступного моменту, коли його буде відкрито."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:158
msgid ""
"... We check that the nameField is not empty and that the dateField (which "
"has an inputMask) is completely filled"
msgstr ""
"…Ми перевіряємо, чи є непорожнім nameField, і що dateField (для якого "
"визначено inputMask) є повністю заповненим"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:180
msgid ""
"For our required name field, all we need to do is to check whether the field "
"text is an empty string. For the date field, because it has an input mask, "
"we need to use [acceptableInput](https://doc.qt.io/qt-6/qml-qtquick-"
"textinput.html#acceptableInput-prop) instead, which only becomes true once "
"the whole field is filled and contains only acceptable characters."
msgstr ""
"Для нашого обов'язкового поля name нам достатньо перевірити, чи є текстом "
"поля порожній рядок. Для поля date, оскільки для нього визначено маску "
"введення, замість цього, нам слід скористатися [acceptableInput](https://doc."
"qt.io/qt-6/qml-qtquick-textinput.html#acceptableInput-prop), значенням якого "
"стане true, щойно усе поле буде заповнено, і у ньому міститимуться лише "
"прийнятні символи."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:182
msgid ""
"Then, the [append()](https://doc.qt.io/qt-6/qml-qtqml-models-listmodel."
"html#append-method) method of our `kountdownModel` list model adds a "
"JavaScript object including the properties we have provided."
msgstr ""
"Далі, метод [append()](https://doc.qt.io/qt-6/qml-qtqml-models-listmodel."
"html#append-method) нашої моделі списку `kountdownModel` додає об'єкт "
"JavaScript, включно із наданими нами властивостями."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:184
msgid ""
"Lastly, we make sure to clear the text fields by setting their [text]"
"(https://doc.qt.io/qt-6/qml-qtquick-textinput.html#text-prop) properties to "
"an empty string, then [close()](docs:qtquickcontrols;QtQuick.Controls.Popup::"
"close) it."
msgstr ""
"Нарешті, ми спорожняємо текстові поля встановленням для їхніх властивостей "
"[text](https://doc.qt.io/qt-6/qml-qtquick-textinput.html#text-prop) значення "
"порожнього рядка, а потім виконуємо [close()](docs:qtquickcontrols;QtQuick."
"Controls.Popup::close)."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:186
msgid ""
"Once we save our files and build our program, we'll be able to add our own "
"custom countdowns! We can make one last touch to improve the interface, "
"namely remove the dummy countdown we had in the previous lessons:"
msgstr ""
"Після зберігання наших файлів і збирання нашої програми ми зможемо додати "
"наші власні зворотні відліки! Ми можемо додати останній штрих для "
"удосконалення інтерфейсу, а саме вилучити фіктивний зворотний відлік, який "
"ми мали у попередніх уроках:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:190
msgid ""
"Secondly now that we have an actual date to play around with, we can "
"calculate the time until said date:"
msgstr ""
"По-друге, тепер, коли у нас є справжня дата, ми можемо обчислити час до цієї "
"дати:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:194
msgid ""
"And thirdly increase the window size so that we have more room for our new "
"cards:"
msgstr ""
"І по-третє, збільшуємо розмір вікна, щоб у нас було місце для наших нових "
"карток:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:198
msgid "Much nicer."
msgstr "Набагато краще."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:209
msgid ""
"![Screenshot of the application with four example cards](addedKountdowns."
"webp)"
msgstr ""
"![Знімок вікна програми з чотирма картками-прикладами](addedKountdowns.webp)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:0
msgid "Setting up and getting started"
msgstr "Налаштовування і перші кроки"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:0
msgid "Getting ready to create our first Kirigami application\n"
msgstr "Готуємося до створення нашої першої програми Kirigami\n"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:11
msgid "Installing Kirigami"
msgstr "Встановлення Kirigami"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:13
msgid ""
"Before getting started, we will need to install Kirigami on our machine. "
"There are three ways to do so:"
msgstr ""
"Перш ніж почати, нам потрібно встановити Kirigami у нашій машині. Існує три "
"способи зробити це:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:15
msgid ""
"[Installing Kirigami from the repositories in your Linux distribution]"
"(#linux)"
msgstr ""
"[Встановлення Kirigami зі сховищ пакунків у вашому дистрибутиві Linux]"
"(#linux)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:16
msgid "[Using kde-builder](#kde-builder)"
msgstr "[Користування kde-builder](#kde-builder)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:17
msgid "[Installing Kirigami with Craft](#craft)"
msgstr "[Встановлення Kirigami за допомогою Craft](#craft)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:19
msgid "Installing Kirigami from the repositories in your Linux distribution"
msgstr "Встановлення Kirigami зі сховищ пакунків у вашому дистрибутиві Linux"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:21
msgid ""
"We need a C++ compiler, Qt development packages, and Kirigami. Open a "
"terminal application and run one of the following, depending on which Linux "
"distribution you are using:"
msgstr ""
"Нам знадобиться компілятор C++, пакунки для розробки Qt та Kirigami. "
"Відкрийте програму-термінал і віддайте одну з вказаних нижче команд, залежно "
"від дистрибутива Linux, яким ви користуєтеся:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:29
msgid ""
"Further information for other distributions can be found [here](/docs/"
"getting-started/building/help-dependencies)."
msgstr ""
"Подальші відомості для інших дистрибутивів наведено [тут](/docs/getting-"
"started/building/help-dependencies)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:31
msgid "Using kde-builder"
msgstr "Користування kde-builder"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:33
msgid ""
"[Set up your development environment with kde-builder](/docs/getting-started/"
"building/kde-builder-setup/). That will give you the necessary development "
"tools and underlying libraries, and build the KDE Frameworks from scratch."
msgstr ""
"[Налаштуйте ваше середовище розробки за допомогою kde-builder](/docs/getting-"
"started/building/kde-builder-setup/). Так ви отримаєте усі потрібні для "
"розробки інструменти і базові бібліотеки, а також зібрані KDE Frameworks з "
"нуля."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:35
msgid ""
"Create a folder `~/kde/src/kirigami-tutorial`. In that folder you will place "
"the source code files from this tutorial."
msgstr ""
"Створіть теку `~/kde/src/kirigami-tutorial`. У цій теці зберігатимуться "
"файли початкового коду з цього підручника."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:37
msgid "Add the following at the end of your `~/.config/kde-builder.yaml`:"
msgstr "Додайте таке наприкінці вашого файла `~/.config/kde-builder.yaml`:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:44
msgid "⏳ With kdesrc-build..."
msgstr "⏳ За допомогою kdesrc-build…"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:46
msgid ""
"<details>\n"
"<summary>Click here to know how this was done with kdesrc-build</summary></"
"br>\n"
msgstr ""
"<details>\n"
"<summary>Натисніть, щоб дізнатися про те, як це можна зробити за допомогою "
"kdesrc-build</summary></br>\n"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:49
msgid ""
"This step used to be done by writing to `~/.config/kdesrc-buildrc` instead "
"with a different syntax:"
msgstr ""
"Цей крок виконується записуванням до `~/.config/kdesrc-buildrc` із іншими "
"синтаксисом:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:62
msgid "Installing Kirigami with Craft"
msgstr "Встановлення Kirigami за допомогою Craft"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:64
msgid ""
"KDE has a custom tool to easily install most of its libraries and programs: "
"**Craft**. It can be used to install Kirigami on [Linux](https://community."
"kde.org/Craft/Linux), [FreeBSD](https://community.kde.org/"
"Guidelines_and_HOWTOs/Build_from_source/FreeBSD), [Windows](https://"
"community.kde.org/Guidelines_and_HOWTOs/Build_from_source/Windows), [Android]"
"(https://community.kde.org/Craft/Android) and [macOS](https://community.kde."
"org/Guidelines_and_HOWTOs/Build_from_source/Mac)."
msgstr ""
"У KDE передбачено нетиповий інструмент для полегшення встановлення більшості "
"бібліотек і програм: **Craft**. Ним можна скористатися для встановлення "
"Kirigami у [Linux](https://community.kde.org/Craft/Linux), [FreeBSD](https://"
"community.kde.org/Guidelines_and_HOWTOs/Build_from_source/FreeBSD), [Windows]"
"(https://community.kde.org/Guidelines_and_HOWTOs/Build_from_source/Windows), "
"[Android](https://community.kde.org/Craft/Android) та [macOS](https://"
"community.kde.org/Guidelines_and_HOWTOs/Build_from_source/Mac)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:66
msgid ""
"You will need to follow the [setup instructions for Craft](https://community."
"kde.org/Craft). By the end of the setup, you should have run an environment "
"setup file (`craftenv.ps1` or `craftenv.sh`), which will give you a terminal "
"shell where you will be compiling your Kirigami application."
msgstr ""
"Вам слід виконати [настанови зі встановлення для Craft](https://community."
"kde.org/Craft). Наприкінці налаштовування вам слід запустити файл "
"налаштовування середовища (`craftenv.ps1` або `craftenv.sh`), який надасть у "
"ваше розпорядження оболонку термінала, у якій ви збиратимете вашу програму "
"Kirigami."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:68
msgid "After that, you may simply run the following on a terminal:"
msgstr "Після цього ви можете просто віддати таку команду у терміналі:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:74
msgid ""
"If you close your terminal, you can simply run the environment setup file "
"again to compile your app."
msgstr ""
"Якщо ви закриєте термінал, ви можете просто ще раз запустити файл "
"налаштовування середовища, щоб зібрати вашу програму."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:76
msgid "Project structure"
msgstr "Структура проєкту"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:78
msgid ""
"While there are tools that can easily set up our files, we are going to "
"create them manually. This will let us better understand the pieces that are "
"going to make up our new application."
msgstr ""
"Хоча існують інструменти, за допомогою яких можна просто налаштувати наші "
"файли, ми створимо їх вручну. Це надасть нам змогу краще зрозуміти частини, "
"з яких буде створено нашу нову програму."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:80
msgid ""
"First we create our project folder (you can use the commands below). We are "
"going to call ours `kirigami-tutorial/`."
msgstr ""
"Спочатку ми створимо теку нашого проєкту (ви можете скористатися наведеними "
"нижче командами). Назвемо цю теку `kirigami-tutorial/`."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:92
msgid ""
"Within this folder we are going to create a `src/` folder and `CMakeLists."
"txt`. It is generally considered good practice to place all our main C++ "
"code files in a `src/` folder. We also put the `Main.qml` file in it since "
"it will be run together with the executable."
msgstr ""
"У цій теці ми створимо теку `src/` і файл `CMakeLists.txt`. Зазвичай, "
"вважається за правило розташовувати усі файли основного коду C++ у теці `src/"
"`. Ми також збережемо у ньому файл `Main.qml`, оскільки його буде запущено "
"разом із виконуваним файлом."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:108
msgid ""
"In case you want to automatically build the project with kde-builder, custom "
"module name should be the same as the project root folder (in our case it "
"will be \"kirigami-tutorial\"), otherwise you would need to customize the "
"`source-dir` or `dest-dir` for the module. We will assume the path to your "
"`main.cpp` will be `~/kde/src/kirigami-tutorial/src/main.cpp`."
msgstr ""
"Якщо ви хочете автоматично збирати проєкт за допомогою kde-builder, нетипова "
"назва модуля має бути такою, як назва кореневої теки проєкту (у нашому "
"випадку, це буде «kirigami-tutorial»). Якщо це не так, вам слід змінити "
"`source-dir` або `dest-dir` для модуля. Ми припускатимемо, що шляхом до "
"вашого `main.cpp` буде `~/kde/src/kirigami-tutorial/src/main.cpp`."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:112
msgid "Main.qml"
msgstr "Main.qml"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:116
msgid "Here's where we will be handling our application's frontend."
msgstr "Тут ми працюватимемо із оболонкою нашої програми."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:118
msgid ""
"If you know some Javascript, then much of QML will seem familiar to you "
"(though it does have its own peculiarities). [Qt's documentation](https://"
"doc.qt.io/qt-6/qtqml-index.html) has an extensive amount of material on this "
"language if you feel like trying something on your own. Over the course of "
"these tutorials we will be focusing much of our attention on our QML code, "
"where we can use Kirigami to get the most out of it."
msgstr ""
"Якщо ви трохи знаєте Javascript, більша частина QML видасться вам знайомою "
"(хоча тут є свої особливості). У [документації до Qt](https://doc.qt.io/qt-6/"
"qtqml-index.html) є багато матеріалу щодо цієї мови, якщо вам захочеться "
"спробувати щось самостійно. Вивчаючи курс підручника, ми зосередимося на "
"нашому коді QML, де ми використовуватимемо Kirigami, щоб отримати "
"максимальні переваги від цього."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:120
msgid ""
"For now, let's focus on `Main.qml`. First we [import](https://doc.qt.io/qt-6/"
"qtqml-syntax-imports.html) a number of important modules:"
msgstr ""
"Тепер зосередимо увагу на `Main.qml`. Спочатку ми [імпортуємо](https://doc."
"qt.io/qt-6/qtqml-syntax-imports.html) декілька важливих модулів:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:122
msgid ""
"[QtQuick](https://doc.qt.io/qt-6/qtquick-index.html), the standard library "
"used in QML applications."
msgstr ""
"[QtQuick](https://doc.qt.io/qt-6/qtquick-index.html), стандартну бібліотеку, "
"яку використовують програми QML."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:123
msgid ""
"[QtQuick Controls](https://doc.qt.io/qt-6/qtquickcontrols-index.html), which "
"provides a number of standard controls we can use to make our applications "
"interactive."
msgstr ""
"[QtQuick Controls](https://doc.qt.io/qt-6/qtquickcontrols-index.html), які "
"забезпечують роботу декількох стандартних засобів керування, якими ми можемо "
"скористатися для того, щоб зробити наші програми інтерактивними."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:124
msgid ""
"[QtQuick Layouts](https://doc.qt.io/qt-6/qtquicklayouts-index.html), which "
"provides tools for placing components within the application window."
msgstr ""
"[QtQuick Layouts](https://doc.qt.io/qt-6/qtquicklayouts-index.html), які "
"містять інструменти для розташовування компонентів у вікні програм."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:125
msgid ""
"[Kirigami](docs:kirigami2), which provides a number of components suited for "
"creating applications that work across devices of different shapes and sizes."
msgstr ""
"[Kirigami](docs:kirigami2), яка містить декілька компонентів, які "
"пристосовано для створення програм, що можуть працювати на різних пристроях "
"і екранах з різними формами та розмірами."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:129
msgid ""
"Putting the QtQuick Controls and Kirigami imports into separate namespaces "
"using the `as` keyword is a best practice that ensures no components with "
"the same name can conflict. You might see different names for QtQuick "
"Controls in the wild, such as \"QQC\" or \"QQC2\". We will be using "
"\"Controls\" in this tutorial for clarity."
msgstr ""
"Розташування імпортування елементів керування QtQuick і Kirigami в окремих "
"просторах назв за допомогою ключового слова `as` є найкращим способом, який "
"забезпечує усування можливих конфліктів між компонентами з однаковими "
"назвами. У різних програмах ви можете бачити різні назви для елементів "
"керування QtQuick, зокрема «QQC» або «QQC2». У цьому підручнику ми "
"використовуватимемо термін «Controls»."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:133
msgid ""
"We then come to our base element, [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow), which provides some basic features needed for "
"all Kirigami applications. This is the window that will contain each of our "
"pages, the main sections of our UI."
msgstr ""
"Далі, ми перейдемо до нашого базового елемента, [Kirigami.ApplicationWindow]"
"(docs:kirigami2;ApplicationWindow), який надає певні базові можливості, "
"потрібні для усіх програм Kirigami. Це вікно, які міститиме усі наші "
"сторінки, основні розділи нашого інтерфейсу користувача."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:135
msgid ""
"We then set the window's `id` property to \"root\". IDs are useful because "
"they let us uniquely reference a component, even if we have several of the "
"same type."
msgstr ""
"Далі, ми встановимо для властивості `id` вікна значення 'root'. "
"Ідентифікатори є корисними, оскільки за їх допомогою ми отримуємо унікальну "
"прив'язку до компонента, навіть коли у нас є декілька компонентів одного "
"типу."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:137
msgid ""
"We also set the window `title` property to \"Hello World\". You'll notice "
"that we have wrapped our \"Hello World\" string in a function called "
"`i18nc()`, where we detail the context of the string as well as the string "
"itself."
msgstr ""
"Ми також встановимо для властивості вікна `title` значення «Hello World». Ми "
"зауважимо, що рядок «Hello World» огорнуто у функцію із назвою `i18nc()`. У "
"цій функції ми деталізуємо контекст рядка, а також вказуємо сам рядок."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:141
msgid ""
"[i18n()](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Translatable_Code_Using_i18n()) functions make your app more easily "
"translatable, as they return a version of the provided string in the user's "
"language (as long as your app has been localised for that language). While "
"an English user might see our window title as \"Hello World\", a Spanish "
"user would see \"Hola Mundo\"."
msgstr ""
"Функції [i18n()](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Translatable_Code_Using_i18n()) роблять вашу програму придатною до "
"перекладу, оскільки вони повертають версію переданого їм рядка мовою "
"користувача (якщо вашу програму перекладено відповідною мовою). Користувач "
"із англійською мовою інтерфейсу бачитиме заголовок вікна «Hello World», а "
"користувач із іспанською мовою інтерфейсу — «Hola Mundo»."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:143
msgid ""
"[i18nc()](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Adding_Context_with_i18nc()) builds on the `i18n()` function by "
"allowing developers to provide some context to translators working on the "
"app. Here we clarify that the UI component is the title of the application "
"window, so we have included the string \"@title:window\" before \"Hello World"
"\". See the [Ki18n Programmer's guide](https://api.kde.org/frameworks/ki18n/"
"html/prg_guide.html#good_ctxt) for more details."
msgstr ""
"[`i18nc()`](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Adding_Context_with_i18nc.28.29) побудовано на основі функції `i18n()`. "
"Ця функція уможливлює для розробників надання перекладачам, які "
"працюватимуть над перекладом програми, певного контексту. Тут ми прояснюємо, "
"що компонент інтерфейсу користувача є заголовком вікна програми, тому ми "
"включили рядок «@title:window» перед «Hello World». Див. [підручник "
"програміста щодо ki18n](https://api.kde.org/frameworks/ki18n/html/prg_guide."
"html#good_ctxt), щоб дізнатися більше."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:147
msgid ""
"We then set the first page of our page stack. Most Kirigami applications are "
"organised as a stack of pages, each page containing related components "
"suited to a specific task. For now, we are keeping it simple, and sticking "
"to a single page. [pageStack](docs:kirigami2;AbstractApplicationWindow::"
"pageStack) is an initially empty stack of pages provided by [Kirigami."
"ApplicationWindow](docs:kirigami2;ApplicationWindow), and with `pageStack."
"initialPage: Kirigami.Page {...}` we set the first page presented upon "
"loading the application to a [Kirigami.Page](docs:kirigami2;Page). This page "
"will contain all our content."
msgstr ""
"Далі, ми визначаємо першу сторінку нашого стосу сторінок. Більшість програм "
"Kirigami упорядковано як стос сторінок — кожну сторінку призначено для "
"виконання окремого завдання. У нашому прикладі ми створимо простий стос, "
"який складатиметься із однієї сторінки. [pageStack](docs:kirigami2;"
"AbstractApplicationWindow::pageStack) є початково порожнім стосом сторінок, "
"роботу якого забезпечує [Kirigami.ApplicationWindow](docs:kirigami2;"
"ApplicationWindow), і за допомогою `pageStack.initialPage: Kirigami.Page{...}"
"` ми задаємо для першої сторінки, яку буде показано після завантаження "
"програми, значення [Kirigami.Page](docs:kirigami2;Page). Відповідна сторінка "
"міститиме усі наші дані."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:149
msgid ""
"Finally, we include in our page a [Controls.Label](docs:qtquickcontrols;"
"QtQuick.Controls.Label) that lets us place text on our page. We use `anchors."
"centerIn: parent` to center our label horizontally and vertically within our "
"parent element. In this case, the parent component of our label is [Kirigami."
"Page](docs:kirigami2;Page). The last thing we need to do is set its text: "
"`text: i18n(\"Hello World!\")`."
msgstr ""
"Нарешті, ми включаємо до нашої сторінки [Controls.Label](docs:"
"qtquickcontrols;QtQuick.Controls.Label), яка надасть нам змогу розмістити на "
"нашій сторінці текст. Ми використовуємо `anchors.centerIn: parent` для "
"центрування нашої мітки горизонтально і вертикально у нашому батьківському "
"елементі. У цьому випадку батьківським для компонента нашої мітки буде "
"компонент [Kirigami.Page](docs:kirigami2;Page). Нарешті, ми маємо встановити "
"для мітки текст: `text: i18n(\"Hello World!\")`."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:151
msgid "org.kde.tutorial.desktop"
msgstr "org.kde.tutorial.desktop"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:153
msgid ""
"The primary purpose of [Desktop Entry files](https://specifications."
"freedesktop.org/desktop-entry-spec/latest/) is to show your app on the "
"application launcher on Linux. Another reason to have them is to have window "
"icons on Wayland, as they are required to tell the compositor \"this window "
"goes with this icon\"."
msgstr ""
"Основним призначенням [файлів стільничних записів](https://specifications."
"freedesktop.org/desktop-entry-spec/latest/) є показ вашої програми у засобі "
"запуску програм у Linux. Іншою причиною їхнього існування є визначення "
"піктограм вікна у Wayland, оскільки вони потрібні для надсилання "
"повідомлення засобу композиції «піктограмою цього вікна є така»."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:155
msgid ""
"It must follow a [reverse-DNS naming scheme](https://en.wikipedia.org/wiki/"
"Reverse_domain_name_notation) followed by the `.desktop` extension such as "
"`org.kde.tutorial.desktop`:"
msgstr ""
"Має виконуватися [схема іменування зворотного DNS](https://en.wikipedia.org/"
"wiki/Reverse_domain_name_notation) з наступним суфіксом назви `.desktop`, "
"наприклад `org.kde.tutorial.desktop`:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:161
msgid ""
"Window and taskbar icons will work in a Wayland session only if apps' "
"desktop files are placed in `~/.local/share/applications` or `/usr/share/"
"applications`. To get icons working in this tutorial, either copy the app's "
"desktop file there or switch to a development session as instructed in [kde-"
"builder tutorial](/docs/getting-started/building/kde-builder-compile). Some "
"KDE applications might have working icons if they were already installed on "
"the system."
msgstr ""
"Піктограми вікна та панелі завдань працюватимуть у сеансі Wayland, лише якщо "
"файл desktop програми зберігаються у `~/.local/share/applications` або `/usr/"
"share/applications`. Щоб працювали піктограми з цього розділу підручника, "
"або скопіюйте файл desktop до одного з цих каталогів, або перемкніться на "
"сеанс розробника, як описано у [підручнику з kde-builder](/docs/getting-"
"started/building/kde-builder-compile). Піктограми деяких програм KDE "
"працюватимуть, якщо їх вже встановлено у системі."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:165
msgid "CMakeLists.txt"
msgstr "CMakeLists.txt"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:167
msgid ""
"`CMakeLists.txt` files are needed to use KDE's build system of choice, "
"[CMake](https://cmake.org/). Our `kirigami-tutorial/CMakeLists.txt` file is "
"going to specify some of our application's characteristics. It also includes "
"some of the dependencies we need in order to compile our project."
msgstr ""
"Для використання вибраної системи збирання KDE, [CMake](https://cmake.org/), "
"потрібні файли `CMakeLists.txt`. Наш файл `kirigami-tutorial/CMakeLists.txt` "
"має вказати певні характеристики нашої програми. До цього файла також "
"включено записи певних залежностей, які нам потрібні, щоб зібрати наш проєкт."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:171
msgid ""
"The `CMakeLists.txt` defines how to build your projects. Most of the content "
"here is just to bootstrap your project. You can read a line-by-line, in-"
"depth explanation of what this CMakeLists file does [here](/docs/getting-"
"started/kirigami/advanced-understanding_cmakelists/)."
msgstr ""
"CMakeLists.txt визначає, як збирати ваші проєкти. Більшість даних тут "
"призначено лише для збирання з нуля вашого проєкту. Порядкове глибинне "
"пояснення дій, які описано у цьому файлі CMakeLists, наведено [тут](/docs/"
"getting-started/kirigami/advanced-understanding_cmakelists/)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:173
msgid ""
"The most important thing to keep in mind is that the C++ build dependencies "
"of Qt and KDE Frameworks are managed with [find_package()](https://cmake.org/"
"cmake/help/latest/command/find_package.html) and QML runtime dependencies "
"are managed with [ecm_find_qml_module()](https://api.kde.org/ecm/module/"
"ECMFindQmlModule.html). You will have to modify these lines and include any "
"additional components that you decide to use during the development of your "
"application."
msgstr ""
"Найважливішим, про що слід пам'ятати, є те, що залежності збирання для C++ "
"від Qt і KDE Frameworks керуються за допомогою [find_package()](https://"
"cmake.org/cmake/help/latest/command/find_package.html) і динамічні "
"залежності QML є керованими за допомогою [ecm_find_qml_module()](https://api."
"kde.org/ecm/module/ECMFindQmlModule.html). У процесі розробки вашої програми "
"вам слід вносити зміни до цих рядків і включати усі додаткові компоненти, "
"які ви вирішите використовувати."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:175
msgid ""
"The line with `add_subdirectory(src)` points CMake to the `kirigami-tutorial/"
"src/` directory, where our source code is located."
msgstr ""
"Рядок з `add_subdirectory(src)` вказує CMake каталог `kirigami-tutorial/src/"
"`, де зберігається наш початковий код."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:177
msgid ""
"The line with `install()` tells CMake where to install the desktop file."
msgstr ""
"Рядок із `install()` повідомляє CMake, куди слід встановити файл desktop."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:179
msgid ""
"Let's delve into the `kirigami-tutorial/src/CMakeLists.txt` file in there."
msgstr ""
"Розгляньмо докладніше файл `kirigami-tutorial/src/CMakeLists.txt` у цьому "
"каталозі."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:183
msgid "This file consists of five steps:"
msgstr "Робота цього файла складається з п'яти кроків:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:185
msgid "create an executable"
msgstr "створення виконуваного файла"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:186
msgid "change the executable into a QML module that accepts QML files"
msgstr "заміна виконуваного файла на модуль QML, який прийматиме файли QML"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:187
msgid "add C++ and QML files to the executable"
msgstr "додавання файлів C++ і QML до виконуваного файла"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:188
msgid "link the libraries necessary for the executable to run"
msgstr ""
"компонування з бібліотеками, які потрібні для запуску виконуваного файла"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:189
msgid "install the executable to the right place"
msgstr "встановлення виконуваного файла до належного місця"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:191
msgid ""
"Next time you need to add more QML files, add them to the existing "
"`ecm_target_qml_sources()` call. C++ files that use the [QML_ELEMENT]"
"(https://doc.qt.io/qt-6/qtqml-cppintegration-definetypes.html) keyword which "
"we will see later in the tutorial can be added using `target_sources()`."
msgstr ""
"Наступного разу коли ви захочете додати файли QML, додайте їх до наявного "
"виклику `ecm_target_qml_sources()`. Файли C++, у яких використано ключове "
"слово [QML_ELEMENT](https://doc.qt.io/qt-6/qtqml-cppintegration-definetypes."
"html), яке ми побачимо пізніше у підручнику, можна додати за допомогою "
"`target_sources()`."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:193
msgid ""
"Now that CMake has been taken care of, let's look at the files we are going "
"to spend the majority of our time working with."
msgstr ""
"Тепер, коли ми подбали про CMake, погляньмо на файли, з якими ми маємо намір "
"працювати переважний час під час розробки програми."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:197
msgid ""
"The file `kirigami-tutorial/src/main.cpp` handles the \"business logic\" of "
"our application. C++ is handy because it is flexible and fast, even if it is "
"more involved than other programming languages."
msgstr ""
"Файл `kirigami-tutorial/src/main.cpp` обробляє «ділову логіку» нашої "
"програми. Мова C++ є зручною для цього, оскільки вона є гнучкою і швидкою, "
"хоча і потребує більше знань, ніж деякі інші мови програмування."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:199
msgid ""
"It also functions as the entrypoint to our application. The two parts of our "
"project, the backend and the user interface, are both set up and started "
"here."
msgstr ""
"Цей файл є також вхідним пунктом нашої програми. Тут налаштовуються і "
"запускаються обидві частини нашого проєкту — модуль обробки і інтерфейс "
"користувача."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:203
msgid ""
"For now, we don't need to go into too much detail regarding what our `main."
"cpp` code does, but its role will grow significantly more important once we "
"decide to add more complex functionality to our application in the future."
msgstr ""
"До цього моменту у нас не було потреби заглиблюватися у подробиці дій, які "
"виконує код нашого `main.cpp`, але його роль значно зросте, якщо ми вирішимо "
"додати складні функціональні можливості до нашої програми у майбутньому."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:205
msgid "Theming on Windows"
msgstr "Теми у Windows"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:207
msgid ""
"<details>\n"
"<summary>Click here to read more</summary>\n"
msgstr ""
"<details>\n"
"<summary>Натисніть тут, щоб дізнатися більше</summary>\n"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:210
msgid ""
"The application needs to set its icon theme, QStyle, and QtQuick Controls "
"style to Breeze in order to show up on Windows. To learn more about it, see "
"[Figuring out main.cpp](/docs/getting-started/kirigami/advanced-maincpp/)."
msgstr ""
"Програма має встановити власну тему піктограм, QStyle та стиль засобів "
"керування QtQuick у значення «Breeze», щоб інтерфейс було показано у "
"Windows. Щоб дізнатися більше про це, див. [Розбираємося з main.cpp](/docs/"
"getting-started/kirigami/advanced-maincpp/)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:216
msgid ""
"If you want to get ahead, you can read more about how this `main.cpp` works "
"in [Figuring out main.cpp](/docs/getting-started/kirigami/advanced-maincpp)."
msgstr ""
"Якщо ви вирішите продовжити, ви можете дізнатися більше щодо того, як працює "
"цей `main.cpp`, з [цієї сторінки](/docs/getting-started/kirigami/advanced-"
"maincpp)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:218
msgid ""
"If you want to see a few ways on how the C++ code can be improved, like "
"using [KAboutData](docs:kcoreaddons;KAboutData) for translatable application "
"metadata, be sure to check our [KXmlGui tutorial](/docs/getting-started/"
"kxmlgui)."
msgstr ""
"Якщо вам потрібні ще декілька способів удосконалення коду C++, зокрема "
"використання [KAboutData](docs:kcoreaddons;KAboutData) для придатних до "
"перекладу метаданих програми, ознайомтеся із нашим [підручником з KXmlGui](/"
"docs/getting-started/kxmlgui)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:220
msgid "For now, the part that interests us is this line:"
msgstr "Зараз нас цікавитиме цей рядок:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:226
msgid ""
"The first argument is the URI set in `kirigami-tutorial/src/CMakeLists.txt`, "
"and the second argument is the name of the QML module we want to use "
"(`Main`, coming from the name of our `Main.qml` file, which needs to start "
"with an uppercase letter)."
msgstr ""
"Першим аргументом є адреса, яку встановлено у `kirigami-tutorial/src/"
"CMakeLists.txt`, а другим аргументом є назва модуля QML, яким ми хочемо "
"скористатися (`Main`, що походить від назви нашого файла `Main.qml`, яка має "
"починатися з великої літери)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:228
msgid "The old method"
msgstr "Старий метод"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:230
msgid ""
"<details>\n"
"<summary>You might encounter this alternative way to load QML files in real "
"code!</summary>\n"
"<br>\n"
msgstr ""
"<details>\n"
"<summary>Ви можете зустрітися із цим альтернативним способом завантаження "
"файлів QML у справжньому коді!</summary>\n"
"<br>\n"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:234
msgid ""
"The old method of loading QML files had some disadvantages and after Qt6 it "
"became excessively verbose:"
msgstr ""
"Старий метод завантаження файлів QML мав недоліки, і після Qt6 він став "
"суттєво багатослівнішим:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:240
msgid ""
"This [Qt resource URI](https://doc.qt.io/qt-6/resources.html) above follows "
"the pattern `<resource_prefix><import_URI><optional_QML_dir><file>`. In this "
"case:"
msgstr ""
"Ця [адреса ресурсу Qt](https://doc.qt.io/qt-6/resources.html) вище "
"записується у такому шаблоні: "
"`<префікс_ресурсу><адреса_імпортування><необов'язковий_каталог_QML><файл>`. "
"У цьому випадку:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:242
msgid "resource prefix = default / in Qt5, /qt/qml in Qt6"
msgstr "префікс ресурсу = типовий / у Qt5, /qt/qml у Qt6"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:243
msgid "import URI = /org/kde/tutorial, which matches the URI org.kde.tutorial"
msgstr ""
"адреса імпортування URI = /org/kde/tutorial, що відповідає адресі org.kde."
"tutorial"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:244
msgid ""
"optional QML dir = /qml, necessary if the QML files are stored in a "
"directory called qml/"
msgstr ""
"необов'язковий каталог QML = /qml, потрібен, якщо файли QML зберігаються у "
"каталозі із назвою qml/"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:245
msgid "file = the QML file"
msgstr "file = файл QML"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:251
msgid "Compiling and installing the application"
msgstr "Збирання і встановлення програми"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:253
msgid ""
"We are almost at the finish line. The last thing we need to do is build and "
"run our application. Doing so will depend on which platform you are on."
msgstr ""
"Ми наблизилися до фінішу. Наприкінці процесу нам слід зібрати і запустити "
"нашу програму. При цьому послідовність дій залежить від програмної платформи."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:255
msgid "Linux or FreeBSD"
msgstr "Linux або FreeBSD"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:257
msgid "Compiling with kde-builder"
msgstr "Збирання за допомогою kde-builder"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:259
msgid ""
"Make sure you have followed the instructions in [Using kde-builder](#kde-"
"builder)."
msgstr ""
"Виконайте настанови з розділу [користування kde-builder](#kde-builder)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:261
msgid ""
"Compile the necessary build dependencies with kde-builder, then compile "
"`kirigami-tutorial` by running the following commands in a terminal:"
msgstr ""
"Зберіть потрібні для збирання залежності за допомогою kde-builder, потім "
"зберіть `kirigami-tutorial` за допомогою таких команд у терміналі:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:268
msgid "Compiling manually"
msgstr "Збирання вручну"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:270
msgid ""
"Change directories to the project's root folder, then run the following "
"command in a terminal:"
msgstr ""
"Перейдіть до кореневої теки проєкту, а потім віддайте таку команду у "
"терміналі:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:278
msgid ""
"The program will be installed to `~/.local/bin` and its desktop entry to `~/."
"local/share/applications`."
msgstr ""
"Програму буде встановлено до `~/.local/bin`, а її стільничний запис — до `~/."
"local/share/applications`."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:280
msgid "Windows"
msgstr "Windows"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:282
msgid ""
"If you are compiling your project on Windows after having set up [Craft]"
"(#craft), CMake should automatically detect the right compiler:"
msgstr ""
"Якщо ви збираєте ваш проєкт у Windows після налаштовування [Craft](#craft), "
"CMake має автоматично визначити належний компілятор:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:291
msgid ""
"Depending on how you installed the compiler, you might need to specify a "
"CMake Generator for the first step, depending on whether you are using "
"Visual Studio (msvc) or MinGW (make) to compile your projects."
msgstr ""
"Залежно від способу встановлення компілятора, вам, можливо, на першому кроці "
"слід вказати породжувач CMake, залежно від того, користуєтеся ви для "
"збирання ваших проєктів Visual Studio (msvc) чи MinGW (make)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:293
msgid ""
"If Visual Studio, depending on the compiler you chose to install, it might "
"be:"
msgstr ""
"Якщо це Visual Studio, залежно від компілятора, який ви встановите, це може "
"бути:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:299
msgid "Or:"
msgstr "Або:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:305
msgid "If MinGW:"
msgstr "Якщо MinGW:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:313
msgid "In both cases, the program will be installed to `C:\\CraftRoot\\bin`."
msgstr "В обох випадках програму буде встановлено до `C:\\CraftRoot\\bin`."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:315
msgid ""
"If you ever get in doubt as to the name of the compiler that should be used "
"in the `cmake` call, run:"
msgstr ""
"Якщо ви раптом засумніваєтеся у назві компілятора, який має бути використано "
"при виклику `cmake`, віддайте таку команду:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:321
msgid "It will list all available generators."
msgstr "Буде показано список усіх доступних засобів створення даних."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:325
msgid "You can then run the `kirigami-hello` program with:"
msgstr "Далі, ви можете запустити програму `kirigami-hello` такою командою:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:328
msgid "On Linux, manually"
msgstr "У Linux, вручну"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:329
msgid "With kde-builder"
msgstr "За допомогою kde-builder"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:330
msgid "With kdesrc-build"
msgstr "За допомогою kdesrc-build"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:331
msgid "On Windows"
msgstr "У Windows"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:334
msgid ""
"Voilà! Now you will see your very first Kirigami app appear before your very "
"own eyes."
msgstr ""
"Ось і все! Тепер ви бачите перед собою вашу першу програму Kirigami вашими "
"власними очима."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:336
msgid "![Screenshot of the generated Kirigami application](hello-kworld.webp)"
msgstr "![Знімок вікна створеної програми Kirigami](hello-kworld.webp)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:338
msgid ""
"To run the new QML application in mobile mode, you can use "
"`QT_QUICK_CONTROLS_MOBILE=1`:"
msgstr ""
"Щоб запустити нову програму QML у режимі мобільного пристрою, ви можете "
"скористатися `QT_QUICK_CONTROLS_MOBILE=1`:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:344
msgid ""
"If you have compiled the project manually with CMake and for some reason "
"you'd like to uninstall the project, you can run:"
msgstr ""
"Якщо ви зібрали проєкт вручну за допомогою CMake і з якихось причин хочете "
"вилучити встановлений проєкт, ви можете скористатися такою командою:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:352
msgid ""
"Next time you want to create the files and folders needed, you can use "
"[KAppTemplate](https://apps.kde.org/kapptemplate) or [KDevelop](https://apps."
"kde.org/kdevelop/) to automatically generate a suitable project to start "
"from. They are available from each major distribution's repositories. These "
"applications will also generate files containing [AppStream](https://www."
"freedesktop.org/software/appstream/docs/sect-Metadata-Application.html) "
"metadata and a `.desktop` file that contains information about how the "
"application should be displayed in a linux application launcher."
msgstr ""
"Наступного разу, коли створюватимете потрібні файли і теки, можете "
"скористатися [KAppTemplate](https://apps.kde.org/kapptemplate) або [KDevelop]"
"(https://apps.kde.org/kdevelop/) для автоматичного створення відповідної "
"початкової версії проєкту. Ці програми є у сховищах усіх основних "
"дистрибутивів. Крім того, ці програми створюють файли, що містять метадані "
"[AppStream](https://www.freedesktop.org/software/appstream/docs/sect-"
"Metadata-Application.html) і файл `.desktop`, який містить дані щодо того, "
"як слід показувати пункт програми у засобах запуску програм Linux."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:354
msgid ""
"Thanks to the magic of CMakeLists, you can also use IDEs such as KDevelop or "
"[QtCreator](https://www.qt.io/product/development-tools) to develop this "
"application within a comfortable environment with minimal effort."
msgstr ""
"Завдяки магії CMakeLists, ви також можете скористатися комплексними "
"середовищами розробки, зокрема KDevelop або [QtCreator](https://www.qt.io/"
"product/development-tools) для подальшого написання програми у комфортному "
"середовищі із мінімальними зусиллями."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:0
msgid "Layouts, ListViews, and Cards"
msgstr "Компонування, панелі списків і картки"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:0
msgid "Figuring out the different ways of placing things on a page"
msgstr "Розбираємося із різними способами розташовування елементів на сторінці"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:9
#: content/docs/getting-started/kirigami/style-typography/index.md:0
msgid "Laying out your content"
msgstr "Компонування ваших даних"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:11
msgid ""
"Now that we understand how pages work, it is time to add stuff to them. We "
"will be going through a number of important layout components and elements "
"that will be useful when designing our app."
msgstr ""
"Тепер, коли ми вже розуміємо, як працюють сторінки, час додати можливості до "
"них. Ми розглянемо декілька важливих компонентів та елементів компонування, "
"які будуть корисними при створенні дизайну нашої програми."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:13
msgid "By the end of this section you'll have a neat-looking app."
msgstr ""
"Наприкінці цього розділу ви матимете програму, яка виглядатиме лаконічно."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:15
msgid "ListViews"
msgstr "ListView"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:17
msgid ""
"If you've ever used [Discover](https://apps.kde.org/discover/), [NeoChat]"
"(https://apps.kde.org/neochat/), or Plasma's System Settings, you will have "
"come across a [ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html). "
"Quite simply, it lets you display data on a list."
msgstr ""
"Якщо ви колись користувалися [Discover](https://apps.kde.org/discover/), "
"[NeoChat](https://apps.kde.org/neochat/) або Системними параметрами Плазми, "
"ви вже бачили [ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html). "
"Доволі прості, ListView надають вам змогу показувати дані у форматі списку."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:30
msgid "That seems cryptic, but don't worry. Let's start from the beginning."
msgstr ""
"Це може здатися якимось шифром, але не переймайтеся. Розпочнімо з початку."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:32
msgid ""
"We add this component inside our [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) from the last tutorial."
msgstr ""
"Ми додаємо цей компонент до нашого [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) з останньої частини підручника."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:34
msgid ""
"We're using [Kirigami.CardsListView](docs:kirigami2;CardsListView), which is "
"a [ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html) that allows "
"us to easily display cards in a list. However, ListViews are made to show "
"data taken from a model - to automatically populate itself from a set of "
"data that we point it to. That's where the `model` property comes in: in "
"this example, it's pointing to `kountdownModel`."
msgstr ""
"Ми скористалися [Kirigami.CardsListView](docs:kirigami2;CardsListView). Це "
"[ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html), який надає нам "
"змогу просто показувати картки у форматі списку. Втім, ListView створено для "
"показу даних, які взято з моделі — для автоматичного заповнення списку "
"набором даних, які ми вказали. Ось тут нам стане у пригоді властивість "
"`model` — у нашому прикладі, вона вказує на `kountdownModel`."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:36
msgid "Model"
msgstr "Модель"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:43
msgid "Each ListElement is an element on the list, containing information"
msgstr "Кожне з ListElement є елементом списку, що містить дані"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:54
msgid ""
"We add our `kountdownModel` inside the [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow) from the last tutorial."
msgstr ""
"Ми додаємо нашу `kountdownModel` до [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow) з останньої частини підручника."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:56
msgid ""
"A model defines the way that a data entry is structured. Our "
"`kountdownModel` will consist of only one element for now. By looking at our "
"[ListElement](https://doc.qt.io/qt-6/qml-qtqml-models-listelement.html) "
"above, we can see how the data of our `kountdownModel` are structured: it "
"contains a name, a description, and a date. This isn't set in stone, and you "
"may have different sorts of data in your model. The first two are just "
"strings, and the third is a number we're using as a placeholder."
msgstr ""
"Модель визначає спосіб, у який структуровано запис даних. Зараз наша "
"`kountdownModel` складається лише з одного елемента. Структурування дані у "
"нашій `kountdownModel` можна бачити у нашому [ListElement](https://doc.qt.io/"
"qt-6/qml-qtqml-models-listelement.html): вони містять назву, опис і дату. Це "
"не жорстка структура, і у вашій моделі можуть бути інші типи даних. Перші "
"два елементи є лише рядками, а третій є числом, яким ми користуємося як "
"замінником."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:60
msgid ""
"Since QML is built on top of JavaScript, many of this language's features "
"are available for use in QML files. However, QML variables have to be "
"prefixed with `property`, unless it is inside a JS code block. You can read "
"more about it in [this page](https://doc.qt.io/qt-6/qtqml-javascript-topic."
"html)."
msgstr ""
"Оскільки QML побудовано на основі JavaScript, багатьма можливостями цієї "
"мови можна скористатися у файлах QML. Втім, до змінних QML слід додавати "
"префікс «property», якщо код не перебуває у блоці JS. Докладніше про це "
"можна дізнатися з [відповідної сторінки](https://doc.qt.io/qt-6/qtqml-"
"javascript-topic.html)."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:64
msgid ""
"Models are also useful in how they can be modified through the use of "
"several methods. Some important ones are:"
msgstr ""
"Крім того, моделі є корисними через те, як їх можна змінювати, "
"використовуючи декілька методів. Серед важливих методів такі:"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:65
msgid ""
"[ListModel.append(yourobject: jsobject)](https://doc.qt.io/qt-6/qml-qtqml-"
"models-listmodel.html#append-method) adds a JavaScript object (JSObject) "
"`yourobject` to the ListModel and places it after the last item in the "
"model. For this to happen correctly, you must provide a JSObject with the "
"correct properties and corresponding datatypes."
msgstr ""
"[ListModel.append(yourobject: jsobject)](https://doc.qt.io/qt-6/qml-qtqml-"
"models-listmodel.html#append-method) додає вказаний вами об'єкт JavaScript "
"(JSObject) до ListModel і розташовує його після останнього запису у моделі. "
"Щоб це відбувалося належним чином, вам слід надати JSObject із належними "
"властивостями і відповідними типами даних."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:66
msgid ""
"[ListModel.get(index: int)](https://doc.qt.io/qt-6/qml-qtqml-models-"
"listmodel.html#get-method) returns the JSObject at the index location you "
"provide."
msgstr ""
"[ListModel.get(index: int)](https://doc.qt.io/qt-6/qml-qtqml-models-"
"listmodel.html#get-method) повертає JSObject із наданим індексом "
"розташування."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:67
msgid ""
"[ListModel.remove(index: int, count: int)](https://doc.qt.io/qt-6/qml-qtqml-"
"models-listmodel.html#remove-method) removes the JSObject at the provided "
"`index` location, and as many after that index location as you put in "
"`count` (1 includes only the JSObject at the provided index)"
msgstr ""
"[ListModel.remove(index: int, count: int)](https://doc.qt.io/qt-6/qml-qtqml-"
"models-listmodel.html#remove-method) вилучає JSObject із наданим індексом "
"розташування і вказану кількість `count` об'єктів після нього (1 включає "
"лише JSObject із наданим індексом)"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:68
msgid ""
"[ListModel.set(index: int, yourobject: jsobject)](https://doc.qt.io/qt-6/qml-"
"qtqml-models-listmodel.html#set-method) changes the item at the provided "
"`index` location with the values provided in `yourobject`. Same rules as "
"with `append()`."
msgstr ""
"[ListModel.set(index: int, ваш_об'єкт: jsobject)](https://doc.qt.io/qt-6/qml-"
"qtqml-models-listmodel.html#set-method) замінює значення запису із наданим "
"індексом розташування значеннями наданого вами об'єкта "
"`yourobjectваш_об'єкт`. Ті самі правила, що і для `append()`."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:70
msgid "Delegates"
msgstr "Делегати"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:72
msgid ""
"While our `kountdownModel` contains the data that will be displayed, our "
"`kountdownDelegate` will handle how the data will be displayed in the "
"[ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html). For that we "
"use a [Kirigami.CardsListView](docs:kirigami2;CardsListView) designed to "
"display card-type delegates, and those delegates will be visually "
"represented by means of a [Kirigami.AbstractCard](docs:kirigami2;"
"AbstractCard)."
msgstr ""
"Хоча наша `kountdownModel` містить дані, які буде показано, наш "
"`kountdownDelegate` оброблятиме спосіб показу даних у [ListView](https://doc."
"qt.io/qt-6/qml-qtquick-listview.html). Для цього ми використовуємо [Kirigami."
"CardsListView](docs:kirigami2;CardsListView), який було розроблено для "
"показу делегатів типу карток, і ці делегати буде візуально відтворено за "
"допомогою [Kirigami.AbstractCard](docs:kirigami2;AbstractCard)."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:74
msgid ""
"Delegates automatically receive the properties of the [ListElements](https://"
"doc.qt.io/qt-6/qml-qtqml-models-listelement.html) that we have specified in "
"our model. We can therefore just refer to their `name`, `description`, and "
"`date` properties as if they were conventional variables within our delegate."
msgstr ""
"Делегати автоматично отримують властивості [ListElements](https://doc.qt.io/"
"qt-6/qml-qtqml-models-listelement.html), які вказано у нашій моделі. Тому ми "
"можемо просто посилатися на їхні властивості `name`, `description` і `date` "
"так, наче це була б звичайні змінні у нашому делегаті."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:76
msgid "Building the delegate card"
msgstr "Побудова делегованої картки"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:78
msgid ""
"The [Component](docs:qtqml;QtQml.Component) that will represent our delegate "
"can be added inside our [Kirigami.ApplicationWindow](docs:kirigami2;"
"ApplicationWindow). We will then check what each part of our delegate "
"component does."
msgstr ""
"[Компонент](docs:qtqml;QtQml.Component), який представляє нашого делегата, "
"можна додати всередині нашого [Kirigami.ApplicationWindow](docs:kirigami2;"
"ApplicationWindow). Далі, ми перевіримо, яке завдання виконує кожна частина "
"нашого компонента-делегата."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:87
msgid ""
"implicitWidth/Height define the natural width/height of an item if no width "
"or height is specified. The setting below defines a component's preferred "
"size based on its content"
msgstr ""
"implicitWidth/Height визначають природну ширину і висоту пункту, якщо ширину "
"або висоту не вказано явним чином. Наведений нижче код визначає бажані "
"розміри компонента на основі його вмісту."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:130
msgid "onClicked: to be done... soon!"
msgstr "onClicked: буде зроблено… невдовзі!"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:140
msgid "implicitWidth and implicitHeight"
msgstr "implicitWidth та implicitHeight"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:142
msgid ""
"The first part we will take a look at is how to manage the width and height "
"of our component:"
msgstr ""
"Перша частина, яку ми розглянемо, полягає у тому, як керувати шириною та "
"висотою нашого компонента:"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:157
msgid ""
"Looking at our [Kirigami.AbstractCard](docs:kirigami2;AbstractCard), the "
"first properties we set are [implicitWidth](https://doc.qt.io/qt-6/qml-"
"qtquick-item.html#implicitWidth-prop) and [implicitHeight](https://doc.qt.io/"
"qt-6/qml-qtquick-item.html#implicitHeight-prop). We have set these to the "
"`delegateLayout.implicitWidth` and `delegateLayout.implicitHeight`, i.e. the "
"`implicitWidth` and `implicitHeight` of the `GridLayout` element."
msgstr ""
"Розглядаючи наш [Kirigami.AbstractCard](docs:kirigami2;AbstractCard), "
"першими встановленими нами властивостями є [implicitWidth](https://doc.qt.io/"
"qt-6/qml-qtquick-item.html#implicitWidth-prop) і [implicitHeight](https://"
"doc.qt.io/qt-6/qml-qtquick-item.html#implicitHeight-prop). Ми надаємо їм "
"значення `delegateLayout.implicitWidth` і `delegateLayout.implicitHeight`, "
"тобто `implicitWidth` і `implicitHeight` елемента `GridLayout`."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:159
msgid ""
"Implicit widths and heights are properties available in any [Item](docs:"
"qtquick;QtQuick.Item) that function as hints and are set as a default, or as "
"a fallback, if there is no explicit width or height set for these "
"components. These values default to 0x0, so it is very important that you "
"define those in raw Item components as done above."
msgstr ""
"Неявними ширинами і висотами є властивості, які доступні у будь-якому [Item]"
"(docs:qtquick;QtQuick.Item), і які працюють як підказки. Вони є або типовими "
"або резервними варіантами, якщо для цих компонентів не встановлено явно "
"ширини або висоти. Типовими значеннями цих величин є 0x0, тому дуже важливо "
"визначати ці значення у простих компонентах Item, як це зроблено вище."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:161
msgid ""
"Here we have set the `implicitWidth` and `implicitHeight` of our [Kirigami."
"AbstractCard](docs:kirigami2;AbstractCard) to that of the [GridLayout]"
"(https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) below to ensure "
"it does not spill out of the card. This way, the card takes as much space is "
"necessary for its contents."
msgstr ""
"Тут ми встановили значення `implicitWidth` і `implicitHeight` нашого "
"[Kirigami.AbstractCard](docs:kirigami2;AbstractCard) у значення [GridLayout]"
"(https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) нижче для того, "
"щоб вони не вилізли за картку. Таким чином, картка займе стільки місця, "
"скільки потрібно для її вмісту."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:163
msgid "Layouts"
msgstr "Компонування"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:165
msgid ""
"The [GridLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) "
"is inside the [Item](https://doc.qt.io/qt-6/qml-qtquick-item.html) component "
"we have provided for the property [contentItem](https://doc.qt.io/qt-6/qml-"
"qtquick-controls2-control.html#contentItem-prop). This is the [Item](https://"
"doc.qt.io/qt-6/qml-qtquick-item.html) that contains what will be displayed "
"in your card."
msgstr ""
"[GridLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) "
"перебуває всередині компонента [Item](https://doc.qt.io/qt-6/qml-qtquick-"
"item.html), який ми надали для властивості [contentItem](https://doc.qt.io/"
"qt-6/qml-qtquick-controls2-control.html#contentItem-prop). Це [Item](https://"
"doc.qt.io/qt-6/qml-qtquick-item.html), який містить те, що буде показано у "
"вашій картці."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:167
msgid ""
"We also need to choose a [layout](https://doc.qt.io/qt-6/qtquicklayouts-"
"index.html) for our components so that they don't just pile on top of each "
"other. There are three main types that we can choose from:"
msgstr ""
"Нам також потрібно вибрати [компонування](https://doc.qt.io/qt-6/"
"qtquicklayouts-index.html) для наших компонентів так, щоб вони не просто "
"накопичувалися один над одним. Існує три основних типи, один з яких ми "
"можемо вибрати:"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:168
msgid ""
"[ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout.html) "
"lays out your components vertically, in a single column"
msgstr ""
"[ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout.html) "
"розташовує ваші компоненти вертикально, у один стовпчик"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:169
msgid ""
"[RowLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-rowlayout.html) lays "
"out your components horizontally, in a single row"
msgstr ""
"[RowLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-rowlayout.html) "
"розкладає ваші компоненти горизонтально у один рядок"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:170
msgid ""
"[GridLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) "
"lays out your components in a grid with a composition of your choosing"
msgstr ""
"[GridLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) "
"розкладає ваші компоненти у таблицю із вибраним вами компонуванням"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:172
msgid ""
"With [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout."
"html) and [RowLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-rowlayout."
"html), all we have to do is write our components inside the Layout "
"component. As you can see, we went with a [GridLayout](https://doc.qt.io/"
"qt-6/qml-qtquick-layouts-gridlayout.html), which entails a bit more "
"handiwork."
msgstr ""
"З [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout."
"html) і [RowLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-rowlayout."
"html) усе, що нам слід зробити, — це записати наші компоненти всередину "
"компонента Layout. Як ви можете бачити, ми використали [GridLayout](https://"
"doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html), що потребує додаткового "
"опису вручну."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:191
msgid ""
"The first thing you see is our `anchors`. [QtQuick's anchoring system]"
"(https://doc.qt.io/qt-6/qtquick-positioning-anchors.html) provides a useful "
"way of making sure your components are positioned in certain parts of a "
"parent component. We have anchored our [GridLayout](https://doc.qt.io/qt-6/"
"qml-qtquick-layouts-gridlayout.html) to the left, top, and right of the "
"parent card, ensuring our content stretches across the whole card."
msgstr ""
"Першим, що ви бачите, є наш `anchor`. [Система прив'язок QtQuick](https://"
"doc.qt.io/qt-6/qtquick-positioning-anchors.html) надає зручний спосіб "
"визначення розташування ваших компонентів у певних місцях батьківського "
"компонента. Ми прив'язали наш [GridLayout](https://doc.qt.io/qt-6/qml-"
"qtquick-layouts-gridlayout.html) ліворуч, згори і праворуч до батьківської "
"картки, забезпечивши розтягування вмісту на усю картку."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:193
msgid ""
"Next we specify the spacing between the rows and columns within our grid, so "
"that our components don't bunch up. Kirigami provides a number of handy "
"[predefined units](docs:kirigami2;Kirigami::Platform::Units) to use for this "
"purpose:"
msgstr ""
"Далі, ми вказали інтервал між рядками і стовпчиками у нашій таблиці, щоб "
"наші компоненти не накладалися один на одного. У Kirigami передбачено "
"декілька зручних [попередньо визначених одиниць](docs:kirigami2;Kirigami::"
"Platform::Units) для використання з цією метою:"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:195
msgid "Kirigami Unit"
msgstr "Одиниця Kirigami"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:195
msgid "Pixels"
msgstr "Пікселі"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:197
msgid "smallSpacing"
msgstr "smallSpacing"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:197
msgid "4px"
msgstr "4px"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:198
msgid "largeSpacing"
msgstr "largeSpacing"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:198
msgid "8px"
msgstr "8px"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:199
msgid "gridUnit"
msgstr "gridUnit"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:199
msgid "18px"
msgstr "18px"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:203
msgid ""
"KDE's Visual Design Group (VDG) has a lot more information about the "
"different units defined within Plasma and Kirigami on the [Human Interface "
"Guidelines](/hig/layout/units/)."
msgstr ""
"Група з візуального дизайну KDE (VDG) надає багато [настанов щодо зручності "
"інтерфейсу](/hig/layout/units/) щодо різних модулів, які визначено у Плазмі "
"і Kirigami."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:207
msgid ""
"As you might remember, `root` is the id of our [Kirigami.ApplicationWindow]"
"(docs:kirigami2;ApplicationWindow). It provides the [wideScreen](docs:"
"kirigami2;AbstractApplicationWindow::wideScreen) property, used to determine "
"whether the current device screen is a widescreen (i.e. a computer monitor "
"or a phone in landscape). We use a [ternary conditional](https://developer."
"mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/"
"Conditional_operator) here to vary the number of columns in our grid "
"depending on the screen we are using: if it's a widescreen, the grid will "
"have 4 columns, else it will have 2."
msgstr ""
"Як ви можливо пам'ятаєте, `root` є ідентифікатором нашого [Kirigami."
"ApplicationWindow](docs:kirigami2;ApplicationWindow). Він надає властивість "
"[wideScreen](docs:kirigami2;AbstractApplicationWindow::wideScreen), яку "
"використовують для визначення того, чи є поточний екран пристрою "
"широкоформатним (тобто монітором комп'ютера або екраном телефону в "
"альбомному режимі). Тут ми використовуємо [тернарну умову](https://developer."
"mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/"
"Conditional_operator) для зміни кількості стовпчиків у нашій таблиці залежно "
"від використаного екрана: якщо він є широкоформатним, у таблиці буде 4 "
"стовпчики, інакше їх буде 2."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:209
msgid "Inner components"
msgstr "Внутрішні компоненти"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:211
msgid ""
"We could just create three labels within our delegate component and call it "
"a day, but that wouldn't look particularly nice. We'll make use of a few "
"more convenient components:"
msgstr ""
"Ми могли б просто створити три мітки у нашому компоненті-делегаті, і все. "
"Але це не виглядало б аж надто привабливо. Ми ж скористаємося декількома "
"додатковими зручними компонентами:"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:250
msgid "How the custom Card looks like"
msgstr "Як виглядає нетипова картка"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:252
msgid ""
"Left, [Kirigami.Heading](docs:kirigami2;Heading): uses the `ListElement`'s "
"`date` as a level 1 heading."
msgstr ""
"Ліворуч, [Kirigami.Heading](docs:kirigami2;Heading): використовує `date` з "
"`ListElement` як заголовок першого рівня."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:254
msgid ""
"Middle, [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html): has a [Kirigami.Heading](docs:kirigami2;Heading) that "
"displays the task name; a [Kirigami.Separator](docs:kirigami2;Separator), "
"which provides the horizontal line; and a [Controls.Label](docs:"
"qtquickcontrols;QtQuick.Controls.Label), that displays a task's optional "
"description. The latter two components have a [visible](https://doc.qt.io/"
"qt-6/qml-qtquick-item.html#visible-prop) property, which checks if the "
"description is empty or not and displays the components depending on the "
"result of `description.length > 0`."
msgstr ""
"Посередині, [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html): містить [Kirigami.Heading](docs:kirigami2;Heading), де "
"показано назву завдання; [Kirigami.Separator](docs:kirigami2;Separator), "
"який додає горизонтальну лінію; і [Controls.Label](docs:qtquickcontrols;"
"QtQuick.Controls.Label), який показу необов'язковий опис завдання. Останні "
"два компоненти мають властивість [visible](https://doc.qt.io/qt-6/qml-"
"qtquick-item.html#visible-prop), значення якої визначається перевіркою того, "
"чи є порожнім опис, — компоненти буде показано, залежно від результату "
"перевірки`description.length > 0`."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:256
msgid ""
"Right, [Controls.Button](docs:qtquickcontrols;QtQuick.Controls.Button): a "
"button that will do something... soon!"
msgstr ""
"Праворуч, [Controls.Button](docs:qtquickcontrols;QtQuick.Controls.Button): "
"кнопка, яка щось робитиме… невдовзі!"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:267
msgid ""
"![Screenshot of the app appearance after completing this lesson](Screenshot."
"webp)"
msgstr ""
"![Знімок вигляду вікна програми після завершення цього уроку](Screenshot."
"webp)"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:269
msgid "So there is our basic card!"
msgstr "Отже, маємо нашу базову картку!"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:271
msgid ""
"With these steps, we have now laid the basic groundwork for adding all the "
"functionality to our app."
msgstr ""
"Виконанням цих кроків ми заклали підвалини для додавання функціональних "
"можливостей до нашої програми."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:0
msgid "Next steps"
msgstr "Наступні кроки"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:0
msgid "What to do after finishing your first simple Kirigami application\n"
msgstr ""
"Що робити після завершення роботи над вашою першою простою програмою "
"Kirigami\n"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:11
msgid "What we have built"
msgstr "Що ми побудували?"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:13
msgid ""
"Over the past few tutorials you have built a basic but functional Kirigami "
"application that lets you add, edit, and delete date countdowns. In doing so "
"we have learned about Kirigami and QtQuick components, some of how QML "
"works, basic application layouts, and more. Not bad at all!"
msgstr ""
"У декількох останніх розділах підручника ми побудували базову, але "
"функціональну програму Kirigami, за допомогою якої ви можете додавати, "
"редагувати та вилучати відліки за датами. Роблячи це, ми навчилися "
"користуватися компонентами Kirigami і QtQuick, познайомилися із тим, як "
"працює QML, базовими компонуваннями інтерфейсу програми тощо. І це добре!"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:15
msgid ""
"You now have a grasp of the basics that make up many of KDE's most popular "
"applications. You might be asking yourself: what now?"
msgstr ""
"Тепер ви маєте базові знання щодо того, з чого складається багато "
"найпопулярніших програм KDE. Можливо, у вас виникло питання: «І що ж тепер?»"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:17
msgid ""
"Well, don't worry: we have taken the time to provide some pointers as to "
"where you can go from here."
msgstr ""
"Добре, не хвилюйтеся: ми вже подумали про подальші шляхи розвитку ваших "
"знань."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:19
msgid "Contributing to KDE projects"
msgstr "Участь у проєктах KDE"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:21
msgid ""
"One of the best ways to improve your development skills is by putting them "
"into practice. KDE's community is welcoming and always looking for more "
"passionate developers!"
msgstr ""
"Одним з найкращих способів удосконалення навичок з розробки є їхнє практичне "
"використання. Спільнота KDE буде завжди рада появі нових відданих "
"розробників!"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:23
msgid ""
"We have several pieces of documentation that can help guide you towards "
"becoming a contributor. We recommend you take a look at the developer-"
"specific section of our [Development Guide](/docs/getting-started/building/"
"help-dependencies) which can help you learn more about the KDE Community's "
"development workflow. We also recommend you take a look at our documentation "
"for KDE's GitLab instance, called [Invent](https://community.kde.org/"
"Infrastructure/GitLab), as you will likely need to interact with it during "
"the development process. The KDE Community interacts mainly through Matrix, "
"and we also have [a page on the community wiki](https://community.kde.org/"
"Matrix) that will guide you through setting up with your very own account."
msgstr ""
"Маємо декілька джерел документації, які можуть допомогти вам зробити перші "
"кроки. Ми рекомендуємо переглянути призначений для розробників розділ [наших "
"настанов щодо початку роботи над проєктом](/docs/getting-started/building/"
"help-dependencies). Ці настанови можуть розширити ваші знання щодо принципів "
"розробки у спільноті KDE. Ми також рекомендуємо вам ознайомитися із "
"документацією до екземпляра GitLab KDE, який має назву [Invent](https://"
"community.kde.org/Infrastructure/GitLab), оскільки вам, ймовірно, доведеться "
"працювати із ним під час процесу розробки. Учасники спільноти KDE "
"спілкуються переважно у Matrix, також у нас є [сторінка у вікі спільноти]"
"(https://community.kde.org/Matrix), на якій наведено настанови щодо "
"налаштовування середовища із вашим власним обліковим записом."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:27
msgid ""
"While interacting with others in the KDE Community, please make sure you "
"abide by the [Code of Conduct](https://kde.org/code-of-conduct/)."
msgstr ""
"Взаємодіючи з іншими учасниками спільноти KDE, будь ласка, дотримуйтеся "
"[Кодексу поведінки учасника](https://kde.org/code-of-conduct/)."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:31
msgid ""
"With your newfound skills you are in a good position to begin contributing "
"to Kirigami projects. Thankfully, many of KDE's most popular applications "
"and components are built with this framework. Here are a list of projects "
"you are welcome to help with."
msgstr ""
"Із набутими вами знаннями вам буде просто почати робити внесок до проєктів "
"Kirigami. На щастя, багато з найпопулярніших програм і компонентів KDE "
"побудовано за допомогою саме цієї бібліотеки. Нижче наведено список "
"проєктів, які будуть раді вашій допомозі."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:33
msgid "Beginner-friendly Kirigami projects"
msgstr "Зручні для початківців проєкти Kirigami"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:35
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:45
msgid "Project"
msgstr "Проєкт"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:35
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:45
msgid "What it is"
msgstr "Призначення"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:35
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:45
msgid "Links"
msgstr "Посилання"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:37
msgid ""
"<img src=\"org.kde.calindori.png\" width=\"50\" height=\"50\"><br />Calindori"
msgstr ""
"<img src=\"org.kde.calindori.png\" width=\"50\" height=\"50\"><br />Calindori"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:37
msgid "A touch friendly calendar application designed for mobile devices."
msgstr "Зручна на сенсорних екранах програма-календар для мобільних пристроїв."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:37
msgid ""
"[KDE Apps page](https://apps.kde.org/en/calindori)<br />[KDE Invent page]"
"(https://invent.kde.org/plasma-mobile/calindori)"
msgstr ""
"[Сторінка на KDE Apps](https://apps.kde.org/en/calindori)<br />[Сторінка на "
"KDE Invent](https://invent.kde.org/plasma-mobile/calindori)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:38
msgid "<img src=\"org.kde.koko.png\" width=\"50\" height=\"50\"><br />Koko"
msgstr "<img src=\"org.kde.koko.png\" width=\"50\" height=\"50\"><br />Koko"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:38
msgid "An image viewer designed for desktop and touch devices."
msgstr ""
"Програма для перегляду зображень на комп'ютерах та сенсорних пристроях."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:38
msgid ""
"[Userbase page](https://userbase.kde.org/Koko)<br />[KDE Invent page]"
"(https://invent.kde.org/graphics/koko)"
msgstr ""
"[Сторінка у Userbase](https://userbase.kde.org/Koko)<br />[Сторінка на KDE "
"Invent](https://invent.kde.org/graphics/koko)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:39
msgid ""
"<img src=\"org.kde.kontrast.png\" width=\"50\" height=\"50\"><br />Kontrast"
msgstr ""
"<img src=\"org.kde.kontrast.png\" width=\"50\" height=\"50\"><br />Kontrast"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:39
msgid ""
"A color contrast checker that tells you if your color combinations are "
"accessible for people with color vision deficiencies."
msgstr ""
"Засіб для перевірки контрастності кольорів. Програма повідомить вам, чи є "
"поєднання кольорів достатньо контрастним для людей із вадами розрізнення "
"кольорів."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:39
msgid ""
"[KDE Apps page](https://apps.kde.org/en/kontrast)<br />[KDE Invent page]"
"(https://invent.kde.org/accessibility/kontrast)"
msgstr ""
"[Сторінка на KDE Apps](https://apps.kde.org/en/kontrast)<br />[Сторінка на "
"KDE Invent](https://invent.kde.org/accessibility/kontrast)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:40
msgid ""
"<img src=\"org.kde.licentia.png\" width=\"50\" height=\"50\"><br />Licentia"
msgstr ""
"<img src=\"org.kde.licentia.png\" width=\"50\" height=\"50\"><br />Licentia"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:40
msgid "An app to help you choose the license to go with your project."
msgstr "Програма, яка допомагає вибрати умови ліцензування проєкту."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:40
msgid ""
"[KDE Apps page](https://apps.kde.org/licentia/)<br />[KDE Invent page]"
"(https://invent.kde.org/sdk/licentia)"
msgstr ""
"[Сторінка на KDE Apps](https://apps.kde.org/licentia/)<br />[Сторінка на KDE "
"Invent](https://invent.kde.org/sdk/licentia)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:41
msgid ""
"<img src=\"start-here-kde.png\" width=\"50\" height=\"50\"><br />Plasma "
"Welcome"
msgstr ""
"<img src=\"start-here-kde.png\" width=\"50\" height=\"50\"><br />Вітання "
"Плазми"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:41
msgid ""
"A welcome app for the Plasma desktop that lets you create new pages with QML."
msgstr ""
"Вітальна програма стільниці Плазми, яка надає вам змогу створювати сторінки "
"за допомогою QML."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:41
msgid "[KDE Invent page](https://invent.kde.org/plasma/plasma-welcome)"
msgstr "[Сторінка на KDE Invent](https://invent.kde.org/plasma/plasma-welcome)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:43
msgid "More complex Kirigami projects"
msgstr "Складніші проєкти на Kirigami"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:47
msgid ""
"<img src=\"org.kde.discover.png\" width=\"50\" height=\"50\"><br />Discover"
msgstr ""
"<img src=\"org.kde.discover.png\" width=\"50\" height=\"50\"><br />Discover"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:47
msgid ""
"An application that helps you find and install applications, games, and "
"tools."
msgstr ""
"Програма, яка допоможе вам знаходити і встановлювати програми, ігри та "
"робочі інструменти."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:47
msgid ""
"[KDE Apps page](https://apps.kde.org/en/discover)<br />[KDE Userbase page]"
"(https://userbase.kde.org/Discover)<br />[KDE Invent page](https://invent."
"kde.org/plasma/discover)"
msgstr ""
"[Сторінка на KDE Apps](https://apps.kde.org/en/discover)<br />[Сторінка у "
"KDE Userbase](https://userbase.kde.org/Discover)<br />[Сторінка на KDE "
"Invent](https://invent.kde.org/plasma/discover)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:48
msgid "<img src=\"org.kde.elisa.png\" width=\"50\" height=\"50\"><br />Elisa"
msgstr "<img src=\"org.kde.elisa.png\" width=\"50\" height=\"50\"><br />Elisa"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:48
msgid "A music player that strives to be simple and nice to use."
msgstr "Проста і приємна у користуванні програма для відтворення музики."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:48
msgid ""
"[Home page](https://elisa.kde.org/)<br />[KDE Apps page](https://apps.kde."
"org/en/elisa)<br />[KDE Community Wiki page](https://community.kde.org/"
"KDEConnect)<br />[KDE Invent page](https://invent.kde.org/multimedia/elisa)"
msgstr ""
"[Домашня сторінка](https://elisa.kde.org/)<br />[Сторінка на KDE Apps]"
"(https://apps.kde.org/en/elisa)<br />[Сторінка у вікі спільноти KDE](https://"
"community.kde.org/KDEConnect)<br />[Сторінка на KDE Invent](https://invent."
"kde.org/multimedia/elisa)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:49
msgid ""
"<img src=\"org.kde.kdeconnect.png\" width=\"50\" height=\"50\"><br />KDE "
"Connect"
msgstr ""
"<img src=\"org.kde.kdeconnect.png\" width=\"50\" height=\"50\"><br />KDE "
"Connect"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:49
msgid ""
"A multi-platform app that allows your devices to communicate (eg: your phone "
"and your computer)."
msgstr ""
"Багатоплатформова програма, за допомогою якої пристрої (наприклад ваш "
"телефон і комп'ютер) можуть обмінюватися даними"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:49
msgid ""
"[Home page](https://kdeconnect.kde.org/)<br />[KDE Community Wiki page]"
"(https://community.kde.org/KDEConnect)<br />[KDE Invent page](https://invent."
"kde.org/network/kdeconnect-kde)"
msgstr ""
"[Домашня сторінка](https://kdeconnect.kde.org/)<br />[Сторінка у вікі "
"спільноти KDE](https://community.kde.org/KDEConnect)<br />[Сторінка на KDE "
"Invent](https://invent.kde.org/network/kdeconnect-kde)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:50
msgid ""
"<img src=\"org.kde.kongress.png\" width=\"50\" height=\"50\"><br />Kongress"
msgstr ""
"<img src=\"org.kde.kongress.png\" width=\"50\" height=\"50\"><br />Kongress"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:50
msgid "A companion application for conference attendees."
msgstr "Програма-компаньйон для відвідувачів конференцій."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:50
msgid "[KDE Invent page](https://invent.kde.org/utilities/kongress)"
msgstr "[Сторінка на KDE Invent](https://invent.kde.org/utilities/kongress)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:51
msgid ""
"<img src=\"org.kde.neochat.png\" width=\"50\" height=\"50\"><br />NeoChat"
msgstr ""
"<img src=\"org.kde.neochat.png\" width=\"50\" height=\"50\"><br />NeoChat"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:51
msgid ""
"A client for Matrix, the decentralized communication protocol for instant "
"messaging."
msgstr ""
"Клієнт для Matrix — децентралізованого протоколу обміну даними для миттєвого "
"обміну повідомленнями."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:51
msgid ""
"[KDE Apps page](https://apps.kde.org/en/neochat)<br />[KDE Invent page]"
"(https://invent.kde.org/network/neochat)"
msgstr ""
"[Сторінка на KDE Apps](https://apps.kde.org/en/neochat)<br />[Сторінка на "
"KDE Invent](https://invent.kde.org/network/neochat)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:53
msgid "Learning more"
msgstr "Подальше навчання"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:55
msgid "Not feeling quite ready yet? That's okay too."
msgstr "Почуваєтеся ще неготовими? Гаразд."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:57
msgid ""
"Many of the projects listed above are invaluable learning resources. You can "
"poke through the code and see how experienced developers have created fully-"
"featured applications, and use these techniques yourself."
msgstr ""
"Багато із наведених вище проєктів є безцінними ресурсами для навчання. Ви "
"можете ознайомлюватися із кодом і вчитися у досвідчених розробників тому, як "
"створювати повнофункціональні програми, а також користуватися їхніми "
"методиками у своїх програмах."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:59
msgid ""
"If you feel you need a more gentle approach, we have also compiled some "
"resources we think you might find useful."
msgstr ""
"Якщо такий підхід здається вам надто агресивним, ми зібрали деякі додаткові "
"ресурси, які можуть видатися вам корисними."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:61
msgid "The backend and C++"
msgstr "Модуль обробки і C++"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:63
msgid ""
"While we have learned a lot about QML, we haven't really touched upon how to "
"handle backend code all that much. This is, however, an essential facet of "
"KDE application development."
msgstr ""
"Хоча ми доволі багато обговорювали QML, ми, насправді, не чіпали питань, що "
"стосуються того, як працювати з кодом модуля обробки. Втім, це ключовий "
"момент розробки програм KDE."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:65
msgid "C++/Qt with Kirigami"
msgstr "C++/Qt з Kirigami"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:67
msgid ""
"In the advanced section of this Kirigami documentation we have some pages "
"that can help you get started:"
msgstr ""
"У розділі додаткових відомостей цієї документації до Kirigami міститься "
"декілька сторінок, які допоможуть вам на початковому етапі:"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:69
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:80
msgid "Topic"
msgstr "Тема"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:71
msgid ""
"[Understanding CMakeLists](/docs/getting-started/kirigami/advanced-"
"understanding_cmakelists)"
msgstr ""
"[Розбираємося з CMakeLists](/docs/getting-started/kirigami/advanced-"
"understanding_cmakelists)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:71
msgid "Learn all about CMake and how to compile your applications."
msgstr "Вивчаємо усі аспекти CMake і вчимося збирати програми."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:72
msgid ""
"[Figuring out main.cpp](/docs/getting-started/kirigami/advanced-maincpp)"
msgstr ""
"[Розбираємося у main.cpp](/docs/getting-started/kirigami/advanced-maincpp)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:72
msgid ""
"Getting to grips with the central C++ file that handles your application's "
"initialisation."
msgstr ""
"Знайомимося із центральним файлом мовою C++, який керуватиме ініціалізацією "
"програм."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:73
msgid ""
"[Connect logic to your QML user interface](/docs/getting-started/kirigami/"
"advanced-connect_backend)"
msgstr ""
"[З'єднання логіки з вашим інтерфейсом користувача QML](/docs/getting-started/"
"kirigami/advanced-connect_backend)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:73
msgid ""
"Add advanced functionality to your Kirigami application and connect it to "
"your UI."
msgstr ""
"Додаємо функціональні можливості до програми Kirigami і з'єднуємо їх із "
"інтерфейсом користувача."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:74
msgid "[About Page](/docs/getting-started/kirigami/advanced-add_about_page)"
msgstr ""
"[Сторінка «Про програму»](/docs/getting-started/kirigami/advanced-"
"add_about_page)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:74
msgid "Add an \"About Page\" to your UI."
msgstr "Додаємо сторінку «Про програму» до вашого інтерфейсу користувача."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:76
msgid "Beginner C++ resources"
msgstr "Ресурси щодо C++ для початківців"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:78
msgid ""
"If you are completely new to C++, there are numerous resources available "
"throughout the web. Here are some that may be useful."
msgstr ""
"Якщо ви нічого не знаєте про мову C++, в інтернеті можна знайти численні "
"ресурси із інформацією. Тут ми наведемо лише деякі з них, які можуть бути "
"корисними."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:80
msgid "Resource"
msgstr "Ресурс"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:82
msgid "[Wikibooks C++](https://en.wikibooks.org/wiki/C%2B%2B_Programming)"
msgstr ""
"[Вікіпідручники з C++](https://en.wikibooks.org/wiki/C%2B%2B_Programming)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:82
msgid "A comprehensive wikibook with C++ lessons and exercises"
msgstr "Повний вікіпідручник з уроками і вправами з C++"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:83
msgid "[W3Schools C++](https://www.w3schools.com/cpp/cpp_intro.asp)"
msgstr "[W3Schools C++](https://www.w3schools.com/cpp/cpp_intro.asp)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:83
msgid "A set of C++ tutorials and other resources aimed at beginners"
msgstr "Набір покрокових підручників з C++ та інші ресурси для початківців"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:84
msgid "[LearnCpp](https://www.learncpp.com/)"
msgstr "[LearnCpp](https://www.learncpp.com/)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:84
msgid "Tutorials to get to grips with C++"
msgstr "Покрокові підручники для ознайомлення із C++"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:85
msgid "[cppreference](https://en.cppreference.com/w/)"
msgstr "[cppreference](https://en.cppreference.com/w/)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:85
msgid "A reference site for C++"
msgstr "Довідковий сайт з C++"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:87
msgid ""
"We also provide a list of continuously updated resources to learn C++ in "
"[this wiki page](https://community.kde.org/Get_Involved/development/"
"Learn#C_and_C++)."
msgstr ""
"Ми також надаємо список неперервно оновлюваних ресурсів для вивчення C++ на "
"[цій сторінці вікі](https://community.kde.org/Get_Involved/development/"
"Learn#C_and_C++)."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:89
msgid "Creating classic KDE applications using QtWidgets"
msgstr "Створення класичних програм KDE за допомогою QtWidgets"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:91
msgid ""
"If you'd like to work on KDE applications such as Dolphin, Kontact, or Kate, "
"you will need to learn how to use QtWidgets, which uses a completely "
"different way of developing user interfaces with Qt. More complex KDE "
"applications or applications that follow a traditional design tend to be "
"built with QtWidgets."
msgstr ""
"Якщо ви хочете попрацювати над програмами KDE, зокрема Dolphin, Kontact або "
"Kate, вам знадобляться знання щодо того, як користуватися QtWidgets, тобто "
"зовсім іншого способу розробки інтерфейсів користувача за допомогою Qt. "
"Складніші програми KDE або програми, у яких використано традиційний дизайн, "
"має бути побудовано з використанням QtWidgets."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:93
msgid ""
"QtWidgets is somewhat more daunting to work with than QML (and *much* more C+"
"+ intensive!). Luckily, we have [a set of tutorials](/docs/getting-started/"
"kxmlgui) in the KDE Docs that will help you become more familiar with them."
msgstr ""
"QtWidgets дещо складніші у роботі, якщо порівнювати з QML (і потребують "
"*набагато* ширших знань C++!). На щастя, у нас є [набір підручників](/docs/"
"getting-started/kxmlgui) у документації KDE, який допоможе вам ознайомитися "
"із потрібними темами."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:95
msgid "More QML and QtQuick"
msgstr "Більше QML і QtQuick"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:97
msgid ""
"The Qt project is extensive, and so are QML and QtQuick. There is a lot of "
"functionality we haven't covered, but there is a lot of documentation we can "
"pull from to find out more."
msgstr ""
"Проєкт Qt є досить великим, і так само великими його частинами є QML і "
"QtQuick. Ми ні слова не сказали про велику частину функціональних "
"можливостей, але існує широкий діапазон документації, з якою ми можемо "
"ознайомитися, щоб розширити наші знання."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:99
msgid ""
"If you want to look up what specific components do, look no further than "
"[Qt's official QML documentation.](https://doc.qt.io/qt-6/qtquick-index.html)"
msgstr ""
"Якщо ви хочете дізнатися, для чого призначено певні компоненти, зверніться "
"одразу до [офіційної документації з QML Qt.](https://doc.qt.io/qt-6/qtquick-"
"index.html)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:100
msgid ""
"If you are looking for a more guided approach to learning, [the QMLBook]"
"(https://qmlbook.github.io/) is a great place to start."
msgstr ""
"Якщо ви шукаєте більш цілеспрямований підхід до вивчення питань, чудовим "
"початком буде читання [QMLBook](https://qmlbook.github.io/)."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:102
msgid "More Kirigami"
msgstr "Більше Kirigami"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:104
msgid ""
"This documentation includes a lot more about Kirigami. You can poke through "
"some of the Components pages to find out more about some of the QML "
"components that Kirigami provides for you to use."
msgstr ""
"Цю документацію в основному призначено для вивчення Kirigami. Ви можете "
"звернутися до сторінок компонентів, щоб дізнатися більше про деякі з "
"компонентів QML, як надає у ваше користування Kirigami."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:106
msgid ""
"We recommend you also take a look at [Kirigami Gallery](https://apps.kde.org/"
"kirigami2.gallery/), an application designed by KDE developers to "
"demonstrate Kirigami's tools and capabilities. It provides both interactive "
"examples of Kirigami components as well as links to the source code of these "
"examples so you can see how they were built."
msgstr ""
"Рекомендуємо вам поглянути на [Галерею Kirigami](https://apps.kde.org/"
"kirigami2.gallery/), програму, яку було створено розробниками KDE для "
"демонстрації інструментів і можливостей Kirigami. Там ви знайдете "
"інтерактивні приклади компонентів Kirigami і прості у користуванні посилання "
"на початковий код прикладі, щоб ви могли ознайомитися із тим, як побудовано "
"ці компоненти."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:108
msgid "The sky is the limit!"
msgstr "Немає меж досконалості!"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:110
msgid ""
"Don't be intimidated by all the material on here! No one starts off being "
"able to create something like Plasma from scratch. But KDE is no multi-"
"billion dollar company with a high barrier for entry (we have no five-round "
"coding interviews!) and as long as you are nice, you will be welcomed."
msgstr ""
"Не лякайтеся кількістю усього матеріалу тут! Ніхто не збирається розпочинати "
"створення чогось подібного до Плазми з нуля. Але KDE не є компанією вартістю "
"у багато мільярдів із високим вхідним бар'єром — у нас немає п'ятираундових "
"інтерв'ю з програмування! — і доки ви лишатиметеся ввічливою людиною, ми "
"будемо вам раді."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:112
msgid "Good luck!"
msgstr "Щасти!"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:0
msgid "Explaining pages"
msgstr "Пояснення щодо сторінок"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:0
msgid "Pages allow you to organize your application content"
msgstr "За допомогою сторінок ви можете упорядкувати дані вашої програми"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:9
msgid "Our app"
msgstr "Наша програма"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:11
msgid ""
"In the previous tutorial, we managed to set up, build, and compile our first "
"Kirigami application. With the basics in place, we can begin our journey "
"towards creating a fully-featured application."
msgstr ""
"У попередньому розділі підручника ми змогли налаштувати, зібрати і запустити "
"нашу першу програму Kirigami. Тепер, коли нам відомі основи, ми можемо "
"розпочати нашу подорож до створення повнофункціональної програми."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:13
msgid ""
"These tutorials will focus on creating an application that lets the user see "
"how many days are left until an event of their choice."
msgstr ""
"Акцент у цих підручниках зроблено на створенні програми, яка показуватиме "
"користувачеві, скільки днів лишилося до визначеної ним події."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:15
msgid ""
"We also recommend you check out the [Kirigami Gallery](https://apps.kde.org/"
"en/kirigami2.gallery), which provides a number of useful UI examples."
msgstr ""
"Ми також рекомендуємо вам ознайомитися зі [галереєю Kirigami](https://apps."
"kde.org/en/kirigami2.gallery), де можна знайти декілька корисних прикладів "
"інтерфейсу користувача."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:17
msgid ""
"In this section we'll be focusing on pages, one of the key structural "
"elements of any Kirigami application."
msgstr ""
"У цьому розділі ми зосередимося на сторінках, одному з ключових структурних "
"елементів будь-якої програми Kirigami."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:19
msgid "Pages"
msgstr "Сторінки"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:21
msgid ""
"Kirigami apps are typically organized in pages by using [Kirigami.Page](docs:"
"kirigami2;Page). Pages are the different \"screens\" of an app. You will "
"want to have a page dedicated to specific aspects of your app's interaction, "
"and to make things easier you can create different QML files for each page."
msgstr ""
"Програми Kirigami типово поділено на сторінки за допомогою [Kirigami.Page]"
"(docs:kirigami2;Page). Сторінки є різними ‘екранами' програми. Вам "
"знадобляться сторінки, кожну з яких присвячено певним аспектам взаємодії із "
"вашою програмою, і, щоб полегшити справу, ви можете створити різні файли "
"QML, кожен з яких міститиме код для окремої сторінки."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:23
msgid ""
"Pages are organized in a [page stack](docs:kirigami2;"
"AbstractApplicationWindow::pageStack) where they can be pushed and popped. "
"On a phone only the top-most page is shown, whereas on a larger screen "
"(desktop or tablet), if desired, multiple pages can be shown next to each "
"other."
msgstr ""
"Сторінки упорядковано у [стос сторінок](docs:kirigami2;"
"AbstractApplicationWindow::pageStack), до якого можна заштовхувати сторінки "
"і з якого можна ці сторінки виштовхувати. На телефоні буде показано лише "
"верхню сторінку, а на пристроях із більшим екраном (комп'ютері або планшеті) "
"може бути показано, якщо потрібно, декілька сторінок, поруч одна з одною."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:27
msgid "A single page on the phone"
msgstr "Одинарна сторінка на телефоні"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:29
msgid "Two pages next to each other on the desktop"
msgstr "Дві сторінки, одна поруч із іншою, на комп'ютері"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:35
msgid ""
"A [Kirigami.Page](docs:kirigami2;Page) inherits from a [Controls.Page](docs:"
"qtquickcontrols;QtQuick.Controls.Page), and as such you can use the latter's "
"properties as well."
msgstr ""
"[Kirigami.Page](docs:kirigami2;Page) успадковує від [Controls.Page](docs:"
"qtquickcontrols;QtQuick.Controls.Page), отже ви можете скористатися і "
"властивостями останньої."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:37
msgid ""
"When looking through QML API documentation, make sure to look into the "
"functions and properties inherited by the API you are looking at as well."
msgstr ""
"При пошуку у документації з програмного інтерфейсу QML не забувайте "
"ознайомитися із функціями і властивостями, які успадковує програмний "
"інтерфейс, який вам потрібен."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:41
msgid ""
"Let's go back to the `Main.qml` file we created in our previous tutorial:"
msgstr ""
"Повернімося до файла `Main.qml`, який ми створили у нашому попередньому "
"розділі підручника:"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:45
msgid ""
"We make our application start to our [Kirigami.Page](docs:kirigami2;Page). "
"All we have included in it is a label containing \"Hello World\", but we're "
"going to spruce things up a little."
msgstr ""
"Наша програма запускатиметься з [Kirigami.Page](docs:kirigami2;Page). Усе, "
"що ми включили до цієї сторінки — це мітка «Hello World», але ми маємо намір "
"дещо розширити ці можливості."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:47
msgid ""
"The idea behind our app is that we're going to be able to display a bunch of "
"countdowns to the user. The problem with a normal [Kirigami.Page](docs:"
"kirigami2;Page) is that it has a fixed vertical size, so instead we can use "
"a [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage), which already "
"comes with its own built-in scrollbar."
msgstr ""
"Ідея нашої програми полягає у можливості показу користувачеві декількох "
"відліків. Проблема звичайного об'єкта [Kirigami.Page](docs:kirigami2;Page) "
"полягає у тому, що він має фіксований вертикальний розмір, тому, замість "
"цього, ми можемо скористатися [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage), частиною якого вже є власна вбудована смужка гортання."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:51
msgid ""
"Kirigami pages also feature neat titles placed within the toolbar, quickly "
"indicating to the user which page they are on. All we need to do is to set a "
"page title using the `title` property of [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage). In this case, we used one of the `i18nc()` "
"functions we explored in our previous tutorial to this end."
msgstr ""
"У сторінок Kirigami також є чудові заголовки, які розташовуються на панелі "
"інструментів, надаючи користувачеві дані щодо того, з якою сторінкою він "
"працює. Нам достатньо встановити заголовок сторінки за допомогою властивості "
"`title` об'єкта [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage). У "
"цьому випадку ми використали одну з функцій `i18nc()`, які обговорювали у "
"одному з попередніх розділів підручника."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:55
msgid ""
"You could also choose to define your page within its own QML document. To do "
"so, you'd create the new QML file, for example `kirigami-tutorial/src/qml/"
"StartPage.qml`, add it to your `kirigami-tutorial/src/CMakeLists.txt` file, "
"and set the window's first page to load it, like so:"
msgstr ""
"Ви також можете визначити вашу сторінку у окремому документі QML. Для цього "
"слід створити файл QML, наприклад `kirigami-tutorial/src/qml/StartPage.qml`, "
"додати його до вашого файла `kirigami-tutorial/src/CMakeLists.txt` і "
"налаштувати першу сторінку документа на його завантаження, ось так:"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:61
msgid ""
"`pageStack.initialPage` sets the initial Page of the application's page "
"stack, and [Qt.resolvedUrl](docs:qtqml;QtQml.Qt::resolvedUrl) converts the "
"relative URL of the QML file into an absolute one."
msgstr ""
"`pageStack.initialPage` встановлює початкову сторінку стосу сторінок "
"програми, а [Qt.resolvedUrl](docs:qtqml;QtQml.Qt::resolvedUrl) перетворює "
"відносну адресу файла QML на абсолютну."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:63
msgid ""
"There is further information about alternative page structures [within our "
"Kirigami documentation](/docs/getting-started/kirigami/components-"
"pagerow_pagestack)."
msgstr ""
"У [нашій документації з Kirigami](/docs/getting-started/kirigami/components-"
"pagerow_pagestack) є докладніші відомості щодо альтернативних структур "
"сторінки."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:0
msgid "Using separate files"
msgstr "Користування окремими файлами"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:0
msgid ""
"Separating unwieldy code into different files, and attach signals to your "
"components.\n"
msgstr ""
"Розподіл громіздкого коду між різними файлами і долучення сигналів до ваших "
"компонентів.\n"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:11
msgid "Why and how"
msgstr "Чому і як"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:13
msgid ""
"For the first time, we will be separating some of our components into their "
"own QML files. If we keep adding things to `Main.qml`, it's going to quickly "
"become hard to tell what does what, and we risk muddying our code."
msgstr ""
"Ми вперше відокремлюємо деякі з наших компонентів у окремі файли QML. Якщо "
"ми продовжуватимемо додавати код до `Main.qml`, розростання файла ускладнить "
"розбір його частин і збільшить ризик помилок у нашому коді."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:15
msgid ""
"In this tutorial, we will be splitting the code in `Main.qml` into `Main."
"qml`, `AddDialog.qml` and `KountdownDelegate.qml`."
msgstr ""
"У цьому підручнику ми поділимо код у `Main.qml` між `Main.qml`, `AddDialog."
"qml` і `KountdownDelegate.qml`."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:17
msgid ""
"Additionally, even when spreading code between multiple QML files, the "
"amount of files in real-life projects can get out of hand. A common solution "
"to this problem is to logically separate files into different folders. We "
"will take a brief look at three common approaches seen in real projects, and "
"implement one of them:"
msgstr ""
"Крім того, навіть після поділу коду між декількома файлами QML кількість "
"файлів у реальних проєктах може лишитися незручною. Типовим вирішенням цієї "
"проблеми є логічний поділ файлів між різними теками. Здійснимо короткий "
"огляд трьох підходів у реальних проєтках та реалізуймо один з них:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:19
msgid "storing QML files together with C++ files"
msgstr "зберігання файлів QML разом із файлами C++"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:20
msgid "storing QML files in a different directory under the same module"
msgstr "зберігання файлів QML у іншому каталозі того самого модуля"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:21
msgid "storing QML files in a different directory under a different module"
msgstr "зберігання файлів QML у окремому каталозі у іншому модулі"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:23
msgid ""
"After the split, we will have [separation of concerns](https://en.wikipedia."
"org/wiki/Separation_of_concerns) between each file, and [implementation "
"details will be abstracted](https://en.wikipedia.org/wiki/"
"Abstraction_(computer_science)), making the code more readable."
msgstr ""
"Після поділу ми [поділимо відповідальність](https://en.wikipedia.org/wiki/"
"Separation_of_concerns) між файлами, а [реалізацію подробиць буде "
"абстраговано](https://en.wikipedia.org/wiki/Abstraction_(computer_science)), "
"що зробить код зручнішим для читання."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:25
msgid "Storing QML files together with C++ files"
msgstr "Зберігання файлів QML разом із файлами C++"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:27
msgid ""
"This consists of keeping the project's QML files together with C++ files in "
"`src/`. This sort of structure would look like this:"
msgstr ""
"Це передбачає зберігання файлів QML проєкту разом із файлами C++ у `src/`. "
"Такий різновид структури може виглядати ось так:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:41
msgid ""
"This is what we did previously. In the above case, you would just need to "
"keep adding QML files to the existing `kirigami-tutorial/src/CMakeLists."
"txt`. There's no logical separation at all, and once the project gets more "
"than a couple of QML files (and C++ files that create types to be used in "
"QML), the folder can quickly become crowded."
msgstr ""
"Це те, що ми робили раніше. У наведеному вище випадку вам слід просто "
"продовжити додавання файлів QML до наявного файла `kirigami-tutorial/src/"
"CMakeLists.txt`. Логічного поділу взагалі немає, і щойно кількість файлів "
"QML (і файлів C++, у яких створюватимуться типи, які буде використано у QML) "
"стане більшою за пару-трійку, тека швидко почне переповнюватися файлами."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:43
msgid "Storing QML files in a different directory under the same module"
msgstr "Зберігання файлів QML у іншому каталозі того самого модуля"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:45
msgid ""
"This consists of keeping all QML files in a separate folder, usually `src/"
"qml/`. This sort of structure would look like this:"
msgstr ""
"Це передбачає зберігання усіх файлів QML в окремій теці, зазвичай, `src/qml/"
"`. Такий різновид структури може виглядати ось так:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:60
msgid ""
"This structure is very common in KDE projects, mostly to avoid having an "
"extra CMakeLists.txt file for the `src/qml/` directory and creating a "
"separate module. This method keeps the files themselves in a separate "
"folder, but you would also need to add them in `kirigami-tutorial/src/"
"CMakeLists.txt`. All created QML files would then belong to the same QML "
"module as `Main.qml`."
msgstr ""
"Така структура є доволі типовою для проєктів KDE. Здебільшого, причиною є "
"бажання уникнути використання додаткового файла CMakeLists.txt для каталогу "
"`src/qml/` і створення окремого модуля. Це метод передбачає зберігання самих "
"файлів в окремій теці, але вам все одно доведеться додати ці файли до файла "
"`kirigami-tutorial/src/CMakeLists.txt`. Усі створені файли QML належатимуть "
"до того самого модуля QML, що і `Main.qml`."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:62
msgid ""
"In practice, once the project gets more than a dozen QML files, while it "
"won't crowd the `src/` directory, it will crowd the `src/CMakeLists.txt` "
"file. It will become difficult to differentiate between traditional C++ "
"files and C++ files that have types exposed to QML."
msgstr ""
"На практиці, щойно кількість файлів QML у проєкті перевищить десяток, хоча "
"каталог `src/` і не буде захаращено, захаращено буде файл `src/CMakeLists."
"txt`. Стане важко відрізняти традиційні файли C++ і файли C++, у яких "
"містяться типи, які розкрито для QML."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:64
msgid ""
"It will also break the concept of locality (localisation of dependency "
"details), where you would keep the description of your dependencies in the "
"same place as the dependencies themselves."
msgstr ""
"Також це порушує принцип локальності (локалізації подробиць залежностей), за "
"якого вам слід зберігатти опис ваших залежностей там же, де зберігаються "
"самі залежності."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:66
msgid "Storing QML files in a different directory under a different module"
msgstr "Зберігання файлів QML в окремому каталозі в іншому модулі"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:68
msgid ""
"This consists of keeping all QML files in a separate folder with its own "
"CMakeLists.txt and own separate QML module. This sort of structure would "
"look like this:"
msgstr ""
"Це передбачає зберігання усіх файлів QML в окремій теці зі своїм власним "
"CMakeLists.txt своїм власним модулем QML. Цей різновид структури може "
"виглядати ось так:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:84
msgid ""
"This structure is not as common in KDE projects and requires writing an "
"additional CMakeLists.txt, but it is the most flexible. In our case, we name "
"our folder \"components\" since we are creating two new QML components out "
"of our previous `Main.qml` file, and keep information about them in "
"`kirigami-tutorial/src/components/CMakeLists.txt`. The `Main.qml` file "
"itself stays in `src/` so it's automatically used when running the "
"executable, as before."
msgstr ""
"Ця структура не є аж надто поширеною у проєктах KDE і потребує написання "
"додаткового файла CMakeLists.txt, але вона є найгнучкішою. У нашому випадку "
"ми назвали нашу теку «components», оскільки ми створюємо два нових "
"компоненти QML з нашого попереднього файла `Main.qml` і зберігаємо дані щодо "
"компонентів у `kirigami-tutorial/src/components/CMakeLists.txt`. Сам файл "
"`Main.qml` лишається у `src/`, отже його автоматично буде використано при "
"запуску виконуваного файла, як і раніше."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:86
msgid ""
"Later on, it would be possible to create more folders with multiple QML "
"files, all grouped together by function, such as \"models\" and \"settings"
"\", and C++ files that have types exposed to QML (like models) could be kept "
"together with other QML files where it makes sense."
msgstr ""
"Пізніше можна буде створити додаткові теки із декількома файлами QML, "
"згрупованих разом за призначенням, наприклад, «models» і «settings», і файли "
"C++, де міститимуться типи, які відкриваються QML (зокрема моделі) можна "
"зберігати разом із іншими файлами QML там, де це має сенс."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:88
msgid "We will be using this structure in this tutorial."
msgstr "Ми використаємо цю структуру у нашому підручнику."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:90
msgid "Preparing CMake for the new files"
msgstr "Приготування CMake для нових файлів"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:92
msgid ""
"First, create the file `kirigami-tutorial/src/components/CMakeLists.txt` "
"with the following contents:"
msgstr ""
"Спершу, створимо файл `kirigami-tutorial/src/components/CMakeLists.txt` із "
"таким вмістом:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:98
msgid ""
"Because the target is different from the executable, it will function as a "
"different QML module, in which case we will need to do two things: make it "
"*generate* code for it to work as a Qt plugin with [GENERATE_PLUGIN_SOURCE]"
"(https://api.kde.org/ecm/module/ECMQmlModule.html), and *finalize* it with "
"[ecm_finalize_qml_module()](https://api.kde.org/ecm/module/ECMQmlModule."
"html). We then install it exactly like in previous lessons."
msgstr ""
"Оскільки ціль є відмінною від виконуваного файла, вона працюватиме як інший "
"модуль QML, що означає, що нам потрібно буде виконати дві речі: наказати "
"*створити* код, щоб усе працювало як додаток Qt, за допомогою "
"[GENERATE_PLUGIN_SOURCE](https://api.kde.org/ecm/module/ECMQmlModule.html) і "
"*завершити* обробку за допомогою [ecm_finalize_qml_module()](https://api.kde."
"org/ecm/module/ECMQmlModule.html). Потім ми встановлюємо їх так само, як на "
"попередніх уроках."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:100
msgid ""
"We needed to use [add_library()](https://cmake.org/cmake/help/latest/command/"
"add_library.html) so that we can link `kirigami-hello-components` to the "
"executable in the [target_link_libraries()](https://cmake.org/cmake/help/"
"latest/command/target_link_libraries.html) call in `kirigami-tutorial/src/"
"CMakeLists.txt`:"
msgstr ""
"Нам довелося скористатися [add_library()](https://cmake.org/cmake/help/"
"latest/command/add_library.html), щоб ми могли скомпонувати `kirigami-hello-"
"components` із виконуваним файлом у виклику [target_link_libraries()]"
"(https://cmake.org/cmake/help/latest/command/target_link_libraries.html) у "
"`kirigami-tutorial/src/CMakeLists.txt`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:104
msgid ""
"We also need to use [add_subdirectory()](https://cmake.org/cmake/help/latest/"
"command/add_subdirectory.html) so CMake will find the `kirigami-tutorial/src/"
"components/` directory."
msgstr ""
"Нам також потрібно скористатися [add_subdirectory()](https://cmake.org/cmake/"
"help/latest/command/add_subdirectory.html), щоб CMake знайшов каталог "
"`kirigami-tutorial/src/components/`."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:106
msgid ""
"In the previous lessons, we did not need to add the `org.kde.tutorial` "
"import to our `Main.qml` because it was not needed: being the entrypoint for "
"the application, the executable would run the file immediately anyway. Since "
"our components are in a separate QML module, the a new import in `kirigami-"
"tutorial/src/Main.qml` is necessary, the same one defined earlier, `org.kde."
"tutorial.components`:"
msgstr ""
"На попередніх уроках нам не потрібно було додавати `org.kde.tutorial` до "
"нашого `Main.qml`, оскільки у цьому не було потреби: будучи вхідною точкою "
"програми, виконуваний файл за будь-яких умов запустить файл негайно. "
"Оскільки наші компоненти зберігаються в окремому модулі QML, потрібне нове "
"імпортування у `kirigami-tutorial/src/Main.qml`, те саме, яке було визначено "
"раніше, `org.kde.tutorial.components`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:115
msgid "The rest of the code..."
msgstr "Решта коду..."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:118
msgid "And we are ready to go."
msgstr "І ми готові рухатися далі."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:120
msgid "Splitting Main.qml"
msgstr "Поділ Main.qml"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:122
msgid "Let's take a look once again at the original `Main.qml`:"
msgstr "Погляньмо ще раз на початковий `Main.qml`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:126
msgid ""
"The custom delegate with `id: kountdownDelegate` can be split completely "
"because it is already enveloped in a [QML Component type](docs:qtqml;QtQml."
"Component). We use a Component to be able to define it without needing to "
"instantiate it; separate QML files work the same way."
msgstr ""
"Нетиповий делегат з `id: kountdownDelegate` можна поділити повністю, "
"оскільки його вже загорнуто у [тип Component QML](docs:qtqml;QtQml."
"Component). Ми використовуємо Component, щоб мати змогу визначити його без "
"потреби у створенні екземпляра; окремі файли QML працюють так само."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:128
msgid ""
"If we move the code to a separate files, then, there is no point in leaving "
"it enveloped in a Component: we can split just the [Kirigami.AbstractCard]"
"(docs:kirigami2;AbstractCard) in the separate file. Here is the resulting "
"`KountdownDelegate.qml`:"
msgstr ""
"Якщо ми пересуваємо код до окремих файлів, немає сенсу в огортанні у "
"Component: ми можемо просто вирізати [Kirigami.AbstractCard](docs:kirigami2;"
"AbstractCard) до окремого файла. Ось результат у `KountdownDelegate.qml`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:132
msgid ""
"Our dialog with `id: addDialog` is not enveloped in a Component, and it is "
"not a component that is visible by default, so the code can be copied as is "
"into the `AddDialog.qml`:"
msgstr ""
"Наше діалогове вікно із `id: addDialog` не загорнуто у Component, і не є "
"компонентом, який є типово видимим, отже код можна скопіювати без змін до "
"`AddDialog.qml`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:136
msgid "With the code split, `Main.qml` thus becomes much shorter:"
msgstr "Таким чином, після поділу коду `Main.qml` стане набагато коротшим:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:140
msgid ""
"We now have two extra QML files, `AddDialog.qml` and `KountdownDelegate`, "
"and we need to find some way of using them in `Main.qml`. The way to add the "
"contents of the new files to `Main.qml` is by *instantiating* them."
msgstr ""
"Тепер у нас є два додаткових файли QML, `AddDialog.qml` і "
"`KountdownDelegate`, і нам потрібно винайти спосіб використання їх у `Main."
"qml`. Способом додавання вмісту нових файлів до `Main.qml` є *створення "
"екземплярів* цих файлів."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:142
msgid "`AddDialog.qml` becomes `AddDialog {}`:"
msgstr "`AddDialog.qml` стає `AddDialog {}`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:146
msgid "`KountdownDelegate.qml` becomes `KountdownDelegate {}`:"
msgstr "`KountdownDelegate.qml` стає `KountdownDelegate {}`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:150
msgid ""
"Most cases you have seen of a component started with uppercase and followed "
"by brackets were instantiations of a QML component. This is why our new QML "
"files need to start with an uppercase letter."
msgstr ""
"Більшість випадків, які ви бачили, з компонентом, що починається з великої "
"літери і за яким було дописано дужки, були екземплярами компонента QML. Ось "
"чому назви наших нових файлів QML мають починатися з великої літери."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:152
msgid ""
"Compile the project and run it, and you should have a functional window that "
"behaves exactly the same as before, but with the code split into separate "
"parts, making things much more manageable."
msgstr ""
"Скомпілюйте проєкт і запустіть його. Маєте отримати функціональне вікно, які "
"поводитиметься так само, як і раніше, але код буде поділено між окремим "
"частинами, що зробить проєкт простішим у керуванні."

#: content/docs/getting-started/kirigami/style-colors/index.md:0
msgid "Colors and themes in Kirigami"
msgstr "Кольори і теми у Kirigami"

#: content/docs/getting-started/kirigami/style-colors/index.md:0
msgid "Colors "
msgstr "Кольори"

#: content/docs/getting-started/kirigami/style-colors/index.md:0
msgid "Make your app follow your user color scheme\n"
msgstr ""
"Робимо так, щоб у програмі використовувалася ваша схема кольорів "
"користувача\n"

#: content/docs/getting-started/kirigami/style-colors/index.md:12
msgid ""
"Kirigami has a color palette that follows the system colors to better "
"integrate with the platform it is running on (i.e. Plasma Desktop, Plasma "
"Mobile, GNOME, Android, etc.)."
msgstr ""
"У Kirigami передбачено палітру кольорів, яка відповідає загальносистемним "
"кольорам для кращої інтеграції із платформою, на якій запущено програму "
"(тобто стільницею Плазми, Плазмою для мобільних пристроїв, GNOME, Android "
"тощо)."

#: content/docs/getting-started/kirigami/style-colors/index.md:16
msgid ""
"All of the QML components of Kirigami and QtQuick Controls should already "
"follow this palette by default, so usually no custom coloring should be "
"needed for these controls."
msgstr ""
"Усі компоненти QML Kirigami і усі елементи керування QtQuick вже типово "
"використовують цю палітру, тому, зазвичай, немає потреби у додатковому "
"налаштовуванні розфарбування усіх цих елементів керування."

#: content/docs/getting-started/kirigami/style-colors/index.md:20
msgid ""
"Primitive components such as [Rectangle](docs:qtquick;QtQuick.Rectangle) "
"should always be colored with the color palette provided by Kirigami via the "
"[Kirigami.Theme](docs:kirigami2;Kirigami::Platform::PlatformTheme) attached "
"property."
msgstr ""
"Примітивні компоненти, зокрема [Rectangle](docs:qtquick;QtQuick.Rectangle), "
"завжди має бути розфарбовано з використанням палітри кольорів, яка надається "
"Kirigami за допомогою долученої властивості [Kirigami.Theme](docs:kirigami2;"
"Kirigami::Platform::PlatformTheme)."

#: content/docs/getting-started/kirigami/style-colors/index.md:23
msgid ""
"Hardcoded colors in QML, such as `#32b2fa` or `red`, should usually be "
"avoided; if it is really necessary to have elements with custom colors, it "
"should be an area where only custom colors are used (usually in the content "
"area of the app, and never in chrome areas such as toolbars or dialogs). For "
"instance, a hardcoded `black` foreground cannot be used over a [Kirigami."
"Theme.backgroundColor](docs:kirigami2;Kirigami::Platform::PlatformTheme::"
"backgroundColor) background, because if the platform uses a dark color "
"scheme the result will have poor contrast with black over almost black. This "
"is an accessibility issue and should be avoided."
msgstr ""
"У коді QML, зазвичай, слід уникати жорстко прописаних кольорів, зокрема "
"`#32b2fa` або `red`. Якщо у елементах із нетиповими кольорами справді є "
"потреба, це має бути область, де використовуються лише нетипові кольори "
"(зазвичай, область показу даних програми, — ніколи не обрамлення, зокрема "
"панелі інструментів або діалогові вікна). Наприклад, не можна "
"використовувати жорстко прописаний колір переднього плану `black` над "
"кольором тла [Kirigami.Theme.backgroundColor](docs:kirigami2;Kirigami::"
"Platform::PlatformTheme::backgroundColor), оскільки якщо у платформі "
"використано темну схему кольорів, результат матиме погану контрастність із "
"чорним кольором над майже чорним кольором. Слід уникати цієї проблеми із "
"доступністю."

#: content/docs/getting-started/kirigami/style-colors/index.md:30
msgid ""
"If you really need to use custom colors, check out [Kontrast](https://apps."
"kde.org/kontrast/) to ensure that the colors you choose have good contrast "
"and are [WCAG compliant](https://en.wikipedia.org/wiki/"
"Web_Content_Accessibility_Guidelines)."
msgstr ""
"Якщо вам дуже потрібне використання нетипових кольорів, скористайтеся "
"[Kontrast](https://apps.kde.org/kontrast/), щоб забезпечити добру "
"контрастність та сумісність із [WCAG](https://en.wikipedia.org/wiki/"
"Web_Content_Accessibility_Guidelines) вибраних кольорів."

#: content/docs/getting-started/kirigami/style-colors/index.md:34
#: content/docs/getting-started/kirigami/style-typography/index.md:373
msgid "Theme"
msgstr "Тема"

#: content/docs/getting-started/kirigami/style-colors/index.md:36
msgid ""
"[Kirigami.Theme](docs:kirigami2;Kirigami::Platform::PlatformTheme) is an "
"attached property, and therefore it is available to use for any QML item. "
"Its properties include all the colors available in the palette, and what "
"palette to use, such as the [colorSet](docs:kirigami2;Kirigami::Platform::"
"PlatformTheme::colorSet) property."
msgstr ""
"[Kirigami.Theme](docs:kirigami2;Kirigami::Platform::PlatformTheme) є "
"долученою властивістю, тому нею можна користуватися у будь-якому записі QML. "
"Вона містить як властивості усі доступні кольори палітри і дані щодо "
"палітри, яку має бути використано зокрема у властивості [colorSet](docs:"
"kirigami2;Kirigami::Platform::PlatformTheme::colorSet)."

#: content/docs/getting-started/kirigami/style-colors/index.md:58
msgid ""
"[Kirigami Gallery](https://apps.kde.org/kirigami2.gallery/) provides a code "
"example showcasing [all colors available for Kirigami](https://invent.kde."
"org/sdk/kirigami-gallery/-/blob/master/src/data/contents/ui/gallery/"
"ColorsGallery.qml) through [Kirigami.Theme](docs:kirigami2;Kirigami::"
"Platform::PlatformTheme). This includes all their states: if you click "
"outside the window, the colors change to their inactive state, and if you "
"switch your system to a dark theme, the dark variants of the colors should "
"show up in real time."
msgstr ""
"У [Галереї Kirigami](https://apps.kde.org/kirigami2.gallery/) наведено "
"зразок коду із прикладами [усіх кольорів, які доступні для Kirigami](https://"
"invent.kde.org/sdk/kirigami-gallery/-/blob/master/src/data/contents/ui/"
"gallery/ColorsGallery.qml) через [Kirigami.Theme](docs:kirigami2;Kirigami::"
"Platform::PlatformTheme). До цього прикладу включено усі стани кольорів: "
"якщо ви клацнете поза вікном, кольори буде переведено у неактивний стан, а "
"якщо ви перемкнете вашу систему на темну тему кольорів, буде показано темні "
"варіанти кольорів у режимі реального часу."

#: content/docs/getting-started/kirigami/style-colors/index.md:60
msgid "The Colors component in Kirigami Gallery"
msgstr "Компонент Colors у Галереї Kirigami"

#: content/docs/getting-started/kirigami/style-colors/index.md:62
msgid "Color Set"
msgstr "Встановлення кольору"

#: content/docs/getting-started/kirigami/style-colors/index.md:64
msgid ""
"Depending on where a control is located, it should use a different color "
"set: for instance, when the Breeze Light color scheme is used in [Views]"
"(https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview.html), the normal "
"background is almost white, while in other regions, such as toolbars or "
"dialogs, the normal background color is gray."
msgstr ""
"Залежно від місця розташування елемента керування, він використовуватиме "
"різні набори кольорів. Наприклад, (якщо використано світлу схему кольорів "
"Breeze) на панелях [панелях перегляду](https://doc.qt.io/qt-6/qtquick-"
"modelviewsdata-modelview.html) звичайне тло майже біле, а в інших областях, "
"зокрема на панелях інструментів, звичайне тло є сірим."

#: content/docs/getting-started/kirigami/style-colors/index.md:67
msgid ""
"If you define a color set for an item, all of its child items will "
"recursively inherit it automatically (unless the property [inherit](docs:"
"kirigami2;Kirigami::Platform::PlatformTheme::inherit) has explicitly been "
"set to `false`, which should always be done when the developer wants to "
"force a specific color set) so it is easy to change colors for an entire "
"hierarchy of items without touching any of the items themselves."
msgstr ""
"Якщо ви визначаєте набір кольорів для запису, усі його дочірні записи "
"(рекурсивно) успадкують його автоматично (якщо для властивості [inherit]"
"(docs:kirigami2;Kirigami::Platform::PlatformTheme::inherit) не буде явним "
"чином встановлено значення `false`, що завжди слід робити, коли розробник "
"хоче примусово встановити певний набір кольорів), тому дуже просто змінити "
"кольори для усієї ієрархії записів без безпосередньої зміни кольорів для "
"кожного із записів цієї ієрархії."

#: content/docs/getting-started/kirigami/style-colors/index.md:72
msgid ""
"[Kirigami.Theme](docs:kirigami2;Kirigami::Platform::PlatformTheme) supports "
"5 different color sets:"
msgstr ""
"У [Kirigami.Theme](docs:kirigami2;Kirigami::Platform::PlatformTheme) "
"передбачено підтримку 5 різних наборів кольорів:"

#: content/docs/getting-started/kirigami/style-colors/index.md:74
msgid ""
"View: Color set for item views, usually the lightest of all (in light color "
"themes)"
msgstr ""
"View: набір кольорів для панелей записів, зазвичай, найсвітліший з усіх (у "
"світлих темах кольорів)"

#: content/docs/getting-started/kirigami/style-colors/index.md:76
msgid ""
"Window: Color set for windows and chrome areas (this is also the default "
"color set)"
msgstr ""
"Window: набір кольорів для вікон і «хромованих» областей (це також типовий "
"набір кольорів)"

#: content/docs/getting-started/kirigami/style-colors/index.md:77
msgid "Button: Color set used by buttons"
msgstr "Button: набір кольорів, який використовують для кнопок"

#: content/docs/getting-started/kirigami/style-colors/index.md:78
msgid "Selection: Color set used by selected areas"
msgstr "Selection: набір кольорів, який використовують для позначених областей"

#: content/docs/getting-started/kirigami/style-colors/index.md:79
msgid "Tooltip: Color set used by tooltips"
msgstr "Tooltip: набір кольорів, який використовують для підказок"

#: content/docs/getting-started/kirigami/style-colors/index.md:80
msgid ""
"Complementary: Color set meant to be complementary to Window: usually dark "
"even in light themes. May be used for emphasis in small areas of the "
"application"
msgstr ""
"Complementary: набір кольорів, який має доповнювати Window: зазвичай, є "
"темним навіть у світлих темах. Ним можна скористатися для «акцентування» "
"невеликих частин інтерфейсу програми."

#: content/docs/getting-started/kirigami/style-colors/index.md:84
msgid ""
"Here is an example showcasing how color sets are inherited and can be used "
"to distinguish different components. A large border has been added to "
"contrast colors."
msgstr ""
"Тут наведено приклад, у якому продемонстровано те, як успадковуються набори "
"кольорів та як ними можна скористатися для виокремлення різних компонентів. "
"Для додавання контрастності кольорам було використано широку рамку."

#: content/docs/getting-started/kirigami/style-colors/index.md:92
msgid "How color sets differ in Breeze"
msgstr "Як відрізняються набори кольорів у Breeze"

#: content/docs/getting-started/kirigami/style-colors/index.md:98
msgid "How color sets differ in Breeze Dark"
msgstr "Як відрізняються набори кольорів у темній Breeze"

#: content/docs/getting-started/kirigami/style-colors/index.md:104
msgid "Using Custom Colors"
msgstr "Використання нетипових кольорів"

#: content/docs/getting-started/kirigami/style-colors/index.md:106
msgid ""
"Although it's discouraged to use hardcoded colors, Kirigami offers a more "
"maintainable way to assign a custom hardcoded palette to an item and all its "
"children, which allows to define such custom colors in one place and one "
"only:"
msgstr ""
"Хоча не рекомендовано використовувати жорстко прописані кольори, у Kirigami "
"передбачено зручніший у сенсі супроводу спосіб призначення нетипової жорстко "
"прописаної палітри для запису і усіх його дочірніх записів. Цей спосіб надає "
"змогу визначити такі нетипові кольори одноразово і у єдиному місці коду:"

#: content/docs/getting-started/kirigami/style-colors/index.md:127
msgid ""
"NOTE: regardless of the color set used, it is recommended to replace all "
"available colors in Theme, to avoid badly contrasting colors"
msgstr ""
"ЗАУВАЖЕННЯ: незалежно від використаного набору кольорів, рекомендуємо "
"замінити усі доступні кольори у Theme, щоб уникнути помилок із контрастністю "
"кольорів"

#: content/docs/getting-started/kirigami/style-colors/index.md:135
msgid "Redefine all the other colors you want"
msgstr "Перевизначення усіх інших потрібних кольорів"

#: content/docs/getting-started/kirigami/style-colors/index.md:137
msgid "This will be \"#b9d795\""
msgstr "Це буде \"#b9d795\""

#: content/docs/getting-started/kirigami/style-colors/index.md:141
msgid "This will be \"#465c2b\""
msgstr "Це буде \"#465c2b\""

#: content/docs/getting-started/kirigami/style-colors/index.md:157
msgid "Example with custom colors"
msgstr "Приклад із нетиповими кольорами"

#: content/docs/getting-started/kirigami/style-typography/index.md:0
msgid "Typography"
msgstr "Типографія"

#: content/docs/getting-started/kirigami/style-typography/index.md:12
msgid ""
"For demonstrative purposes, this tutorial uses an AbstractCard to make the "
"text examples clearer. A better way to achieve the same results would be to "
"use a [Kirigami Addons FormCard](/docs/getting-started/kirigami/addons-"
"introduction)."
msgstr ""
"З метою демонстрації, у цьому підручнику використано AbstractCard для "
"спрощення текстових прикладів. Кращим способом досягти тих самих результатів "
"було б використання [FormCard з додатків Kirigami](/docs/getting-started/"
"kirigami/addons-introduction)."

#: content/docs/getting-started/kirigami/style-typography/index.md:16
msgid "Headings"
msgstr "Заголовки"

#: content/docs/getting-started/kirigami/style-typography/index.md:18
msgid ""
"Kirigami provides a [Heading](docs:kirigami2;Heading) that can be used for "
"page or section titles."
msgstr ""
"У Kirigami передбачено [елемент заголовка](docs:kirigami2;Heading), яким "
"можна скористатися для заголовків сторінок або розділів."

#: content/docs/getting-started/kirigami/style-typography/index.md:72
msgid "Five headings with different levels for size comparison"
msgstr "П'ять заголовків із різними рівнями для порівняння розмірів"

#: content/docs/getting-started/kirigami/style-typography/index.md:78
msgid "Labels"
msgstr "Мітки"

#: content/docs/getting-started/kirigami/style-typography/index.md:80
msgid ""
"Text elements should use the [Label](docs:qtquickcontrols;QtQuick.Controls."
"Label) component from QtQuick Controls 2."
msgstr ""
"Текстові елементи мають використовувати компонент [Label](docs:"
"qtquickcontrols;QtQuick.Controls.Label) з QtQuick Controls 2."

#: content/docs/getting-started/kirigami/style-typography/index.md:119
msgid "Text Alignment"
msgstr "Вирівнювання тексту"

#: content/docs/getting-started/kirigami/style-typography/index.md:121
msgid ""
"You can align your text elements using the [horizontalAlignment](https://doc."
"qt.io/qt-6/qml-qtquick-text.html#horizontalAlignment-prop) and "
"[verticalAlignment](https://doc.qt.io/qt-6/qml-qtquick-text."
"html#verticalAlignment-prop) properties."
msgstr ""
"Ви можете вирівняти текстові елементи за допомогою властивостей "
"[horizontalAlignment](https://doc.qt.io/qt-6/qml-qtquick-text."
"html#horizontalAlignment-prop) і [verticalAlignment](https://doc.qt.io/qt-6/"
"qml-qtquick-text.html#verticalAlignment-prop)."

#: content/docs/getting-started/kirigami/style-typography/index.md:166
msgid "Heading and lorem ipsum text aligned to the horizontal center"
msgstr "Заголовок і текст lorem ipsum вирівняно горизонтально за центром"

#: content/docs/getting-started/kirigami/style-typography/index.md:215
msgid "Heading and lorem ipsum text using right-aligned text"
msgstr ""
"Заголовок і текст lorem ipsum з використанням вирівняного праворуч тексту"

#: content/docs/getting-started/kirigami/style-typography/index.md:266
msgid ""
"Heading with bottom vertical alignment and lorem ipsum text with top "
"vertical alignment"
msgstr ""
"Заголовок із вертикальним вирівнюванням вниз і текстом lorem ipsum із "
"вертикальним вирівнюванням вгору"

#: content/docs/getting-started/kirigami/style-typography/index.md:317
msgid ""
"Heading with top vertical alignment and lorem ipsum text with bottom "
"vertical alignment"
msgstr ""
"Заголовок із вертикальним вирівнюванням вгору і текстом lorem ipsum із "
"вертикальним вирівнюванням вниз"

#: content/docs/getting-started/kirigami/style-typography/index.md:323
msgid "Rich Text"
msgstr "Форматований текст"

#: content/docs/getting-started/kirigami/style-typography/index.md:325
msgid ""
"QML allows you to display (and edit) rich text. The behavior can be "
"controlled via the [textFormat](https://doc.qt.io/qt-6/qml-qtquick-text."
"html#textFormat-prop) property."
msgstr ""
"У QML передбачено можливість показу (і редагування) форматованого тексту. "
"Поведінкою засобу форматування можна керувати за допомогою властивості "
"[textFormat](https://doc.qt.io/qt-6/qml-qtquick-text.html#textFormat-prop)."

#: content/docs/getting-started/kirigami/style-typography/index.md:367
msgid ""
"A Label containing a list of fruits using HTML tags like paragraph, "
"unordered lists and bold fonts"
msgstr ""
"Мітка, що містить список фруктів із використанням теґів HTML, зокрема теґів "
"абзаців, неупорядкованих списків та напівжирних шрифтів"

#: content/docs/getting-started/kirigami/style-typography/index.md:375
msgid ""
"The font size of the [Kirigami.Theme](docs:kirigami2;Kirigami::Platform::"
"PlatformTheme) is available as `Kirigami.Theme.defaultFont.pointSize` in "
"your application."
msgstr ""
"Доступ до розміру шрифту [Kirigami.Theme](docs:kirigami2;Kirigami::Platform::"
"PlatformTheme) у вашій програмі можна отримати за допомогою `Kirigami.Theme."
"defaultFont.pointSize`."

#~ msgid ""
#~ "KDE has a custom tool to easily build all of its libraries and programs: "
#~ "**kde-builder**. It can be used to build Kirigami on Linux and FreeBSD."
#~ msgstr ""
#~ "У KDE передбачено нетиповий інструмент для спрощення збирання усіх "
#~ "бібліотек і програм: **kde-builder**. Ним можна скористатися для збирання "
#~ "Kirigami у Linux і FreeBSD."

#~ msgid ""
#~ "For this tutorial, you will need to follow the [setup instructions for "
#~ "kde-builder](/docs/getting-started/building/kde-builder-setup)."
#~ msgstr ""
#~ "Для цього підручника вам слід виконати [настанови з налаштовування kde-"
#~ "builder](/docs/getting-started/building/kde-builder-setup)."

#~ msgid ""
#~ "If you want kde-builder to handle building and installation of your "
#~ "project, you need to:"
#~ msgstr ""
#~ "Якщо ви хочете, щоб збиранням і встановленням вашого проєкту займалася "
#~ "програма kde-builder, вам слід виконати такі дії:"

#~ msgid ""
#~ "move the project folder to `~/kde/src`, that is, `~/kde/src/kirigami-"
#~ "tutorial`"
#~ msgstr ""
#~ "пересуньте теку проєкту до `~/kde/src`, тобто, `~/kde/src/kirigami-"
#~ "tutorial`"

#~ msgid "Then you can build and install it with the command:"
#~ msgstr ""
#~ "Далі, ви можете зібрати і встановити його за допомогою такої команди:"

#~ msgid ""
#~ "In case you want to handle building and installation manually without kde-"
#~ "builder, you will need to specify the place where the program will be "
#~ "installed. To do that, we need to change directories to our `kirigami-"
#~ "tutorial/` folder in our terminal application of choice and run the "
#~ "following commands:"
#~ msgstr ""
#~ "Якщо ви захочете виконати збирання і встановлення вручну, без kde-"
#~ "builder, вам слід вказати місце, куди буде встановлено програму. Для "
#~ "цього нам слід перейти до каталогу `kirigami-tutorial/` у нашій програмі-"
#~ "терміналі і віддати такі команди:"

#~ msgid "On Linux, with kdesrc-build"
#~ msgstr "У Linux за допомогою kdesrc-build"

#~ msgid ""
#~ "If you wish to build Kirigami with Qt6, it is recommended to use [kdesrc-"
#~ "build](#kdesrc-build) instead, especially for Linux installations using "
#~ "Plasma 5."
#~ msgstr ""
#~ "Якщо ви хочете зібрати Kirigami з Qt6, рекомендуємо натомість "
#~ "скористатися [kdesrc-build](#kdesrc-build), особливо для варіантів Linux "
#~ "на основі Плазми 5."

#~ msgid ""
#~ "The application's AboutPage is slightly more complex, but it's still very "
#~ "simple to use. We will be adding a new QML file that will contain the "
#~ "information needed for our about page. First in our `resources.qrc` file:"
#~ msgstr ""
#~ "Сторінка AboutPage програми трохи складніша, але користуватися нею все "
#~ "одно дуже просто. Ми додамо новий файл QML, який міститиме інформацію, "
#~ "необхідну для нашої сторінки з інформацією. Спочатку в нашому файлі "
#~ "`resources.qrc`:"

#~ msgid "And our `contents/ui/MyAboutPage.qml` should have the following:"
#~ msgstr "А наш `contents/ui/MyAboutPage.qml` має містити таке:"

#~ msgid ""
#~ "Here we use the information we set using [KAboutData](docs:kcoreaddons;"
#~ "KAboutData) in our `main.cpp`. Here's a brief reminder of what is in "
#~ "`main.cpp`:"
#~ msgstr ""
#~ "Тут ми використовуємо відомості, які встановлено за допомогою [KAboutData]"
#~ "(docs:kcoreaddons;KAboutData) у нашому `main.cpp`. Ось коротке "
#~ "нагадування того, що містить `main.cpp`:"

#~ msgid "<========== used in the import"
#~ msgstr "<========== використовують в імпортуванні"

#~ msgid "<========== C++ object exported as a QML type"
#~ msgstr "<========== Об'єкт C++ експортовано як тип QML"

#~ msgid ""
#~ "The `About` object we exported to the QML side using "
#~ "[qmlRegisterSingletonType()](docs:qtqml;QQmlEngine::"
#~ "qmlRegisterSingletonType) contains the data from [KAboutData::"
#~ "applicationData()](docs:kcoreaddons;KAboutData::applicationData), and "
#~ "that is what we pass to the `aboutData` property."
#~ msgstr ""
#~ "Об'єкт `About`, який ми експортували на бік QML за допомогою "
#~ "[qmlRegisterSingletonType()](docs:qtqml;QQmlEngine::"
#~ "qmlRegisterSingletonType), містить дані з [KAboutData::applicationData()]"
#~ "(docs:kcoreaddons;KAboutData::applicationData), і це те, що ми передаємо "
#~ "до властивості `aboutData`."

#~ msgid "Lastly, we add our new MyAboutPage to our `main.qml`:"
#~ msgstr "Нарешті, ми додаємо нашу нову MyAboutPage до нашого `main.qml`:"

#~ msgid ""
#~ "If you were wondering why the About page was kept separate rather than "
#~ "embedded in `main.qml`, that is because it allows to set a custom model "
#~ "for the `aboutData` property."
#~ msgstr ""
#~ "Якщо вам цікаво, чому сторінку About зберігали окремо, а не вбудовано в "
#~ "`main.qml`, це тому, що вона дозволяє встановити спеціальну модель для "
#~ "властивості `aboutData`."

#~ msgid "Add a new line to our `resources.qrc`:"
#~ msgstr "Додамо новий рядок до нашого `resources.qrc`:"

#~ msgid "A standard `resources.qrc`:"
#~ msgstr "Стандартний `resources.qrc`:"

#~ msgid "CardsGridView"
#~ msgstr "CardsGridView"

#~ msgid ""
#~ "Use a [Kirigami.CardsGridView](docs:kirigami2;CardsGridView) to display "
#~ "cards in a grid."
#~ msgstr ""
#~ "Скористайтеся [Kirigami.CardsGridView](docs:kirigami2;CardsGridView) для "
#~ "показу карток у таблиці."

#~ msgid ""
#~ "Its behavior is the same as a [CardsLayout](docs:kirigami2;CardsLayout), "
#~ "and it allows cards to be put in one or two columns depending on the "
#~ "available width."
#~ msgstr ""
#~ "Його поведінка є такою самою, що і [CardsLayout](docs:kirigami2;"
#~ "CardsLayout), і уможливлює розташування карток у один або два стовпчики, "
#~ "залежно від доступної ширини."

#~ msgid ""
#~ "[CardsGridView](docs:kirigami2;CardsGridView) has the limitation that "
#~ "every card must have the same exact height, so [cellHeight](https://doc."
#~ "qt.io/qt-6/qml-qtquick-gridview.html#cellHeight-prop) must be manually "
#~ "set to a value for which the content must fit for every child card."
#~ msgstr ""
#~ "[CardsGridView](docs:kirigami2;CardsGridView) має обмеження: усі картки "
#~ "повинні мати однакову висоту, тому для [cellHeight](https://doc.qt.io/"
#~ "qt-6/qml-qtquick-gridview.html#cellHeight-prop) слід вручну встановити "
#~ "значення, для якого вміст має бути відповідним для усіх дочірніх карток."

#~ msgid ""
#~ "If possible use [CardsGridView](docs:kirigami2;CardsGridView) only when "
#~ "you need to instantiate many cards. If you are only going to instantiate "
#~ "a few cards, opt for a [CardsLayout](docs:kirigami2;CardsLayout) with a "
#~ "[Repeater](docs:qtquick;QtQuick.Repeater) instead."
#~ msgstr ""
#~ "Якщо можна, користуйтеся [CardsGridView](docs:kirigami2;CardsGridView), "
#~ "лише якщо вам потрібно створити екземпляри багатьох карток. Якщо ви "
#~ "збираєтеся створити екземпляри лише декількох карток, скористайтеся "
#~ "замість нього [CardsLayout](docs:kirigami2;CardsLayout) із [Repeater]"
#~ "(docs:qtquick;QtQuick.Repeater)."

#~ msgid "Model with the following roles: text, actions and image"
#~ msgstr "Модель з такими ролями: текст, дії і зображення"

#~ msgid ""
#~ "![Screenshot of a CardsGridView where each card occupies the same amount "
#~ "of space in a grid](/docs/getting-started/kirigami/components-card/"
#~ "cardsgridview.png)"
#~ msgstr ""
#~ "![Знімок CardsGridView, де кожна картка займає однакове місце у таблиці](/"
#~ "docs/getting-started/kirigami/components-card/cardsgridview.png)"

#~ msgid ""
#~ "If you wish to build Kirigami with Qt6, this is currently not possible "
#~ "with only distribution packages on Linux. You will need to resort to "
#~ "[kdesrc-build](#kdesrc-build) instead."
#~ msgstr ""
#~ "Якщо ви хочете зібрати Kirigami з Qt6, у поточній версії це не можна "
#~ "зробити з використанням лише пакунків дистрибутива у Linux. Вам "
#~ "доведеться скористатися [kdesrc-build](#kdesrc-build)."

#~ msgid ""
#~ "When building the application after installing dependencies with Craft, "
#~ "just installing KIconThemes and Breeze ensures the application will be "
#~ "able to use Breeze icons on platforms like Windows, linking is not "
#~ "necessary. [qqc2-desktop-style](https://invent.kde.org/frameworks/qqc2-"
#~ "desktop-style) on the other hand is responsible for the nice looking "
#~ "style we want to enforce on those platforms."
#~ msgstr ""
#~ "При збирання програми після встановлення залежностей за допомогою Craft "
#~ "просте встановлення KIconThemes і Breeze забезпечує для програми "
#~ "можливість використання піктограм Breeze на платформах, подібних до "
#~ "Windows, окреме компонування не потрібне. З іншого боку, [qqc2-desktop-"
#~ "style](https://invent.kde.org/frameworks/qqc2-desktop-style) відповідає "
#~ "за приємний вигляд стилю, який ми примусово встановлюємо на відповідних "
#~ "платформах."

#~ msgid "If Visual Studio:"
#~ msgstr "Якщо Visual Studio:"

#~ msgid ""
#~ "If you ever need to uninstall your application from your system, you can "
#~ "run:"
#~ msgstr ""
#~ "Якщо вам колись захочеться вилучити вашу програму з системи, ви можете "
#~ "скористатися такою командою:"

#~ msgid ""
#~ "{{< readfile file=\"/content/docs/getting-started/kirigami/advanced-"
#~ "connect_models/model.h\" highlight=\"cpp\" >}} {{< readfile file=\"/"
#~ "content/docs/getting-started/kirigami/advanced-connect_models/model.cpp\" "
#~ "highlight=\"cpp\" >}} {{< readfile file=\"/content/docs/getting-started/"
#~ "kirigami/advanced-connect_models/main.qml\" highlight=\"qml\" >}}"
#~ msgstr ""
#~ "{{< readfile file=\"/content/docs/getting-started/kirigami/advanced-"
#~ "connect_models/model.h\" highlight=\"cpp\" >}} {{< readfile file=\"/"
#~ "content/docs/getting-started/kirigami/advanced-connect_models/model.cpp\" "
#~ "highlight=\"cpp\" >}} {{< readfile file=\"/content/docs/getting-started/"
#~ "kirigami/advanced-connect_models/main.qml\" highlight=\"qml\" >}}"

#~ msgid ""
#~ "The first word is the framework, Qt. `${QT_MAJOR_VERSION}` is a "
#~ "convenience variable provided by extra-cmake-modules that lets us choose "
#~ "the Qt version to be used, 5 or 6, depending on whether we use the CMake "
#~ "flag `-DBUILD_WITH_QT6=ON`."
#~ msgstr ""
#~ "Першим словом є бібліотека, Qt. `${QT_MAJOR_VERSION}` є зручною змінною, "
#~ "доступ до якої надає extra-cmake-modules. За її допомогою ми можемо "
#~ "вибрати використану версію Qt, 5 або 6, залежно від того, чи "
#~ "використовуємо ми прапорець CMake `-DBUILD_WITH_QT6=ON`."

#~ msgid ""
#~ "`NO_MODULE` switches CMake into the Config mode. We don't need to worry "
#~ "about that at the moment."
#~ msgstr ""
#~ "`NO_MODULE` перемикає CMake у режим Config. Зараз перейматися цим немає "
#~ "сенсу."

#~ msgid ""
#~ "Since most of the heavy lifting is done by the first file, this one is a "
#~ "lot shorter."
#~ msgstr ""
#~ "Оскільки більша частина визначається першим файлом, цей файл є набагато "
#~ "коротшим."

#~ msgid ""
#~ "[add_executable()](https://cmake.org/cmake/help/latest/command/"
#~ "add_executable.html) takes care of generating our executable."
#~ msgstr ""
#~ "[add_executable()](https://cmake.org/cmake/help/latest/command/"
#~ "add_executable.html) відповідає за створення нашого виконуваного файла."

#~ msgid ""
#~ "[install()](https://cmake.org/cmake/help/latest/command/install.html) "
#~ "puts our executable in its right place by using `"
#~ "${KDE_INSTALL_TARGETS_DEFAULT_ARGS}`, a convenience variable provided by "
#~ "[KDEInstallDirs](https://api.kde.org/ecm/manual/ecm-kde-modules.7.html) "
#~ "in extra-cmake-modules that installs executables and libraries in their "
#~ "right place for you without needing to specify the absolute path, "
#~ "similarly to [GNUInstallDirs](https://cmake.org/cmake/help/latest/module/"
#~ "GNUInstallDirs.html)."
#~ msgstr ""
#~ "[install()](https://cmake.org/cmake/help/latest/command/install.html) "
#~ "розташовує наш виконуваний файл у належному місці за допомогою `"
#~ "${KDE_INSTALL_TARGETS_DEFAULT_ARGS}`, зручної змінної, яку надає "
#~ "[KDEInstallDirs](https://api.kde.org/ecm/manual/ecm-kde-modules.7.html) у "
#~ "extra-cmake-modules, і яка встановлює виконувані файли та бібліотеки у "
#~ "належному місці, без потреби у визначенні абсолютних шляхів, подібно до "
#~ "[GNUInstallDirs](https://cmake.org/cmake/help/latest/module/"
#~ "GNUInstallDirs.html)."

#~ msgid ""
#~ "One of [Kirigami.Page](docs:kirigami2;Page)'s features is that Actions "
#~ "can be added to it."
#~ msgstr ""
#~ "Однією із можливостей [Kirigami.Page](docs:kirigami2;Page) є можливість "
#~ "додавання до неї дій."

#~ msgid ""
#~ "You can add a `actions.main` action, a `actions.left` and `actions.right` "
#~ "action and additional [context actions](../components-drawers#context-"
#~ "drawers) that are displayed on the toolbar if there is enough place or in "
#~ "a hamburger menu on smaller screens."
#~ msgstr ""
#~ "Ви можете додати кнопки `actions.main`, дій `actions.left` і `actions."
#~ "right` та додаткових [контекстних дій](../components-drawers#context-"
#~ "drawers), які буде показано на панелі інструментів, якщо на ній достатньо "
#~ "місця, або у меню на малих екранах."

#~ msgid ""
#~ "To make the context actions work on mobile, you need to add a "
#~ "[ContextDrawer](docs:kirigami2;ContextDrawer) to your [Kirigami."
#~ "ApplicationWindow](docs:kirigami2;ApplicationWindow)."
#~ msgstr ""
#~ "Щоб контекстні дії працювали на мобільних пристроях, вам слід додати "
#~ "[ContextDrawer](docs:kirigami2;ContextDrawer) до вашого [Kirigami."
#~ "ApplicationWindow](docs:kirigami2;ApplicationWindow)."

#~ msgid "Global Drawer"
#~ msgstr "Загальна панель"

#~ msgid "Global Drawer actions on a mobile device"
#~ msgstr "Пункти дій загальних панелей на мобільному комп'ютері"

#~ msgid ""
#~ "![A window showing a tool button \"Tool beep\" which is completely flat](/"
#~ "docs/getting-started/kirigami/components-controls/controls-toolbutton.png)"
#~ msgstr ""
#~ "![Вікно із показаною кнопкою інструмента «Tool beep», яка є повністю "
#~ "рівною](/docs/getting-started/kirigami/components-controls/controls-"
#~ "toolbutton.png)"

#~ msgid ""
#~ "We can also make it a tickmarked slider by setting the [stepSize](https://"
#~ "doc.qt.io/qt-6/qml-qtquick-controls2-rangeslider.html#stepSize-prop) "
#~ "property value to a number, in the exact same way as a standard slider."
#~ msgstr ""
#~ "Ми також можемо додати на лінію повзунка позначки встановленням для "
#~ "властивості [stepSize](https://doc.qt.io/qt-6/qml-qtquick-controls2-"
#~ "rangeslider.html#stepSize-prop) числового значення у точно такий самий "
#~ "спосіб, що і для стандартного повзунка."

#~ msgid "Banners"
#~ msgstr "Банери"

#~ msgid ""
#~ "Banners allow you to display a title and an icon at the top of your "
#~ "global drawer (even above the header)."
#~ msgstr ""
#~ "За допомогою банерів ви можете наказати програмі показувати заголовок і "
#~ "піктограму у верхній частині вашої загальної панелі (навіть над шапкою)."

#~ msgid ""
#~ "By default, banners are only visible on mobile environments. You can "
#~ "change this by setting the global drawer component's [bannerVisible](docs:"
#~ "kirigami2;GlobalDrawer) property to `true`."
#~ msgstr ""
#~ "Типово, банери буде показано лише у середовищах мобільних пристроїв. "
#~ "Змінити це можна встановленням для властивості [bannerVisible](docs:"
#~ "kirigami2;GlobalDrawer) компонента загальної панелі значення `true`."

#~ msgid ""
#~ "Titles, set with the [title](docs:kirigami2;GlobalDrawer::title) "
#~ "property, can be used to pretty up your global drawer and make it seem "
#~ "less sparse. More importantly, it can remind your users that this is a "
#~ "global and app-wide drawer rather than a local drawer."
#~ msgstr ""
#~ "Заголовками, встановленими за допомогою властивості [title](docs:"
#~ "kirigami2;GlobalDrawer::title), можна скористатися для удосконалення "
#~ "вигляду вашої загальної панелі і ущільнення компонування панелі. "
#~ "Важливіше, вони можуть нагадати вашим користувачам, що це загальна або "
#~ "загальнопрограмна висувна панель, а не локальна висувна панель."

#~ msgid ""
#~ "There is also a [titleIcon](docs:kirigami2;GlobalDrawer::titleIcon) "
#~ "property, which can be paired with your title to make the global drawer "
#~ "even more aesthetically pleasing. This icon will be placed to the left of "
#~ "the title."
#~ msgstr ""
#~ "Крім того, передбачено властивість [titleIcon](docs:kirigami2;"
#~ "GlobalDrawer::titleIcon), яку можна поєднати із заголовком з метою "
#~ "надання загальній панелі ще більш естетично привабливого вигляду. "
#~ "Піктограму буде розташовано ліворуч від заголовка."

#~ msgid "Global drawer with title and icon in banner"
#~ msgstr "Загальна висувна панель із заголовком та піктограмою у банері"

#~ msgid ""
#~ "On mobile, the drawer always consists of actions hidden behind a "
#~ "hamburger menu. It can be activated by tapping the hamburger menu or by "
#~ "swiping from the right edge to the middle of the screen in Left to Right "
#~ "mode or from the left edge in Right to Left mode. If you are on a desktop "
#~ "and want to test the mobile interface, you can run your application with "
#~ "the environment variable `QT_QUICK_CONTROLS_MOBILE=1`."
#~ msgstr ""
#~ "На мобільних пристроях висувна панель завжди складається з пунктів дій, "
#~ "які сховано під меню-гамбургером. Її можна активувати натисканням кнопки "
#~ "меню-гамбургера або проведенням пальцем від правого краю до середини "
#~ "екрана у режимі зліва праворуч або від лівого краю у режимі справа "
#~ "ліворуч. Якщо ви працюєте за робочою станцією і хочете тестувати "
#~ "мобільний інтерфейс, ви можете запустити вашу програму із встановленим "
#~ "значенням змінної середовища `QT_QUICK_CONTROLS_MOBILE=1`."

#~ msgid "Inline drawer on the bottom edge of the screen"
#~ msgstr "Вбудована висувна панель з нижнього краю екрана"

#~ msgid "A use case for bottom overlay drawers: NeoChat"
#~ msgstr "Використання накладних нижніх висувних панелей — NeoChat"

#~ msgid ""
#~ "NeoChat uses bottom overlay drawers to provide the user with a number of "
#~ "actions they can perform on a message they have long pressed. Here is a "
#~ "simplified example of what that looks like:"
#~ msgstr ""
#~ "NeoChat використовує нижні накладні висувні панелі для надання у "
#~ "відповідь на довге натискання на пункті повідомлення у розпорядження "
#~ "користувача декількох пунктів дій, які користувач може виконати із "
#~ "повідомленням. Ось спрощений приклад того, як це виглядає:"

#~ msgid "Message information"
#~ msgstr "Відомості щодо повідомлення"

#~ msgid "Message actions"
#~ msgstr "Дії з повідомленням"

#~ msgid "Creating a basic listview"
#~ msgstr "Створення базового списку"

#~ msgid ""
#~ "Providing a number for the model property will generate that number of "
#~ "data entries starting from 0."
#~ msgstr ""
#~ "Надання властивості моделі числового значення призведе до створення "
#~ "відповідної кількості записів даних, починаючи з 0."

#~ msgid ""
#~ "![A simple listview](/docs/getting-started/kirigami/components-listview/"
#~ "listview-simple.png)"
#~ msgstr ""
#~ "![Проста панель списку](/docs/getting-started/kirigami/components-"
#~ "listview/listview-simple.png)"

#~ msgid ""
#~ "In cases where your model data only contain a single piece of data, like "
#~ "in the example above, you can just grab the data in the model by "
#~ "referencing [modelData](https://doc.qt.io/qt-6/qtquick-modelviewsdata-"
#~ "modelview.html#models)."
#~ msgstr ""
#~ "У випадках, коли ваша модель даних містить лише один блок даних, подібно "
#~ "до наведеного вище прикладу, ви можете просто зібрати дані у модель "
#~ "використанням посилання [modelData](https://doc.qt.io/qt-6/qtquick-"
#~ "modelviewsdata-modelview.html#models)."

#~ msgid ""
#~ "A note on delegates: if your model contains objects with data in named "
#~ "properties, the name of these properties will be automatically exposed to "
#~ "your delegate and you will only need to use these names in your delegate."
#~ msgstr ""
#~ "Зауваження щодо делегатів: якщо ваша модель містить об'єкти із даними в "
#~ "іменованих властивостях, назву цих властивостей буде автоматично відкрито "
#~ "вашому делегату, і вам слід лише скористатися цими назвами у вашому "
#~ "делегаті."

#~ msgid ""
#~ "Kirigami offers a number of components that have been designed "
#~ "specifically for use in list views, such as [Kirigami.BasicListItem](docs:"
#~ "kirigami2;BasicListItem), [Kirigami.CheckableListItem](docs:kirigami2;"
#~ "CheckableListItem) and [Kirigami.SwipeListItem](docs:kirigami2;"
#~ "SwipeListItem), all of which build upon [Kirigami.AbstractListItem](docs:"
#~ "kirigami2;AbstractListItem). There are also [Kirigami.CheckDelegate](docs:"
#~ "kirigami2;CheckDelegate), [Kirigami.RadioDelegate](docs:kirigami2;"
#~ "RadioDelegate), and [Kirigami.SwitchDelegate](docs:kirigami2;"
#~ "SwitchDelegate), which are designed to take advantage of those specific "
#~ "controls."
#~ msgstr ""
#~ "Kirigami пропонує декілька компонентів, які було розроблено спеціально "
#~ "для використання на панелях списків, зокрема [Kirigami.BasicListItem]"
#~ "(docs:kirigami2;BasicListItem), [Kirigami.CheckableListItem](docs:"
#~ "kirigami2;CheckableListItem) і [Kirigami.SwipeListItem](docs:kirigami2;"
#~ "SwipeListItem), усі з них побудовано на основі [Kirigami.AbstractListItem]"
#~ "(docs:kirigami2;AbstractListItem). Також передбачено [Kirigami."
#~ "CheckDelegate](docs:kirigami2;CheckDelegate), [Kirigami.RadioDelegate]"
#~ "(docs:kirigami2;RadioDelegate) і [Kirigami.SwitchDelegate](docs:kirigami2;"
#~ "SwitchDelegate), які розроблено для того, щоб скористатися перевагами цих "
#~ "специфічних елементів керування."

#~ msgid ""
#~ "However, you are not limited to using these components and you can choose "
#~ "whichever ones you wish. This may require some tweaking of your layout."
#~ msgstr ""
#~ "Втім, вас не обмежено використанням цих компонентів, і ви можете вибрати "
#~ "будь-які компоненти — хоча це може потребувати певного коригування "
#~ "компонування."

#~ msgid "Placeholder messages"
#~ msgstr "Повідомлення-замінники"

#~ msgid ""
#~ "In some cases, you might want to use a list view that is empty until the "
#~ "user does something. In these situations, using a [Kirigami."
#~ "PlaceholderMessage](docs:kirigami2;PlaceholderMessage) can be an "
#~ "attractive way of telling your user that the list is empty and that they "
#~ "can do something about it."
#~ msgstr ""
#~ "У певних випадках може виникнути потреба у використанні порожньої панелі "
#~ "списку до моменту виконання якихось дій користувачем. Тоді, використання "
#~ "[Kirigami.PlaceholderMessage](docs:kirigami2;PlaceholderMessage) може "
#~ "бути привабливим способом повідомити користувачеві, що список порожній, і "
#~ "слід щось з цим робити."

#~ msgid ""
#~ "You will generally want to place a placeholder message in the center of "
#~ "the ListView and you will likely not want it to span the entire width of "
#~ "the ListView. You will obviously also want it to be hidden once the "
#~ "ListView's model becomes populated with data. Thankfully, ListViews have "
#~ "a property named [count](https://doc.qt.io/qt-6/qml-qtquick-listview."
#~ "html#count-prop) that makes doing this quite easy."
#~ msgstr ""
#~ "Зазвичай, повідомлення-замінник розташовують у центрі панелі списку. Не "
#~ "варто розгортати його на усю ширину панелі списку. Очевидно, у його "
#~ "показі вже не буде потреби, коли модель панелі списку почне заповнюватися "
#~ "даними — на щастя, у ListView є властивість із назвою [count](https://doc."
#~ "qt.io/qt-6/qml-qtquick-listview.html#count-prop), яка дає змогу зробити "
#~ "це доволі просто."

#~ msgid ""
#~ "You might also want to add a helpful action to your placeholder message. "
#~ "This can be done by attaching an action to the [PlaceholderMessage."
#~ "helpfulAction](docs:kirigami2;PlaceholderMessage::helpfulAction) property."
#~ msgstr ""
#~ "Також ви можете додати допоміжну дію до вашого повідомлення-замінника. "
#~ "Зробити це можна долучивши дію до властивості [PlaceholderMessage."
#~ "helpfulAction](docs:kirigami2;PlaceholderMessage::helpfulAction)."

#~ msgid ""
#~ "![An empty list view which displays a placeholder message in the middle "
#~ "of the application together with an action to add new data to the model](/"
#~ "docs/getting-started/kirigami/components-listview/listview-"
#~ "placeholdermessage.png)"
#~ msgstr ""
#~ "![Порожня панель списку, на якій показано повідомлення-замінник "
#~ "посередині вікна програми разом із кнопкою дії для додавання нових даних "
#~ "до моделі](/docs/getting-started/kirigami/components-listview/listview-"
#~ "placeholdermessage.png)"

#~ msgid "Overlay sheets"
#~ msgstr "Накладні аркуші"

#~ msgid ""
#~ "Overlay sheets can serve a variety of uses for both serving and inputting "
#~ "data."
#~ msgstr ""
#~ "Аркуші-накладки можуть обслуговувати спектр використань для обробки і "
#~ "введення даних."

#~ msgid "Learning about the sheet"
#~ msgstr "Знайомимося із аркушем"

#~ msgid ""
#~ "In order to use an overlay sheet, we should create it inside the Kirigami "
#~ "Page we want it to appear in."
#~ msgstr ""
#~ "Щоб скористатися аркушем-накладкою, вам слід створити його на сторінці "
#~ "Kirigami, на якій він має з'явитися."

#~ msgid ""
#~ "![Simple overlay sheet containing only text](/docs/getting-started/"
#~ "kirigami/components-overlaysheets/sheet_simple.png)"
#~ msgstr ""
#~ "![Простий накладний аркуш, що містить лише текст](/docs/getting-started/"
#~ "kirigami/components-overlaysheets/sheet_simple.png)"

#~ msgid ""
#~ "Overlay sheets come with methods we can use to [open()](docs:kirigami2;"
#~ "templates::OverlaySheet::open) or [close()](docs:kirigami2;templates::"
#~ "OverlaySheet::close) them as we see fit. By default overlay sheets are "
#~ "hidden, so at the very least we will need to use the `open()` method."
#~ msgstr ""
#~ "У аркушах-накладках передбачено методи, якими можна скористатися для "
#~ "відкриття ([open()](docs:kirigami2;templates::OverlaySheet::open)) або "
#~ "закриття ([close()](docs:kirigami2;templates::OverlaySheet::close)) цих "
#~ "аркушів на вимогу. Типово, аркуші-накладки приховано, отже, принаймні, "
#~ "нам потрібно буде скористатися методом `open()`."

#~ msgid ""
#~ "When opened, this overlay sheet will appear centered vertically and "
#~ "horizontally within its parent page. Horizontally it will be bounded by "
#~ "its parent even if the width of its contents exceeds its parent's. If the "
#~ "sheet's vertical length exceeds its parent's, then the sheet will be "
#~ "displayed starting from its top position, and will be scrollable."
#~ msgstr ""
#~ "У відкритому стані цей аркуш-накладку буде показано центрованим "
#~ "вертикально і горизонтально на його батьківській сторінці. Горизонтально "
#~ "його буде обмежено його батьківським елементом, навіть якщо ширина його "
#~ "вмісту перевищуватиме ширину батьківського елемента. Якщо вертикальна "
#~ "довжина аркуша перевищує вертикальну довжину батьківського елемента, "
#~ "аркуш буде показано з його верхньої позиції і буде передбачено гортання."

#~ msgid "Global sheet"
#~ msgstr "Загальний аркуш"

#~ msgid ""
#~ "If you want to display the sheet as a global sheet—one that spans across "
#~ "the entire width of the application, regardless of the page it is a child "
#~ "to—we have to reparent our overlay sheet to our application window's "
#~ "overlay property. We can do this with the [parent](https://doc.qt.io/qt-6/"
#~ "qml-qtquick-item.html#parent-prop) property."
#~ msgstr ""
#~ "Якщо вам потрібно показати аркуш як загальний — такий, що вкриває усю "
#~ "ширину вікна програми, незалежно від сторінки, дочірнім елементом якої "
#~ "він є — слід змінити батьківський елемент нашого аркуша-накладки на "
#~ "властивість накладки вікна програми. Зробити це можна за допомогою "
#~ "властивості [parent](https://doc.qt.io/qt-6/qml-qtquick-item.html#parent-"
#~ "prop)."

#~ msgid "Non-global overlay sheet"
#~ msgstr "Незагальний аркуш-накладка"

#~ msgid "Global overlay sheet"
#~ msgstr "Загальний аркуш-накладка"

#~ msgid "Fixed sizing"
#~ msgstr "Фіксований розмір"

#~ msgid ""
#~ "A sheet is greedy and will take the maximum amount of available width in "
#~ "a page if needed. We can avoid this by specifying an [implicitWidth]"
#~ "(https://doc.qt.io/qt-6/qml-qtquick-item.html#implicitWidth-prop) or a "
#~ "[Layout.preferredWidth](https://doc.qt.io/qt-6/qml-qtquick-layouts-layout."
#~ "html#preferredWidth-attached-prop) for its child elements, which will "
#~ "limit how much the sheet will grow width wise."
#~ msgstr ""
#~ "Аркуш є жадібним і захоплюватиме максимальну можливу ширину на сторінці, "
#~ "якщо у цьому виникне потреба. Уникнути цього можна заданням властивості "
#~ "[implicitWidth](https://doc.qt.io/qt-6/qml-qtquick-item."
#~ "html#implicitWidth-prop) або властивості Layout.preferredWidth](https://"
#~ "doc.qt.io/qt-6/qml-qtquick-layouts-layout.html#preferredWidth-attached-"
#~ "prop) для його дочірніх елементів. Таким чином буде обмежено можливості "
#~ "зі зростання ширини аркуша."

#~ msgid "Non-fixed width overlay sheet"
#~ msgstr "Аркуш-накладка нефіксованої ширини"

#~ msgid "Fixed width overlay sheet"
#~ msgstr "Аркуш-накладка фіксованої ширини"

#~ msgid "Headers and footers"
#~ msgstr "Шапки і підвали"

#~ msgid ""
#~ "Overlay sheets come by default with a [header](docs:kirigami2;templates::"
#~ "OverlaySheet::header) that only contains a button for closing our overlay "
#~ "sheet. We can add a [Kirigami.Heading](docs:kirigami2;Heading) as a title "
#~ "in our [header](docs:kirigami2;templates::OverlaySheet::header) to make "
#~ "it easy for users to understand what the sheet is for. This is done by "
#~ "setting `header` to contain our heading component."
#~ msgstr ""
#~ "Типові аркуші-накладки містять [header](docs:kirigami2;templates::"
#~ "OverlaySheet::header), на якій розташовано лише кнопку для закриття "
#~ "аркуша-накладки. Мона додати [Kirigami.Heading](docs:kirigami2;Heading) "
#~ "як заголовок до шапки аркуша, щоб спростити розуміння користувачами "
#~ "призначення аркуша. Зробити це можна за допомогою встановлення  "
#~ "відповідного значення властивості `header` — слід пов'язати із нею "
#~ "компонент шапки Kirigami."

#~ msgid ""
#~ "![Overlay sheet with title text in its header area](/docs/getting-started/"
#~ "kirigami/components-overlaysheets/sheet_header.png)"
#~ msgstr ""
#~ "![Аркуш-накладка з текстом заголовка у області верхнього колонтитула](/"
#~ "docs/getting-started/kirigami/components-overlaysheets/sheet_header.png)"

#~ msgid ""
#~ "We can also provide our overlay sheet with a [footer](docs:kirigami2;"
#~ "templates::OverlaySheet::footer). Footers in overlay sheets are quite "
#~ "flexible, but most often they are used to provide overlay sheets with "
#~ "some sort of quick interactive input similar to that provided by modal "
#~ "dialogs (e.g. buttons for \"Apply\", \"Ok\", \"Cancel\", \"Close\", etc.)"
#~ msgstr ""
#~ "Ми також можемо надати нашому аркушу-накладці [підвал](docs:kirigami2;"
#~ "templates::OverlaySheet::footer) або нижній колонтитул. Підвали у аркушах-"
#~ "накладках є доволі гнучкими елементами, але часто їх використовують для "
#~ "надання аркушам-накладкам певної можливості швидкого інтерактивного "
#~ "надання даних, подібного до того, який надають модальні діалогові вікна "
#~ "(наприклад кнопок для дій «Застосувати», «Гаразд», «Скасувати» тощо)"

#~ msgid "Footers are set in much the same way as headers:"
#~ msgstr "Підвали можна налаштувати майже у той самий спосіб, що і шапки:"

#~ msgid ""
#~ "![Overlay sheet with a button in its footer area](/docs/getting-started/"
#~ "kirigami/components-overlaysheets/sheet_footer.png)"
#~ msgstr ""
#~ "![Аркуш-накладка з кнопкою у його області нижнього колонтитула](/docs/"
#~ "getting-started/kirigami/components-overlaysheets/sheet_footer.png)"

#~ msgid "Using delegate / model views"
#~ msgstr "Користування панелями делегата і моделі"

#~ msgid ""
#~ "Since overlay sheets are designed to display vertical content, they can "
#~ "be especially useful when used in conjunction with components such as "
#~ "[ListViews](docs:qtquick;QtQuick.ListView). When displaying content "
#~ "longer than the application window itself, the overlay sheet becomes "
#~ "scrollable:"
#~ msgstr ""
#~ "Оскільки аркуші-накладки було розроблено для вертикального показу вмісту, "
#~ "вони можуть бути особливо корисними при використанні у поєднанні із "
#~ "компонентами, подібними до [панелей списків](docs:qtquick;QtQuick."
#~ "ListView). При показі вмісту, який є довшим за вікно програми, на аркушах-"
#~ "накладках з'являється смужка гортання:"

#~ msgid ""
#~ "![Overlay sheet with a listview](/docs/getting-started/kirigami/"
#~ "components-overlaysheets/sheet_listview.png)"
#~ msgstr ""
#~ "![Аркуш-накладка із списком](/docs/getting-started/kirigami/components-"
#~ "overlaysheets/sheet_listview.png)"

#~ msgid ""
#~ "![A busy indicator](/docs/getting-started/kirigami/components-"
#~ "progressbars/busyindicator.png)"
#~ msgstr ""
#~ "![Індикатор зайнятості](/docs/getting-started/kirigami/components-"
#~ "progressbars/busyindicator.png)"

#~ msgid "Page actions on mobile"
#~ msgstr "Пункти дій на мобільному пристрої"

#~ msgid ""
#~ "We are placing our Kirigami Action within our main page from our previous "
#~ "tutorials. If we wanted to, we could add more actions to our page (and "
#~ "even nest actions within actions!). [Kirigami.Action](docs:kirigami2;"
#~ "Action) components are used as contextual actions within Kirigami pages. "
#~ "We are setting it specifically to the [actions.main](docs:kirigami2;Page::"
#~ "actions) property of our [Kirigami.Page](docs:kirigami2;Page): the "
#~ "`actions` object has properties that let us set different actions in "
#~ "different positions, but since our \"Add kountdown\" action is central to "
#~ "our UI we are setting it as the main action of this page."
#~ msgstr ""
#~ "Ми розташовуємо нашу дію Kirigami у нашій головній сторінці з попередніх "
#~ "розділів нашого підручника. Якщо нам захочеться, ми можемо додати інші "
#~ "дії на нашу сторінку (і навіть вкласти дії в інші дії!). Компоненти "
#~ "[Kirigami.Action](docs:kirigami2;Action) використовують як контекстні дії "
#~ "у межах сторінок Kirigami. Ми надаємо це значення властивості [actions."
#~ "main](docs:kirigami2;Page::actions) [Kirigami.Page](docs:kirigami2;Page): "
#~ "об'єкт `actions` має властивості, які надають нам можливість "
#~ "встановлювати різні дії у різних позиціях, але оскільки наша дія «Add "
#~ "kountdown» є центральною для нашого інтерфейсу користувача, ми робимо її "
#~ "основною дією нашої сторінки."

#~ msgid ""
#~ "Did you notice those three lines next to the page title on the previous "
#~ "screenshot? That's a hamburger menu that opens a [Kirigami.GlobalDrawer]"
#~ "(docs:kirigami2;GlobalDrawer). Global drawers are useful for global "
#~ "navigation and actions: in other words, those things you might need to "
#~ "use throughout your application. We are going to create a simple global "
#~ "drawer that includes a \"quit\" button."
#~ msgstr ""
#~ "Помітили три риски поряд із заголовком сторінки на попередньому знімку "
#~ "вікна? Це меню-гамбургер, яке відкриває [Kirigami.GlobalDrawer](docs:"
#~ "kirigami2;GlobalDrawer). Загальні висувні панелі корисні для загальної "
#~ "навігації і дій: іншими словами, тих речей, які можуть знадобитися усюди "
#~ "у вашій програмі. Ми створимо просту загальну висувну панель, на якій "
#~ "міститиметься кнопка виходу з програми."

#~ msgid ""
#~ "And then you may compile your Kirigami projects on the same terminal "
#~ "shell you used to source the prefix file. If you close your terminal, you "
#~ "can simply source the file again to compile your app."
#~ msgstr ""
#~ "А потім ви зможете збирати ваші проєкти Kirigami у тій самій оболонці "
#~ "термінала, якою ви скористалися для отримання файла префікса. Якщо ви "
#~ "закриєте термінал, ви можете просто ще раз отримати цей файл, щоб зібрати "
#~ "вашу програму."

#~ msgid ""
#~ "Alternatively, you may want to use the standard Kirigami template "
#~ "provided by [KDevelop](https://apps.kde.org/kdevelop/), KDE's main IDE "
#~ "for coding in C++ and QML. [KAppTemplate](https://apps.kde.org/"
#~ "kapptemplate/) is also available if you only need a quick template to "
#~ "start coding in your favorite IDE or text editor."
#~ msgstr ""
#~ "Крім того, можливо, вам варто скористатися стандартним шаблоном Kirigami, "
#~ "який надає [KDevelop](https://apps.kde.org/kdevelop/), основне комплексне "
#~ "середовище розробки KDE для програмування мовами C++ і QML. Також можна "
#~ "скористатися [KAppTemplate](https://apps.kde.org/kapptemplate/), якщо вам "
#~ "потрібне лише швидке отримання початкового шаблона для програмування у "
#~ "вашому комплексному середовищі розробки або текстовому редакторі."

#~ msgid ""
#~ "This is a KDE convention, but not all KDE projects use this structure. "
#~ "You are free to set things up differently, but you will have to take this "
#~ "into account when creating your `CMakeLists.txt` and `resources.qrc` "
#~ "files."
#~ msgstr ""
#~ "Це загальні угоди KDE, але ця структура використовується не в усіх "
#~ "проєктах KDE. Ви можете скомпонувати ваші частини програми інакше, але це "
#~ "слід взяти до уваги при створенні ваших файлів `CMakeLists.txt` і "
#~ "`resources.qrc`."

#~ msgid "resources.qrc"
#~ msgstr "resources.qrc"

#~ msgid ""
#~ "Our `resources.qrc` is a [Qt Resource file](https://doc.qt.io/qt-5/"
#~ "resources.html). It contains the list of all QML files as well as other "
#~ "files (like custom icons) that will be included in the binary."
#~ msgstr ""
#~ "Наш `resources.qrc` є [файл ресурсів Qt](https://doc.qt.io/qt-5/resources."
#~ "html) і містить список усіх файлів QML, а також усіх інших файлів "
#~ "(зокрема нетипових піктограм), які буде включено до виконуваного файла."

#~ msgid ""
#~ "Notice the line `<file alias=\"main.qml\">contents/ui/main.qml</file>`. "
#~ "It details which QML files are going to be included in the compilation "
#~ "process. In our case we are only using `main.qml`, but if we were to add "
#~ "more QML files to our code, we'd need to make sure we include it in "
#~ "`resources.qrc` file by adding another line like this one."
#~ msgstr ""
#~ "Зауважте рядок `<file alias=\"main.qml\">contents/ui/main.qml</file>`. "
#~ "Цей рядок вказує, які файли QML буде включено у процесі компіляції. У "
#~ "нашому випадку ми використовуємо лише `main.qml`, але якщо б нам "
#~ "захотілося додати до нашого коду інші файли QML, нам довелося б включити "
#~ "їх до `resources.qrc` додаванням подібних рядків."

#~ msgid ""
#~ "This resource file lets us use the \"qrc:\" + \"/main.qml\" path in our "
#~ "`main.cpp`, instead of needing to specify the whole \"contents/ui/main.qml"
#~ "\" path."
#~ msgstr ""
#~ "Цей файл ресурсів надає нам змогу скористатися шляхом \"qrc:\" + \"/main."
#~ "qml\" у нашому `main.cpp`, замість потреби у визначенні повного шляху "
#~ "\"contents/ui/main.qml\"."

#~ msgid "This one's a lot shorter! Let's go through what it does:"
#~ msgstr "Він набагато коротший! Ознайомимося з його вмістом:"

#~ msgid ""
#~ "[target_link_libraries()](https://cmake.org/cmake/help/latest/command/"
#~ "target_link_libraries.html) links the libraries used in our code to our "
#~ "executable."
#~ msgstr ""
#~ "[target_link_libraries()](https://cmake.org/cmake/help/latest/command/"
#~ "target_link_libraries.html) пов'язує ціль із бібліотеками, які "
#~ "використовуються у нашому коді для створення виконуваного файла."

#~ msgid ""
#~ "Note that these libraries should match the components that we included in "
#~ "our previous `CMakeLists.txt` file—otherwise these components will not be "
#~ "included and our application won't compile."
#~ msgstr ""
#~ "Зауважте, що ці бібліотеки мають відповідати компонентам, які ми включили "
#~ "до нашого попереднього файла CMakeLists.txt — інакше ці компоненти не "
#~ "буде включено і нашу програму не можна буде зібрати."

#~ msgid "Using Kirigami Gallery"
#~ msgstr "Користування галереєю Kirigami"

#~ msgid "Using Kirigami Gallery to find code patterns\n"
#~ msgstr "Використання Галереї Kirigami для пошуку взірців коду\n"

#~ msgid ""
#~ "[Kirigami Gallery](https://apps.kde.org/kirigami2.gallery/) is a helpful "
#~ "friend when developing a Kirigami application. It is an application that "
#~ "uses core Kirigami features, provides links to the source code, tips on "
#~ "how to use Kirigami components, and links to the corresponding HIG pages."
#~ msgstr ""
#~ "[Галерея Kirigami](https://apps.kde.org/kirigami2.gallery/) — ваш друг-"
#~ "помічник у розробці програм Kirigami. Це програма, яка використовує "
#~ "основні можливості Kirigami, надає посилання на початковий код, підказки "
#~ "щодо використання компонентів, а також посилання на відповідні сторінки "
#~ "настанов щодо зручності інтерфейсу (HIG)."

#~ msgid ""
#~ "Before continuing please install Kirigami Gallery. It should already be "
#~ "in the repository of your Linux distribution."
#~ msgstr ""
#~ "Перш ніж продовжувати, встановіть Галерею Kirigami. Відповідні пакунки "
#~ "можна знайти у сховищах пакунків вашого дистрибутива Linux."

#~ msgid "Finding a card grid"
#~ msgstr "Пошук таблиці карток"

#~ msgid ""
#~ "Navigating through the Kirigami Gallery application, we will stumble upon "
#~ "the \"Grid view with cards\" gallery component. This is an example that "
#~ "can be applied to multiple use cases, such as contact cards."
#~ msgstr ""
#~ "Здійснюючи навігацію програмою «Галерея Kirigami», ми знаходимо компонент "
#~ "«Режим таблиці карток» («Grid view of cards»). Це приклад, який можна "
#~ "застосувати до декількох випадків використання, зокрема для показу "
#~ "таблиці карток контактів."

#~ msgid "![List of kirigami gallery components](components.webp)"
#~ msgstr "![Список компонентів галереї kirigami](components.webp)"

#~ msgid ""
#~ "After selecting the \"Grid view of cards\" gallery component, if we click "
#~ "the \"Info\" button on the top right, we will get some useful information "
#~ "about the Card and Abstract Card types."
#~ msgstr ""
#~ "Після вибору пункту «Grid view of cards», якщо ми натиснемо кнопку «Info» "
#~ "у верхній правій частині вікна, ми отримаємо певні корисні відомості щодо "
#~ "типів Card і Abstract Card."

#~ msgid "![Kirigami gallery grid view](cards.webp)"
#~ msgstr "![Панель таблиці галереї Kirigami](cards.webp)"

#~ msgid ""
#~ "In the bottom section of this information dialog we will also find a link "
#~ "to the source code of the \"Cards Grid View\". Let's navigate to this "
#~ "page."
#~ msgstr ""
#~ "У нижній частині цього вікна відомостей ми також знайдемо посилання на "
#~ "початковий код панелі таблиці карток. Перейдемо до цієї сторінки."

#~ msgid "Implementing a card grid"
#~ msgstr "Реалізація таблиці карток"

#~ msgid ""
#~ "We will reuse most of the code found in the [source code of the "
#~ "CardsGridViewGallery component](https://invent.kde.org/sdk/kirigami-"
#~ "gallery/-/blob/master/src/data/contents/ui/gallery/CardsGridViewGallery."
#~ "qml). In particular, we will remove the extra parts of the [OverlaySheet]"
#~ "(docs:kirigami2;OverlaySheet) (which is the pop-up we used to reach the "
#~ "kirigami-gallery source code repository)."
#~ msgstr ""
#~ "Ми повторно використаємо більшу частину коду, який зберігається на "
#~ "[сторінці початкового коду компонента CardsGridViewGallery](https://"
#~ "invent.kde.org/sdk/kirigami-gallery/-/blob/master/src/data/contents/ui/"
#~ "gallery/CardsGridViewGallery.qml). Зокрема, ми вилучимо зайві частини "
#~ "[OverlaySheet](docs:kirigami2;OverlaySheet) (який є реалізацією галереї "
#~ "Kirigami, яка допомогла нам дістатися сховища початкового коду kirigami-"
#~ "gallery)."

#~ msgid ""
#~ "So, we are going to substitute the [Page](docs:kirigami2;Page) component "
#~ "of `main.qml` of our skeleton app with the below [ScrollablePage](docs:"
#~ "kirigami2;ScrollablePage):"
#~ msgstr ""
#~ "Отже, ми маємо намір замінити компонент [Page](docs:kirigami2;Page) main."
#~ "qml базової програми наведеними нижче кодом [сторінки із гортанням](docs:"
#~ "kirigami2;ScrollablePage):"

#~ msgid ""
#~ "What we have done so far is to create a [ScrollablePage](docs:kirigami2;"
#~ "ScrollablePage) and put a [CardsGridView](docs:kirigami2;CardsGridView) "
#~ "into it, since we want to display a grid of Cards generated from a model. "
#~ "The data of each contact is provided by a [ListModel](https://doc.qt.io/"
#~ "qt-6/qml-qtqml-models-listmodel.html) while the card delegate is "
#~ "responsible for the presentation of the data. For more info about models "
#~ "and views in Qt Quick, see [here](https://doc.qt.io/qt-5/qtquick-"
#~ "modelviewsdata-modelview.html)."
#~ msgstr ""
#~ "Ми вже створили [ScrollablePage](docs:kirigami2;ScrollablePage) і "
#~ "вставили до нього [CardsGridView](docs:kirigami2;CardsGridView), оскільки "
#~ "нам потрібно показати таблицю карток, створену на основі моделі. Дані "
#~ "кожного з контактів надаються [ListModel](https://doc.qt.io/qt-6/qml-"
#~ "qtqml-models-listmodel.html>), а за показ даних відповідає делегат "
#~ "картки. Щоб дізнатися більше про моделі і панелі перегляду у Qt Quick, "
#~ "зверніться до [цієї сторінки](https://doc.qt.io/qt-5/qtquick-"
#~ "modelviewsdata-modelview.html)."

#~ msgid ""
#~ "Now let's populate the model that will feed our grid view with data. In "
#~ "the definition of [Kirigami.ScrollablePage](docs:kirigami2;"
#~ "ScrollablePage), just after:"
#~ msgstr ""
#~ "Тепер заповнимо модель, яка надаватиме вашій панелі таблиці дані. У "
#~ "визначенні [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage), "
#~ "одразу після:"

#~ msgid "add the following:"
#~ msgstr "додайте таке:"

#~ msgid ""
#~ "Notice the `{}` that indicates we are appending a JavaScript object to "
#~ "our model."
#~ msgstr ""
#~ "Зауважте, що використано `{}`, що вказує на те, що ми дописуємо об'єкт "
#~ "JavaScript до нашої моделі."

#~ msgid ""
#~ "The model part of our implementation is ready. Let's proceed to defining "
#~ "a delegate that will be responsible for displaying the data. So, we add "
#~ "the following code to the `main.qml` page, just after the [Component."
#~ "onCompleted](docs:qtqml;QtQml.Component::completed) definition:"
#~ msgstr ""
#~ "Частина нашої реалізації, пов'язана із моделлю, готова. Продовжимо "
#~ "визначенням делегата, який відповідатиме за показ даних. Отже, ми додаємо "
#~ "такий код на сторінку main.qml одразу після визначення [Component."
#~ "onCompleted](docs:qtqml;QtQml.Component::completed):"

#~ msgid ""
#~ "Following the related information on the [Kirigami.Card API page](docs:"
#~ "kirigami2;Card), we populate a \"[banner](docs:kirigami2;Card::banner)\" "
#~ "that will act as a header to display the name of the contact as well as a "
#~ "contact icon."
#~ msgstr ""
#~ "Виконуючи настанови на [сторінці програмного інтерфейсу](docs:kirigami2;"
#~ "Card) ми заповнюємо «[банер](docs:kirigami2;Card::banner)», який "
#~ "слугуватиме верхнім колонтитулом, який показуватиме ім'я контакту, а "
#~ "також піктограму контакту."

#~ msgid ""
#~ "The main content of the card has been populated with the cell phone "
#~ "number and the email of the contact, structured as a [Column](docs:"
#~ "qtquick;QtQuick.Column) of [Labels](docs:qtquickcontrols;QtQuick.Controls."
#~ "Label)."
#~ msgstr ""
#~ "Основний вміст картки заповнюватиметься номером мобільного телефону та "
#~ "адресою електронної пошти контакту із структуруванням за [стовпчиком]"
#~ "(docs:qtquick;QtQuick.Column) [міток](docs:qtquickcontrols;QtQuick."
#~ "Controls.Label)."

#~ msgid "The application should look like this:"
#~ msgstr "Вікно програми має виглядати так:"

#~ msgid "![Simple grid of cards](implementation.png)"
#~ msgstr "![Проста таблиця карток](implementation.png)"

#~ msgid ""
#~ "You can find the full source code of the tutorial at [invent.kde.org]"
#~ "(https://invent.kde.org/dkardarakos/kirigami-tutorial)."
#~ msgstr ""
#~ "Повний початковий код підручника можна знайти на [invent.kde.org](https://"
#~ "invent.kde.org/dkardarakos/kirigami-tutorial)."

#~ msgid ""
#~ "As a last step we will add some dummy functionality to each card. In "
#~ "particular, a `call` [Action](docs:kirigami2;Action) will be added. "
#~ "Nevertheless, instead of a real call, a passive notification will be "
#~ "displayed. So, let's change the `card` component to the following:"
#~ msgstr ""
#~ "На останньому кроці ми додамо певну фіктивну функціональність для кожної "
#~ "картки. Зокрема, буде додано [дію](docs:kirigami2;Action) "
#~ "«call» («виклик»). Замість реального виклику буде показано пасивне "
#~ "сповіщення. Отже, змінимо компонент картки на таке:"

#~ msgid ""
#~ "So, we added a [Kirigami.Action](docs:kirigami2;Action) that, as soon as "
#~ "it is triggered (by pressing the action button), displays a [passive "
#~ "notification](docs:kirigami2;AbstractApplicationWindow::"
#~ "showPassiveNotification)."
#~ msgstr ""
#~ "Отже, нами додано [Kirigami.Action](docs:kirigami2;Action), яка при "
#~ "вмиканні (натисканні кнопки дії) покаже [пасивне сповіщення](docs:"
#~ "kirigami2;AbstractApplicationWindow::showPassiveNotification)."

#~ msgid "Result"
#~ msgstr "Результат"

#~ msgid "Finally, our application should look like this:"
#~ msgstr "Нарешті, вікно нашої програми має виглядати так:"

#~ msgid "![Grid with calling action triggered](implementation-actions.png)"
#~ msgstr "![Таблиця із увімкненою дією виклику](implementation-actions.png)"

#~ msgid ""
#~ "Don't be scared by the big chunks of code! We'll be going over everything "
#~ "that we haven't covered before, and by the end of this section you'll "
#~ "have a neat-looking app."
#~ msgstr ""
#~ "Не лякайтеся великих фрагментів коду! Ми розберемо усе, що ми ще не "
#~ "обговорювали раніше, і наприкінці цього розділу ви матимете програму, яка "
#~ "виглядатиме лаконічно."

#~ msgid "![Screenshot showing how a Card looks like](CardDesign.png)"
#~ msgstr "![Знімок вигляду Card](CardDesign.png)"

#~ msgid "Creating overlay sheets"
#~ msgstr "Створення аркушів-накладок"

#~ msgid ""
#~ "The parse() method parses a string and returns the number of milliseconds "
#~ "since January 1, 1970, 00:00:00 UTC."
#~ msgstr ""
#~ "Метод parse() обробляє рядок і повертає кількість мілісекунд з моменту "
#~ "часу 1 січня 1970 року, 00:00:00 UTC."

#~ msgid ""
#~ "We can give overlay sheets a header. These are set with the [header](docs:"
#~ "kirigami2;templates::OverlaySheet::header) property. We have provided "
#~ "ours with a [Kirigami.Heading](docs:kirigami2;Heading) containing a "
#~ "relevant title: \"Add Kountdown\"."
#~ msgstr ""
#~ "Для аркушів-накладок можна визначати заголовки. Заголовки визначаються "
#~ "властивістю `[header](docs:kirigami2;templates::OverlaySheet::header). Ми "
#~ "надали цій властивості у нашому випадку значення [Kirigami.Heading](docs:"
#~ "kirigami2;Heading), які містить відповідний заголовок: «Add Kountdown»."

#~ msgid ""
#~ "Within each of these [Controls.Textfield](docs:qtquickcontrols;QtQuick."
#~ "Controls.TextField) elements, we are setting a [Kirigami.FormData.label]"
#~ "(docs:kirigami2;FormLayoutAttached::label) property that lets us define "
#~ "labels for them. The form will present the correct labels to the left of "
#~ "each of these text input fields. We are also setting placeholder text "
#~ "inside the fields with the [TextField.placeholderText](https://doc.qt.io/"
#~ "qt-5/qml-qtquick-controls2-textfield.html#placeholderText-prop) property, "
#~ "which will disappear as soon as the user begins typing in the field. "
#~ "Finally, we are also setting the [onAccepted](https://doc.qt.io/qt-6/qml-"
#~ "qtquick-textinput.html#accepted-signal) property to trigger the "
#~ "[forceActiveFocus()](https://doc.qt.io/qt-6/qml-qtquick-item."
#~ "html#forceActiveFocus-method) method of the following field; this will "
#~ "switch the active field once the user hits the ENTER key, improving the "
#~ "usability of our form."
#~ msgstr ""
#~ "У кожному з цих елементів [Controls.Textfield](docs:qtquickcontrols;"
#~ "QtQuick.Controls.TextField) ми встановлюємо значення властивості "
#~ "[Kirigami.FormData.label](docs:kirigami2;FormLayoutAttached::label), яка "
#~ "надає нам змогу визначити мітки для елементів. Форма покаже належні мітки "
#~ "ліворуч від кожного з цих текстових полів введення. Ми також визначаємо "
#~ "текст-замінник у полях за допомогою властивості [TextField."
#~ "placeholderText](https://doc.qt.io/qt-5/qml-qtquick-controls2-textfield."
#~ "html#placeholderText-prop) — цей текст зникне, щойно користувач почне "
#~ "вводити текст у поле. Нарешті, ми встановлюємо значення властивості "
#~ "[onAccepted](https://doc.qt.io/qt-6/qml-qtquick-textinput.html#accepted-"
#~ "signal) для вмикання методу [forceActiveFocus()](https://doc.qt.io/qt-6/"
#~ "qml-qtquick-item.html#forceActiveFocus-method) наступного поля; ця "
#~ "властивість перемкне активне поле, щойно користувач натисне клавішу "
#~ "ENTER. Така поведінка робить користування формою зручнішим."

#~ msgid ""
#~ "At the end of our form we are including a [Button](docs:qtquickcontrols;"
#~ "QtQuick.Controls.Button) that adds our new countdown to the list model. "
#~ "We have set its [enabled](https://doc.qt.io/qt-5/qml-qtquick-item."
#~ "html#enabled-prop) property to a conditional statement that checks "
#~ "whether the name field is empty or not: if it is, the button is disabled, "
#~ "and vice versa. When the button is triggered, it triggers the [append]"
#~ "(https://doc.qt.io/qt-6/qml-qtqml-models-listmodel.html#append-method) "
#~ "method of our `kountdownModel` list model, adding a JavaScript object "
#~ "including the properties we have provided. We also make sure to clear the "
#~ "text fields by setting their [text](https://doc.qt.io/qt-6/qml-qtquick-"
#~ "textinput.html#text-prop) properties to an empty string. We finally call "
#~ "a method on our overlay sheet, [close()](docs:kirigami2;templates::"
#~ "OverlaySheet::close), which closes it."
#~ msgstr ""
#~ "Наприкінці нашої форми ми включаємо [кнопку](docs:qtquickcontrols;QtQuick."
#~ "Controls.Button), яка додає новий відлік до моделі списку. Ми встановили "
#~ "для властивості [enabled](https://doc.qt.io/qt-5/qml-qtquick-item."
#~ "html#enabled-prop) умовну інструкцію, яка перевіряє, чи є поле назви "
#~ "порожнім: якщо це так, кнопку буде вимкнено, і навпаки. Якщо кнопку "
#~ "увімкнено, вона вмикає метод [append](https://doc.qt.io/qt-6/qml-qtqml-"
#~ "models-listmodel.html#append-method) нашої моделі списку "
#~ "`kountdownModel`, додаючи об'єкт Javascript, включно із наданими нами "
#~ "властивостями. Крім того, ми спорожнюємо текстові поля, встановлюючи для "
#~ "їхні властивостей [text](https://doc.qt.io/qt-6/qml-qtquick-textinput."
#~ "html#text-prop) порожні рядки. Нарешті, ми викликаємо метод для нашого "
#~ "аркуша-наклади, [close()](docs:kirigami2;templates::OverlaySheet::close), "
#~ "який закриває його."

#~ msgid "Using our sheet"
#~ msgstr "Використання нашого аркуша"

#~ msgid ""
#~ "Overlay sheets have two methods, [open()](docs:kirigami2;templates::"
#~ "OverlaySheet::open) and [close()](docs:kirigami2;templates::OverlaySheet::"
#~ "close), which control the opening and closing of this component. In this "
#~ "case, we have set the sheet to be opened when we trigger our action. Once "
#~ "we save our files and build our program, we'll be able to add our own "
#~ "custom countdowns!"
#~ msgstr ""
#~ "Для аркушів-накладок передбачено два методи, [open()](docs:kirigami2;"
#~ "templates::OverlaySheet::open) і [close()](docs:kirigami2;templates::"
#~ "OverlaySheet::close), які керують відкриттям і закриттям цього "
#~ "компонента. У цьому випадку, ми встановили, що аркуш буде відкрито, коли "
#~ "ми увімкнемо нашу дію. Щойно наші файли буде збережено, а програму буде "
#~ "зібрано, ми зможемо додавати наші власні нетипові відліки!"

#~ msgid ""
#~ "These tutorials will focus on creating an application that lets the user "
#~ "see how many days are left until an event of their choice. That doesn't "
#~ "mean you shouldn't deviate and try to create your own thing! Just make "
#~ "sure you pay close attention to how things work *first*, so that you can "
#~ "adjust when things are different in your own code. We also recommend you "
#~ "check out the [Kirigami Gallery](https://apps.kde.org/en/kirigami2."
#~ "gallery), which provides a number of useful UI examples and easy access "
#~ "to all the code."
#~ msgstr ""
#~ "У цих розділах підручника акцентовано створення програми, за допомогою "
#~ "якої користувач зможе бачити, скільки днів лишилося до певної вибраної "
#~ "події. Це не означає, що ви не можете відхилитися від запропонованих ідей "
#~ "і реалізувати власну! Достатньо лише приділити *спочатку* увагу тому, як "
#~ "усе працює, щоб потім можна було скоригувати код і створити власну "
#~ "програму. Ми також рекомендуємо скористатися [Галереєю Kirigami](https://"
#~ "apps.kde.org/en/kirigami2.gallery), у якій наведено декілька корисних "
#~ "прикладів інтерфейсу користувача і забезпечено простий доступ до "
#~ "відповідного коду."

#~ msgid ""
#~ "KDE has [Human Interface Guidelines (HIG)](/hig/introduction/"
#~ "architecture/) that go into detail about how to best design your "
#~ "application. The guidelines help ensure your application remains usable, "
#~ "consistent, and aesthetic."
#~ msgstr ""
#~ "У KDE є корисна [сторінка настанов щодо створення зручних для людей "
#~ "інтерфейсів (HIG)](/hig/introduction/architecture/), на якій наведено "
#~ "подробиці щодо того, які підходи до дизайну є найкращими для вашої "
#~ "програми. Настанови допоможуть вам створювати зручні, сумісні та "
#~ "естетично привабливі програми."

#~ msgid ""
#~ "If you've gone ahead of the tutorial, you might have noticed that there "
#~ "is also such a thing as a [ScrollView](docs:qtquickcontrols;QtQuick."
#~ "Controls.ScrollView) that you can use to contain your components. "
#~ "However, do NOT put a `ScrollView` inside a `ScrollablePage` as this can "
#~ "cause problems. Children of a `ScrollablePage` are functionally already "
#~ "in a `ScrollView`."
#~ msgstr ""
#~ "Якщо ви вже ознайомилися із іншими частинами цього підручника, ви могли "
#~ "помітити, що існує також панель [ScrollView](docs:qtquickcontrols;QtQuick."
#~ "Controls.ScrollView), якою можна скористатися для додавання компонентів. "
#~ "Втім, НЕ додавайте `ScrollView` у `ScrollablePage`, оскільки це може "
#~ "спричинити проблеми. Дочірні об'єкти `ScrollablePage` функціонально вже є "
#~ "частиною `ScrollView`."

#~ msgid "But why?"
#~ msgstr "Але чому?"

#~ msgid ""
#~ "First we need to add our new files into our `resources.qrc` which we "
#~ "created in the first part of this tutorial."
#~ msgstr ""
#~ "Спочатку нам слід додати наші нові файли до нашого `resources.qrc`, який "
#~ "ми створили у першій частині цього розділу підручника."

#~ msgid "Using our new files"
#~ msgstr "Використання наших нових файлів"

#~ msgid ""
#~ "We'll need to find some way of using our new files in `main.qml`. "
#~ "Thankfully, all we need to do is include a declaration of these "
#~ "components in our `main.qml` like this:"
#~ msgstr ""
#~ "Нам слід знайти якийсь спосіб використання наших нових файлів у `main."
#~ "qml`. На щастя, нам достатньо просто включити оголошення цих компонентів "
#~ "у наш `main.qml` ось так:"

#~ msgid "Extending our add sheet into an add/edit sheet"
#~ msgstr ""
#~ "Розширюємо можливості нашого аркуша додавання так, щоб він став аркушем "
#~ "додавання-редагування"

#~ msgid ""
#~ "While in the last tutorial we made our countdown-adding button do "
#~ "something, the edit button on our countdown cards is still inactive. We "
#~ "also created an adding sheet that we could now repurpose to also serve as "
#~ "an edit sheet... but before we get to that, we need to add a couple of "
#~ "extra things to our `main.qml`."
#~ msgstr ""
#~ "Хоча у останній частині підручника ми додали до кнопки додавання відліку "
#~ "дії, кнопка редагування наших карток відліку усе ще лишається неактивною. "
#~ "Нами також було створено аркуш додавання відліків, якими ми тепер можемо "
#~ "повторно скористатися як аркушем редагування... Але перш ніж ми перейдемо "
#~ "до цього, нам слід додати до нашого `main.qml` ще двійко додаткових речей."

#~ msgid ""
#~ "The key changes we have made involve the addition of our component "
#~ "definition `AddEditSheet` (and `KountdownDelegate` further down) and a "
#~ "new function called `openPopulatedSheet()`."
#~ msgstr ""
#~ "Ключовими внесеними змінами є додавання нашого визначення компонента "
#~ "`AddEditSheet` (і `KountdownDelegate` нижче) і нової функції із назвою "
#~ "`openPopulatedSheet()`."

#~ msgid "Lets go through our `AddEditSheet` definition:"
#~ msgstr "Пройдімося нашим визначенням `AddEditSheet`:"

#~ msgid ""
#~ "`onAdded` and `onEdited` are signal handlers. Just like `onTriggered` is "
#~ "called when we click an action, we can use handlers that respond to our "
#~ "custom signals."
#~ msgstr ""
#~ "`onAdded` і `onEdited` є обробниками сигналів. Подібно до того, як "
#~ "`onTriggered` викликається, коли ми натискаємо пункт дії, ми можемо "
#~ "скористатися обробниками, які відповідають на наші нетипові сигнали."

#~ msgid "AddEditSheet.qml"
#~ msgstr "AddEditSheet.qml"

#~ msgid ""
#~ "Looking at our new `AddEditSheet.qml`—our repurposed adding sheet—we can "
#~ "see how these signals work:"
#~ msgstr ""
#~ "Поглянувши на наш новий `AddEditSheet.qml` — наш конвертований аркуш "
#~ "додавання — ми можемо бачити, як працюють ці сигнали:"

#~ msgid ""
#~ "Signals invoke their handlers when they are called. In this case, we have "
#~ "created two signals, `added` and `edited`, that we can invoke with "
#~ "different outcomes, and to which we can attach information about the "
#~ "countdown we are adding or creating. A neat thing about signals is that "
#~ "they expose the variables defined in them to the functions that are "
#~ "listening to them, which is why we can just call those variable names in "
#~ "our `onEdited` and `onAdded` handlers in `main.qml`. Our signals are "
#~ "invoked by the \"Done\" button depending on what the `mode` property, "
#~ "defined at the top of our AddEditSheet, is set to."
#~ msgstr ""
#~ "Сигнали викликають обробники при виклику. У нашому випадку, ми створили "
#~ "два сигнали, `added` та `edited`, які ми можемо викликати для отримання "
#~ "різних результатів, і з якими ми можемо пов'язати відомості щодо відліку, "
#~ "який ми додаємо або створюємо. Чудовою властивістю сигналів є те, що вони "
#~ "розкривають змінні, які у них визначено для функцій, які очікують на "
#~ "сигнали. Ось чому ми можемо просто викликати назви цих змінних у наших "
#~ "обробниках `onEdited` і `onAdded` у `main.qml`. Наші сигнали викликає "
#~ "кнопка «Done», залежно від  значення, встановленого для властивості "
#~ "`mode`, визначеної у верхній частині нашого AddEditSheet."

#~ msgid ""
#~ "The `mode` property also controls several other things: mainly what the "
#~ "title of our sheet is set to, and what text is to be included in our "
#~ "textfields. However, by default, our `mode` property is just set to add..."
#~ msgstr ""
#~ "Крім того, властивість `mode` керує декількома іншими речима: в "
#~ "основному, тим, який заголовок буде встановлено для нашого аркуша, і який "
#~ "текст буде включено до наших текстових полів. Втім, типово, для нашої "
#~ "властивості `mode` просто встановлено режим додавання..."

#~ msgid ""
#~ "Which brings us back to `main.qml` and our new `openPopulatedSheet()` "
#~ "function. You might have noticed that this is what it is called now when "
#~ "the countdown-adding action is triggered. This function takes in several "
#~ "arguments which have been provided with defaults. This is helpful when we "
#~ "simply want to add a new countdown, because we can have the concise "
#~ "function call `openPopulatedSheet(\"add\")`. More importantly, this "
#~ "function sets all the relevant properties in AddEditSheet."
#~ msgstr ""
#~ "Що повертає нас до `main.qml` і нашої нової функції "
#~ "`openPopulatedSheet()`. Ви могли помітити, що це саме те, що буде тепер "
#~ "викликано при вмиканні дії з додавання відліку. Ця функція приймає "
#~ "декілька аргументів, які мають типові значення. Це корисно, коли ми "
#~ "просто хочемо додати новий відлік, оскільки ми можемо скористатися "
#~ "скороченим викликом функції — `openPopulatedSheet(\"add\")`. Що "
#~ "важливіше, ця функція встановлює значення усіх пов'язаних із її "
#~ "призначенням властивостей в AddEditSheet."

#~ msgid ""
#~ "`mode` changes the add/edit sheet depending on whether this argument is "
#~ "set to `\"add\"` or to `\"edit\"`"
#~ msgstr ""
#~ "`mode` змінює аркуш додавання-редагування залежно від встановленого "
#~ "аргументу: `«add»` або «`\"edit\"`"

#~ msgid ""
#~ "`index` is needed so that when we save our edited countdown, the correct "
#~ "one is modified"
#~ msgstr ""
#~ "Аргумент `index` потрібен для того, щоб при збереження нашого "
#~ "редагованого відліку було внесено зміни до належного запису"

#~ msgid ""
#~ "`listName`, `listDesc`, and `listDate` are the relevant countdown details "
#~ "that need to be put in the sheet's fields"
#~ msgstr ""
#~ "`listName`, `listDesc` і `listDate` — відповідні параметри відліків, які "
#~ "має бути вписано у поля аркуша"

#~ msgid ""
#~ "Of course, to actually use our sheet for anything besides adding "
#~ "countdowns first we need to make the edit button on our cards work. But "
#~ "if you look at our [Kirigami.CardsListView](docs:kirigami2;CardsListView) "
#~ "in `main.qml`..."
#~ msgstr ""
#~ "Звичайно, щоб справді скористатися нашим аркушем для чогось, окрім "
#~ "додавання відліків, нам спершу слід зробити працездатною кнопку "
#~ "редагування на наших картках. Але, якщо ви поглянете на нашу [Kirigami."
#~ "CardsListView](docs:kirigami2;CardsListView) у `main.qml`..."

#~ msgid "KountdownDelegate.qml"
#~ msgstr "KountdownDelegate.qml"

#~ msgid ""
#~ "We've replaced our [Kirigami.AbstractCard](docs:kirigami2;AbstractCard) "
#~ "with a delegate component definition from `KountdownDelegate.qml`."
#~ msgstr ""
#~ "Ми замінили наш [Kirigami.AbstractCard](docs:kirigami2;AbstractCard) "
#~ "визначенням компонента-делегата з `KountdownDelegate.qml`."

#~ msgid ""
#~ "The [onClicked](docs:qtquickcontrols;QtQuick.Controls.AbstractButton::"
#~ "clicked) property of the \"Edit\" button on our cards now calls the "
#~ "`openPopulatedSheet()` function, with the card's fetched list element "
#~ "properties set as the arguments for this function. With these, the sheet "
#~ "can be populated with the correct text."
#~ msgstr ""
#~ "Тепер властивість [onClicked](docs:qtquickcontrols;QtQuick.Controls."
#~ "AbstractButton::clicked) кнопки «Edit» на наших картках викликає функцію "
#~ "`openPopulateSheet()` із отриманими карткою властивостями елементів "
#~ "списку як аргументами цієї функції. Ці дані надають змогу заповнити аркуш "
#~ "належними текстовими даними."

#~ msgid ""
#~ "With that, we have a fully-functional sheet where we can add and edit our "
#~ "countdowns!"
#~ msgstr ""
#~ "Тепер ми маємо повнофункціональний аркуш, за допомогою якого ми можемо "
#~ "додавати і редагувати наші відліки!"

#~ msgid "![](editsheet.png)"
#~ msgstr "![](editsheet.png)"

#~ msgid "Example:"
#~ msgstr "Приклад:"

#~ msgid ""
#~ "[Installing Kirigami from the repositories in your Linux distribution]"
#~ "({{< ref \"#linux\" >}})"
#~ msgstr ""
#~ "[Встановлення Kirigami зі сховищ пакунків у вашому дистрибутиві Linux](< "
#~ "ref \"#linux\" >}})"

#~ msgid "[Installing Kirigami with Craft]({{< ref \"#craft\" >}})"
#~ msgstr "[Встановлення Kirigami за допомогою Craft]({{< ref \"#craft\" >}})"

#~ msgid ""
#~ "Enter our main function. Its first line `QGuiApplication::"
#~ "setAttribute(Qt::AA_EnableHighDpiScaling);` enables High DPI scaling. "
#~ "This lets our application scale properly across devices with different "
#~ "display pixel densities."
#~ msgstr ""
#~ "Введемо нашу основну функцію. Його перший рядок `QGuiApplication::"
#~ "setAttribute(Qt::AA_EnableHighDpiScaling);` вмикає масштабування із "
#~ "високою роздільністю. Це надає нашій програмі належним чином масштабувати "
#~ "вікно на усіх пристроях із різними густинами пікселів на дисплеях."

#~ msgid "If Visual Studio: `cmake -B build/ -G \"Visual Studio 16 2019\"`"
#~ msgstr "Якщо Visual Studio: `cmake -B build/ -G \"Visual Studio 16 2019\"`"

#~ msgid "If MinGW: `cmake -B build/ -G \"MinGW Makefiles\"`"
#~ msgstr "Якщо MinGW: `cmake -B build/ -G \"MinGW Makefiles\"`"

#~ msgid "And launch it with:"
#~ msgstr "І запустити програму такою командою:"

#~ msgid ""
#~ "After that, `project(helloworld)` defines the name of the project. We "
#~ "then use `set()` to define variables (`KF5_MIN_VERSION` and "
#~ "`QT_MIN_VERSION`) containing the versions of KDE Frameworks and Qt."
#~ msgstr ""
#~ "Після цього, `project(helloworld)` встановлює назву проєкту. Далі, ми "
#~ "використовуємо `set()` для визначення змінних (`KF5_MIN_VERSION` і "
#~ "`QT_MIN_VERSION`), які містять дані щодо версій KDE Frameworks і Qt."

#~ msgid ""
#~ "`find_package(Qt5 ${QT_MIN_VERSION} REQUIRED NO_MODULE COMPONENTS Core "
#~ "Quick Test Gui QuickControls2 Widgets)`"
#~ msgstr ""
#~ "`find_package(Qt5 ${QT_MIN_VERSION} REQUIRED NO_MODULE COMPONENTS Core "
#~ "Quick Test Gui QuickControls2 Widgets)`"

#~ msgid "The first word is the framework (`Qt5`)."
#~ msgstr "Першим словом є бібліотека (`Qt5`)."

#~ msgid ""
#~ "Then we are calling the variable with the version we set in the fifth "
#~ "line."
#~ msgstr ""
#~ "Далі, ми викликаємо змінну із версією, значення яких ми вказали у п'ятому "
#~ "рядку."

#~ msgid "Installing required packages"
#~ msgstr "Встановлення потрібних пакунків"

#~ msgid ""
#~ "Before getting started, we must install a few things. We need a C++ "
#~ "compiler, Qt development packages, and Kirigami."
#~ msgstr ""
#~ "Перш ніж починати щось робити, нам слід дещо встановити. Нам знадобиться "
#~ "компілятор C++, пакунки для розробки Qt та Kirigami."

#~ msgid ""
#~ "The final line, `add_subdirectory(src)`, points CMake into the `src/` "
#~ "directory."
#~ msgstr ""
#~ "Останній рядок, `add_subdirectory(src)`, вказує каталог `src/` для CMake."

#~ msgid ""
#~ "[set()](https://cmake.org/cmake/help/latest/command/set.html) is used to "
#~ "set `helloworld_SRCS` to `main.cpp` and `resources.qrc` (if we decide to "
#~ "create additional C++ files we'll need to add them here too)"
#~ msgstr ""
#~ "[set()](https://cmake.org/cmake/help/latest/command/set.html) "
#~ "використовується для встановлення для `helloworld_SRCS` значення `main."
#~ "cpp` і `resources.qrc` (якщо ми вирішимо створити додаткові файли C++, "
#~ "нам слід також додати їх тут)"

#~ msgid ""
#~ "First, we are going to create two files in the `src/` directory called "
#~ "`about.cpp` and `about.h`."
#~ msgstr ""
#~ "Спочатку, ми створимо два файли у каталозі `src/`, а саме `about.cpp` і "
#~ "`about.h`."

#~ msgid "about.h"
#~ msgstr "about.h"

#~ msgid ""
#~ "In the `.h` file we create this class `AboutType` which is inherited from "
#~ "[QObject](https://doc.qt.io/qt-5/qobject.html)."
#~ msgstr ""
#~ "У файлі `.h` ми створюємо цей клас `aboutType`, який успадковує "
#~ "властивості від [QObject](https://doc.qt.io/qt-5/qobject.html)."

#~ msgid ""
#~ "The `Q_OBJECT` macro tells the compiler that this class uses own signals "
#~ "and slots, the `Q_PROPERTY` macro behaves like a class data member, but "
#~ "it has additional features, it will allow our QML code to have access to "
#~ "this class."
#~ msgstr ""
#~ "Макрос `Q_OBJECT` повідомляє компілятору, що цей клас використовує власні "
#~ "сигнали і слоти, макрос `Q_PROPERTY` поводиться як учасник даних класу, "
#~ "але має додаткові властивості — він уможливить для нашого коду QML доступ "
#~ "до цього класу."

#~ msgid ""
#~ "The `aboutData` method will return the application data from `KAboutData`."
#~ msgstr "Метод `aboutData` повертатиме дані програми з `KAboutData`."

#~ msgid "about.cpp"
#~ msgstr "about.cpp"

#~ msgid "In the `.cpp` file we just include the `.h` file."
#~ msgstr "У файлі `.cpp` ми просто включаємо файл `.h`."

#~ msgid ""
#~ "After the QML Engine definition, we create a [qmlRegisterSingletonType]"
#~ "(https://doc.qt.io/qt-5/qqmlengine.html#qmlRegisterSingletonType), the "
#~ "first argument is a URI, basically a package name, the second and third "
#~ "arguments are major and minor versions respectively, the fourth is the "
#~ "type name, the name that we will call when accessing the `AboutType` "
#~ "methods."
#~ msgstr ""
#~ "Після визначення рушія QML ми створюємо [qmlRegisterSingletonType]"
#~ "(https://doc.qt.io/qt-5/qqmlengine.html#qmlRegisterSingletonType). Першим "
#~ "аргументом є адреса, на базовому рівні назва пакунка, другим і третім "
#~ "аргументами є основна і проміжна версії, відповідно, четвертим аргументом "
#~ "є назва типу, назва, яку ми викликатимемо при доступі до методів "
#~ "`AboutType`."

#~ msgid ""
#~ "In the `qmlRegisterSingletonType` lambda we just return a new `AboutType` "
#~ "object;"
#~ msgstr ""
#~ "У лямбді `qmlRegisterSingletonType` ми просто повертаємо новий об'єкт "
#~ "`AboutType`;"

#~ msgid ""
#~ "First, we import the package we defined in the `main.cpp` file, add a "
#~ "`Kirigami.Action` to our global drawer that will send us to the about "
#~ "page and create a component with a `Kirigami.AboutPage` in it, the About "
#~ "Page only have one property: `aboutData`, we then pass `AboutType."
#~ "aboutData` to it."
#~ msgstr ""
#~ "Спершу ми імпортуємо пакунок, який ми визначили у файлі `main.cpp`, "
#~ "додаємо `Kirigami.Action` на нашу загальну висувну панель. Відповідна "
#~ "кнопка надаватиме нам змогу переходити на сторінку «Про програму». "
#~ "Створюємо на загальній панелі компонент з `Kirigami.AboutPage` на ньому. "
#~ "Сторінка «Про програму» матиме лише одну властивість — `aboutData`. Далі, "
#~ "ми передамо цій властивості значення `AboutType.aboutData`."

#~ msgid ""
#~ "In the CMakeLists.txt file in our top-level folder, add `CoreAddons` to "
#~ "the `find_package` module."
#~ msgstr ""
#~ "У файлі CMakeLists.txt у найвищій теці прооєкту додайте `CoreAddons` до "
#~ "модуля `find_package`."

#~ msgid ""
#~ "In the CMakeLists.txt file in the ‘src’ directory, add `about.cpp` to the "
#~ "`add_executable` module and `KF5::CoreAddons` to the "
#~ "`target_link_libraries` module."
#~ msgstr ""
#~ "У файлі CMakeLists.txt у каталозі ‘src’ додайте `about.cpp` до модуля "
#~ "`add_executable` і `KF5::CoreAddons` до модуля `target_link_libraries`."

#~ msgid ""
#~ "To `main.cpp`, right after creating the `QQmlApplicationEngine`, add the "
#~ "type registration as follows:"
#~ msgstr ""
#~ "У файл `main.cpp`, одразу після створення `QQmlApplicationEngine`, "
#~ "додайте реєстрацію типу ось так:"

#~ msgid "Right under the `Q_OBJECT` macro, add a new `Q_PROPERTY`."
#~ msgstr "Одразу після макросу `Q_OBJECT` додайте новий макрос `Q_PROPERTY`."

#~ msgid "![](action_tool_bar.png)"
#~ msgstr "![](action_tool_bar.png)"

#~ msgid "![](/docs/use/kirigami/components-card/card1.png)"
#~ msgstr "![](/docs/use/kirigami/components-card/card1.png)"

#~ msgid "**A CardsLayout should always be contained within a ColumnLayout.**"
#~ msgstr "**CardsLayout має завжди міститися у ColumnLayout.**"

#~ msgid ""
#~ "![Screenshot of a CardsLayout](/docs/use/kirigami/components-card/"
#~ "cardslayout.png)"
#~ msgstr ""
#~ "![Знімок CardsLayout](/docs/use/kirigami/components-card/cardslayout.png)"

#~ msgid ""
#~ "![A freshly-clicked button](/docs/use/kirigami/components-controls/"
#~ "controls-button.png)"
#~ msgstr ""
#~ "![Щойно натиснута кнопка](/docs/use/kirigami/components-controls/controls-"
#~ "button.png)"

#~ msgid "Switches are primarily designed for use on mobile devices."
#~ msgstr ""
#~ "Перемикачі, в основному, призначено для використання на мобільних "
#~ "пристроях."

#~ msgid ""
#~ "![Search bar header global drawer](/docs/use/kirigami/components-drawers/"
#~ "globaldrawer_header.png)"
#~ msgstr ""
#~ "![Шапка панелі пошуку загальної панелі](/docs/use/kirigami/components-"
#~ "drawers/globaldrawer_header.png)"

#~ msgid ""
#~ "![Global drawer as a menu on the desktop](/docs/use/kirigami/components-"
#~ "drawers/globaldrawer_menu.png)"
#~ msgstr ""
#~ "![Загальна панель як меню на комп'ютері](/docs/use/kirigami/components-"
#~ "drawers/globaldrawer_menu.png)"

#~ msgid ""
#~ "![Global drawer with title and icon in banner](/docs/use/kirigami/"
#~ "components-drawers/globaldrawer-banner.png)"
#~ msgstr ""
#~ "![Загальна панель із заголовком і піктограмою на банері](/docs/use/"
#~ "kirigami/components-drawers/globaldrawer-banner.png)"

#~ msgid ""
#~ "![A simple formlayout](/docs/use/kirigami/components-formlayouts/"
#~ "formlayouts-simple.png)"
#~ msgstr ""
#~ "![Просте компонування форми](/docs/use/kirigami/components-formlayouts/"
#~ "formlayouts-simple.png)"

#~ msgid ""
#~ "However, this is not recommended. On components where `Kirigami.FormData."
#~ "isSection` is set to true, the label text provided for this component's "
#~ "`Kirigami.FormData.label` property will be displayed as the section's "
#~ "header text. **This does not apply to every component, hence the "
#~ "recommendation that you use `Kirigami.Separator` or `Item` components in "
#~ "places where you would like to use a header text.** This header text is "
#~ "larger than the normal label text, and provides users with a nice visual "
#~ "cue of what the form layout section is about."
#~ msgstr ""
#~ "Втім, не рекомендуємо це робити. Для компонентів, для яких для "
#~ "властивості `Kirigami.FormData.isSection` встановлено значення true, "
#~ "текст мітки властивості компонента `Kirigami.FormData.label` буде "
#~ "показано як текст заголовка розділу. **Це стосується не кожного "
#~ "компонента, отже рекомендуємо використовувати `Kirigami.Separator` або "
#~ "`Item` там, де вам потрібно скористатися текстом заголовка.** Цей текст "
#~ "заголовка є більшим за розміром за звичайний текст мітки і надає "
#~ "користувачеві чудову візуальну підказку щодо того, для чого призначено "
#~ "розділ компонування форми."

#~ msgid ""
#~ "![A formlayout with sections](/docs/use/kirigami/components-formlayouts/"
#~ "formlayouts-sections.png)"
#~ msgstr ""
#~ "![Компонування форми із розділами](/docs/use/kirigami/components-"
#~ "formlayouts/formlayouts-sections.png)"

#~ msgid ""
#~ "![A formlayout with checkable child](/docs/use/kirigami/components-"
#~ "formlayouts/formlayouts-checkable.png)"
#~ msgstr ""
#~ "![Компонування форми із дочірнім елементом — пунктом для позначення](/"
#~ "docs/use/kirigami/components-formlayouts/formlayouts-checkable.png)"

#~ msgid ""
#~ "![A formlayout with forced mobile layout](/docs/use/kirigami/components-"
#~ "formlayouts/formlayouts-widemode.png)"
#~ msgstr ""
#~ "![Компонування форми із примусовим режимом мобільного пристрою](/docs/use/"
#~ "kirigami/components-formlayouts/formlayouts-widemode.png)"

#~ msgid "List headers"
#~ msgstr "Заголовки списку"

#~ msgid ""
#~ "ListViews also support header components with the `header` property, and "
#~ "Kirigami provides an attractive component for this purpose: `Kirigami."
#~ "ItemViewHeader`. We provide this component with text for the `title` "
#~ "property and with an image location for the `backgroundImage.source` "
#~ "property and we are set."
#~ msgstr ""
#~ "Крім того, у панелях списку передбачено підтримку компонентів заголовків "
#~ "за допомогою властивості `header`, і у Kirigami є привабливий компонент "
#~ "для цього: `Kirigami.ItemViewHeader`. Нам достатньо вказати для цього "
#~ "компонента текстом для властивості `title` і адресу зображення для "
#~ "властивості `backgroundImage.source`, ось і все."

#~ msgid ""
#~ "An interesting property of the list view is `headerPositioning`. This "
#~ "affects the way that our header will move when we are interacting with a "
#~ "long list view that expands beyond the height of the page. "
#~ "`headerPositioning` can be set to three different settings:"
#~ msgstr ""
#~ "Цікавою властивістю панелі списку є `headerPositioning`. Значення цієї "
#~ "властивості впливає на спосіб, у який заголовок пересуватиметься, коли ми "
#~ "взаємодіємо із довгою панеллю списку, яка перевищує за висотою сторінку. "
#~ "Для `headerPositioning` можна встановити три різних значення:"

#~ msgid ""
#~ "`ListView.OverlayHeader`: In this setting, the header will contract once "
#~ "we start scrolling down but will remain visible in a more compact state."
#~ msgstr ""
#~ "`ListView.OverlayHeader`: якщо вказано це значення, заголовок "
#~ "стискатиметься після початку гортання вниз, але лишатиметься видимим у "
#~ "компактнішій формі."

#~ msgid ""
#~ "`ListView.PullBackHeader`: The header will disappear as we scroll down, "
#~ "but will reappear as we scroll back up, even if we haven't yet reached "
#~ "the top of the list view."
#~ msgstr ""
#~ "`ListView.PullBackHeader`: заголовок зникатиме при гортанні вниз, але "
#~ "повторно з'явиться при зворотному гортанні, навіть якщо ви ще не досягли "
#~ "верхньої частини панелі списку."

#~ msgid ""
#~ "`ListView.InlineHeader`: The header will act like a part of the listview "
#~ "and remain at the top of the listview."
#~ msgstr ""
#~ "`ListView.InlineHeader`: заголовок працюватиме як частина панелі списку і "
#~ "лишатиметься у верхній частині панелі списку."

#~ msgid ""
#~ "![A listview with a header](/docs/use/kirigami/components-listview/"
#~ "listview-header.png)"
#~ msgstr ""
#~ "![Панель списку із заголовком](/docs/use/kirigami/components-listview/"
#~ "listview-header.png)"

#~ msgid "The PageRow"
#~ msgstr "PageRow"

#~ msgid ""
#~ "The [PageRow](docs:kirigami2;PageRow) is a container that lays out items "
#~ "horizontally in a row. If all child items don't fit in the [PageRow](docs:"
#~ "kirigami2;PageRow), it will behave like a [`Flickable`](https://doc.qt.io/"
#~ "qt-5/qml-qtquick-flickable.html) surface and will become a horizontal "
#~ "scrollable view of columns."
#~ msgstr ""
#~ "[PageRow](docs:kirigami2;PageRow) є контейнером, у якому елементи "
#~ "компонуються горизонтально у рядок. Якщо усі дочірні елементи не "
#~ "вміщуються до [PageRow](docs:kirigami2;PageRow), контейнер поводиться "
#~ "подібно до поверхні [`Flickable`](https://doc.qt.io/qt-5/qml-qtquick-"
#~ "flickable.html) і стає горизонтальною панеллю зі стовпчиками і гортанням."

#~ msgid ""
#~ "A [PageRow](docs:kirigami2;PageRow) can show a single page or several of "
#~ "them as columns, depending on the window width. On a phone, a single "
#~ "column will be viewable, while on a tablet or a desktop more than one "
#~ "column should be visible at once."
#~ msgstr ""
#~ "[PageRow](docs:kirigami2;PageRow) може показувати окрему сторінку або "
#~ "декілька сторінок у форматі таблиці зі стовпчиками, залежно від ширини "
#~ "вікна. На телефоні сторінки буде показано в один стовпчик, а на планшеті "
#~ "або комп'ютері може бути показано декілька стовпчиків."

#~ msgid ""
#~ "The columns can either all have the same fixed size, size themselves with "
#~ "`implicitWidth`, or automatically expand to take up all available width. "
#~ "By default, the last column will expand to take up all available space."
#~ msgstr ""
#~ "Стовпчики можуть бути однакового фіксованого розміру, мати розмір, який "
#~ "визначається `implicitWidth`, або мати автоматично визначений розмір з "
#~ "заповненням усієї ширини вікна. Типово, останній стовпчик буде розширено "
#~ "так, щоб було заповнено увесь доступний простір."

#~ msgid "Screenshot of a PageRow"
#~ msgstr "Знімок PageRow"

#~ msgid ""
#~ "You can access the column view methods from the `pageStack` property of "
#~ "your [Kirigami.ApplicationWindow](docs:kirigami2;ApplicationWindow) "
#~ "element or from anywhere else using `applicationWindow().pageStack`."
#~ msgstr ""
#~ "Доступ до методів панелі зі стовпчиками можна отримати за допомогою "
#~ "властивості `pageStack` вашого елемента [Kirigami.ApplicationWindow](docs:"
#~ "kirigami2;ApplicationWindow) або з будь-якого іншого місця за допомогою "
#~ "`applicationWindow().pageStack`."

#~ msgid ""
#~ "The initial page is added with the `pageStack.initialPage` property. As "
#~ "an example: in a simple application that required the user to "
#~ "authenticate themselves, the initial page would be a login page."
#~ msgstr ""
#~ "Початкова сторінка додається за допомогою властивості `pageStack."
#~ "initialPage`. Приклад: у простій програмі, у якій потрібне розпізнавання "
#~ "користувача, початковою сторінкою буде сторінка входу до системи."

#~ msgid ""
#~ "Once the user has logged into the application, you would need to replace "
#~ "the login page with the home page of the application. To do this, you "
#~ "would use `pageStack.replace`, removing the LoginPage and replacing it "
#~ "with a HomePage."
#~ msgstr ""
#~ "Щойно користувач увійде до системи, вам слід замінити сторінку входу на "
#~ "домашню сторінку програми. Для цього ви можете скористатися `pageStack."
#~ "replace`, вилучивши сторінку LoginPage і замінивши її на HomePage."

#~ msgid "login formular"
#~ msgstr "форма входу"

#~ msgid "display error message"
#~ msgstr "показ повідомлення про помилку"

#~ msgid ""
#~ "Now let's imagine you had a configuration page you wanted the user to "
#~ "access from the HomePage. You'd want the user to go back to the HomePage, "
#~ "so you can't use `replace`. Instead, you would use `push` to push a new "
#~ "page in the stack."
#~ msgstr ""
#~ "Тепер уявімо, що у вас є сторінка налаштувань, доступ до якої ви хочете "
#~ "відкрити з HomePage. Вам хотілося б, щоб користувач міг повернутися до "
#~ "HomePage, тому ви не можете скористатися `replace`. Замість цього, ви "
#~ "можете скористатися `push` для заштовхування нової сторінки до стосу "
#~ "сторінок."

#~ msgid "ConfigurationPage.qml"
#~ msgstr "ConfigurationPage.qml"

#~ msgid "HomePage.qml"
#~ msgstr "HomePage.qml"

#~ msgid "You can also:"
#~ msgstr "Ви також можете:"

#~ msgid ""
#~ "[pop](docs:kirigami2;PageRow::pop) a page (which removes the last page in "
#~ "the stack) or"
#~ msgstr ""
#~ "[виштовхнути](docs:kirigami2;PageRow::pop) сторінку (останню сторінку у "
#~ "стосі при цьому буде вилучено) або"

#~ msgid ""
#~ "use [insertPage](docs:kirigami2;PageRow::insertPage) to insert a page at "
#~ "a specific position in the stack,"
#~ msgstr ""
#~ "скористатися [insertPage](docs:kirigami2;PageRow::insertPage) для "
#~ "вставлення сторінки до певної позиції у стоці,"

#~ msgid ""
#~ "use [movePage](docs:kirigami2;PageRow::movePage) to move specific pages "
#~ "within the stack, or"
#~ msgstr ""
#~ "скористатися [movePage](docs:kirigami2;PageRow::movePage) для пересування "
#~ "вказаних сторінок у стосі або"

#~ msgid "[clear](docs:kirigami2;PageRow::clear) all pages from the stack."
#~ msgstr "[очистити](docs:kirigami2;PageRow::clear) стос від усіх сторінок."

#~ msgid ""
#~ "You can also modify `currentIndex` to change the currently active page "
#~ "programmatically, or use [flickBack](docs;Kirigami2;PageRow::flickBack) "
#~ "to simulate moving a page backwards in the stack."
#~ msgstr ""
#~ "Ви також можете змінити `currentIndex` для визначення поточної активної "
#~ "сторінки програмним шляхом або скористатися [flickBack](docs;Kirigami2;"
#~ "PageRow::flickBack) для імітації пересування сторінки назад у стосі."

#~ msgid "Layers"
#~ msgstr "Шари"

#~ msgid ""
#~ "For the moment, we only saw horizontal navigation working in a 2 "
#~ "dimensional stack. You can also use layers in your application to push "
#~ "full-screen page into your application."
#~ msgstr ""
#~ "До цього ми спостерігали лише роботу горизонтальної навігації у "
#~ "двовимірному стосі. Але ви можете скористатися шарами у вашій програмі "
#~ "для заштовхування повноекранної сторінки до вашої програми."

#~ msgid ""
#~ "In this case, only one page is visible at the same time on mobile and on "
#~ "the **desktop**."
#~ msgstr ""
#~ "У цьому випадку видимою на мобільному пристрої або **комп'ютері** "
#~ "одночасно є лише одна сторінка."

#~ msgid ""
#~ "The layers are accessible from `pageStack.layers` and use the same API as "
#~ "`pageStack`."
#~ msgstr ""
#~ "Доступ до шарів можна отримати за допомогою `pageStack.layers`. Шари "
#~ "використовують той самий програмний інтерфейс, що і `pageStack`."

#~ msgid "NeoChat Scrollable Page Screenshot"
#~ msgstr "Знімок вікна NeoChat зі сторінкою із гортанням"

#~ msgid "Page actions on the desktop."
#~ msgstr "Пункти дій сторінки на робочій станції."

#~ msgid "![](global_drawer.png)"
#~ msgstr "![](global_drawer.png)"

#~ msgid "![](quit_action.png)"
#~ msgstr "![](quit_action.png)"

#~ msgid "On Ubuntu, Debian and Neon we can install these with APT:"
#~ msgstr ""
#~ "В Ubuntu, Debian та Neon ми можемо встановити ці пакунки за допомогою APT:"

#~ msgid "On Arch-based distributions (like Manjaro) we can use Pacman:"
#~ msgstr ""
#~ "У заснованих на Arch дистрибутивах (зокрема Manjaro) ми можемо "
#~ "скористатися Pacman:"

#~ msgid "For Fedora, we use DNF:"
#~ msgstr "У Fedora ми користуємося DNF:"

#~ msgid ""
#~ "You can read more about the specifics of how the Qt resource system works "
#~ "[in Qt's docs](https://doc.qt.io/qt-5/resources.html)."
#~ msgstr ""
#~ "Дізнатися більше про специфіку того, як працює систем ресурсів Qt, можна "
#~ "з [документації Qt](https://doc.qt.io/qt-5/resources.html)."

#~ msgid ""
#~ "`target_link_libraries` links the libraries used in our code to our "
#~ "executable."
#~ msgstr ""
#~ "`target_link_libraries` пов'язує ціль із бібліотеками, які "
#~ "використовуються у нашому коді для створення виконуваного файла."

#~ msgid ""
#~ "The `GridLayout` is inside the `Item` component we have provided for the "
#~ "property `contentItem`. This is the item that contains what will be "
#~ "displayed in your card."
#~ msgstr ""
#~ "`GridLayout` перебуває всередині компонента `Item`, який надано для "
#~ "властивості `contentItem`. Це запис, який містить те, що буде показано у "
#~ "вашій картці."

#~ msgid ""
#~ "We have also used a conditional here to vary the number of columns in our "
#~ "grid depending on the screen we are using. If we are using a widescreen "
#~ "(i.e. a computer monitor or a phone in landscape) the grid will have 4 "
#~ "columns, else it will have 2."
#~ msgstr ""
#~ "Тут ми також скористалися умовою для варіювання кількості стовпчиків у "
#~ "нашій таблиці залежно від параметрів використаного екрана. Якщо "
#~ "використано широкий екран (тобто монітор комп'ютера або телефон у "
#~ "альбомному режимі) у таблиці буде 4 стовпчики, інакше стовпчиків буде 2."

#~ msgid "![](CardDesign.png)"
#~ msgstr "![](CardDesign.png)"

#~ msgid ""
#~ "<img src=\"https://invent.kde.org/utilities/kongress/-/raw/master/org.kde."
#~ "kongress.svg\" width=\"50\" height=\"50\"><br />Kongress"
#~ msgstr ""
#~ "<img src=\"https://invent.kde.org/utilities/kongress/-/raw/master/org.kde."
#~ "kongress.svg\" width=\"50\" height=\"50\"><br />Kongress"

#~ msgid "![](addSheet.png)"
#~ msgstr "![](addSheet.png)"

#~ msgid "![](addedKountdowns.png)"
#~ msgstr "![](addedKountdowns.png)"

#~ msgid ""
#~ "A Kirigami [Page](docs:kirigami2;Page) also inherits from a [QQC2 Page]"
#~ "(https://doc.qt.io/qt-5/qml-qtquick-controls2-page.html) and as such, you "
#~ "can add a number of extra elements to them. The Qt docs are another "
#~ "useful resource to use when designing your pages."
#~ msgstr ""
#~ "[Сторінка](docs:kirigami2;Page) Kirigami також успадковує властивості "
#~ "[сторінки QQC2](https://doc.qt.io/qt-5/qml-qtquick-controls2-page.html), "
#~ "а отже, ви можете додати до сторінки декілька додаткових елементів "
#~ "звідти. Тому при створенні ваших сторінок ще одним корисним ресурсом є "
#~ "документація з Qt."

#~ msgid ""
#~ "For more information about the Kirigami Theme class, see the [API docs]"
#~ "(docs:kirigami2;Kirigami::PlatformTheme)"
#~ msgstr ""
#~ "Щоб дізнатися більше про клас тем Kirigami, ознайомтеся із [документацією "
#~ "щодо програмного інтерфейсу](docs:kirigami2;Kirigami::PlatformTheme)"

#~ msgid ""
#~ "<!-- TODO\n"
#~ "screenshot of a qml file with an annotated UI showing all the \n"
#~ "available color\n"
#~ "-->\n"
#~ msgstr ""
#~ "<!-- TODO\n"
#~ "знімок вікна файла qml із анотованим інтерфейсом, у якому показано \n"
#~ "усі доступні кольори\n"
#~ "-->\n"

#~ msgid "The comments assume the system uses the Breeze Light color theme"
#~ msgstr ""
#~ "У коментарях припускаємо, що у системі використано тему кольорів «Світла "
#~ "Breeze»"

#~ msgid "A gray color will be used, as the default color set is Window"
#~ msgstr ""
#~ "Буде використано сірий колір, оскільки типовим набором кольорів є Window"

#~ msgid "The text will be near-black, as is defined in the Window color set"
#~ msgstr "Текст буде майже чорним, як визначено у наборі кольорів Window"

#~ msgid "Use the set for ItemViews"
#~ msgstr "Використовуємо набір для ItemViews"

#~ msgid "Do not inherit from the parent"
#~ msgstr "Не успадковуємо від батьківського об'єкта"

#~ msgid "This will be a near-white color"
#~ msgstr "Це буде майже білий колір"

#~ msgid ""
#~ "This will be a near-white color too, as the colorSet is inherited from "
#~ "the parent and will be View"
#~ msgstr ""
#~ "Цей колір також буде майже білим, оскільки colorSet успадковано з "
#~ "батьківського елемента, отже ним буде View"

#~ msgid "The text will be near-black, as is defined in the View color set"
#~ msgstr "Текст буде майже чорним, як визначено у наборі кольорів View"

#~ msgid "Use the Complementary set"
#~ msgstr "Використовуємо набір Complementary"

#~ msgid ""
#~ "This will be near-black as in the Complementary color set the background "
#~ "color is dark."
#~ msgstr ""
#~ "Цей колір буде майже чорним, оскільки у наборі кольорів Complementary "
#~ "колір тла є темним."

#~ msgid ""
#~ "The text will be near-white, as is defined in the Complementary color set"
#~ msgstr ""
#~ "Текст буде майже білим, як визначено у наборі кольорів Complementary"

#~ msgid ""
#~ "Some components such as Labels will automatically inherit by default the "
#~ "color set, some other components have a fixed color set, for instance "
#~ "Buttons are fixed to the `Button` color set. If it's desired for the "
#~ "button to inherit the parent color set, the `inherit` property should be "
#~ "explicitly set to `true`:"
#~ msgstr ""
#~ "Деякі компоненти, зокрема мітки (Label), типово автоматично успадкують "
#~ "набір кольорів, деякі інші компоненти мають фіксований набір кольорів. "
#~ "Наприклад, із кнопками (Button) пов'язано набір кольорів `Button`. Якщо "
#~ "бажаним є успадковування кнопкою батьківського набору кольорів, для "
#~ "властивості `inherit` слід явним чином встановити значення `true`:"

#~ msgid ""
#~ "![Screenshot of a comparison between a button that inherits and one that "
#~ "does not](buttonsinherit.png)"
#~ msgstr ""
#~ "![Знімок вікна із порівнянням між кнопкою, яка успадковує властивості, і "
#~ "кнопкою, яка не успадковує властивості](buttonsinherit.png)"

#~ msgid ""
#~ "![Screenshot showing the code above with qmlscene, we can see two "
#~ "rectangles with two different colors](customcolors.png)"
#~ msgstr ""
#~ "![Знімок вікна із кодом, який наведено вище, обробленим у qmlscene, можна "
#~ "бачити два прямокутники із двома різними кольорами](customcolors.png)"

#~ msgid "Heading"
#~ msgstr "Заголовок"

#~ msgid ""
#~ "You can align your text elements using the horizontalAlignment property "
#~ "of the text element."
#~ msgstr ""
#~ "Ви можете вирівнювати ваші текстові елементи за допомогою властивості "
#~ "horizontalAlignment текстового елемента."

#~ msgid "Text centered"
#~ msgstr "Центрований текст"

#~ msgid "Text right aligned"
#~ msgstr "Вирівняний праворуч текст"

#~ msgid "Displaying rich text"
#~ msgstr "Показ форматованого тексту"

#~ msgid "The program name used internally."
#~ msgstr "Внутрішній варіант назви програми."

#~ msgid "A displayable program name string."
#~ msgstr "Показаний рядок назви програми."

#~ msgid "The program version string."
#~ msgstr "Рядок версії програми."

#~ msgid "Short description of what the app does."
#~ msgstr "Короткий опис призначення програми."

#~ msgid "The license this code is released under."
#~ msgstr "Умови ліцензування випущеного коду."

#~ msgid "Copyright Statement."
#~ msgstr "Відомості щодо авторських прав."

#~ msgid ""
#~ "We also include this `config-helloworld.h` file which gives us this "
#~ "`HELLOWORLD_VERSION_STRING` variable that we'll set later in this "
#~ "tutorial."
#~ msgstr ""
#~ "Ми також включаємо цей файл `config-helloworld.h`, який надає нам цю "
#~ "змінну `HELLOWORLD_VERSION_STRING`, значення якої ми встановимо пізніше у "
#~ "цьому розділі підручника."

#~ msgid ""
#~ "In the CMakeLists.txt file in our top-level folder, add `CoreAddons` to "
#~ "the `find_package` module. You'll also want to add these three `ECM` "
#~ "includes which will allow us to use the `ecm_setup_version` function, "
#~ "this function let's use the `PROJECT_VERSION` variable in our code so we "
#~ "only need to change one variable when bumping up versions."
#~ msgstr ""
#~ "У файлі CMakeLists.txt у нашій теці верхнього рівня додаємо `CoreAddons` "
#~ "до модуля `find_package`. Також варто додати три включення `ECM`, яка "
#~ "надасть нам змогу скористатися функцією `ecm_setup_version`. Ця функція "
#~ "уможливлює використання змінної `PROJECT_VERSION` у нашому коді, отже нам "
#~ "потрібно буде змінити лише одну змінну при переході до нових версій."

#~ msgid "![A tool button](controls-toolbutton.png)"
#~ msgstr "![Кнопка-інструмент](controls-toolbutton.png)"

#~ msgid "![A set of switches](controls-switch.png)"
#~ msgstr "![Набір перемикачів](controls-switch.png)"

#~ msgid "![A set of sliders](controls-sliders.png)"
#~ msgstr "![Набір повзунків](controls-sliders.png)"

#~ msgid "![Sheet header](sheet_header.png)"
#~ msgstr "![Шапка аркуша](sheet_header.png)"

#~ msgid "![Sheet footer](sheet_footer.png)"
#~ msgstr "![Підвал аркуша](sheet_footer.png)"

#~ msgid "![Sheet with a listview](sheet_listview.png)"
#~ msgstr "![Аркуш на панелі списку](sheet_listview.png)"

#~ msgid "![A busy indicator](busyindicator.png)"
#~ msgstr "![Індикатор зайнятості](busyindicator.png)"

#~ msgid "![](card1.png)"
#~ msgstr "![](card1.png)"

#~ msgid ""
#~ "| Kirigami Unit | Pixels | | ------ | ------ | | smallSpacing | 4px | | "
#~ "largeSpacing | 8px | | gridUnit | 18px |"
#~ msgstr ""
#~ "| Одиниця Kirigami | Пікселі | | ------ | ------ | | smallSpacing | 4пк | "
#~ "| largeSpacing | 8пк | | gridUnit | 18пк |"

#~ msgid ""
#~ "| Project | What it is | Links | | --- | --- | --- | | <img src=\"https://"
#~ "apps.kde.org/app-icons/org.kde.calindori.svg\" width=\"50\" height="
#~ "\"50\"><br />Calindori | A touch friendly calendar application designed "
#~ "for mobile devices | [KDE Apps page](https://apps.kde.org/en/"
#~ "calindori)<br />[KDE Invent page](https://invent.kde.org/plasma-mobile/"
#~ "calindori) | | <img src=\"https://apps.kde.org/app-icons/org.kde."
#~ "kdeconnect.kcm.svg\" width=\"50\" height=\"50\"><br />KDE Connect | A "
#~ "multi-platform app that allows your devices to communicate (eg: your "
#~ "phone and your computer). | [Home page](https://kdeconnect.kde.org/)<br /"
#~ ">[KDE Community Wiki page](https://community.kde.org/KDEConnect)<br /"
#~ ">[KDE Invent page](https://invent.kde.org/network/kdeconnect-kde) | | "
#~ "<img src=\"https://invent.kde.org/graphics/koko/-/raw/master/logo.png\" "
#~ "width=\"50\" height=\"50\"><br />Koko | An image viewer designed for "
#~ "desktop and touch devices. | [Userbase page](https://userbase.kde.org/"
#~ "Koko)<br />[KDE Invent page](https://invent.kde.org/graphics/koko) | | "
#~ "<img src=\"https://apps.kde.org/app-icons/org.kde.kontrast.svg\" width="
#~ "\"50\" height=\"50\"><br />Kontrast | A color contrast checker that tells "
#~ "you if your color combinations are accessible for people with color "
#~ "vision deficiencies. | [KDE Apps page](https://apps.kde.org/en/"
#~ "kontrast)<br />[KDE Invent page](https://invent.kde.org/accessibility/"
#~ "kontrast) |"
#~ msgstr ""
#~ "| Проєкт | Призначення | Посилання | | --- | --- | --- | | <img src="
#~ "\"https://apps.kde.org/app-icons/org.kde.calindori.svg\" width=\"50\" "
#~ "height=\"50\"><br />Calindori | Програма-календар для мобільних пристроїв "
#~ "із сенсорним керуванням | [Сторінка на KDE Apps](https://apps.kde.org/en/"
#~ "calindori)<br />[Сторінка на KDE Invent](https://invent.kde.org/plasma-"
#~ "mobile/calindori) | | <img src=\"https://apps.kde.org/app-icons/org.kde."
#~ "kdeconnect.kcm.svg\" width=\"50\" height=\"50\"><br />KDE Connect | "
#~ "Багатоплатформова програма, яка уможливлює обмін даними між пристроями "
#~ "(наприклад вашим телефоном і комп'ютером). | [Домашня сторінка](https://"
#~ "kdeconnect.kde.org/)<br />[Сторінка у вікі спільноти KDE](https://"
#~ "community.kde.org/KDEConnect)<br />[Сторінка на KDE Invent](https://"
#~ "invent.kde.org/network/kdeconnect-kde) | | <img src=\"https://invent.kde."
#~ "org/graphics/koko/-/raw/master/logo.png\" width=\"50\" height=\"50\"><br /"
#~ ">Koko | Програма для перегляду зображень, яка може працювати на звичайних "
#~ "комп'ютерах і на пристроях із сенсорним керуванням. | [Сторінка на "
#~ "Userbase](https://userbase.kde.org/Koko)<br />[Сторінка на KDE Invent]"
#~ "(https://invent.kde.org/graphics/koko) | | <img src=\"https://apps.kde."
#~ "org/app-icons/org.kde.kontrast.svg\" width=\"50\" height=\"50\"><br /"
#~ ">Kontrast | Програма для перевірки контрастності кольорів, яка повідомить "
#~ "вам, чи є ваша комбінація кольорів доступною для користувачів із вадами у "
#~ "сприйнятті кольорів. | [Сторінка на KDE Apps](https://apps.kde.org/en/"
#~ "kontrast)<br />[Сторінка на KDE Invent](https://invent.kde.org/"
#~ "accessibility/kontrast) |"

#~ msgid ""
#~ "| Project | What it is | Links | | --- | --- | --- | | <img src=\"https://"
#~ "apps.kde.org/app-icons/org.kde.discover.svg\" width=\"50\" height="
#~ "\"50\"><br />Discover | An application that helps you find and install "
#~ "applications, games, and tools. | [KDE Apps page](https://apps.kde.org/en/"
#~ "discover)<br />[KDE Userbase page](https://userbase.kde.org/Discover)<br /"
#~ ">[KDE Invent page](https://invent.kde.org/plasma/discover) | | <img src="
#~ "\"https://apps.kde.org/app-icons/org.kde.elisa.svg\" width=\"50\" height="
#~ "\"50\"><br />Elisa | A music player that strives to be simple and nice to "
#~ "use. | [Home page](https://elisa.kde.org/)<br />[KDE Apps page](https://"
#~ "apps.kde.org/en/elisa)<br />[KDE Community Wiki page](https://community."
#~ "kde.org/KDEConnect)<br />[KDE Invent page](https://invent.kde.org/"
#~ "multimedia/elisa) | | <img src=\"https://invent.kde.org/utilities/"
#~ "kongress/-/raw/master/org.kde.kongress.svg\" width=\"50\" height="
#~ "\"50\"><br />Kongress | A companion application for conference attendees. "
#~ "| [KDE Invent page](https://invent.kde.org/utilities/kongress) | | <img "
#~ "src=\"https://apps.kde.org/app-icons/org.kde.neochat.svg\" width=\"50\" "
#~ "height=\"50\"><br />NeoChat | A client for Matrix, the decentralized "
#~ "communication protocol for instant messaging. | [KDE Apps page](https://"
#~ "apps.kde.org/en/neochat)<br />[KDE Invent page](https://invent.kde.org/"
#~ "network/neochat) |"
#~ msgstr ""
#~ "| Проєкт | Призначення | Посилання | | --- | --- | --- | | <img src="
#~ "\"https://apps.kde.org/app-icons/org.kde.discover.svg\" width=\"50\" "
#~ "height=\"50\"><br />Discover | Програма, яка допоможе вам знайти і "
#~ "встановити пакунки з іншими програмами, іграми та інструментами. | "
#~ "[Сторінка на KDE Apps](https://apps.kde.org/en/discover)<br />[Сторінка "
#~ "на KDE Userbase](https://userbase.kde.org/Discover)<br />[Сторінка на KDE "
#~ "Invent](https://invent.kde.org/plasma/discover) | | <img src=\"https://"
#~ "apps.kde.org/app-icons/org.kde.elisa.svg\" width=\"50\" height="
#~ "\"50\"><br />Elisa | Музичний програвач — простий і приємний у "
#~ "користуванні. | [Домашня сторінка](https://elisa.kde.org/)<br />[Сторінка "
#~ "на KDE Apps](https://apps.kde.org/en/elisa)<br />[Сторінка у вікі "
#~ "спільноти KDE](https://community.kde.org/KDEConnect)<br />[Сторінка на "
#~ "KDE Invent](https://invent.kde.org/multimedia/elisa) | | <img src="
#~ "\"https://invent.kde.org/utilities/kongress/-/raw/master/org.kde.kongress."
#~ "svg\" width=\"50\" height=\"50\"><br />Kongress | Програма-компаньйон для "
#~ "учасників конференцій. | [Сторінка на KDE Invent](https://invent.kde.org/"
#~ "utilities/kongress) | | <img src=\"https://apps.kde.org/app-icons/org.kde."
#~ "neochat.svg\" width=\"50\" height=\"50\"><br />NeoChat | Клієнт Matrix, "
#~ "децентралізованого протоколу спілкування для миттєвого обміну "
#~ "повідомленнями. | [Сторінка на KDE Apps](https://apps.kde.org/en/"
#~ "neochat)<br />[Сторінка на KDE Invent](https://invent.kde.org/network/"
#~ "neochat) |"

#~ msgid ""
#~ "| Page | Topic | | --- | --- | | [Understanding CMakeLists](/docs/"
#~ "kirigami/advanced-understanding_cmakelists) | Learn all about CMake and "
#~ "how to compile your applications. | | [Figuring out main.cpp](/docs/"
#~ "kirigami/advanced-maincpp) | Getting to grips with the central C++ file "
#~ "that handles your applications' initialisation. | | [Connect logic to "
#~ "your QML user interface](/docs/kirigami/advanced-connect_backend) | Add "
#~ "advanced functionality to your Kirigami application and connect it to "
#~ "your UI. |"
#~ msgstr ""
#~ "| Сторінка | Тема | | --- | --- | | [Розбираємося із CMakeLists](/docs/"
#~ "kirigami/advanced-understanding_cmakelists) | Дізнайтеся усе про CMake і "
#~ "те, як збирати ваші програми. | | [Вивчаємо main.cpp](/docs/kirigami/"
#~ "advanced-maincpp) | Розбираємо до дрібниць центральний файл мовою C++, "
#~ "який обробляє ініціалізацію ваших програм. | | [З'єднання логіки з вашим "
#~ "інтерфейсом користувача QML](/docs/kirigami/advanced-connect_backend) | "
#~ "Додавання додаткових функціональних можливостей до вашої програми "
#~ "Kirigami і поєднання їх із вашим інтерфейсом користувача. |"

#~ msgid ""
#~ "| Resource | Topic | | --- | --- | | [Wikibooks C++](https://en.wikibooks."
#~ "org/wiki/C%2B%2B_Programming) | A comprehensive wikibook with C++ lessons "
#~ "and exercises | | [W3Schools C++](https://www.w3schools.com/cpp/cpp_intro."
#~ "asp) | A set of C++ tutorials and other resources aimed at beginners | | "
#~ "[LearnCpp](https://www.learncpp.com/) | Tutorials to get to grips with C+"
#~ "+ | | [cppreference](https://en.cppreference.com/w/) | A reference site "
#~ "for C++ |"
#~ msgstr ""
#~ "| Ресурс | Тема | | --- | --- | | [Вікіпідручник з C++](https://en."
#~ "wikibooks.org/wiki/C%2B%2B_Programming) | Повноцінна вікікнига із уроками "
#~ "та вправами з C++ | | [W3Schools C++](https://www.w3schools.com/cpp/"
#~ "cpp_intro.asp) | Набір підручників з C++ та інших ресурсів для "
#~ "початківців | | [LearnCpp](https://www.learncpp.com/) | Підручники для "
#~ "засвоєння C++ | | [cppreference](https://en.cppreference.com/w/) | "
#~ "Довідковий сайт щодо C++ |"

#~ msgid "controller.h"
#~ msgstr "controller.h"

#~ msgid "controller.cpp"
#~ msgstr "controller.cpp"

#~ msgid "In the `.cpp` file we have two methods, `instance` and `aboutData`."
#~ msgstr "У файлі `.cpp` маємо два методи: `instance` і `aboutData`."

#~ msgid ""
#~ "`instance` just returns a `Controller` object and `aboutData` returns our "
#~ "application data."
#~ msgstr ""
#~ "`instance` просто повертає об'єкт `Controller`, а `aboutData` повертає "
#~ "дані нашої програми."

#~ msgid "introduction"
#~ msgstr "вступ"

#~ msgid "style"
#~ msgstr "стиль"

#~ msgid "components"
#~ msgstr "компоненти"

#~ msgid "advanced"
#~ msgstr "Додатково"
