#
# SPDX-FileCopyrightText: 2021, 2022, 2023, 2024 Freek de Kruijf <freekdekruijf@kde.nl>
# SPDX-FileCopyrightText: 2024 Ronald Stroethoff <stroet43@zonnet.nl>
msgid ""
msgstr ""
"Project-Id-Version: documentation-develop-kde-org 1.0\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2024-11-12 01:47+0000\n"
"PO-Revision-Date: 2024-10-27 16:27+0100\n"
"Last-Translator: Freek de Kruijf <freekdekruijf@kde.nl>\n"
"Language-Team: \n"
"Language: nl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Lokalize 24.08.2\n"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Getting started with Kirigami"
msgstr "Beginnen met Kirigami"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Kirigami"
msgstr "Kirigami"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Introduction"
msgstr "Inleiding"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Style"
msgstr "Stijl"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Components"
msgstr "Componenten"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Advanced"
msgstr "Geavanceerd"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Kirigami Addons"
msgstr "Kirigami-toevoegingen"

#: content/docs/getting-started/kirigami/_index.md:0
msgid "Learning to create your first applications using Kirigami\n"
msgstr "Leren om uw eerste toepassing te maken met Kirigami\n"

#: content/docs/getting-started/kirigami/_index.md:24
msgid ""
"This tutorial will guide you through the process of creating your own "
"convergent application using the [Kirigami framework](/frameworks/kirigami). "
"A *convergent application*, in this context, means people can use the "
"program easily regardless of the device it is running on. If it is on a "
"desktop computer, it will adapt to a large screen and a mouse and keyboard; "
"if it is being used on a mobile device, it will accept input from a "
"touchscreen and adapt to a smaller portrait screen. And so on."
msgstr ""
"Deze inleiding begeleidt u door het proces van het maken van uw eigen "
"convergente toepassing met gebruik van het [Kirigami framework](/frameworks/"
"kirigami). Een *convergente toepassing*, in deze context, betekent dat "
"mensen het programma gemakkelijk kunnen gebruiken onafhankelijk van het "
"apparaat waarop het wordt uitgevoerd. Als het op een desktopcomputer is, zal "
"het zich aanpassen aan een groot scherm en een muis en toetsenbord; als het "
"gebruikt wordt op een mobiel apparaat, zal het invoer accepteren van een "
"aanraakscherm en zich aanpassen aan een kleiner portretscherm. Enzovoort."

#: content/docs/getting-started/kirigami/_index.md:32
msgid ""
"Kirigami is built on top of the QML language and Qt Quick Controls 2 "
"components provided by the Qt project. QML has built in support for touch "
"systems, which makes it ideal for mobile apps. Qt Quick components are "
"reusable visual items we can use when building our applications' interfaces. "
"Kirigami is a set of Qt Quick components designed for creating convergent "
"applications."
msgstr ""
"Kirigami is gebouwd bovenop de QML-taal en Qt Quick Controls 2 componenten "
"geleverd door het Qt-project. QML heeft ingebouwde ondersteuning voor "
"aanraaksystemen, wat het ideaal maakt voor mobiele toepassingen. Qt Quick "
"componenten zijn herbruikbare visuele items die we kunnen gebruiken bij het "
"bouwen van onze interfaces van toepassingen. Kirigami is een set van Qt "
"Quick componenten ontworpen voor het maken van convergente toepassingen."

#: content/docs/getting-started/kirigami/_index.md:38
msgid ""
"While you will use QML to create the visual part of your application, the "
"business logic—the code that does the heavy lifting for your application's "
"functionality—is usually created in C++ for performance reasons. We will "
"also explore how to integrate our business logic with our UI in the "
"tutorials below."
msgstr ""
"Terwijl u QML zal gebruiken om het visuele deel van uw toepassing te maken, "
"wordt voor de zakelijke logica - de code die het zware werk doet voor de "
"functionaliteit van uw toepassing - gewoonlijk aangemaakt in C++ voor "
"redenen van prestaties. We zullen ook nagaan hoe uw zakelijke logica "
"integreert met uw UI in de onderstaande inleidingen."

#: content/docs/getting-started/kirigami/addons-about/index.md:0
msgid "FormCard About pages"
msgstr "FormCard over pagina's"

#: content/docs/getting-started/kirigami/addons-about/index.md:0
msgid "Learn to create About pages to credit your application."
msgstr ""
"Leer het aanmaken van pagina's Info over om waardering in uw toepassing aan "
"te geven."

#: content/docs/getting-started/kirigami/addons-about/index.md:8
#: content/docs/getting-started/kirigami/addons-delegates/index.md:8
#: content/docs/getting-started/kirigami/addons-introduction/index.md:8
msgid ""
"Kirigami Addons is an additional set of visual components that work well on "
"mobile and desktop and are guaranteed to be cross-platform. It uses Kirigami "
"under the hood to create its components."
msgstr ""
"Kirigami-aanvullingen is een additionele set van visuele componenten die "
"goed werken op een mobiel en bureaublad en gegarandeerd cross-platform zijn. "
"Het gebruikt Kirigami onder de motorkap om zijn componenten aan te maken."

#: content/docs/getting-started/kirigami/addons-about/index.md:10
msgid ""
"Some of those components allow you to credit your work and the work of other "
"contributors in your project, as well as mention the frameworks being used "
"in your application: [AboutKDE](https://api.kde.org/frameworks/kirigami-"
"addons/html/classAboutKDE.html) and AboutPage."
msgstr ""
"Sommige van die componenten bieden u om dankbetuigingen voor uw werk en het "
"werk van anderen die hebben bijgedragen aan uw project, evenals het noemen "
"van de frameworks die in uw toepassing worden gebruikt: [AboutKDE](https://"
"api.kde.org/frameworks/kirigami-addons/html/classAboutKDE.html) en AboutPage."

#: content/docs/getting-started/kirigami/addons-about/index.md:12
msgid "About KDE"
msgstr "Over KDE"

#: content/docs/getting-started/kirigami/addons-about/index.md:14
msgid ""
"Each new button we created in the previous step should open a new page. You "
"can add new pages by instantiating them as [Components](docs:qtqml;QtQml."
"Component) and then using `pageStack.layers.push()` for each button to load "
"that page in our `Main.qml`:"
msgstr ""
"Elke nieuwe knop die we hebben gemaakt in de vorige stap zou een nieuwe "
"pagina openen. U kunt nieuwe pagina's toevoegen door ze als [Componenten]"
"(docs:qtqml;QtQml.Component) aan te maken en daarna `pageStack.layers."
"push()` voor elke knop te gebruiken om die pagina in onze `Main.qml` te "
"gebruiken:"

#: content/docs/getting-started/kirigami/addons-about/index.md:18
msgid ""
"That's it really! All it takes is instantiating `FormCard.AboutKDE`. You "
"should see something like this after clicking the AboutKDE button:"
msgstr ""
"Dat is het helemaal! Al wat er gedaan moet worden is een exemplaar maken van "
"`FormCard.AboutKDE`. U zou iets moeten zien als dit na klikken op de knop "
"AboutKDE:"

#: content/docs/getting-started/kirigami/addons-about/index.md:22
msgid "About Page"
msgstr "Pagina Info over"

#: content/docs/getting-started/kirigami/addons-about/index.md:24
msgid ""
"The application's AboutPage is slightly more complex, but it's still very "
"simple to use."
msgstr ""
"De AboutPage van de toepassing is iets complexer, maar het is nog steeds erg "
"eenvoudig te gebruiken."

#: content/docs/getting-started/kirigami/addons-about/index.md:26
msgid ""
"For a simple about page that uses the data set in by `KAboutData::"
"setApplicationData(aboutData);` in `main.cpp` add the following to your "
"`Main.qml`:"
msgstr ""
"Voor een eenvoudige pagina Info over die de gegevens gebruikt ingesteld door "
"`KAboutData::setApplicationData(aboutData);` in `main.cpp` voeg het volgende "
"toe aan uw `Main.qml`:"

#: content/docs/getting-started/kirigami/addons-about/index.md:30
msgid "The About page of our application should look like this:"
msgstr ""
"De pagina Info over van uw toepassing zou er als volgt uit moeten zien:"

#: content/docs/getting-started/kirigami/addons-about/index.md:34
msgid "Using JSON instead of KAboutData"
msgstr "JSON gebruiken in plaats van KAboutData"

#: content/docs/getting-started/kirigami/addons-about/index.md:36
msgid ""
"Instead of letting your about page get information from [KAboutData](docs:"
"kcoreaddons;KAboutData), it is possible to pass a JSON object directly. You "
"will still need to use [QApplication::setWindowIcon()](docs:qtwidgets;"
"QApplication::setWindowIcon) in your `main.cpp` in order for your "
"application icon to show up."
msgstr ""
"In plaats van dat uw pagina about informatie krijgt uit [KAboutData](docs:"
"kcoreaddons;KAboutData), is het mogelijk om een JSON-object direct door te "
"geven. U zult nog steeds [QApplication::setWindowIcon()](docs:qtwidgets;"
"QApplication::setWindowIcon) in uw `main.cpp` moeten gebruiken om in uw "
"toepassing het pictogram te laten tonen."

#: content/docs/getting-started/kirigami/addons-about/index.md:38
msgid "Create a `MyAboutPage.qml` like this:"
msgstr "Maak en `MyAboutPage.qml` zoals deze:"

#: content/docs/getting-started/kirigami/addons-about/index.md:42
msgid "And then adjust your `Main.qml` to include your new about page:"
msgstr ""
"En pas uw `Main.qml` aan om onze nieuwe pagina About-pagina in te voegen:"

#: content/docs/getting-started/kirigami/addons-about/index.md:46
msgid ""
"The main JSON object here contains the keys `displayName`, `productName`, "
"`homepage` and so on. The keys `authors`, `credits`, `translators` and "
"`licenses` can each be passed an array of objects. The objects passed to "
"`authors`, `credits` and `translators` share the same keys so that they can "
"be displayed each in their own section, while `licenses` includes the keys "
"`name`, `text` and `spdx` for each license added, as it is not uncommon for "
"the same project to include multiple licenses."
msgstr ""
"Het hoofd JSON-object hier bevat de sleutels `displayName`, `productName`, "
"`homepage` enzovoort. De sleutels `authors`, `credits`, `translators` en "
"`licenses` kunnen elk doorgeven worden als een array van objecten. De "
"doorgeven objecten aan `authors`, `credits` en `translators` delen dezelfde "
"sleutels zodat ze getoond kunnen worden elk in hun eigen sectie, terwijl "
"`licenses` de sleutels `name`, `text` en `spdx` voor elke toegevoegde "
"licentie bevat, omdat het niet ongewoon is voor hetzelfde project om "
"meerdere licenties te bevatten."

#: content/docs/getting-started/kirigami/addons-about/index.md:48
msgid ""
"These keys are optional, but a reasonable minimum amount of keys is expected "
"to make your application have no empty fields: `displayName`, `version`, "
"`description`, `homepage`, `copyrightStatement` and `authors`. You are "
"encouraged to fill as many key as possible, however."
msgstr ""
"Deze sleutels zijn optioneel, maar een redelijke minimale hoeveelheid "
"sleutels wordt verwacht om te zorgen dat uw toepassing geen lege velden "
"heeft: `displayName`, `version`, `description`, `homepage`, "
"`copyrightStatement` en `authors`. U wordt echter aangemoedigd om zoveel "
"sleutels als mogelijk in te vullen."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:0
msgid "Form delegates in your settings pages"
msgstr "Formulier gedelegeerden in uw instellingen pagina's"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:0
msgid "Create elegant custom settings pages."
msgstr "Elegante aangepaste instellingenpagina's aanmaken."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:10
msgid ""
"You have learned how to add About and AboutKDE pages to your application. "
"Now you will be able to use their same inner components to create your "
"settings pages."
msgstr ""
"U hebt geleerd hoe de pagina's About en AboutKDE toe te voegen aan uw "
"toepassing. Nu zult u in staat zijn om hun zelfde innerlijke componenten te "
"gebruiken om uw instellingenpagina's aan te maken."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:12
msgid "The project structure should look like this:"
msgstr "De projectstructuur zou er als volgt uit moeten zien:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:23
msgid "Needed Changes"
msgstr "Benodigde wijzigingen"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:25
msgid "Change `Main.qml` to include our new Settings page:"
msgstr "Wijzig `Main.qml` om onze nieuwe pagina Instellingen in te voegen:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:85
msgid ""
"We can now start checking out the components used to create our Settings "
"page: the Form Card and its Delegates."
msgstr ""
"We kunnen nu beginnen met de checkout van de componenten gebruikt om onze "
"pagina Instellingenpage aan te maken: het formulier Card en zijn "
"Gedelegeerden."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:87
msgid "Form Delegates"
msgstr "Formulier over gedelegeerden"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:89
msgid "FormCard and FormCardPage"
msgstr "FormCard en FormCardPage"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:91
msgid ""
"[FormCard.FormCard](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormCard.html) is the main component we will be using to group all its "
"child components, the Delegates."
msgstr ""
"[FormCard.FormCard](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormCard.html) is de hoofdcomponent die we zullen gebruiken om alle "
"zijn dochtercomponenten, de Gedelegeerden, te groeperen."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:93
msgid ""
"We used a form card in the [Kirigami Addons introduction](/docs/getting-"
"started/kirigami/addons-introduction) before. Its main purpose is to serve "
"as a container for other components while following a color different from "
"the background, in a similar manner to a [Kirigami.Card](docs:kirigami2;"
"Card)."
msgstr ""
"We gebruikten eerder een formulier-card in de [Kirigami Addons introductie](/"
"docs/getting-started/kirigami/addons-introduction). Het hoofddoel hiervan is "
"te dienen als een container voor andere componenten tijdens het volgen van "
"een kleurverschil met de achtergrond, op een vergelijkbare manier met een "
"[Kirigami.Card](docs:kirigami2;Card)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:95
msgid "Create a new `SettingsPage.qml` file:"
msgstr "Maak een nieuw bestand `SettingsPage.qml`:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:103
#: content/docs/getting-started/kirigami/addons-delegates/index.md:107
msgid "This is where all our delegates go!"
msgstr "Dit is waar alle gedelegeerden naartoe gaan!"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:112
msgid ""
"Since we are making a separate QML file for our Settings page, and since we "
"need to prepare for potential scrolling in our page, we use a `FormCard."
"FormCardPage`, which inherits [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage)."
msgstr ""
"Omdat we een apart QML-bestand gaan maken voor onze pagina Instellingen en "
"omdat we voor potentieel schuiven in onze pagina ons willen voorbereiden, "
"gebruiken we een `FormCard.FormCardPage`, die [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage) erft."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:114
msgid ""
"The nice thing about the form card page is that it comes with an internal "
"layout, so no additional ColumnLayout is needed and our delegates can be "
"added directly to it."
msgstr ""
"Het mooie van de pagina form-card is dat het komt met een interne indeling, "
"dus is geen extra ColumnLayout nodig en onze gedelegeerden kunnen direct "
"eraan worden toegevoegd."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:116
msgid ""
"{{< alert color=\"info\" title=\"Note\" >}} It is possible to use FormCard "
"delegates directly with a Kirigami.ScrollablePage, but in that case you will "
"need to add your own layouts. {{< /alert >}}"
msgstr ""
"{{< alert color=\"info\" title=\"Note\" >}} Het is mogelijk FormCard "
"gedelegeerden direct te gebruiken met een Kirigami.ScrollablePage, maar in "
"dat geval moet u uw eigen indelingen toevoegen. {{< /alert >}}"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:120
msgid "FormHeader"
msgstr "Formulierkop"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:122
msgid ""
"For every [FormCard](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormCard.html) you want to create, you can create a [FormHeader]"
"(https://api.kde.org/frameworks/kirigami-addons/html/classFormHeader.html) "
"just before it. The header uses bold text and shows up right above the form "
"card."
msgstr ""
"Voor elke [FormCard](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormCard.html) die u wilt aanmaken kunt u een [FormHeader](https://api."
"kde.org/frameworks/kirigami-addons/html/classFormHeader.html) ervoor "
"aanmaken. De kop gebruikt vette tekst en toont omhoog bovenaan de formcard."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:133
#: content/docs/getting-started/kirigami/addons-delegates/index.md:141
msgid "Our delegates go here..."
msgstr "Onze gedelegeerden gaan hier..."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:146
msgid "FormTextDelegate and FormSectionText"
msgstr "FormTextDelegate en FormSectionText"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:148
msgid "Let's start simple, with plain text."
msgstr "Laten we eenvoudig beginnen met platte tekst."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:150
msgid ""
"`FormSectionText` simply adds a thin delegate containing a label. "
"`FormTextDelegate` has text and a grayed out description."
msgstr ""
"`FormSectionText` voegt eenvoudig een dunne gedelegeerde toe die een label "
"bevat. `FormTextDelegate` heeft tekst en een grijs gemaakte beschrijving."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:186
msgid ""
"We add some dummy text for the hypothetical theme detection. If we wanted to "
"have actual color scheme detection, in the future it could be done similarly "
"to [Neochat](https://apps.kde.org/neochat) ([code here](https://github.com/"
"KDE/neochat/blob/master/src/colorschemer.cpp)), making use of a C++ model "
"with [KColorSchemeManager](docs:kconfigwidgets;KColorSchemeManager)."
msgstr ""
"We voegen enige dummy tekst toe voor de hypothetische detectie van het "
"thema. Als we echt detectie van het kleurschema willen hebben, kan dat in de "
"toekomst op dezelfde manier gedaan worden aan [Neochat](https://apps.kde.org/"
"neochat) ([code hier](https://github.com/KDE/neochat/blob/master/src/"
"colorschemer.cpp)), gebruik makend van een C++ model met "
"[KColorSchemeManager](docs:kconfigwidgets;KColorSchemeManager)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:188
msgid ""
"In the Online Accounts section, we see an additional property, `leading`. We "
"can add an [Item](docs:qtquick;Item) to it so that it appears before the "
"text. Its opposite property, `trailing`, would be able to show an Item after "
"the text, but we won't use it in our program."
msgstr ""
"In de sectie Online accounts zien we een extra eigenschap, `leading`. We "
"kunnen een [Item](docs:qtquick;Item) er aan toevoegen zodat het verschijnt "
"voor de tekst. Zijn tegengestelde eigenschap, `trailing`, zou in staat zijn "
"een Item achter de tekst te tonen, maar we zullen dat niet in ons programma "
"gebruiken."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:190
msgid ""
"We use a [Kirigami.Icon](docs:kirigami2;Icon) here for simplicity, but this "
"could also be implemented using a [Kirigami.Avatar](docs:kirigami2;Avatar) "
"that grabs the information from a model, as is done in Neochat [here]"
"(https://invent.kde.org/network/neochat/-/blob/master/src/qml/Settings/"
"AccountsPage.qml)."
msgstr ""
"We gebruiken hier eenvoudig een [Kirigami.Icon](docs:kirigami2;Icon), maar "
"dit zou ook geïmplementeerd kunnen worden met een [Kirigami.Avatar](docs:"
"kirigami2;Avatar) die de informatie pakt uit een model, zoals gedaan is in "
"Neochat [hier](https://invent.kde.org/network/neochat/-/blob/master/src/qml/"
"Settings/AccountsPage.qml)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:192
msgid "It should end up looking like this:"
msgstr "Het zou er uiteindelijk als volgt uit moeten zien:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:196
msgid "FormButtonDelegate"
msgstr "FormButtonDelegate"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:198
msgid ""
"The [FormButtonDelegate](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormButtonDelegate.html) is visually similar to a FormTextDelegate, but "
"it is clickable and shows an arrow pointing to the right. We used it in the "
"[Kirigami Addons introduction](/docs/getting-started/kirigami/addons-"
"introduction) before."
msgstr ""
"De [FormButtonDelegate](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormButtonDelegate.html) is visueel gelijk aan een FormTextDelegate, "
"maar er is op te klikken en toont een pijl wijzend naar rechts. We "
"gebruikten het eerder in de [Kirigami Addons introduction](/docs/getting-"
"started/kirigami/addons-introduction)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:200
msgid ""
"While the FormTextDelegate had the `leading` and `trailing` properties to "
"show an item before and after the main content, the FormButtonDelegate only "
"has the `leading` property, because the right side is occupied by the arrow."
msgstr ""
"Terwijl de FormTextDelegate de eigenschappen `leading` en `trailing` hadden "
"om een item voor en na de hoofdinhoud te tonen, zo heeft de "
"FormButtonDelegate slechts de eigenschap `leading`, omdat de rechterkant "
"bezet is door de pijl."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:241
msgid ""
"We use its `icon.name` property to set a plus (+) icon to appear after the "
"space where the `leading` would appear, and before the main content. This is "
"a common pattern to indicate your button will add something to a list."
msgstr ""
"We gebruiken zijn eigenschap `icon.name` om een pluspictogram (+) te laten "
"verschijnen na de ruimte waar de `leading` zou verschijnen en voor de "
"hoofdinhoud. Dit is een algemeen patroon om aan te geven dat uw knop iets "
"aan een lijst wil toevoegen."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:243
msgid ""
"Since this example is for simple illustrative purposes, we don't delve deep "
"into what would be done once the button is clicked: it just prints \"Clicked!"
"\" to the terminal. We _could_ make a new page for account creation that "
"adds another user to a model, then push the page into view, similarly to "
"what we did in `Main.qml`."
msgstr ""
"Omdat dit voorbeeld een eenvoudig illustratief doel heeft, gaan we niet "
"dieper in wat zou gedaan worden nadat op de knop is geklikt: het print "
"eenvoudig \"Geklikt!\" op de terminal. We _zouden_ een nieuwe pagina kunnen "
"maken voor aanmaken van een account die een andere gebruiker toevoegt aan "
"een model, daarna de pagina laat zien, gelijk aan wat we deden in `Main.qml`."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:247
msgid "FormRadioDelegate, FormCheckDelegate and FormSwitchDelegate"
msgstr "FormRadioDelegate, FormCheckDelegate en FormSwitchDelegate"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:249
msgid ""
"The RadioButton, CheckBox and Switch are very commonly used components in "
"any user interface. Kirigami Addons provides them as [FormRadioDelegate]"
"(https://api.kde.org/frameworks/kirigami-addons/html/classFormRadioDelegate."
"html), [FormCheckDelegate](https://api.kde.org/frameworks/kirigami-addons/"
"html/classFormCheckDelegate.html) and [FormSwitchDelegate](https://api.kde."
"org/frameworks/kirigami-addons/html/classFormSwitchDelegate.html)."
msgstr ""
"De RadioButton, CheckBox en Switch zijn erg gebruikelijke componenten in "
"elke gebruikersinterface. Kirigami Addons levert ze als [FormRadioDelegate]"
"(https://api.kde.org/frameworks/kirigami-addons/html/classFormRadioDelegate."
"html), [FormCheckDelegate](https://api.kde.org/frameworks/kirigami-addons/"
"html/classFormCheckDelegate.html) en [FormSwitchDelegate](https://api.kde."
"org/frameworks/kirigami-addons/html/classFormSwitchDelegate.html)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:251
msgid ""
"Their only main properties are `text` and `description`. They are different "
"in usage because they all inherit [AbstractButton](docs:qtquickcontrols;"
"QtQuick.Controls.AbstractButton), and so you are expected to use its signals "
"and handlers: checked and onChecked, toggled and onToggled, clicked and "
"onClicked."
msgstr ""
"Hun enige hoofdeigenschappen zijn `tekst` en `beschrijving`. Ze zijn anders "
"in gebruik omdat ze allemaal [AbstractButton](docs:qtquickcontrols;QtQuick."
"Controls.AbstractButton)erven en dus van u wordt verwacht hun signalen en "
"hendels te gebruiken: geactiveerd en niet-geactiveerd, omgeschakeld en niet-"
"omgeschakeld, geklikt en niet-geklikt."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:253
msgid ""
"We want to create some autosave functionality in our application, and we "
"want to only show its settings if the user has enabled this functionality. "
"Create a new section using a [FormCard](https://api.kde.org/frameworks/"
"kirigami-addons/html/classFormCard.html) and a [FormHeader](https://api.kde."
"org/frameworks/kirigami-addons/html/classFormHeader.html), then add a "
"[FormSwitchDelegate](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormSwitchDelegate.html) and a [FormRadioDelegate](https://api.kde.org/"
"frameworks/kirigami-addons/html/classFormRadioDelegate.html)."
msgstr ""
"We willen enige auto-opslag functionaliteit in uw toepassing aanmaken en we "
"willen alleen zijn instellingen tonen als de gebruiker deze functionaliteit "
"heeft ingeschakeld. Maak een nieuwe sectie aan met een [FormCard](https://"
"api.kde.org/frameworks/kirigami-addons/html/classFormCard.html) en een "
"[FormHeader](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormHeader.html), voeg daarna een [FormSwitchDelegate](https://api.kde."
"org/frameworks/kirigami-addons/html/classFormSwitchDelegate.html) toe en een "
"[FormRadioDelegate](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormRadioDelegate.html)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:280
msgid ""
"We bind the visibility of each radio button to a switch, so they only appear "
"when the switch is enabled."
msgstr ""
"We verbinden de zichtbaarheid van elk keuzerondje aan een schakelaar, ze "
"verschijnen dus alleen wanneer de schakelaar is ingeschakeld."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:282
msgid "Best Practices"
msgstr "Beste praktijk"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:284
msgid "<details><summary>Click here to read more</summary>\n"
msgstr "<details><summary>Klik hier om meer te lezen</summary>\n"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:286
msgid ""
"If you have some programming background in imperative languages such as C++, "
"you might be tempted to set the `checked` property of the switch to turn the "
"visibility of the radio buttons to `true` with a JavaScript assignment such "
"as:"
msgstr ""
"Als u enige achtergrond hebt in programmeren in imperatieve talen zoals C++, "
"dan zou u verleid kunnen worden om de eigenschap `geactiveerd` aan de "
"schakelaar te hangen om de zichtbaarheid van het keuzerondje op `true` te "
"zetten met een JavaScript toekenning zoals:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:296
msgid ""
"This is not very efficient for QML's declarative language and its signals "
"and slots. Try to use QML bindings like in the case of `visible: autosave."
"checked` as much as possible instead of JavaScript expressions."
msgstr ""
"Dit is niet erg efficiënt voor de declaratie taal QML en zijn signalen en "
"slots. Probeer de binding aan QML zo veel mogelijk te gebruiken zoals in het "
"geval van `visible: autosave.checked` in plaats van JavaScript expressies."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:298
msgid ""
"See [this page](https://doc.qt.io/qt-6/qtquick-bestpractices.html#prefer-"
"declarative-bindings-over-imperative-assignments) for details."
msgstr ""
"Zie [deze pagina](https://doc.qt.io/qt-6/qtquick-bestpractices.html#prefer-"
"declarative-bindings-over-imperative-assignments) voor details."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:300
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:602
#: content/docs/getting-started/kirigami/introduction-actions/index.md:80
#: content/docs/getting-started/kirigami/introduction-actions/index.md:173
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:207
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:58
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:212
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:247
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:265
msgid "</details>\n"
msgstr "</details>\n"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:306
msgid ""
"To test our checkbox, we can add a new [FormCheckDelegate](https://api.kde."
"org/frameworks/kirigami-addons/html/classFormCheckDelegate.html) to our "
"General section."
msgstr ""
"Om ons keuzevakje te testen kunnen we een nieuwe [FormCheckDelegate](https://"
"api.kde.org/frameworks/kirigami-addons/html/classFormCheckDelegate.html) "
"toevoegen aan onze sectie Algemeen."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:331
msgid ""
"Here we use the `onToggled` [signal handler](https://doc.qt.io/qt-6/qtqml-"
"syntax-signals.html) to show some dummy text to simulate a tray icon "
"appearing in the system. If you really wanted to, you could easily implement "
"a tray icon using [SystemTrayIcon](https://doc.qt.io/qt-6/qml-qt-labs-"
"platform-systemtrayicon.html)."
msgstr ""
"Hier gebruiken we de `niet-omgeschakeld` [signaalbehandelaar](https://doc.qt."
"io/qt-6/qtqml-syntax-signals.html) om enige dummy tekst te tonen om een "
"pictogram in het systeemvak te simuleren die in het systeem verschijnt. Als "
"u dat echt wilt, zou u gemakkelijk een pictogram in het systeemvak kunnen "
"implementeren met [SystemTrayIcon](https://doc.qt.io/qt-6/qml-qt-labs-"
"platform-systemtrayicon.html)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:333
msgid "So far our application should look like this:"
msgstr "Tot zover zal onze toepassing er uitzien zoals deze:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:337
msgid "FormComboBoxDelegate"
msgstr "FormComboBoxDelegate"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:339
msgid ""
"The common ComboBox component can be created using a [FormComboBoxDelegate]"
"(https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormComboBoxDelegate.html)."
msgstr ""
"De algemene component keuzelijst kan aangemaakt worden met een "
"[FormComboBoxDelegate](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormComboBoxDelegate.html)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:341
msgid ""
"This combobox has several useful properties we can make use of: `editable`, "
"`displayText` and `displayMode`."
msgstr ""
"Deze keuzelijst heeft verschillende nuttige eigenschappen waar we gebruik "
"van kunnen maken: `editable`, `displayText` en `displayMode`."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:343
msgid ""
"Setting `editable: true` allows the user to edit the text of the combobox, "
"which is useful in case adding new combobox options is needed:"
msgstr ""
"Instellen van `editable: true` biedt de gebruiker het bewerken van de tekst "
"van het keuzevak, wat nuttig is in geval dat toevoegen van nieuwe opties in "
"het keuzevak nodig is:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:347
msgid ""
"Whenever you need to show additional text before each option, you can use "
"something like `displayText: \"Profile: \" + currentText`:"
msgstr ""
"Wanneer u het tonen van extra tekst voor elke optie nodig hebt, kunt u "
"zoiets als `displayText: \"Profile: \" + currentText` gebruiken:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:351
msgid ""
"And the most interesting one, which we will be using in our example, is "
"`displayMode`. It can have three options:"
msgstr ""
"En de meest interessante, die we zullen gaan gebruiken in ons voorbeeld, is "
"`displayMode`. Het kan drie opties hebben:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:353
msgid ""
"**FormComboBoxDelegate.ComboBox**: the standard small box showing a list of "
"options."
msgstr ""
"**FormComboBoxDelegate.ComboBox**: het standaard kleine vak die een lijst "
"met opties toont."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:357
msgid ""
"**FormComboBoxDelegate.Dialog**: a dialog showing a list of options in the "
"middle of the window, like a [Kirigami.OverlaySheet](docs:kirigami2;"
"OverlaySheet)."
msgstr ""
"**FormComboBoxDelegate.Dialog**: een dialoog die een lijst met opties in het "
"midden van het venster toont, zoals [Kirigami.OverlaySheet](docs:kirigami2;"
"OverlaySheet)."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:361
msgid ""
"**FormComboBoxDelegate.Page**: a new page containing a list of options shown "
"in a separate window."
msgstr ""
"**FormComboBoxDelegate.Page**: een nieuwe pagina die een lijst met opties "
"bevat in een apart venster."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:365
msgid ""
"Add the following between the \"Current Color Scheme\" and \"Show Tray Icon"
"\" delegates in your \"General\" form card."
msgstr ""
"Voeg het volgende toe tussen het \"Huidige kleurenschema\" en \"Pictogram in "
"systeemvak tonen\" gedelegeerden in uw formulierkaart \"Algemeen\"."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:378
msgid "With the checkbox, our Settings page should look like this:"
msgstr "Met het keuzevakje zou de pagina Instellingen er uitzien zoals deze:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:382
msgid "FormDelegateSeparator"
msgstr "FormDelegateSeparator"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:384
msgid ""
"Our Settings page is taking shape, but each section is starting to get long. "
"We can add a few FormDelegateSeparators to make our page tidier:"
msgstr ""
"Onze pagina Instellingen krijgt vorm, maar elke sectie begint lang te "
"worden. We kunnen een paar FormDelegateSeparators toevoegen om onze pagina "
"netter te maken:"

#: content/docs/getting-started/kirigami/addons-delegates/index.md:388
msgid ""
"Generally, you may use separators whenever you see major distinctions "
"between components, although the choice of where to place them is ultimately "
"yours. For example, in the General section, the checkbox differs from its "
"previous components as it doesn't start with text; in the Autosave section, "
"the separator groups the radio buttons together; and in the Accounts "
"section, adding a separator between the last account and the button provides "
"some additional focus to the button."
msgstr ""
"In het algemeen kunt u scheidingen gebruiken wanneer u belangrijk "
"onderscheid ziet tussen componenten, hoewel de keuze waar deze te plaatsen "
"uiteindelijk aan u is. Bijvoorbeeld, in de sectie General, verschilt het "
"keuzevakje van zijn vorige componenten omdat het niet met tekst begint; in "
"de sectie Autosave, groepeert de scheiding de keuzerondjes; en in sectie "
"Accounts, levert een scheiding tussen het laatste account en de knop "
"toevoegen enige extra focus op de knop."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:390
msgid ""
"The `above` and `below` properties are rather self-explanatory when it comes "
"to their use: you pass the `id` of the components above and below the "
"separator. When they are set, the separator will swiftly disappear whenever "
"the above or below item is highlighted/hovered. They are most useful, for "
"instance, when you need to generate components dynamically and you can't "
"automatically assume which item will come immediately before or after the "
"separator. That would be the case in the Accounts section of our application "
"once the logic to add new accounts were actually implemented, in which case "
"we could always grab the last item in the model to do so."
msgstr ""
"De eigenschappen `above` en `below` zijn tamelijk zelf-uitleggend wanneer "
"het hun gebruik betreft: u geeft de `id` van de componenten boven en onder "
"de scheiding. Wanneer ze zijn ingesteld zal de scheiding snel verdwijnen "
"wanneer het item boven of onder is geaccentueerd/er boven worden gezweefd. "
"Ze zijn het meest nuttig, bijvoorbeeld, wanneer u componenten dynamisch moet "
"genereren en u kunt automatisch aannemen welk item onmiddellijk zal komen "
"voor of na de scheiding. Dat zou het geval zijn in de section Accounts van "
"uw toepassing nadat de logica om nieuwe accounts toe te voegen echt zou zijn "
"geïmplementeerd, in welk geval we altijd het laatste item in het model "
"kunnen pakken om dat te doen."

#: content/docs/getting-started/kirigami/addons-delegates/index.md:394
msgid ""
"Notice how the separator above the tray icon setting does not appear while "
"it is hovered."
msgstr ""
"Merk op hoe de scheider boven de instelling van het pictogram in het "
"systeemvak niet verschijnt bij er boven zweven."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:0
msgid "Introduction to Kirigami Addons"
msgstr "Introductie tot Kirigami add-ons"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:0
msgid "Get acquainted with Kirigami Addons components"
msgstr "Wordt vertrouwd met Kirigami add-on-componenten"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:10
msgid ""
"Here you will be setting up your new Kirigami Addons project and be "
"introduced to a few useful components."
msgstr ""
"Hier zult u uw nieuwe Kirigami add-on-project opzetten en geïntroduceerd "
"worden tot een paar nuttige componenten."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:12
msgid ""
"These components make use of KDE's localization facilities, so before we "
"start using these, we will need to set a little project that makes use of "
"[KLocalizedContext](docs:ki18n;KLocalizedContext)."
msgstr ""
"Deze componenten maken gebruik van de lokalisatie faciliteiten, dus voordat "
"we beginnen met deze te gebruiken, is het nodig een opzet voor een klein "
"project te maken die gebruik maakt van [KLocalizedContext](docs:ki18n;"
"KLocalizedContext)."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:14
msgid "Setting up your project"
msgstr "Uw project opzetten"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:16
msgid "The initial project structure will look like so:"
msgstr "De initiële projectstructuur zal er zo uitzien:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:25
#: content/docs/getting-started/kirigami/introduction-actions/index.md:145
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:94
msgid "Tip"
msgstr "Tip"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:27
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:96
msgid "You can quickly create this file structure with:"
msgstr "U kunt deze bestandsstructuur snel aanmaken met:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:37
msgid "We start by using a very standard `CMakeLists.txt`:"
msgstr "We beginnen door een erge standaard `CMakeLists.txt` te gebruiken:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:41
msgid "The interesting part will be the `main.cpp`:"
msgstr "Het interessante deel zal de `main.cpp` zijn:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:45
msgid ""
"If you have read our [KXmlGui tutorial](/docs/getting-started/kxmlgui) or "
"the last Kirigami tutorial on the [Kirigami About page](/docs/getting-"
"started/kirigami/advanced-add_about_page), much of this will seem familiar "
"to you."
msgstr ""
"Als u onze [KXmlGui-handleiding](/docs/getting-started/kxmlgui) hebt gelezen "
"of de laatste Kirigami handleiding over de [Kirigami pagina Info over](/docs/"
"getting-started/kirigami/advanced-add_about_page), zal veel hiervan bekend "
"zijn voor u."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:47
msgid ""
"We create our application and use [KAboutData's](docs:kcoreaddons;"
"KAboutData) default constructor to add the metadata of our application, add "
"ourselves as an author, and then use [setApplicationData()](docs:kcoreaddons;"
"KAboutData::setApplicationData) to finish the process. For later, we also "
"set an application icon that comes from the system theme."
msgstr ""
"We maken onze toepassing en gebruiken de standaard constructor [KAboutData's]"
"(docs:kcoreaddons;KAboutData) om de metagegevens van onze toepassing toe te "
"voegen, voegen onszelf toe als een auteur en gebruiken daarna "
"[setApplicationData()](docs:kcoreaddons;KAboutData::setApplicationData) om "
"het proces te beëindigen. Voor later zetten we ook een toepassingspictogram "
"die uit het systeemthema komt."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:49
msgid ""
"We then use a lambda in [qmlRegisterSingletonType](docs:qtqml;QQmlEngine::"
"qmlRegisterSingletonType) to directly send the metadata of our application "
"to the QML side, exposing its properties."
msgstr ""
"Daarna gebruiken we een in [qmlRegisterSingletonType](docs:qtqml;QQmlEngine::"
"qmlRegisterSingletonType) om direct de metagegevens van onze toepassing naar "
"de QML-kant te verzenden, waarmee eigenschappen worden getoond."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:51
msgid ""
"We then instantiate our QML engine, and set its [context](docs:qtqml;"
"QQmlContext) to use KDE's [KLocalizedContext](docs:ki18n;KLocalizedContext), "
"used to integrate translated strings, passing the just created engine as a "
"parameter."
msgstr ""
"We maken dan een exemplaar van onze QML-engine en zetten zijn [context](docs:"
"qtqml;QQmlContext) om [KLocalizedContext](docs:ki18n;KLocalizedContext) van "
"KDE te gebruiken, gebruikt om vertaalde tekenreeksen te integreren, en de "
"zojuist gemaakte engine als een parameter door te geven."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:53
msgid ""
"We simply load our QML file from the resource file, and now we just need to "
"take care of our initial QML file."
msgstr ""
"We laden eenvoudig ons QML-bestand uit het hulpbronbestand en nu we hoeven "
"alleen nog zorg te dragen voor ons initiële QML-bestand."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:55
msgid "FormCard and FormButtonDelegate"
msgstr "FormCard en FormButtonDelegate"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:57
msgid ""
"The idea for our app is to design our own Kirigami Addons gallery, "
"showcasing multiple components, one per page. The main page will contain a "
"simple list of buttons in a [ColumnLayout](https://doc.qt.io/qt-6/qml-"
"qtquick-layouts-columnlayout.html), each opening a separate page."
msgstr ""
"Het idee voor onze app is het ontwerpen van onze eigen Kirigami add-ons "
"galerij, die meerdere componenten etaleert, één per pagina. De hoofdpagina "
"zal een eenvoudige lijst met knoppen bevatten in een [ColumnLayout](https://"
"doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout.html), elk een aparte pagina "
"openend."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:59
msgid "Initially, our `Main.qml` should look like this:"
msgstr "Initieel zou onze `Main.qml` er uit moeten zien als deze:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:63
msgid ""
"We use our handy [pageStack](/docs/getting-started/kirigami/components-"
"pagerow_pagestack) to set the initial page to a [Kirigami.ScrollablePage]"
"(docs:kirigami2;ScrollablePage)."
msgstr ""
"We gebruiken onze handige [pageStack](/docs/getting-started/kirigami/"
"components-pagerow_pagestack) om de initiële pagina in te stellen in een "
"[Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage)."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:65
msgid ""
"While we could use a [FormLayout](/docs/getting-started/kirigami/components-"
"formlayouts) together with [QtQuick Controls components](components-"
"controls) to achieve our goal, here you will be introduced to [FormCard]"
"(https://api.kde.org/frameworks/kirigami-addons/html/classFormCard.html)."
msgstr ""
"Terwijl we een [FormLayout](/docs/getting-started/kirigami/components-"
"formlayouts) zouden kunnen gebruiken samen met [QtQuick Controls componenten]"
"(components-controls) om ons doel te bereiken, hier zult u geïntroduceerd "
"worden tot [FormCard](https://api.kde.org/frameworks/kirigami-addons/html/"
"classFormCard.html)."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:67
msgid ""
"The main purpose of a FormCard is to serve as a container for other "
"components while following a color different from the background, in a "
"similar manner to a [Kirigami.Card](docs:kirigami2;Card), but for settings "
"windows. You can have multiple FormCards in your application to indicate "
"different sections. Your FormCard is also expected to be a direct child of a "
"ColumnLayout."
msgstr ""
"Het hoofddoel van een FormCard is om te dienen als een container voor andere "
"componenten terwijl een kleur verschillend van de achtergrond wordt gevolgd, "
"op een manier gelijk aan een [Kirigami.Card](docs:kirigami2;Card), maar voor "
"instellingenvensters. U kunt meerdere FormCards in uw toepassing hebben om "
"verschillende secties aan te geven. Van uw FormCard wordt verwacht dat het "
"een direct kind is van een ColumnLayout."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:69
msgid ""
"Importing `org.kde.kirigamiaddons.formcard` makes all FormCard components "
"available to your QML file."
msgstr ""
"Importeren van `org.kde.kirigamiaddons.formcard` maakt alle FormCard-"
"componenten beschikbaar aan ons QML-bestand."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:71
msgid ""
"We will have only a single section in our main page, so we add a single "
"FormCard:"
msgstr ""
"We zullen slechts een enkele sectie hebben in onze hoofdpagina, dus voegen "
"we een enkele FormCard toe:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:75
msgid ""
"The great thing about FormCard is that it does automatic layouting for you. "
"In other words, just the order of its components is enough to indicate their "
"position inside the FormCard, no [Layout attached properties](https://doc.qt."
"io/qt-6/qml-qtquick-layouts-layout.html) are necessary and you are expected "
"not to use [anchors](https://doc.qt.io/qt-6/qtquick-positioning-anchors."
"html) or [positioners](https://doc.qt.io/qt-6/qtquick-positioning-layouts."
"html)."
msgstr ""
"Het geweldige van een FormCard is dat het automatische indeling voor u doet. "
"Met andere woorden, alleen de volgorde van zijn componenten is genoeg om hun "
"positie in de FormCard aan te geven, geen [aangehangen "
"indelingseigenschappen](https://doc.qt.io/qt-6/qml-qtquick-layouts-layout."
"html) zijn nodig en van u wordt verwacht geen [ankers](https://doc.qt.io/"
"qt-6/qtquick-positioning-anchors.html) of [positionering](https://doc.qt.io/"
"qt-6/qtquick-positioning-layouts.html) te gebruiken."

#: content/docs/getting-started/kirigami/addons-introduction/index.md:77
msgid "We can simply add a few buttons inside our FormCard:"
msgstr "We kunnen eenvoudig een paar knoppen in onze FormCard toevoegen:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:81
msgid ""
"That's it! The buttons are not usable just yet, but we are now set up to "
"play with our About pages!"
msgstr ""
"Dat is het! De knoppen zijn nog niet te gebruiken, maar we zijn nu zover om "
"te spelen met onze pagina's Informatie over!"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:83
msgid "We then build and run it like so:"
msgstr "We bouwen en voeren het uit zoals:"

#: content/docs/getting-started/kirigami/addons-introduction/index.md:92
msgid ""
"To see other ways to build your application (for example, on Windows), see "
"the [Getting Started with Kirigami](/docs/getting-started/kirigami/"
"introduction-getting_started) page."
msgstr ""
"Om andere manieren te zien om uw toepassing te bouwen (bijvoorbeeld, op "
"Windows), zie de pagina [Beginnen met Kirigami](/docs/getting-started/"
"kirigami/introduction-getting_started)."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:0
msgid "About page"
msgstr "Pagina Info over"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:0
msgid "Informations about your application"
msgstr "Informatie over uw toepassing"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:10
msgid ""
"[Kirigami.AboutPage](docs:kirigami2;AboutPage) allows you to have a page "
"that shows the copyright notice of the application together with the list of "
"contributors and some information of which platform it's running on."
msgstr ""
"[Kirigami.AboutPage](docs:kirigami2;AboutPage) biedt u een pagina die de "
"melding over copyright van de toepassing toont samen met hen die bijdroegen "
"en enige informatie over op welk platform het draait."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:12
msgid ""
"First, we are going to edit our `main.cpp` file from previous tutorials."
msgstr ""
"Eerst gaan we ons bestand `main.cpp` uit de vorige inleidingen bewerken."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:14
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:195
msgid "main.cpp"
msgstr "main.cpp"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:18
msgid ""
"In the `main.cpp` file we include [KAboutData](docs:kcoreaddons;KAboutData), "
"a core KDE frameworks component that lets us store information about our "
"application. This information can then be reused by many other KDE "
"Frameworks components. We instantiate a new `aboutData` object with its "
"fairly complete default constructor and add author information."
msgstr ""
"In het bestand `main.cpp` voegen we [KAboutData](docs:kcoreaddons;"
"KAboutData) is een kerncomponent van KDE Frameworks die ons informatie over "
"onze toepassing laat opslaan. Deze informatie kan daarna opnieuw gebruikt "
"worden door vele andere KDE Frameworks-componenten. We maken een nieuw "
"exemplaar van een object `aboutData` met zijn tamelijk volledige standaard "
"constructor en voegen informatie over de auteur toe."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:20
msgid ""
"After all the required information has been set, we call [KAboutData::"
"setApplicationData](docs:kcoreaddons;KAboutData::setApplicationData) to "
"initialize the properties of the [QApplication ](docs:qtwidgets;"
"QApplication) object."
msgstr ""
"Nadat alle vereiste informatie is gezet, roepen we [KAboutData::"
"setApplicationData](docs:kcoreaddons;KAboutData::setApplicationData) aan om "
"de eigenschappen van het object [QApplication ](docs:qtwidgets;QApplication)."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:22
msgid ""
"We then create a [qmlRegisterSingletonType()](docs:qtqml;QQmlEngine::"
"qmlRegisterSingletonType). This is used to allow us to import the C++ code "
"as a module in our `main.qml` with `import org.kde.example 1.0`."
msgstr ""
"Daarna maken we een [qmlRegisterSingletonType()](docs:qtqml;QQmlEngine::"
"qmlRegisterSingletonType). Deze wordt gebruikt om ons toe te staan de C++ "
"code als een module in onze `main.qml` met `import org.kde.example 1.0` te "
"importeren."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:24
msgid ""
"Its first argument is the URI that will be used for the import, the second "
"and third arguments are major and minor versions respectively, the fourth is "
"the type name, the name that we will call when accessing our `About` type, "
"and the last is a reference to the C++ object that is exposed to QML. In the "
"latter's case, we use a [lambda](https://en.cppreference.com/w/cpp/language/"
"lambda) to instantiate the `aboutData` of our application in place."
msgstr ""
"Zijn eerste argument is de URI die gebruikt zal worden voor het importeren, "
"het tweede en het derde argument zijn respectievelijk majeure en mineure "
"versies, het vierde is het type naam, de naam die we zullen aanroepen bij "
"toegang tot ons type `About` en het laatste is een referentie naar het C++ "
"object dat wordt blootgesteld aan QML. In het laatste geval gebruiken we een "
"[lambda](https://en.cppreference.com/w/cpp/language/lambda) om ter plekke en "
"exemplaar te maken van de `aboutData` van onze toepassing."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:26
msgid "main.qml"
msgstr "main.qml"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:30
msgid ""
"First, we use the import we defined in the `main.cpp` file, namely `org.kde."
"example`. We then add a [Kirigami.Action](docs:kirigami2;Action) to our "
"[global drawer](docs:kirigami2;GlobalDrawer) that will send us to the About "
"page, and create a component with a [Kirigami.AboutPage](docs:kirigami2;"
"AboutPage) in it, which expects a [KAboutData::applicationData()](docs:"
"kcoreaddons;KAboutData::applicationData) object. We exposed precisely that "
"in our `main.cpp` and called it `About`, so we can pass it here."
msgstr ""
"Ten eerste gebruiken we het geïmporteerde dat we definiëren in het bestand "
"`main.cpp`, namelijk `org.kde.example`. Daarna voegen we een [Kirigami."
"Action](docs:kirigami2;Action) toe aan onze [global drawer](docs:kirigami2;"
"GlobalDrawer) die ons naar de pagina About (Info over) zendt en een "
"component met een [Kirigami.AboutPage](docs:kirigami2;AboutPage) erin "
"aanmaakt, die een object [KAboutData::applicationData()](docs:kcoreaddons;"
"KAboutData::applicationData) verwacht. We stellen precies dat zichtbaar in "
"onze `main.cpp` en noemen het `About`, zodat we het hier kunnen doorgeven."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:33
msgid "CMakeLists"
msgstr "CMakeLists"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:37
msgid ""
"In the `CMakeLists.txt` file in our top-level folder, be sure to have "
"`CoreAddons` in your [find_package()](https://cmake.org/cmake/help/latest/"
"command/find_package.html) call. It is needed for [KAboutData](docs:"
"kcoreaddons;KAboutData)."
msgstr ""
"In het bestand `CMakeLists.txt` in onze hoofdmap, gaan we na dat "
"`CoreAddons` in uw aanroep [find_package()](https://cmake.org/cmake/help/"
"latest/command/find_package.html) aanwezig is. Het is nodig voor [KAboutData]"
"(docs:kcoreaddons;KAboutData)."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:41
msgid ""
"In the `CMakeLists.txt` file in the `src/` directory, nothing is needed "
"since we instantiated out `aboutData` in place."
msgstr ""
"In het bestand `CMakeLists.txt` in de map `src/`, is niets nodig omdat we "
"ter plekken een exemplaar van onze `aboutData` hebben gemaakt."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:44
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:323
msgid "Running the application"
msgstr "De toepassing uitvoeren"

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:46
msgid ""
"Now if you run your application and trigger the \"About\" action in the "
"global drawer you should see our about page."
msgstr ""
"Als u nu uw toepassing uitvoert en de actie \"Info over\" aanklikt in de "
"globale schuiflade zou u uw pagina Info over moeten zien."

#: content/docs/getting-started/kirigami/advanced-add_about_page/index.md:48
msgid "![Screenshot of the Kirigami About Page](about-page.png)"
msgstr "![Schermafdruk van de pagina Info over van Kirigami](about-page.png)"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:0
msgid "Connect logic to your QML user interface"
msgstr "Verbindingslogica naar uw QML gebruikersinterface"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:0
msgid ""
"Connect a backend to do calculations and supply your user interface with "
"data to display"
msgstr ""
"Een backend verbinden om berekeningen te doen en uw gebruikersinterface te "
"leveren met te tonen gegevens"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:10
msgid ""
"To integrate logic into the application, we need C++ backend classes that "
"can do the important calculations. Writing logic in the QML files is "
"discouraged, so try to move as much as possible to the backend, so QML is "
"purely used for displaying the user interface, which is what it is best at."
msgstr ""
"Om logica in de toepassing te integreren, hebben we C++ backend-classes "
"nodig die de belangrijke berekeningen kan doen. Logica schrijven in de QML-"
"bestanden wordt ontraden, probeer het dus zoveel als mogelijk naar de "
"backend te verplaatsen, QML wordt dus puur gebruikt voor het tonen van de "
"gebruikersinterface, waarvoor het het best geschikt is."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:12
msgid ""
"For your new backend class, create two new files called `backend.cpp` and "
"`backend.h`. Don't forget to add the new cpp file to the executable in `src/"
"CMakeLists.txt`, next to main.cpp."
msgstr ""
"Voor uw nieuwe backend klasse, maak twee nieuwe bestanden genaamd `backend."
"cpp` en `backend.h`. Vergeet niet om het nieuwe cpp-bestand aan het "
"uitvoerbare bestand in `src/CMakeLists.txt` toe te voegen, naast main.cpp."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:14
msgid "Add the following content to the new header file (`backend.h`):"
msgstr ""
"Voeg de volgende inhoud toe aan het nieuwe header-bestand (`backend.h`):"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:29
msgid ""
"The `backend.cpp` file containing the definitions is similarly empty right "
"now, it should contain something like the following:"
msgstr ""
"Het bestand `backend.cpp` met de definities is nu evenzo leeg, het zou "
"zoiets als het volgende moeten bevatten:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:40
msgid ""
"Currently the user interface doesn't know about your backend class. To "
"change that, we need to register the new type in `main.cpp`. The backend "
"will be created as a singleton, that means it will only be created once and "
"exist through the whole time from starting the application to closing it."
msgstr ""
"Op dit moment weet het gebruikersinterface niets van uw backend klasse. Om "
"dat te wijzigen moeten we het nieuwe type registreren in `main.cpp`. De "
"backend zal aangemaakt worden als een singleton, dat betekent dat het "
"slechts één keer aangemaakt wordt en bestaat tijdens de gehele tijd vanaf "
"het begin van de toepassing tot het sluiten ervan."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:42
msgid ""
"Right after creating the [QQmlApplicationEngine](docs:qtqml;"
"QQmlApplicationEngine), add the [type registration](https://doc.qt.io/qt-6/"
"qtqml-cppintegration-definetypes.html) to `main.cpp` as follows:"
msgstr ""
"Direct na maken van de [QQmlApplicationEngine](docs:qtqml;"
"QQmlApplicationEngine), voeg de [type registratie](https://doc.qt.io/qt-6/"
"qtqml-cppintegration-definetypes.html) toe aan `main.cpp` als volgt:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:48
msgid "Don't forget to include the new header file at the top of `main.cpp`."
msgstr ""
"Vergeet niet om het nieuwe headerbestand bovenaan `main.cpp` in te voegen."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:50
msgid ""
"From now on, the backend will be known to QML as `Backend`. It is contained "
"in a module called `org.kde.example`. Since the module is part of the "
"application, you don't need to worry about versioning it, just stay with "
"`1.0` and use it consistently throughout the application."
msgstr ""
"Vanaf nu zal de backend aan QML bekend zijn als `Backend`. Het zit in een "
"module genaamd `org.kde.example`. Omdat de module onderdeel is van de "
"toepassing, hoeft u zich geen zorgen te maken over versies, blijf bij `1.0` "
"en gebruik het consistent in de toepassing."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:52
msgid "In `main.qml`, import the new module:"
msgstr "Importeer in `main.qml` de nieuwe module:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:57
msgid ""
"Now we have connected the class holding the future logic to the application, "
"but it still doesn't do anything. To change that, let's add a property to "
"the class. Properties are a lot more than a simple variable. They can inform "
"the UI about changes so it can update the right areas."
msgstr ""
"We hebben nu de klasse die de toekomstige logica bevat van de toepassing, "
"maar het doet nog steeds niets. Om dat te wijzigen, voegen we een eigenschap "
"toe aan de klasse. Eigenschappen zijn heel wat meer dan een eenvoudige "
"variabele. Ze kunnen ed UI informeren over wijzigingen, dus kan het de "
"juiste gebieden bijwerken."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:59
msgid ""
"Right under the [Q_OBJECT](docs:qtcore;QObject::Q_OBJECT) macro, add a new "
"[Q_PROPERTY](docs:qtcore;QObject::Q_PROPERTY)."
msgstr ""
"Direct onder de macro [Q_OBJECT](docs:qtcore;QObject::Q_OBJECT), voeg een "
"nieuwe [Q_PROPERTY](docs:qtcore;QObject::Q_PROPERTY)."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:65
msgid ""
"This may seem like a lot of code to just read and write some code from the "
"backend. However, a closer look reveals that reading the property from the "
"UI can already run some logic—same when it is written to. In this case, it "
"will automatically inform the frontend and backend of changes."
msgstr ""
"Dit lijkt misschien heel wat code om enige code uit de backend te lezen. "
"Maar een nadere beschouwing laat zien dat lezen van de eigenschap uit de UI "
"al enige logic-same kan uitvoeren wanneer er naar geschreven is. In dat "
"geval zal automatisch de frontend en backend informeren over wijzigingen."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:67
msgid ""
"The reading and writing is based on the concept of [getter and setter "
"functions](https://www.w3schools.com/cpp/cpp_encapsulation.asp). Go ahead "
"and add a new private attribute to your class that holds the data, as well "
"as the relevant getter and setter functions."
msgstr ""
"Het lezen en schrijven is gebaseerd op het concept van [getter en setter-"
"functies](https://www.w3schools.com/cpp/cpp_encapsulation.asp). Ga verder en "
"voeg een nieuw privé attribuut toe aan uw klasse die de gegevens bevat, "
"evenals de relevante getter en setter-functies."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:73
msgid "To the public section, add"
msgstr "Voeg aan de sectie publiek toe"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:80
msgid ""
"The first function is the getter, the second the setter, and the third a "
"signal that is emitted when the property is changed. The signal doesn't need "
"any implementation in `backend.cpp` file, since it doesn't do much more than "
"being emitted, but the getter and setter need to be implemented similar to "
"the following:"
msgstr ""
"De eerste functie is de getter, de tweede de setter en de derde een signaal "
"dat is uitgezonden wanneer de eigenschap is gewijzigd. Het signaal behoeft "
"geen enkele implementatie in het bestand `backend.cpp`, omdat het niet veel "
"meer doet dan uitgezonden worden, maar de getter en setter moeten "
"geïmplementeerd worden lijkend op het volgende:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:94
msgid ""
"As you can see, when the setter is called, the signal will be emitted, and "
"inform the ui and backend of the change."
msgstr ""
"Zoals u kunt zien, wanneer de setter wordt aangeroepen, zal het signaal "
"worden uitgezonden en wordt de ui (gebruikersinterface) en de backend van de "
"wijziging geïnformeerd."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:96
msgid ""
"To display the text, add a heading to `main.qml` under the `title` property "
"of the [Kirigami.Page](docs:kirigami2;Page) element already contained in the "
"template."
msgstr ""
"Om de tekst te tonen, voeg een kop toe aan `main.qml` onder de eigenschap "
"`title` van het element [Kirigami.Page](docs:kirigami2;Page) dat al in het "
"sjabloon zit."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:98
msgid "The resulting code in that part of the file should look like this:"
msgstr ""
"De resulterende code in dat gedeelte van het bestand zou er uit moeten zien "
"als dit:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:101
#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:112
#: content/docs/getting-started/kirigami/components-actions/index.md:35
#: content/docs/getting-started/kirigami/components-actions/index.md:140
#: content/docs/getting-started/kirigami/components-actions/index.md:285
#: content/docs/getting-started/kirigami/components-card/index.md:67
#: content/docs/getting-started/kirigami/components-listview/index.md:305
#: content/docs/getting-started/kirigami/components-listview/index.md:314
#: content/docs/getting-started/kirigami/introduction-actions/index.md:53
#: content/docs/getting-started/kirigami/introduction-actions/index.md:123
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:25
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:45
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:87
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:21
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:40
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:50
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:82
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:136
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:151
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:186
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:215
msgid "..."
msgstr "..."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:118
msgid "Now compile and start your program again."
msgstr "Nu kunt u uw programma opnieuw compileren en starten."

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:120
msgid "Congratulations, you learned:"
msgstr "Gefeliciteerd, u hebt geleerd:"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:121
msgid "How to register backend types to QML"
msgstr "Hoe backend-typen to QML te registreren"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:122
msgid "Add new elements to the QML file"
msgstr "Nieuwe elementen aan het QML-bestand toevoegen"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:123
msgid "Create new QObject subclasses"
msgstr "Nieuwe QObject-subklassen aanmaken"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:124
msgid "How to add properties and what they do"
msgstr "Hoe eigenschappen toe te voegen en wat ze doen"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:125
msgid "What signals are"
msgstr "Wat signalen zijn"

#: content/docs/getting-started/kirigami/advanced-connect_backend/index.md:127
msgid ""
"If you want to know more about the integration between QML and C++, we "
"recommend reading the [official Qt documentation](https://doc.qt.io/qt-6/"
"qtqml-cppintegration-definetypes.html)."
msgstr ""
"Als u meer wilt weten over de integratie tussen QML en C++, dan bevelen we "
"het lezen van de [officiële Qt documentatie](https://doc.qt.io/qt-6/qtqml-"
"cppintegration-definetypes.html) aan."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:0
msgid "Connect models to your QML user interface"
msgstr "Modellen verbinden naar uw QML gebruikersinterface"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:0
msgid "Connect models from C++ backend to QML frontend"
msgstr "Modellen verbinden uit de C++-backend naar de QML-frontend"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:8
msgid ""
"As shown from the [previous tutorial](/docs/getting-started/kirigami/"
"advanced-connect_backend/), you can connect C++ code to QML by creating a "
"class that will be treated as just another component in QML. However, you "
"may want to represent more complicated data, such as data that needs to act "
"as a custom [ListModel](docs:qtquick;qml-qtqml-models-listmodel.html) or in "
"some way needs to be delegated from a [Repeater](docs:qtquick;qml-qtquick-"
"repeater.html)."
msgstr ""
"Zoals getoond in de [vorige inleiding](/docs/getting-started/kirigami/"
"advanced-connect_backend/), kunt u C++ code verbinden met QML door een "
"klasse aan te maken die behandeld zal worden als nog een component in QML. U "
"zou echter meer gecompliceerde gegevens willen representeren, zoals gegevens "
"die moeten acteren als een klant [ListModel](docs:qtquick;qml-qtqml-models-"
"listmodel.html) of op de een of andere manier gedelegeerd moeten worden uit "
"een [Repeater](docs:qtquick;qml-qtquick-repeater.html)."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:16
msgid ""
"We can create our own [models](docs:qtcore;qabstractlistmodel.html) from the "
"C++ side, and declare how the data from that model should be represented on "
"the QML frontend."
msgstr ""
"We kunnen onze eigen [modellen](docs:qtcore;qabstractlistmodel.html) "
"aanmaken vanaf de C++ kant en declareren hoe de gegevens uit dat model "
"gerepresenteerd moeten worden op de QML-frontend."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:20
msgid "Preparing the Class"
msgstr "De klasse voorbereiden"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:22
msgid ""
"In this tutorial, we will create a class that contains a QMap, where a "
"QString is used as a key and QStringList objects are used as values. The "
"frontend will be able to read and display the keys and values and be simple "
"to use just like a one-dimensional array. It should look similar to a QML "
"ListModel."
msgstr ""
"In deze inleiding zullen we een klasse aanmaken die een QMap bevat, waar een "
"QString wordt gebruikt als een sleutel en QStringList objecten gebruikt "
"worden als waarden. De frontend zal in staat zijn de sleutels en de waarden "
"te lezen en te tonen en eenvoudig te gebruiken net als een een-dimensionaal "
"array. Het zou er uit moeten zien als een QML-ListModel."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:27
msgid ""
"To do this, we need to declare a class that inherits from "
"[QAbstractListModel](docs:qtcore;qabstractlistmodel.html). Let's also add in "
"some add data to the QMap. These declarations will be located in `model.h`."
msgstr ""
"Om dit te doen moeten we een klasse declareren die erft van "
"[QAbstractListModel](docs:qtcore;qabstractlistmodel.html). Laten we ook "
"enige toegevoegde gegevens invoegen in de QMap. Deze declaraties zullen "
"gelokaliseerd zijn in `model.h`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:32
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:65
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:73
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:292
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:430
#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:43
#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:88
#: content/docs/getting-started/kirigami/components-actions/index.md:16
#: content/docs/getting-started/kirigami/components-actions/index.md:40
#: content/docs/getting-started/kirigami/components-actions/index.md:190
#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:14
#: content/docs/getting-started/kirigami/components-card/index.md:97
#: content/docs/getting-started/kirigami/components-chips/index.md:112
#: content/docs/getting-started/kirigami/components-controls/index.md:115
#: content/docs/getting-started/kirigami/components-drawers/index.md:73
#: content/docs/getting-started/kirigami/components-drawers/index.md:147
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:106
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:127
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:139
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:159
#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:350
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:58
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:201
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:25
#: content/docs/getting-started/kirigami/introduction-pages/index.md:33
#: content/docs/getting-started/kirigami/introduction-pages/index.md:53
#: content/docs/getting-started/kirigami/style-colors/index.md:28
msgid "Note"
msgstr "Notitie"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:34
msgid ""
"If you are following along, please remember to update your `CMakeLists.txt` "
"file!"
msgstr "Als u dit volgt, onthoud om uw bestand `CMakeLists.txt` bij te werken!"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:53
msgid ""
"Of course, we can't just display this class as is. We also need to tell QML "
"on how to represent this data in the class. We can do this by overriding "
"three virtual functions that are essential at doing this, all of which do "
"their own tasks."
msgstr ""
"Natuurlijk kunnen we deze klasse niet gewoon tonen zoals deze is. We moeten "
"aan QML ook vertellen hoe deze gegevens in de klasse te representeren. We "
"kunnen dit doen door drie virtuele functies te overschrijven die essentieel "
"zijn om dit te doen, allen zullen hun eigen taken doen."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:58
msgid ""
"`rowCount()` - Think of this function as a way to tell QML how many items "
"are in the model to represent."
msgstr ""
"`rowCount()` - denk aan deze functie als een manier om QML te vertellen "
"hoeveel items er in het model zijn om te representeren."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:60
msgid ""
"`roleNames()` - You can think of role names as property names attached to "
"data in QML. This function allows you to create those roles."
msgstr ""
"`roleNames()` - u kunt denken aan rolnamen als eigenschapnamen gekoppeld aan "
"gegevens in QML. Deze functie biedt u het aanmaken van die rollen."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:62
msgid ""
"`data()` - This function is called when you want to retrieve the data that "
"corresponds to the role names from the model."
msgstr ""
"`data()` - deze functie wordt aangeroepen wanneer u de gegevens, die "
"corresponderen met de rolnamen uit het model, wilt ophalen."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:67
msgid ""
"The custom role names created by `roleNames()` are only usable when a model "
"is being delegated, and are not usable outside of it. See [Models and Views]"
"(docs:qtquick;qtquick-modelviewsdata-modelview.html#models)."
msgstr ""
"De aangepaste rolnamen aangemaakt met `roleNames()` zijn alleen te gebruiken "
"wanneer een model wordt gedelegeerd en zijn daar buiten niet bruikbaar. Zie "
"[Modellen en weergaven](docs:qtquick;qtquick-modelviewsdata-modelview."
"html#models)."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:75
msgid ""
"Technically, models in Qt are represented as tables, with rows and columns. "
"So, what overriding `rowCount()` does is tell Qt how many rows are in a "
"model. Since we are just dealing with a one-dimensional array in this "
"tutorial, you can just think of \"rows\" as \"number of elements.\""
msgstr ""
"Technisch worden modellen in Qt gerepresenteerd als tabellen, met rijen en "
"kolommen. Dus, wat overschrijven van `rowCount()` doet aan Qt vertellen "
"hoeveel rijen er in een model zitten. Omdat we van doen hebben met met een "
"een-dimensionaal array in deze inleiding, kunt u gewoon denken aan \"rijen\" "
"als \"aantal elementen.\""

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:82
msgid "Overriding and Implementing `rowCount()`"
msgstr "Overschrijven en implementeren `rowCount()`"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:84
msgid ""
"Let's override the function in the header file. The `rowCount()` comes with "
"its own parameter, but will not be used in this example and is excluded."
msgstr ""
"Laten we de functie in het kopbestand overschrijven. De `rowCount()` komt "
"met zijn eigen parameter, maar zal niet gebruikt worden in dit voorbeeld en "
"wordt uitgesloten."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:95
msgid "Then, let's declare how many rows are in this model in `model.cpp`."
msgstr ""
"Laten we daarna declareren hoeveel rijen er in dit model in `model.cpp` zijn."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:105
msgid "Overriding and Implementing `roleNames()`"
msgstr "Overschrijven en implementeren `roleNames()`"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:107
msgid ""
"Before we override `roleNames()`, we need to declare what the roles are in "
"the C++ side using an public `enum` variable. The reason for this is because "
"these values from the `enum` variable are passed into `data()` every time "
"QML accesses a corresponding role, and as such we can make `data()` return "
"what we want."
msgstr ""
"Voordat we `roleNames()` overschrijven, moeten we declareren wat de rollen "
"zijn aan de C++ kan met gebruik van een publieke `enum` variabele. De reden "
"hiervoor is omdat deze waarden uit de variabele `enum` doorgegeven worden in "
"`data()` elke keer dat QML toegang pakt tot een bijbehorende rol en als "
"zodanig kunnen we `data()` terug laten geven wat we willen."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:113
msgid ""
"Let's begin with creating the `enum` variable for roles, where each value is "
"a role for the C++ side."
msgstr ""
"Laten we beginnen met de variabele `enum` voor rollen aan te maken, waar "
"elke waarde is een rol is voor de C++ kant."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:130
msgid ""
"Once we have that settled, we can finally create what these roles are in the "
"QML side using a [QHash](docs:qtcore;qhash.html) where the keys are the "
"enumerated values paired with [QByteArrays](docs:qtcore;qbytearray.html). "
"The text in the QByteArray is what's used in the actual QML code."
msgstr ""
"Nadat we dat hebben vastgesteld kunnen we tenslotte aanmaken wat deze rollen "
"zijn aan de kant an QML met een [QHash](docs:qtcore;qhash.html) waar de "
"sleutels de enumerated waarden zijn gepaard met [QByteArrays](docs:qtcore;"
"qbytearray.html). De tekst in de QByteArray is wat wordt gebruikt in de "
"actuele QML code."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:144
msgid ""
"In our example model, the role \"species\" can be used to retrieve the "
"QString key \"Feline\", \"Fox\", \"Goat\", each in a separate delegate. The "
"same can be done with the QStringList values for the character names list."
msgstr ""
"In ons voorbeeldmodel kan de rol \"soorten\" gebruikt worden om de QString-"
"sleutel \"Feline\", \"Fox\", \"Goat\" op te halen, elk in een gescheiden "
"gedelegeerde. Hetzelfde kan gedaan worden met de QStringList waarden voor de "
"karakternamenlijst."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:149
msgid "Overriding and Implementing `data()`"
msgstr "Overschrijven en implementeren `data()`"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:151
msgid ""
"There are two parameters that are passed in `data()`: `index` and `role`. "
"`index` is the location of where the data is when being delegated. As "
"previously stated, `role` is used by QML to get specific data returned when "
"it's accessing a role."
msgstr ""
"Er zijn twee parameters die doorgegeven worden in `data()`: `index` en "
"`role`. `index` is de locatie waar de gegevens zijn wanneer ze gedelegeerd "
"worden. Zoals eerder gesteld, `role` wordt gebruikt door QML om specifieke "
"gegevens terug te krijgen wanneer er toegang toe wordt gevraagd als rol."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:156
msgid ""
"In `data()`, we can use a `switch` statement to return the appropriate data "
"and data type depending on the role, which is possible as `data()` returns a "
"[QVariant](docs:qtcore;qvariant.html). We still need to make sure we get the "
"appropriate location of the data, though. In this example below, you can see "
"that a new iterator variable is being declared, which is set from the "
"beginning of the list plus the row of the index and the data that the "
"iterator is pointing to is what is being returned."
msgstr ""
"In `data()` kunnen we een `switch` statement gebruiken om de toepasselijke "
"gegevens en gegevenstype terug te geven afhankelijk van de rol, wat mogelijk "
"is als `data()` een [QVariant](docs:qtcore;qvariant.html) teruggeeft. We "
"moeten echter nog steeds zeker maken dat we de toepasselijke locatie van de "
"gegevens krijgen. In dit onderstaande voorbeeld kunt u zien dat een nieuwe "
"iterator-variabele gedeclareerd wordt, die is gezet vanaf het begin van de "
"lijst plus de rij van de index en de gegevens waar de iterator naar wijst is "
"wat wordt teruggegeven."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:164
msgid ""
"We can't just return whatever data we want though. We may be trying to bind "
"data to a property with an incompatible data type, such as a QStringList to "
"a QString. You may have to do data conversion in order for the data to be "
"displayed properly."
msgstr ""
"We kunnen echter niet gewoon teruggeven welke gegevens dan ook die we "
"willen. We kunnen proberen gegevens te binden aan een eigenschap met een "
"niet compatibel type gegeven, zoals een QStringList aan een QString. U moet "
"misschien conversie van gegevens doen om het gegeven juist weer te geven."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:194
msgid "Allow the Class to be Declared in QML"
msgstr "De klasse toestaan gedeclareerd te worden in QML"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:196
msgid "Let's not forget to make our class usable in QML."
msgstr "Laten we niet vergeten om onze klasse bruikbaar te maken in QML."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:206
msgid "Class Usage in QML"
msgstr "Gebruik van klasse in QML"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:208
msgid ""
"The QML file that is used will just contain three [Kirigami.AbstractCard]"
"(docs:kirigami2;AbstractCard) components, where the key is the header and "
"the value is the content. These cards are created by delegating an "
"AbstractCard using a Repeater, where the custom model we created acts as the "
"model. The data is accessed using word `model`, followed by the roles we "
"declared in `roleNames()`."
msgstr ""
"Het QML-bestand dat wordt gebruikt zal slechts drie [Kirigami.AbstractCard]"
"(docs:kirigami2;AbstractCard) componenten bevatten, waar de sleutel de kop "
"is en de waarde de inhoud. Deze kaarten worden aangemaakt door het delegeren "
"van AbstractCard met gebruik van een Repeater, waar het aangepaste model dat "
"we aanmaakten als het model acteert. De toegang tot gegevens is via het "
"woord `model`, gevolgd door de rollen gedeclareerd in `roleNames()`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:249
msgid "![App Screenshot](app_screenshot.png)"
msgstr "![App Screenshot](app_screenshot.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:251
msgid "Data Modification"
msgstr "Modificatie van gegevens"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:253
msgid "Editing Data Using `dataChanged()` and `setData()`"
msgstr "Gegevens bewerken met gebruik van `dataChanged()` en `setData()`"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:255
msgid ""
"You may encounter a situation where you want to modify data in the model, "
"and have the changes reflected on the frontend side. Every time we change "
"data in the model, we must emit the `dataChanged()` signal which will apply "
"those changes on the frontend side at the specific cells specified in its "
"arguments. In this tutorial, we can just use the `index` argument of "
"`setData()`."
msgstr ""
"U kunt een situatie tegenkomen waar u de gegevens in het model wilt wijzigen "
"en de wijzigingen gereflecteerd wilt zien aan de kant van de frontend. Elke "
"keer dat we gegevens in het model wijzigen, moeten we het signaal "
"`dataChanged()` uitzenden die die wijzigingen toepast aan de kant van het "
"frontend in de specifieke cellen gespecificeerd in zijn argumenten. In deze "
"inleiding, kunnen we gewoon het argument `index` van `setData()` gebruiken."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:261
msgid ""
"`setData()` is a virtual function you can override so that attempting to "
"modify the data from the frontend side automatically reflects those changes "
"on the backend side. It requires three parameters:"
msgstr ""
"`setData()` is een virtuele functie die u kunt overschrijven zo dat pogen de "
"gegevens vanuit de kant van de frontend te wijzigen automatisch deze "
"wijzigingen aan de kant van de backend reflecteert. Het vereist drie "
"parameters:"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:265
msgid "`index` - The location of the data."
msgstr "`index` - de locatie van de gegevens."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:266
msgid "`value` - The contents of the new data."
msgstr "`waarde` - de inhoud van de nieuwe gegevens."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:267
msgid ""
"`role` - In this context, the role here is used to tell views how they "
"should handle data. The role here should be `Qt::EditRole`."
msgstr ""
"`role` - in deze context, de rol hier wordt gebruikt om weergaven te "
"vertellen hoe ze de gegevens zouden moeten behandelen. De rol hier zou "
"moeten zijn `Qt::EditRole`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:270
msgid ""
"The `role` parameter in this case is used to ensure `setData()` can be "
"edited via user input (Qt::EditRole). Using `index`, we can use that to "
"determine the location of where the data should be edited with the contents "
"of `value`."
msgstr ""
"De parameter `role` in dit geval wordt gebruikt om te verzekeren dat "
"`setData()` kan worden bewerkt via invoer van de gebruiker (Qt::EditRole). "
"Door `index` te gebruiken kunnen we dat gebruiken om de locatie te bepalen "
"waar de gegevens zouden worden bewerkt met de inhoud van `value`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:294
msgid ""
"`setData()` does not automatically emit `dataChanged()` and that still has "
"to be done manually."
msgstr ""
"`setData()` stuurt niet automatisch `dataChanged()` uit en dat moet "
"handmatig gedaan worden."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:299
msgid ""
"Let's update the QML code so that we can open up a prompt that allows us to "
"edit the model using a Controls.Button attached to the cards."
msgstr ""
"Laten we de QML-code bijwerken zodat we een prompt kunnen openen die ons "
"biedt het model te bewerken met een Controls.Button aangekoppeld aan de "
"kaarten."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:363
msgid ""
"Now, whenever the values of the model change in the frontend, the changes "
"should automatically update on the backend."
msgstr ""
"Nu, wanneer de waarden van het model in de frontend wijzigen, zouden de "
"automatisch in de backend moeten worden bijgewerkt."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:370
msgid "![app_screenshot_1.png](app_screenshot_1.png)"
msgstr "![app_screenshot_1.png](app_screenshot_1.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:376
msgid "![app_screenshot_2.png](app_screenshot_2.png)"
msgstr "![app_screenshot_2.png](app_screenshot_2.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:382
msgid "Adding Rows"
msgstr "Het toevoegen van rijen"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:384
msgid ""
"We added a way to modify the data in existing keys of the QMap, and in the "
"front end, this is reflected as modifying the contents inside the "
"AbstractCards. But what if we need to add a new key entry in the QMap and "
"have that reflected on the QML side? Let's do this by creating a new method "
"that is callable on the QML side to perform this task."
msgstr ""
"We hebben een manier toegevoegd om de gegevens te wijzigen in bestaande "
"sleutels van de QMap en in de frontend, dit wordt gereflecteerd als wijzigen "
"van de inhoud in de AbstractCards. Maar wat als we een nieuwe sleutelitem in "
"de QMap willen toevoegen en dat gereflecteerd moet worden aan the QML-kant? "
"Laten we dat doen door een nieuwe methode aan te maken die op te roepen is "
"aan the QML-kant om deze taak uit te voeren."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:390
msgid ""
"To make the method visible in QML, we must use the Q_OBJECT macro in the "
"class, and begin the method declaration with the Q_INVOKABLE macro. This "
"method will also include a string parameter, which is intended to be the new "
"key in the QMap."
msgstr ""
"Om de methode zichtbaar te maken in QML moeten we de Q_OBJECT macro "
"gebruiken in de klasse en de declaratie van de methode beginnen met de macro "
"Q_INVOKABLE. Deze methode zal ook een tekenreeksparameter omvatten, die "
"bedoeld is om de nieuwe sleutel in de QMap te zijn."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:406
msgid ""
"Inside of this method, we need to tell Qt that we want to create more rows "
"in the model. This is done by calling `beginInsertRows()` to begin our row "
"adding operation, followed by inserting whatever we need, then use "
"`endInsertRows()` to end the operation. We still need to emit "
"`dataChanged()` at the end, however. This time, we are going to update all "
"rows, from the first row to the last one as the QMap may alphabetically "
"reorganize itself, and we need to catch that across all rows."
msgstr ""
"Binnen deze methode moeten we aan Qt vertellen dat we meer rijen in het "
"model aan willen maken. Dit wordt gedaan door `beginInsertRows()` aan te "
"roepen om onze rij toevoegen te beginnen, gevolgd door in te voegen wat we "
"nodig hebben, gebruik daarna `endInsertRows()` om de bewerking te "
"beëindigen. We moeten echter nog steeds `dataChanged()` aan het einde "
"uitsturen. Deze keer gaan we alle rijen bijwerken, vanaf de eerste rij tot "
"de laatste omdat de QMap zichzelf alfabetisch zal reorganiseren en we dat "
"over alle rijen moeten vangen."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:414
msgid ""
"When calling `beginInsertRows()`, we need to first pass in a QModelIndex "
"class to specify the location of where the new rows should be added, "
"followed by what the new first and last row numbers are going to be. In this "
"tutorial, the first argument will just be `QModelIndex()` as there is no "
"need to use the parameter here. We can just use the current row size for the "
"first and last row number, as we'll just be adding one row at the end of the "
"model."
msgstr ""
"Bij aanroepen van `beginInsertRows()` moeten we eerst een QModelIndex klasse "
"doorgeven om te de locatie te specificeren waar de nieuwe rijen toegevoegd "
"zouden moeten worden, gevolgd door wat de nieuwe eerste en laatste "
"rijnummers gaan worden. In deze inleiding zal het eerste argument gewoon "
"`QModelIndex()` zijn omdat er geen noodzaak is de parameter hier te "
"gebruiken. We kunnen gewoon de huidige rijgrootte voor het eerste en laatste "
"rijnummer gebruiken, omdat we eenvoudig één rij aan het eind van het model "
"zullen toevoegen."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:432
msgid ""
"The `dataChanged()` function uses QModelIndex as the data type for its "
"parameters. However, we can convert integers in QModelIndex data types using "
"the `index()` function."
msgstr ""
"De functie `dataChanged()` gebruikt QModelIndex als het type gegeven voor "
"zijn parameters. We kunnen echter gehele getallen in QModelIndex "
"typengegevens converteren met de functie `index()`."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:438
msgid ""
"Let's update the QML code so we are given the ability to add a new key to "
"the QMap."
msgstr ""
"Laten we de QML code bijwerken zodat we de mogelijkheid geven om een nieuwe "
"sleutel aan de QMap toe te voegen."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:457
msgid "Clear TextField every time it's done"
msgstr "Wis het tekstveld elke keer dat het is gedaan"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:478
msgid ""
"Now, we should be given a new action at the top of the app that brings up a "
"prompt that allows to add a new element to the model, with our own custom "
"data."
msgstr ""
"Nu zouden een nieuwe actie bovenaan de toepassing moeten geven die een "
"prompt laat verschijnen waarmee een nieuw element aan het model kan worden "
"toegevoegd, met onze eigen aangepaste gegevens."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:485
msgid "![app_screenshot_add_1.png](app_screenshot_add_1.png)"
msgstr "![app_screenshot_add_1.png](app_screenshot_add_1.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:491
msgid "![app_screenshot_add_2.png](app_screenshot_add_2.png)"
msgstr "![app_screenshot_add_2.png](app_screenshot_add_2.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:497
msgid "Removing Rows"
msgstr "Rijen verwijderen"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:499
msgid ""
"The way remove rows is similar to adding rows. Let's create another method "
"that we'll call in QML. This time, we will use an additional parameter, and "
"that is an integer that is the row number. The species name is used to "
"delete the key from the QMap, while the row number will be used to delete "
"the row on the front end."
msgstr ""
"De manier om rijen te verwijderen is gelijk aan rijen toevoegen. Laten we "
"een andere methode aanmaken die we in QML zullen aanroepen. Deze keer zullen "
"we een extra parameter gebruiken en dat is een geheel getal die het "
"rijnummer is. De naam ervan wordt gebruikt om de sleutel uit de QMap te "
"verwijderen, terwijl het rijnummer gebruikt zal worden om de rij in de "
"frontend te verwijderen."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:526
msgid ""
"Now, let's update the application so a \"Delete\" button appears alongside "
"the edit button, and hook it up to our delete method."
msgstr ""
"Laten we nu de toepassing bijwerken zodat een knop \"Verwijderen\" "
"verschijnt naast de knop Bewerken en verbind het met uw methode voor "
"verwijderen."

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:570
msgid "![app_screenshot_del_1.png](app_screenshot_del_1.png)"
msgstr "![app_screenshot_del_1.png](app_screenshot_del_1.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:576
msgid "![app_screenshot_del_2.png](app_screenshot_del_2.png)"
msgstr "![app_screenshot_del_2.png](app_screenshot_del_2.png)"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:582
msgid "Full Code"
msgstr "Volledige code"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:584
msgid "<details><summary>Main.qml</summary>\n"
msgstr "<details><summary>Main.qml</summary>\n"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:588
#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:595
msgid ""
"</details>\n"
"<br>\n"
msgstr ""
"</details>\n"
"<br>\n"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:591
msgid "<details><summary>model.h</summary>\n"
msgstr "<details><summary>model.h</summary>\n"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:598
msgid "<details><summary>model.cpp</summary>\n"
msgstr "<details><summary>model.cpp</summary>\n"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:604
msgid "More Information"
msgstr "Meer informatie"

#: content/docs/getting-started/kirigami/advanced-connect_models/index.md:606
msgid ""
"For more information, see [Using C++ Models with Qt Quick Views](docs:"
"qtquick;qtquick-modelviewsdata-cppmodels.html) and [Model/View Programming]"
"(docs:qtquick;model-view-programming.html)."
msgstr ""
"Voor meer informatie, zie [Using C++ Models with Qt Quick Views](docs:"
"qtquick;qtquick-modelviewsdata-cppmodels.html) en [Model/Weergave "
"programmeren](docs:qtquick;model-view-programming.html)."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:0
msgid "Figuring out main.cpp"
msgstr "Bekijken wat main.cpp doet"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:0
msgid "Understanding the central file of our backend code\n"
msgstr "Het centrale bestand van onze backend-code begrijpen\n"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:11
msgid "The role of main.cpp"
msgstr "De rol van main.cpp"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:13
msgid ""
"While QML is used for the front-end of Kirigami applications, the backend is "
"usually written in C++ thanks to this language's speed and flexibility. "
"While in previous pages we have covered QML in a lot of depth, we'll need to "
"gain an understanding of our backend C++ code in order to make applications "
"that are more useful than what we can achieve with pure QML."
msgstr ""
"Terwijl QML gebruikt wordt voor de front-end van Kirigami toepassingen, "
"wordt de backend gewoonlijk in C++ geschreven vanwege de snelheid en "
"flexibiliteit van deze taal. Terwijl in vorige pagina's we QML behoorlijk in "
"de diepte hebben gedekt, moeten we enig begrip krijgen van de C++ code van "
"onze backend om toepassingen te maken die nuttiger zijn dan wat we kunnen "
"bereiken met pure QML."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:15
msgid ""
"Here, we'll be going over the `main.cpp` file we created in the [Getting "
"Started](/docs/getting-started/kirigami/introduction-getting_started) page "
"so that we can better understand what is going on in the central C++ file of "
"our application. While this is a basic `main.cpp`, the features we will go "
"over will remain essential no matter what kind of application you decide to "
"create."
msgstr ""
"Hier gaan we het hebben over het bestand `main.cpp` dat we hebben gemaakt in "
"de pagina [Beginnen](/docs/getting-started/kirigami/introduction-"
"getting_started) zodat we beter begrijpen wat er gaande is in het centrale C+"
"+ bestand van onze toepassing. Terwijl dit een basis `main.cpp` is, blijven "
"de functies die we bespreken essentieel ongeacht het soort toepassing dat u "
"beslist te maken."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:17
msgid "What it does"
msgstr "Wat het doet"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:21
msgid ""
"First we must include a number of Qt [header files](https://www.learncpp.com/"
"cpp-tutorial/header-files/), allowing us to use their functions. In this "
"case, we include a number of Qt headers that handle application logic, and "
"to allow us to read QML files."
msgstr ""
"Ten eerste moeten we een aantal Qt [header-bestanden](https://www.learncpp."
"com/cpp-tutorial/header-files/) invoegen, zodat we hun functies kunnen "
"gebruiken. In dit geval voegen we een aantal Qt headers in die "
"toepassingslogica behandelen en ons QML-bestanden te laten lezen."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:23
msgid ""
"We then create a [QApplication](docs:qtwidgets;QApplication) instance which "
"we call `app`. Passing [argc and argv](https://www.learncpp.com/cpp-tutorial/"
"command-line-arguments/) to the constructor is required for the call."
msgstr ""
"Daarna maken we een [QApplication](docs:qtwidgets;QApplication) exemplaar "
"die we `app` noemen. Doorgeven van [argc en argv](https://www.learncpp.com/"
"cpp-tutorial/command-line-arguments/) door aan de constructor is vereist "
"voor de aanroep."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:25
msgid ""
"We also set some metadata relating to the application. These include the "
"organisation that created the application, the organisation's website, and "
"the name of the application. We set these properties by calling "
"[QApplication](docs:qtwidgets;QApplication), instantiating an object that "
"comes from [QCoreApplication](docs:qtcore;QCoreApplication) and provides the "
"[event loop](docs:qtcore;QCoreApplication::exec) for applications regardless "
"of whether they have a GUI or not (so if we ran our program without the GUI, "
"this metadata would still be set)."
msgstr ""
"We stellen ook enige metagegevens in gerelateerd aan de toepassing. Dit "
"omvat de organisatie die de toepassing maakt, de website van de organisatie "
"en de naam van de toepassing. We stellen deze eigenschappen in door "
"[QCoreApplication](docs:qtwidgets;QApplication) aan te roepen, waarmee een "
"object wordt gemaakt dat komt van [QCoreApplication](docs:qtcore;"
"QCoreApplication::exec) en de [event loop](docs:qtcore;QCoreApplication::"
"exec) levert voor toepassingen ongeacht of ze een GUI hebben of niet (dus "
"als we ons programma zonder GUI uitvoeren, dan zouden deze metagegevens nog "
"steeds zijn ingesteld)."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:27
msgid ""
"To make our app look good with KDE's [Breeze icons](https://invent.kde.org/"
"frameworks/breeze-icons) and [Breeze style](https://invent.kde.org/plasma/"
"breeze) on non-Plasma environments such as Windows or GNOME, we need to do "
"three things:"
msgstr ""
"Om ons programma er goed uit te laten zien met KDE's [Breeze pictogrammen]"
"(https://invent.kde.org/frameworks/breeze-icons) en [Breeze stijl](https://"
"invent.kde.org/plasma/breeze) in een niet-Plasma omgeving zoals Windows of "
"GNOME, moeten we drie dingen doen:"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:29
msgid ""
"initialize the theming facilities of [KIconThemes](https://invent.kde.org/"
"frameworks/kiconthemes) on platforms where icon themes aren't part of the "
"system (like Windows or MacOS) with `KIconTheme::initTheme()`"
msgstr ""
"De thema-faciliteiten van [KIconThemes](https://invent.kde.org/frameworks/"
"kiconthemes) initialiseren voor platforms waar icon thema's geen onderdeel "
"zijn van het systeem (zoals Windows of MacOS) met `KIconTheme::initTheme()`"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:30
msgid ""
"set the QStyle with [QApplication::setStyle()](docs:qtwidgets;QApplication::"
"setStyle) to force Breeze instead of the native platform style"
msgstr ""
"De QStyle met [QApplication::setStyle()](docs:qtwidgets;QApplication::"
"setStyle) zo instellen om te forceren dat Breeze word gebruikt in plaats van "
"de eigen platform stijl"

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:31
msgid ""
"set the QtQuick Controls style with [QQuickStyle::setStyle()](docs:"
"qtquickcontrols;QQuickStyle::setStyle) to force Breeze with KDE's [qqc2-"
"desktop-style](https://invent.kde.org/frameworks/qqc2-desktop-style)"
msgstr ""
"Met [QQuickStyle::setStyle()](docs:qtquickcontrols;QQuickStyle::setStyle) "
"QtQuick Controle instellen om met [qqc2-desktop-style](https://invent.kde."
"org/frameworks/qqc2-desktop-style) het gebruik van Breeze af te dwingen."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:33
msgid ""
"The call to `KIconTheme::initTheme()` needs to be done before creating the "
"QApplication and lets the app find Breeze icons to use. Setting the QStyle "
"to Breeze is needed because we used QApplication for our app instead of "
"[QGuiApplication](docs:qtgui;QGuiApplication). Actual interface controls in "
"the window like buttons and checkboxes will follow Breeze by using `qqc2-"
"desktop-style`."
msgstr ""
"Het aanroepen van `KIconTheme::initTheme()` moet gedaan worden voor de "
"initialisatie van QApplication zodat het programma de Breeze-pictogrammen "
"kan vinden die het wil gebruiken. Het omschakelen van de QStyle naar Breeze "
"is nodig omdat we QApplication voor ons programma gebruiken in plaats van "
"[QGuiApplication](docs:qtgui;QGuiApplication). De gebruikte interface regelt "
"dat in het venster dingen zoals knoppen en keuzevakjes de Breeze toepassen "
"door `qqc2-desktop-style` te gebruiken."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:35
msgid ""
"The [QQmlApplicationEngine](docs:qtqml;QQmlApplicationEngine) lets us load "
"an application from a QML file, which we do in the next line. In `engine."
"loadFromModule(\"org.kde.tutorial\", \"Main\");` we load our QML from the "
"URI import defined in CMake."
msgstr ""
"De [QQmlApplicationEngine](docs:qtqml;QQmlApplicationEngine)) laat ons een "
"toepassing laden uit een QML-bestand, wat we in de volgende regel doen. In "
"`engine.loadFromModule(\"org.kde.tutorial\", \"Main\");` laden we onze QML "
"uit het importeren van de URI gedefinieerd in CMake."

#: content/docs/getting-started/kirigami/advanced-maincpp/index.md:37
msgid ""
"Next, we check if our engine correctly loaded the QML file by checking that "
"the engine's [rootObjects()](docs:qtqml;QQmlApplicationEngine::rootObjects) "
"list is not empty. We can then run our application with [app.exec()](docs:"
"qtcore;QCoreApplication::exec)."
msgstr ""
"Vervolgens controleren we of onze engine juist het QML-bestand geladen heeft "
"door te controleren dat de [rootObjects()](docs:qtqml;QQmlApplicationEngine::"
"rootObjects)-lijst van de engine niet leeg is. Daarna kunnen we onze "
"toepassing uitvoeren met [app.exec()](docs:qtcore;QCoreApplication::exec)."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:0
msgid "Understanding CMakeLists"
msgstr "CMakeLists begrijpen"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:0
msgid "Getting to grips with how CMakeLists.txt files work\n"
msgstr "Grip krijgen op hoe bestanden CMakeLists.txt werken\n"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:11
msgid "CMake"
msgstr "CMake"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:12
msgid ""
"In our introductory tutorial, we used [CMake](https://cmake.org/) as the "
"build system for our application, but we only really paid close attention to "
"one of our `CMakeLists.txt` files. Here, we're going to go over how it works "
"in a bit more detail."
msgstr ""
"In ons inleidende handboek gebruiken we [CMake](https://cmake.org/) als het "
"bouwsysteem voor onze toepassing, maar we hebben slechts alleen wat meer "
"aandacht besteed aan een van onze bestanden `CMakeLists.txt`. Hier gaan we "
"het in meer detail hebben over dit werkt."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:14
msgid ""
"CMake is useful because it allows us to automate much of the stuff that "
"needs to be done before compilation."
msgstr ""
"CMake is nuttig omdat het ons is staat stelt om veel van de zaken die gedaan "
"moeten worden alvorens te compileren te automatiseren."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:16
msgid "The root CMakeLists.txt"
msgstr "De basis CMakeLists.txt"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:18
msgid "You might remember this `CMakeLists.txt` file from the first tutorial:"
msgstr ""
"Misschien herinnert u zich dit bestand `CMakeLists.txt` uit de eerste "
"handleiding:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:22
msgid ""
"The first line, `cmake_minimum_required()` sets the version of CMake we will "
"be calling."
msgstr ""
"De eerste regel, `cmake_minimum_required()` stelt de versie van CMake in die "
"we willen aanroepen."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:24
msgid ""
"After that, `project(kirigami-tutorial)` defines the name of the project."
msgstr ""
"Daarna, definieert `project(kirigami-tutorial)` de naam van het project."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:26
msgid ""
"Then we get to a section where we include a number of necessary CMake and "
"KDE settings by using [extra-cmake-modules](https://api.kde.org/ecm/). They "
"provide a set of useful utilities:"
msgstr ""
"Daarna krijgen we een sectie waar we een aantal noodzakelijke CMake en KDE-"
"instellingen invoegen met gebruik van [extra-cmake-modules](https://api.kde."
"org/ecm/). Ze leveren een set van nuttige hulpmiddelen:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:28
msgid ""
"[KDEInstallDirs](https://api.kde.org/ecm/kde-module/KDEInstallDirs6.html) "
"provides convenience variables such as `${KDE_INSTALL_TARGETS_DEFAULT_ARGS}"
"`, `${KDE_INSTALL_QMLDIR}`, `${KDE_INSTALL_BINDIR}` and `"
"${KDE_INSTALL_LIBDIR}`."
msgstr ""
"[KDEInstallDirs](https://api.kde.org/ecm/kde-module/KDEInstallDirs6.html) "
"levert gemaksvariabelen zoals `${KDE_INSTALL_TARGETS_DEFAULT_ARGS}`, `"
"${KDE_INSTALL_QMLDIR}`, `${KDE_INSTALL_BINDIR}` en `${KDE_INSTALL_LIBDIR}`."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:29
msgid ""
"[KDECMakeSettings](https://api.kde.org/ecm/kde-module/KDECMakeSettings.html) "
"provides things like `CMAKE_AUTORCC ON`, an `uninstall` target that can be "
"used with `cmake --build build/ --target uninstall`, and `ENABLE_CLAZY`."
msgstr ""
"[KDECMakeSettings](https://api.kde.org/ecm/kde-module/KDECMakeSettings.html) "
"levert zaken zoals `CMAKE_AUTORCC ON`, een `uninstall` doel dat gebruikt kan "
"worden met `cmake --build build/ --target uninstall` en `ENABLE_CLAZY`."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:30
msgid ""
"[KDECompilerSettings](https://api.kde.org/ecm/kde-module/KDECMakeSettings."
"html) provides a minimum C++ standard, compiler flags such as `-pedantic`, "
"and best practices macros like `-DQT_NO_CAST_FROM_ASCII` to require explicit "
"conversions such as `QStringLiteral()`."
msgstr ""
"[KDECompilerSettings](https://api.kde.org/ecm/kde-module/KDECMakeSettings."
"html) levert minimale C++ standaard compilervlaggen zoals `-pedantic`, en "
"beste praktijk-macro's zoals `-DQT_NO_CAST_FROM_ASCII` om expliciete "
"conversies zoals `QStringLiteral()` te vereisen."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:31
msgid ""
"[ECMFindQmlModule](https://api.kde.org/ecm/module/ECMFindQmlModule.html) "
"provides a way to ensure a runtime QML dependency is found at compile time."
msgstr ""
"[ECMFindQmlModule](https://api.kde.org/ecm/module/ECMFindQmlModule.html) "
"levert een manier om een runtime QML afhankelijkheid te verzekeren die "
"gevonden is bij compileren."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:32
msgid ""
"[ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule.html) provides "
"CMake commands like `ecm_add_qml_module()` and `ecm_target_qml_sources()`."
msgstr ""
"[ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule.html) levert "
"CMake commando's zoals `ecm_add_qml_module()` en `ecm_target_qml_sources()`."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:34
msgid ""
"The following section is important, because it specifies which dependencies "
"we'll be bringing in at compile time. Let's look at the first:"
msgstr ""
"De volgende sectie is belangrijk, omdat het specificeert welke "
"afhankelijkheden we zullen inbrengen bij compileren. Laten we naar de eerste "
"kijken:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:38
msgid ""
"[find_package()](https://cmake.org/cmake/help/latest/command/find_package."
"html) finds and loads the external library and its components."
msgstr ""
"[find_package()](https://cmake.org/cmake/help/latest/command/find_package."
"html) zoekt en laadt de externe bibliotheek en zijn componenten."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:39
msgid ""
"`REQUIRED` tells CMake to exit with an error if the package cannot be found."
msgstr ""
"`REQUIRED` vertelt CMake te eindigen met een fout als het pakket niet "
"gevonden kan worden."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:40
msgid ""
"`COMPONENTS` is a parameter that precedes the specific components of the "
"framework we will include."
msgstr ""
"`COMPONENTS` is een parameter die vooraf gaat aan de specifieke componenten "
"van het framework dat we zullen invoegen."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:41
msgid ""
"Each word after `COMPONENTS` refers to a specific component of the library."
msgstr ""
"Elk woord na `COMPONENTS` refereert naar een specifieke component van de "
"bibliotheek."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:45
msgid ""
"If you are looking to add any components listed in the [KDE API "
"documentation](https://api.kde.org/) to your application, you may check the "
"right sidebar for how to add the component with CMake. For instance, for "
"[Kirigami](docs:kirigami2;), you will find something like "
"`find_package(KF6Kirigami)`, which with the addition of ECM becomes:"
msgstr ""
"Als u zoekt om componenten in de lijst in de [KDE API documentation](https://"
"api.kde.org/) aan uw toepassing toe te voegen, dan zou u de rechter zijbalk "
"kunnen controleren op hoe de component met CMake toe te voegen. "
"Bijvoorbeeld, voor [Kirigami](docs:kirigami2;) zult u iets vinden zoals "
"`find_package(KF6Kirigami2)`, dat met de toevoeging van ECM wordt:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:51
msgid ""
"Pay close attention to your included components, as omitting ones used in "
"our code will stop our application from compiling."
msgstr ""
"Let goed op uw ingevoegde componenten, omdat weglaten van die gebruikt "
"worden in onze code onze toepassing niet laten compileren."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:55
msgid ""
"The install line instructs CMake to install the desktop file in `"
"${KDE_INSTALL_APPDIR}`, which on Linux translates to `$XDG_DATA_DIRS/"
"applications`, usually `/usr/share/applications`, and on Windows translates "
"to `C:/Program Files/${PROJECT_NAME}/bin/data/applications`:"
msgstr ""
"De installatieregel instrueert CMake om het desktop-bestand in `"
"${KDE_INSTALL_APPDIR}` te installeren, die onder Linux vertaalt naar `"
"$XDG_DATA_DIRS/applications`, gewoonlijk `/usr/share/applications` en onder "
"Windows vertaalt naar `C:/Program Files/${PROJECT_NAME}/bin/data/"
"applications`:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:59
msgid ""
"The final line lets CMake print out which packages it has found, and it "
"makes compilation fail immediately if it encounters an error:"
msgstr ""
"De laatste regel laat CMake tonen welke pakketten het heeft gevonden en het "
"laat compileren mislukken onmiddellijk als het een fout ontdekt:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:63
msgid ""
"And above that, `add_subdirectory(src)` points CMake into the `src/` "
"directory, where it finds another `CMakeLists.txt` file."
msgstr ""
"En bovendien dat `add_subdirectory(src)` CMake laat wijzen naar de map "
"'src/', waar het een ander bestand `CMakeLists.txt` vindt:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:65
msgid "src/CMakeLists.txt"
msgstr "src/CMakeLists.txt"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:69
msgid ""
"While the first file handled metadata and finding libraries, this one will "
"consist of handling dependencies and installing the application. It has the "
"following CMake calls:"
msgstr ""
"Terwijl het eerste bestand metagegevens behandelt en bibliotheken zoekt, zal "
"deze bestaan uit behandeling van afhankelijkheden en de toepassing "
"installeren. Deze heeft de volgende CMake aanroepen:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:71
msgid ""
"[add_executable()](https://cmake.org/cmake/help/latest/command/"
"add_executable.html) creates the executable target we will use to run our "
"project."
msgstr ""
"[add_executable](https://cmake.org/cmake/help/latest/command/add_executable."
"html) maakt het uitvoerbare doel dat we willen gebruiken om het project te "
"runnen."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:72
msgid ""
"`ecm_add_qml_module()` creates a QML module target that will be accessible "
"via the \"org.kde.tutorial\" import."
msgstr ""
"`ecm_add_qml_module()` maakt een QML-moduledoel aan die toegankelijk zal "
"zijn via het importeren van \"org.kde.tutorial\"."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:73
msgid ""
"[target_sources()](https://cmake.org/cmake/help/latest/command/"
"target_sources.html) adds C++ source files to the executable target."
msgstr ""
"[target_sources()](https://cmake.org/cmake/help/latest/command/targsources."
"html) voegt C++ bronbestanden toe aan het uitvoerbare doel."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:74
msgid "`ecm_target_qml_sources()` adds QML files to the module."
msgstr "`ecm_target_qml_sources()` voegt QML-bestanden toe aan de module."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:75
msgid ""
"[target_link_libraries()](https://cmake.org/cmake/help/latest/command/"
"target_link_libraries.html) links the C++ libraries used in our code to our "
"executable. Kirigami is not included here because we are using only its QML "
"module."
msgstr ""
"[target_link_libraries()](https://cmake.org/cmake/help/latest/command/"
"target_link_libraries.html) koppelt de C++-bibliotheken, die gebruikt worden "
"in onze code, aan ons uitvoerbare bestand. Kirigami is hier niet meegenomen "
"omdat we alleen zijn QML-module gebruiken."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:76
msgid ""
"[install()](https://cmake.org/cmake/help/latest/command/install.html) "
"installs the executable to the system."
msgstr ""
"[install()](https://cmake.org/cmake/help/latest/command/install.html) "
"installeert het uitvoerbare bestand in het systeem."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:78
msgid ""
"The documentation for the two ECM commands can be found in the [extra-cmake-"
"modules API for ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule."
"html)."
msgstr ""
"De documentatie voor de twee ECM commando's is te vinden in de [extra-cmake-"
"modules API voor ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule."
"html)."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:80
msgid ""
"The call to `ecm_add_qml_module()` was used here to modify the traditional C+"
"+ source code executable target and turn it into something that can accept "
"QML files and C++ source code that is accessible from QML in what is called "
"[using the executable as backing target for a QML module](https://doc.qt.io/"
"qt-6/qt-add-qml-module.html#executable-as-a-qml-module). This means the QML "
"files are run directly as part of the application, which is often the case "
"for applications."
msgstr ""
"De aanroep van `ecm_add_qml_module()` was hier gebruikt om het uitvoerbare "
"doel van de traditionele C++ broncode te wijzigen en het om te zetten in "
"iets dat QML-bestanden en C++ broncode kan accepteren die toegankelijk is "
"vanuit QML in wat wordt genoemd [het uitvoerbare bestand als achtergronddoel "
"gebruiken voor een QML-module](https://doc.qt.io/qt-6/qt-add-qml-module."
"html#executable-as-a-qml-module). Dit betekent dat de QML-bestanden direct "
"worden uitgevoerd als onderdeel van de toepassing, wat vaak het geval is "
"voor toepassingen."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:82
msgid ""
"You may also create a separate QML module that does not use the executable "
"as backing target using `ecm_add_qml_module()`. In this case, you'd create a "
"library target using [add_library()](https://cmake.org/cmake/help/latest/"
"command/add_library.html), link it to an existing executable target using "
"`target_link_libraries()`, and in addition to installing the library with "
"`install()` you will need to finalize the QML module with "
"[ecm_finalize_qml_module()](https://api.kde.org/ecm/module/ECMQmlModule."
"html) so it can generate two files: `qmldir` and `qmltypes`. These files are "
"used by QtQuick applications to find separate QML modules."
msgstr ""
"U kunt ook een aparte QML-module aanmaken die niet het uitvoerbare bestand "
"gebruikt als doel op de achtergrond met `ecm_add_qml_module()`. In zo'n "
"geval zou u een bibliotheekdoel moeten aanmaken met [add_library()](https://"
"cmake.org/cmake/help/latest/command/add_library.html) en het koppelen aan "
"een bestaand uitvoerbaardoel met `target_link_libraries()` en bovendien het "
"installeren van de bibliotheek met `install()` dan moet u de QML-module "
"afmaken met [ecm_finalize_qml_module()](https://api.kde.org/ecm/module/"
"ECMQmlModule.html) het kan dus twee bestanden genereren: `qmldir` en "
"`qmltypes`. Deze bestanden worden gebruikt door QtQuick toepassingen om "
"aparte QML-modules te vinden."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:84
msgid ""
"The method for creating a separate QML module is better exemplified in "
"[Using separate files](/content/docs/getting-started/kirigami/introduction-"
"separatefiles)."
msgstr ""
"De methode voor aanmaken van een aparte QML-module wordt beter geïllustreerd "
"in [Aparte bestanden gebruiken](/content/docs/getting-started/kirigami/"
"introduction-separatefiles)."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:86
msgid ""
"These are additions provided by extra-cmake-modules to make the use of [Qt "
"declarative registration](https://doc.qt.io/qt-6.7/cmake-build-qml-"
"application.html) (the [replacement to Qt resource files](https://doc.qt.io/"
"qt-5/resources.html)) easier."
msgstr ""
"Dit zij toevoegingen geleverd door extra-cmake-modules om het gebruik van "
"[Qt declarative registration](https://doc.qt.io/qt-6.7/cmake-build-qml-"
"application.html) (de [vervanging van Qt hulpbronbestanden](https://doc.qt."
"io/qt-5/resources.html)) gemakkelijker te maken."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:90
msgid ""
"These libraries should match the components that we included in our previous "
"`CMakeLists.txt` file, otherwise these components will not be included and "
"our application won't compile."
msgstr ""
"Deze bibliotheken zouden overeen moeten komen met de componenten die we "
"hebben ingevoegd in ons vorige bestand `CMakeLists.txt`, anders zullen deze "
"componenten niet ingevoegd worden en zal onze toepassing niet compileren."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:94
msgid ""
"The documentation for all three commands can be found in the [extra-cmake-"
"modules API for ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule."
"html)."
msgstr ""
"De documentatie voor alle drie commando's is te vinden in de [extra-cmake-"
"modules API voor ECMQmlModule](https://api.kde.org/ecm/module/ECMQmlModule."
"html)."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:96
msgid "src/components/CMakeLists.txt"
msgstr "src/components/CMakeLists.txt"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:98
msgid ""
"In the tutorial about [how to split your code into separate files](/docs/"
"getting-started/kirigami/introduction-separatefiles#preparing-cmake-for-the-"
"new-files), a new CMake file was introduced to allow for separate QML "
"modules:"
msgstr ""
"In de instructie over [hoe uw code in separate bestanden te splitsen](/docs/"
"getting-started/kirigami/introduction-separatefiles#preparing-cmake-for-the-"
"new-files), werd een nieuw CMake-bestand geïntroduceerd om separate QML "
"modules mogelijk te maken:"

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:102
msgid ""
"The requirement for this file to be read by CMake is adding a call to "
"`add_subdirectory()` in the `src/CMakeLists.txt` pointing to it."
msgstr ""
"Om dit bestand door CMake te laten lezen is het aanroepen (call) van "
"`add_subdirectory()` vereist in `src/CMakeLists.txt` dat er naar verwijst."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:104
#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:96
msgid ""
"We create a new target called `kirigami-hello-components` and then turn it "
"into a QML module using [ecm_add_qml_module()](https://api.kde.org/ecm/"
"module/ECMQmlModule.html) under the import name `org.kde.tutorial."
"components` and add the relevant QML files."
msgstr ""
"We creëren een nieuw doel `kirigami-hello-components` genaamd en zetten het "
"om naar een QML module met de hulp van [ecm_add_qml_module()](https://api."
"kde.org/ecm/module/ECMQmlModule.html) met de importnaam `org.kde.tutorial."
"components` en voegen daar de relevante QML-bestanden toe."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:106
msgid ""
"The call to [add_library()](https://cmake.org/cmake/help/latest/command/"
"add_library.html) generates a new target called `kirigami-hello-components`. "
"This target will have its own set of source code files, QML files, link its "
"own libraries and so on, but it needs to be linked to the executable, but "
"once it is compiled it needs to be linked to the executable created in the "
"`src/CMakeLists.txt`. This is done by adding the target name to the list of "
"libraries that will be linked to the executable in `target_link_libraries()`."
msgstr ""
"De aanroep naar [add_library()](https://cmake.org/cmake/help/latest/command/"
"add_library.html) genereert een nieuw doel genaamd `kirigami-hello-"
"components`. Dit doel zal zijn eigen set broncode-bestanden, QML-bestanden, "
"zijn eigen bibliotheken (libraries) aankoppelen enz., maar het moet nog wel "
"gelinkt worden naar de executable, ook moet het nadat het gecompileerd is "
"nog gelinkt worden naar de executable gecreëerd aan de hand van `src/"
"CMakeLists.txt`. Dit wordt gedaan door de doelnaam toe te voegen aan de "
"lijst van bibliotheken (libraries) die gelinkt worden met de executable in "
"`target_link_libraries()`."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:108
msgid ""
"The call to `ecm_add_qml_module()` changes the library to allow it to accept "
"QML files as before, but this time we need to use [GENERATE_PLUGIN_SOURCE]"
"(https://api.kde.org/ecm/module/ECMQmlModule.html). When the executable is "
"used as a backing target (like with `kirigami-hello`) it doesn't need to "
"generate plugin code since it's built into the executable; with separate QML "
"modules like `kirigami-hello-components` the plugin code is necessary."
msgstr ""
"De aanroep naar `ecm_add_qml_module()` stelt de bibliotheek zodanig in dat "
"het net zoals eerder QML-bestanden accepteert, maar deze keer moeten we "
"[GENERATE_PLUGIN_SOURCE] (https://api.kde.org/ecm/module/ECMQmlModule.html) "
"gebruiken. Als het programma wordt gebruikt als een achtergronddoel (zoals "
"bij `kirigami-hello`) dan hoeft het geen plugin code te generen omdat het in "
"het uitvoerbare bestand is ingebouwd; bij separate QML modules zoals "
"`kirigami-hello-componenten` is de plugin code noodzakelijk."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:110
msgid ""
"Upstream Qt's [qt_add_qml_module()](https://doc.qt.io/qt-6/qt-add-qml-module."
"html#targets-and-plugin-targets) by default generates a plugin together with "
"the QML module, but KDE's `ecm_add_qml_module()` by default does not for "
"backwards compatibility."
msgstr ""
"Upstream Qt's [qt_add_qml_module()](https://doc.qt.io/qt-6/qt-add-qml-module."
"html#targets-and-plugin-targets) genereert standaard samen met de QML module "
"een plugin, maar KDE's `ecm_add_qml_module()` doet dat standaard niet "
"vanwege de backwards compatibility."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:112
msgid ""
"Another thing that is necessary for separate QML modules is to finalize the "
"target. This mainly means CMake generates two files, [qmldir and qmltypes]"
"(https://doc.qt.io/qt-6/qtqml-modules-qmldir.html), which describe the QML "
"modules we have and exports their symbols for use in the library. They are "
"important when installing your application so that the executable being run "
"is able to find where the QML files for each module are, so they are "
"automatically added to the target."
msgstr ""
"Daarnaast is het noodzakelijk om de QML modules te scheiden om het doel af "
"te maken. Dit houd hoofdzakelijk is dat CMake twee bestanden genereert, "
"[qmldir en qmltypes] (https://doc.qt.io/qt-6/qtqml-modules-qmldir.html), die "
"de QML modules beschrijven die we hebben en hun symbolen exporteren om in de "
"bibliotheek te gebruiken. Ze zijn belangrijk bij het installeren van uw "
"programma zodat het uitvoerbare bestand voor elke module de QML-bestanden "
"kan vinden, zodat ze automatisch aan het doel kunnen worden toegevoegd."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:114
msgid "You can then just install the target as before."
msgstr "Het doel kan dan gewoon net zoals vroeger geïnstalleerd worden."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:116
msgid ""
"Next time you need to add more QML files, remember to include them in this "
"file. C++ files that use the [QML_ELEMENT](https://doc.qt.io/qt-6/qtqml-"
"cppintegration-definetypes.html) keyword which we will see much later in the "
"tutorial can also be added here using `target_sources()`. You can logically "
"separate your code by creating more QML modules with different imports as "
"needed."
msgstr ""
"De volgende keer dat u meer QML-bestanden moet toevoegen, onthoud om ze in "
"te voegen in dit bestand. C++ bestanden die de [QML_ELEMENT](https://doc.qt."
"io/qt-6/qtqml-cppintegration-definetypes.html) sleutelwoorden gebruiken die "
"we veel later zullen zien in de handleiding kunnen hier ook toegevoegd "
"worden met `target_sources()`. U kunt uw code logisch scheiden door meer QML-"
"modulen aan te maken door naar behoefte verschillende zaken te importeren."

#: content/docs/getting-started/kirigami/advanced-understanding_cmakelists/index.md:118
msgid "This setup will be useful when developing most Kirigami apps."
msgstr ""
"Deze opzet zal bruikbaar zijn bij ontwikkelen van de meeste Kirigami "
"toepassingen."

#: content/docs/getting-started/kirigami/components-actions/index.md:0
msgid "Actions based components"
msgstr "Op acties gebaseerde componenten"

#: content/docs/getting-started/kirigami/components-actions/index.md:0
msgid "Kirigami's Actions are used to add functionality to components.\n"
msgstr ""
"Acties van Kirigami worden gebruikt om functionaliteit aan componenten toe "
"te voegen.\n"

#: content/docs/getting-started/kirigami/components-actions/index.md:10
#: content/docs/getting-started/kirigami/introduction-actions/index.md:16
msgid "Actions"
msgstr "Acties"

#: content/docs/getting-started/kirigami/components-actions/index.md:12
msgid ""
"A [Kirigami.Action](docs:kirigami2;Action) consists of a clickable action "
"whose appearance depends on where it is added. Typically it is a button with "
"an icon and text."
msgstr ""
"Een [Kirigami.Action](docs:kirigami2;Action) bestaat uit een aan te klikken "
"actie waarvan het uiterlijk afhangt van waar het is toegevoegd. Standaard is "
"het een knop met een pictogram en tekst."

#: content/docs/getting-started/kirigami/components-actions/index.md:14
msgid ""
"We can use these to provide our applications with easy-to-reach actions that "
"are essential to their functionality."
msgstr ""
"We kunnen deze gebruiken om onze toepassingen te voorzien van gemakkelijk te "
"bereiken acties die essentieel zijn voor hun functionaliteit."

#: content/docs/getting-started/kirigami/components-actions/index.md:18
msgid ""
"Kirigami Actions inherit from [QtQuick.Controls.Action](docs:qtquickcontrols;"
"QtQuick.Controls.Action) and can be assigned shortcuts."
msgstr ""
"Kirigami acties erven uit [QtQuick.Controls.Action](docs:qtquickcontrols;"
"QtQuick.Controls.Action) en kunnen toegekend worden aan sneltoetsen."

#: content/docs/getting-started/kirigami/components-actions/index.md:23
msgid ""
"Like [QtQuick Controls Actions](docs:qtquickcontrols;QtQuick.Controls."
"Action), they can be assigned to menu items and toolbar buttons, but also to "
"multiple other Kirigami components."
msgstr ""
"Net als [QtQuick bestuurt acties](docs:qtquickcontrols;QtQuick.Controls."
"Action), kunnen ze toegekend worden aan menu-items en werkbalkknoppen, maar "
"ook aan meerdere andere Kirigami-componenten."

#: content/docs/getting-started/kirigami/components-actions/index.md:42
msgid ""
"The [icon.name](https://doc.qt.io/qt-6/qml-qtquick-controls2-action."
"html#icon.name-prop) property takes names for system-wide icons following "
"the FreeDesktop specification. These icons and icon names can be viewed with "
"KDE's CuttleFish application which comes with [plasma-sdk](https://invent."
"kde.org/plasma/plasma-sdk), or by visiting [FreeDesktop's icon naming "
"specification](https://specifications.freedesktop.org/icon-naming-spec/icon-"
"naming-spec-latest.html)."
msgstr ""
"De eigenschap [icon.name](https://doc.qt.io/qt-6/qml-qtquick-controls2-"
"action.html#icon.name-prop) neemt namen voor systeem-brede pictogrammen "
"volgens de FreeDesktop-specificatie. Deze pictogrammen en pictogramnamen "
"kunnen bekeken worden met de toepassing CuttleFish van KDE, die komt met "
"[plasma-sdk](https://invent.kde.org/plasma/plasma-sdk) of door [Specificatie "
"van pictogrambenaming van FreeDesktop](https://specifications.freedesktop."
"org/icon-naming-spec/icon-naming-spec-latest.html)."

#: content/docs/getting-started/kirigami/components-actions/index.md:46
msgid ""
"One feature offered by Kirigami Actions on top of QtQuick Actions is the "
"possibility to nest actions."
msgstr ""
"Een functie geboden door acties van Kirigami bovenop acties van QtQuick is "
"de mogelijkheid acties te nesten."

#: content/docs/getting-started/kirigami/components-actions/index.md:66
msgid ""
"Another feature of Kirigami Actions is to provide various hints to items "
"using actions about how they should display the action. These are primarily "
"handled by the [displayHint](docs:kirigami2;Action::displayHint) and "
"[displayComponent](docs:kirigami2;Action::displayComponent) properties."
msgstr ""
"Een andere functie van acties van Kirigami is het leveren van verschillende "
"tips aan items net acties over hoe ze de actie zouden moeten tonen. Deze "
"worden primair behandeld door de eigenschappen [displayHint](docs:kirigami2;"
"Action::displayHint) en [displayComponent](docs:kirigami2;Action::"
"displayComponent)."

#: content/docs/getting-started/kirigami/components-actions/index.md:70
msgid ""
"These properties will be respected by the item if possible. For example, the "
"following action will be displayed as a [TextField](docs:qtquickcontrols;"
"QtQuick.Controls.TextField) with the item trying its best to keep itself "
"visible as long as possible."
msgstr ""
"Deze eigenschappen zullen, indien mogelijk, gerespecteerd worden door het "
"item. Bijvoorbeeld, de volgende actie zal getoond worden als een [TextField]"
"(docs:qtquickcontrols;QtQuick.Controls.TextField) met het item dat zijn best "
"doet om het item zo lang als mogelijk zichtbaar te houden."

#: content/docs/getting-started/kirigami/components-actions/index.md:87
msgid "Using actions in other components"
msgstr "Acties in andere componenten gebruiken"

#: content/docs/getting-started/kirigami/components-actions/index.md:89
msgid ""
"As mentioned in the [introduction tutorial for actions](/docs/getting-"
"started/kirigami/introduction-actions), Kirigami Actions are [contextual](/"
"docs/getting-started/kirigami/introduction-actions#actions-are-contextual), "
"which means they show up in different places depending on where you put "
"them. In addition to that, they also have different representations for "
"desktop and mobile."
msgstr ""
"Zoals genoemd in de [introductiehandleiding voor acties](/docs/getting-"
"started/kirigami/introduction-actions), zijn Kirigami Actions [contextueel](/"
"docs/getting-started/kirigami/introduction-actions#actions-are-contextual), "
"wat betekent dat ze verschijnen op verschillende plaatsen afhankelijk van "
"waar u ze neerzet. Daarnaast hebben ze ook verschillende representaties voor "
"bureaublad en mobiel."

#: content/docs/getting-started/kirigami/components-actions/index.md:91
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:69
msgid "Page"
msgstr "Pagina"

#: content/docs/getting-started/kirigami/components-actions/index.md:93
msgid ""
"A [Kirigami.Page](docs:kirigami2;Page) shows Actions on the right of the top "
"header in desktop mode, and on a footer in mobile mode."
msgstr ""
"Een [Kirigami.Page](docs:kirigami2;Page) toont Acties rechts van de bovenste "
"kop in modus bureaublad en aan de onderkant in modus mobiel."

#: content/docs/getting-started/kirigami/components-actions/index.md:99
msgid "Page actions on the desktop"
msgstr "Pagina-acties op het bureaublad"

#: content/docs/getting-started/kirigami/components-actions/index.md:101
msgid "Page actions on a mobile device"
msgstr "Pagina-acties op een mobiel apparaat"

#: content/docs/getting-started/kirigami/components-actions/index.md:105
#: content/docs/getting-started/kirigami/components-drawers/index.md:14
#: content/docs/getting-started/kirigami/introduction-actions/index.md:100
#: content/docs/getting-started/kirigami/introduction-actions/index.md:137
msgid "Global drawer"
msgstr "Globale schuiflade"

#: content/docs/getting-started/kirigami/components-actions/index.md:107
msgid ""
"The [Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) is a menu-like "
"sidebar that provides an action based navigation to your application. This "
"is where nested actions are useful because it is possible to create nested "
"navigation:"
msgstr ""
"De [Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) levert een actie "
"gebaseerd op navigatie naar uw toepassing. Dit waar geneste acties nuttig "
"zijn omdat het mogelijk is geneste navigatie te maken:"

#: content/docs/getting-started/kirigami/components-actions/index.md:146
msgid "Global Drawer actions on the desktop"
msgstr "Globale schuiflade-acties op het bureaublad"

#: content/docs/getting-started/kirigami/components-actions/index.md:150
msgid ""
"You can read more about Global Drawers in the [documentation page for "
"drawers](../components-drawers#globaldrawer)."
msgstr ""
"U kunt meer lezen over globale schuifladen in de [documentatiepagina voor "
"opvangbakken](../components-drawers/#globaldrawer)."

#: content/docs/getting-started/kirigami/components-actions/index.md:152
msgid "Context drawer"
msgstr "Context-lade"

#: content/docs/getting-started/kirigami/components-actions/index.md:154
msgid ""
"A [Kirigami.ContextDrawer](docs:kirigami2;ContextDrawer) consists of an "
"additional set of actions that are hidden behind a three-dots menu on the "
"top right in desktop mode or on the bottom right in mobile mode if there is "
"no space. It is used to display actions that are only relevant to a specific "
"page. You can read more about them in our [Kirigami Drawers](/docs/getting-"
"started/kirigami/components-drawers) tutorial."
msgstr ""
"Een [Kirigami.ContextDrawer](docs:kirigami2;ContextDrawer) bestaat uit een "
"additionele set acties die verborgen zijn achter een drie-puntenmenu "
"rechtsboven in modus bureaublad of rechtsonder in modus mobiel als er geen "
"ruimte is. Het wordt gebruikt om acties te tonen die alleen relevant zijn "
"voor een specifieke pagina. U kunt er meer over lezen in onze handleiding "
"[Kirigami schuifladen](/docs/getting-started/kirigami/components-drawers)."

#: content/docs/getting-started/kirigami/components-actions/index.md:165
msgid "ActionTextFields"
msgstr "ActionTextFields"

#: content/docs/getting-started/kirigami/components-actions/index.md:167
msgid ""
"A [Kirigami.ActionTextField](docs:kirigami2;ActionTextField) is used to add "
"some contextual actions to a text field, for example to clear the text, or "
"to search for the text."
msgstr ""
"Een [Kirigami.ActionTextField](docs:kirigami2;ActionTextField) wordt "
"gebruikt om enige contextuele acties aan een tekstveld toe te voegen, "
"bijvoorbeeld om de tekst te wissen of naar tekst te zoeken."

#: content/docs/getting-started/kirigami/components-actions/index.md:186
msgid ""
"In this example, we are creating a \"clear\" button for a search field that "
"is only visible when text is entered."
msgstr ""
"In dit voorbeeld zijn we een \"wis\"knop aan het maken voor een zoekveld dat "
"alleen zichtbaar is wanneer tekst wordt ingevoerd."

#: content/docs/getting-started/kirigami/components-actions/index.md:188
msgid "![Search field with text: \"I want ](searchfield.webp)"
msgstr "![Zoekveld met tekst: \"Ik zoek ](searchfield.webp)"

#: content/docs/getting-started/kirigami/components-actions/index.md:192
msgid ""
"You should rarely use an ActionTextField directly. [SearchField](docs:"
"kirigami2;SearchField) and [PasswordField](docs:kirigami2;PasswordField) "
"both inherit from `ActionTextField` and are likely to cover your desired use-"
"case."
msgstr ""
"U zou zelden een ActionTextField direct moeten gebruiken. [SearchField](docs:"
"kirigami2;SearchField) en [PasswordField](docs:kirigami2;PasswordField) "
"beiden geërfd van `ActionTextField` en zijn waarschijnlijk genoeg om uw "
"gewenst gebruiksgeval te dekken."

#: content/docs/getting-started/kirigami/components-actions/index.md:196
msgid "SwipeListItem"
msgstr "SwipeListItem"

#: content/docs/getting-started/kirigami/components-actions/index.md:198
msgid ""
"A [Kirigami.SwipeListItem](docs:kirigami2;SwipeListItem) is a delegate "
"intended to support extra actions. When using a mouse, its actions will "
"always be shown. On a touch device, they can be shown by dragging the item "
"with the handle. In the following pictures, these are the icons to the right."
msgstr ""
"Een [Kirigami.SwipeListItem](docs:kirigami2;SwipeListItem) is een "
"gedelegeerde bedoeld om extra acties te ondersteunen. Bij gebruik van een "
"muis zullen ze altijd getoond worden. Op een aanraakscherm kunnen ze getoond "
"worden door het item met de hendel te verslepen. In de volgende plaatjes "
"zijn dit de pictogrammen rechts."

#: content/docs/getting-started/kirigami/components-actions/index.md:214
msgid "do something"
msgstr "iets doen"

#: content/docs/getting-started/kirigami/components-actions/index.md:221
msgid "SwipeListItem on a computer"
msgstr "SwipeListItem op een computer"

#: content/docs/getting-started/kirigami/components-actions/index.md:223
msgid "SwipeListItem on a mobile device"
msgstr "SwipeListItem op een mobiel apparaat"

#: content/docs/getting-started/kirigami/components-actions/index.md:225
msgid "ActionToolBar"
msgstr "ActionToolBar"

#: content/docs/getting-started/kirigami/components-actions/index.md:227
msgid ""
"A [Kirigami.ActionToolBar](docs:kirigami2;ActionToolBar) is a toolbar built "
"out of a list of actions. By default, each action that will fit in the "
"toolbar will be represented by a [ToolButton](docs:qtquickcontrols;QtQuick."
"Controls.ToolButton), with those that do not fit being moved into a menu at "
"the end of the toolbar."
msgstr ""
"Een [Kirigami.ActionToolBar](docs:kirigami2;ActionToolBar) is een werkbalk "
"opgebouwd uit een lijst met acties. Standaard zal elke actie die past in de "
"werkbalk gerepresenteerd worden door een [ToolButton](docs:qtquickcontrols;"
"QtQuick.Controls.ToolButton), met diegenen die niet passen op de werkbalk "
"verplaatst naar een menu aan het eind van de werkbalk."

#: content/docs/getting-started/kirigami/components-actions/index.md:230
msgid ""
"Like [ActionTextField](docs:kirigami2;ActionTextField), you may not need to "
"use [ActionToolBar](docs:kirigami2;ActionToolBar) directly as it is used by "
"page headers and cards to provide their action display."
msgstr ""
"Net als [ActionTextField](docs:kirigami2;ActionTextField), hoeft u "
"[ActionToolBar](docs:kirigami2;ActionToolBar) niet noodzakelijk direct, "
"zoals het wordt gebruikt door paginakoppen en kaarten, te gebruiken om hun "
"actiescherm te leveren."

#: content/docs/getting-started/kirigami/components-actions/index.md:262
msgid "A horizontal toolbar being displayed at the top of the application"
msgstr "Een horizontale werkbalk wordt getoond bovenaan de toepassing"

#: content/docs/getting-started/kirigami/components-actions/index.md:264
msgid ""
"You can read more about [ActionToolBar](docs:kirigami2;ActionToolBar) "
"components in their [dedicated documentation page](../components-"
"actiontoolbar/)."
msgstr ""
"U kunt meer over [ActionToolBar](docs:kirigami2;ActionToolBar) componenten "
"lezen in hun [daaraan gewijde documentatiepagina](../components-"
"actiontoolbar/)."

#: content/docs/getting-started/kirigami/components-actions/index.md:266
#: content/docs/getting-started/kirigami/components-card/index.md:0
msgid "Cards"
msgstr "Kaarten"

#: content/docs/getting-started/kirigami/components-actions/index.md:268
msgid ""
"A [Kirigami.Card](docs:kirigami2;Card) is used to display a collection of "
"information or actions together. These actions can be added to the `actions` "
"group, similarly to previous components."
msgstr ""
"Een [Kirigami.Card](docs:kirigami2;Card) wordt gebruikt om een verzameling "
"informatie of acties tezamen te tonen. Deze acties kunnen toegevoegd worden "
"aan de groep `actions`, vergelijkbaar met eerdere componenten."

#: content/docs/getting-started/kirigami/components-actions/index.md:304
msgid ""
"![Screenshot of a full-fledged Card with a banner background behind its "
"title, white background behind its text, and two actions with icons and a "
"hamburger menu at the bottom](card.png)"
msgstr ""
"![Schermafdruk van een volwaardige kaart met een bannerachergrond achter "
"zijn titel, witte achtergrond achter zijn tekst en twee acties met "
"pictogrammen en een hamburgermenu onderaan](card.png)"

#: content/docs/getting-started/kirigami/components-actions/index.md:310
msgid ""
"For more information consult the [component page for Cards](../components-"
"card/)."
msgstr ""
"Voor meer informatie raadpleeg de [componentpagina voor kaarten](../"
"components-card/)."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:0
msgid "Action toolbars"
msgstr "Actiewerkbalken"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:0
msgid "Create your own customisable tool bars with the ActionToolBar component"
msgstr "Maak uw eigen aanpasbare werkbalken met de component ActionToolBar"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:10
msgid ""
"While Kirigami pages allow you to easily place a set of actions in the page "
"header, there are times when you might prefer to have something more "
"flexible."
msgstr ""
"Terwijl Kirigami pagina's u toestaan om gemakkelijk een set acties in de "
"paginakop te plaatsen, zijn er tijden wanneer u de voorkeur geeft iets meer "
"flexibiliteit."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:12
msgid ""
"Kirigami provides the component [Kirigami.ActionToolBar](docs:kirigami2;"
"ActionToolBar). It displays a list of [Kirigami.Action](docs:kirigami2;"
"Action) objects and will display as many of them as possible, providing an "
"overflow menu for the ones that don't fit. The ActionToolBar is dynamic and "
"will move actions in and out of the overflow menu depending on the size "
"available to it."
msgstr ""
"Kirigami levert de component [Kirigami.ActionToolBar](docs:kirigami2;"
"ActionToolBar). Het zal een lijst met objecten [Kirigami.Action]docs:"
"kirigami2;Action) tonen en zal er zoveel als mogelijk tonen, en een overflow-"
"menu tonen voor diegenen die niet passen. De ActionToolBar is dynamisch en "
"zal acties in en uit het overflow-menu plaatsen afhankelijk van de er voor "
"beschikbare grootte."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:16
msgid ""
"This page assumes you are familiar with [Kirigami.Action](docs:kirigami2;"
"Action) objects. If you are not, you can learn all about them in our "
"beginner tutorial or in [the dedicated documentation page for them](../"
"components-actions/)."
msgstr ""
"Deze pagina neemt aan dat u bekend bent met [Kirigami.Action](docs:kirigami2;"
"Action) objecten. Zo niet, u kunt er alles over leren in onze inleiding voor "
"beginners of in [de toegewijde documentatiepagina voor hen](../components-"
"actions/)."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:20
msgid "Creating our first ActionToolBar"
msgstr "Uw eerste ActionToolBar aanmaken"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:22
msgid ""
"The layout and location of your [Kirigami.ActionToolBar](docs:kirigami2;"
"ActionToolBar) are really up to you, though for the sake of user-"
"friendliness it is usually a good idea to stick to UI conventions and put "
"your toolbar near the top or bottom of your page and to have it spread width "
"wise."
msgstr ""
"De indeling en locatie van uw [Kirigami.ActionToolBar](docs:kirigami2;"
"ActionToolBar) zijn echt aan u, hoewel voor gebruikersvriendelijkheid is het "
"gewoonlijk een goed idee om bij UI-conventies te blijven en uw werkbalk "
"boven of onderaan uw pagina te te plaatsen in om het in de breedte te "
"spreiden."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:24
msgid ""
"Like most other action-holding components, [Kirigami.ActionToolBar](docs:"
"kirigami2;ActionToolBar) has an [actions](docs:kirigami2;ActionToolBar::"
"actions) property. We can assign an array of [Kirigami.Action](docs:"
"kirigami2;Action) components to this property."
msgstr ""
"Zoals de meeste andere actiehoudende componenten, heeft [Kirigami."
"ActionToolBar](docs:kirigami2;ActionToolBar) een eigenschap [actions](docs:"
"kirigami2;ActionToolBar::actions). We kunnen een array met componenten "
"[Kirigami.Action](docs:kirigami2;Action) aan deze eigenschap toekennen."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:77
msgid "ActionToolBar with enough space for all children"
msgstr "ActionToolBar met genoeg ruimte voor alle kinderen"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:79
msgid "ActionToolBar with overflow menu containing children"
msgstr "ActionToolBar met overflow-menu met kinderen"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:83
msgid "Alignment"
msgstr "Uitlijning"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:85
msgid ""
"By default, actions in the [ActionToolBar]([Kirigami.ActionToolBar](docs:"
"kirigami2;ActionToolBar)) will be left aligned. This might not be desirable "
"in all situations. Thankfully we can change this with the [alignment](docs:"
"kirigami2;ActionToolBar::alignment) property. We can set this property to a "
"range of values, but the three most relevant ones are `Qt.AlignLeft`, `Qt."
"AlignCenter`, and `Qt.AlignRight` (which deal with [horizontal alignment]"
"(docs:qtcore;Qt::Alignment))."
msgstr ""
"Standaard worden acties in de [ActionToolBar]([Kirigami.ActionToolBar](docs:"
"kirigami2;ActionToolBar)) links uitgelijnd. Dit kan niet in alle situaties "
"gewenst zijn. Gelukkig kunnen we dit wijzigen met de eigenschap [alignment]"
"(docs:kirigami2;ActionToolBar::alignment). We kunnen deze eigenschap "
"instellen op een reeks van waarden, maar de drie meest relevante zijn `Qt."
"AlignLeft`, `Qt.AlignCenter` en `Qt.AlignRight` (die met [horizontale "
"uitlijning](docs:qtcore;Qt::Alignment) zich bezig houden)."

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:131
#: content/docs/getting-started/kirigami/components-card/index.md:209
#: content/docs/getting-started/kirigami/components-controls/index.md:48
#: content/docs/getting-started/kirigami/components-controls/index.md:107
#: content/docs/getting-started/kirigami/components-controls/index.md:166
#: content/docs/getting-started/kirigami/components-controls/index.md:219
#: content/docs/getting-started/kirigami/components-controls/index.md:275
#: content/docs/getting-started/kirigami/components-controls/index.md:325
#: content/docs/getting-started/kirigami/components-controls/index.md:389
#: content/docs/getting-started/kirigami/components-controls/index.md:439
#: content/docs/getting-started/kirigami/components-controls/index.md:514
#: content/docs/getting-started/kirigami/components-dialogs/index.md:62
#: content/docs/getting-started/kirigami/components-dialogs/index.md:123
#: content/docs/getting-started/kirigami/components-dialogs/index.md:177
#: content/docs/getting-started/kirigami/components-dialogs/index.md:244
#: content/docs/getting-started/kirigami/components-dialogs/index.md:319
#: content/docs/getting-started/kirigami/components-drawers/index.md:65
#: content/docs/getting-started/kirigami/components-drawers/index.md:132
#: content/docs/getting-started/kirigami/components-progressbars/index.md:64
#: content/docs/getting-started/kirigami/introduction-actions/index.md:90
#: content/docs/getting-started/kirigami/style-colors/index.md:155
#: content/docs/getting-started/kirigami/style-typography/index.md:70
#: content/docs/getting-started/kirigami/style-typography/index.md:111
#: content/docs/getting-started/kirigami/style-typography/index.md:164
#: content/docs/getting-started/kirigami/style-typography/index.md:213
#: content/docs/getting-started/kirigami/style-typography/index.md:264
#: content/docs/getting-started/kirigami/style-typography/index.md:315
#: content/docs/getting-started/kirigami/style-typography/index.md:365
msgid "<br>\n"
msgstr "<br>\n"

#: content/docs/getting-started/kirigami/components-actiontoolbar/index.md:133
msgid ""
"![ActionToolBar with children center-aligned](/docs/getting-started/kirigami/"
"components-actiontoolbar/ActionToolBar-aligned.webp)"
msgstr ""
"![ActionToolBar met kinderen centraal uitgelijnd](/docs/getting-star/"
"kirigami/components-actiontoolbar/ActionToolBar-aligned.webp)"

#: content/docs/getting-started/kirigami/components-card/index.md:0
msgid ""
"A card serves as an overview and entry point for more detailed information "
"and can offer direct access to the most important actions of an item.\n"
msgstr ""
"Een kaart dient als overzicht en ingang voor meer gedetailleerde informatie "
"en kan directe toegang bieden tot de meest belangrijke acties van een item.\n"

#: content/docs/getting-started/kirigami/components-card/index.md:11
msgid ""
"The Kirigami types [AbstractCard](docs:kirigami2;AbstractCard) and [Card]"
"(docs:kirigami2;Card) are used to implement the popular card component used "
"on many mobile and web platforms. Cards can be used to display a collection "
"of information or actions in an attractive and distinctive way."
msgstr ""
"De Kirigami typen [AbstractCard](docs:kirigami2;AbstractCard) en [Card](docs:"
"kirigami2;Card) worden gebruikt om de populaire kaartcomponent gebruikt op "
"vele mobiele en webplatforms te implementeren. Kaarten kunnen gebruikt "
"worden om een hoeveelheid information of acties op een attractieve en "
"kenmerkende manier te tonen."

#: content/docs/getting-started/kirigami/components-card/index.md:13
msgid ""
"Kirigami also offers 3 kinds of [views](https://doc.qt.io/qt-6/qtquick-"
"modelviewsdata-modelview.html) and [positioners](https://doc.qt.io/qt-6/"
"qtquick-positioning-layouts.html) to aid you in presenting your cards with "
"beautiful and responsive layouts."
msgstr ""
"Kirigami biedt ook 3 soorten [weergaven](https://doc.qt.io/qt-6/qtquick-"
"modelviewsdata-modelview.html) en [positioneerders](https://doc.qt.io/qt-6/"
"qtquick-positioning-layouts.html) om u te helpen bij het presenteren van uw "
"kaarten met mooie en responsieve indelingen."

#: content/docs/getting-started/kirigami/components-card/index.md:15
msgid "AbstractCard"
msgstr "AbstractCard"

#: content/docs/getting-started/kirigami/components-card/index.md:17
msgid ""
"A [Kirigami.AbstractCard](docs:kirigami2;AbstractCard) is the simplest type "
"of card. It's just a rectangle with a shadow, which can contain any [Item]"
"(docs:qtquick;QtQuick.Item) in it. It can also have Items assigned to its "
"[header](docs:kirigami2;templates::AbstractCard::header) or [footer](docs:"
"kirigami2;templates::AbstractCard::footer) properties. In this case a "
"[Kirigami.Heading](docs:kirigami2;Heading) is its `header` and a [Controls."
"Label](docs:qtquickcontrols;QtQuick.Controls.Label) is the card's "
"[contentItem](https://doc.qt.io/Qt-6/qml-qtquick-controls-control."
"html#contentItem-prop)."
msgstr ""
"Een [Kirigami.AbstractCard](docs:kirigami2;AbstractCard) is het eenvoudigste "
"type kaart. Het is gewoon een rechthoek met een schaduw, die elk [Item](docs:"
"qtquick;QtQuick.Item) erin kan bevatten. Het kan ook items aan zijn "
"eigenschappen [header](docs:kirigami2;templates::AbstractCard::header) of "
"[footer](docs:kirigami2;templates::AbstractCard::footer) toekennen. In dat "
"geval is een [Kirigami.Heading](docs:kirigami2;Heading) zijn`header`en een "
"[Controls.Label](docs:qtquickcontrols;QtQuick.Controls.Label) is het "
"[contentItem](https://doc.qt.io/Qt-6/qml-qtquick-controls-control."
"html#contentItem-prop) van de kaart."

#: content/docs/getting-started/kirigami/components-card/index.md:41
msgid ""
"![Screenshot of an Abstract Card, a simple rectangular button with left-"
"aligned text](/docs/getting-started/kirigami/components-card/abstract-card."
"png)"
msgstr ""
"![Schermafdruk van een abstracte kaart, een eenvoudige rechthoekige knop met "
"links uitgelijnde tekst](/docs/getting-started/kirigami/components-card/"
"abstract-card.png)"

#: content/docs/getting-started/kirigami/components-card/index.md:48
msgid "Card"
msgstr "Kaart"

#: content/docs/getting-started/kirigami/components-card/index.md:50
msgid ""
"A [Kirigami.Card](docs:kirigami2;Card) inherits from [AbstractCard](docs:"
"kirigami2;AbstractCard) and provides more features out of the box. Cards "
"inherit the same [header](docs:kirigami2;templates::AbstractCard::header) "
"and [footer](docs:kirigami2;templates::AbstractCard::footer) from an "
"Abstract Card, but you are encouraged to use a [banner](docs:kirigami2;Card::"
"banner) and a set of [Kirigami.Action](docs:kirigami2;Action) in the "
"`actions` group instead."
msgstr ""
"Een [Kirigami.Card](docs:kirigami2;Card) erft van [AbstractCard](docs:"
"kirigami2;AbstractCard) en levert standaard meer mogelijkheden. Cards erven "
"dezelfde [header](docs:kirigami2;templates::AbstractCard::header) en [footer]"
"(docs:kirigami2;templates::AbstractCard::footer) uit een Abstract Card, maar "
"u wordt aangemoedigd om een [banner](docs:kirigami2;Card::banner) te "
"gebruiken en in plaats daarvan een set [Kirigami.Action](docs:kirigami2;"
"Action) in de groep `actions`."

#: content/docs/getting-started/kirigami/components-card/index.md:72
msgid "The title can be positioned in the banner"
msgstr "De titel kan gepositioneerd worden in de banner"

#: content/docs/getting-started/kirigami/components-card/index.md:87
msgid ""
"![Screenshot of a full-fledged Card with a banner background behind its "
"title, white background behind its text, and two actions with icons and a "
"hamburger menu at the bottom](/docs/getting-started/kirigami/components-card/"
"card1.png)"
msgstr ""
"![Schermafdruk van een volwaardige kaart met een bannerachergrond achter "
"zijn titel, witte achtergrond achter zijn tekst en twee acties met "
"pictogrammen en een hamburgermenu onderaan](/docs/getting-started/kirigami/"
"components-card/card1.png)"

#: content/docs/getting-started/kirigami/components-card/index.md:93
msgid "CardsLayout"
msgstr "CardsLayout"

#: content/docs/getting-started/kirigami/components-card/index.md:95
msgid ""
"A [Kirigami.CardsLayout](docs:kirigami2;CardsLayout) is most useful when the "
"cards being presented are either not instantiated by a model or are "
"instantiated by a model that always has very few items. They are presented "
"as a grid of two columns which will remain centered if the application is "
"really wide, or become a single column if there is not enough space for two "
"columns, such as a mobile phone screen."
msgstr ""
"Een [Kirigami.CardsLayout](docs:kirigami2;CardsLayout) is het meest nuttig "
"wanneer de gepresenteerde kaarten ofwel niet door een model worden gemaakt "
"of door een model dat altijd erg weinig items heeft. Ze worden gepresenteerd "
"als een raster met twee kolommen die gecentreerd zullen blijven als de "
"toepassing echt breed is of een enkele kolom wordt als er niet genoeg ruimte "
"is voor twee kolommen, zoals het scherm van een mobiele telefoon."

#: content/docs/getting-started/kirigami/components-card/index.md:99
msgid ""
"[`CardsListView`](docs:kirigami2;CardsListView) is better suited for larger "
"models."
msgstr ""
"[`CardsListView`](docs:kirigami2;CardsListView) is meer geschikt voor "
"grotere modellen."

#: content/docs/getting-started/kirigami/components-card/index.md:103
msgid "Important"
msgstr "Belangrijk"

#: content/docs/getting-started/kirigami/components-card/index.md:105
msgid ""
"A [CardsLayout](docs:kirigami2;CardsLayout) should always be contained "
"within a [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html)."
msgstr ""
"Een [CardsLayout](docs:kirigami2;CardsLayout) zou zich altijd binnen een "
"[ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout.html) "
"moeten bevinden.)."

#: content/docs/getting-started/kirigami/components-card/index.md:109
msgid ""
"A card can optionally be oriented horizontally. In this case it will be "
"wider than tall, and is better suited to being placed in a [ColumnLayout]"
"(https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout.html). If you must "
"put it in a [CardsLayout](docs:kirigami2;CardsLayout), it will have a "
"[maximumColumns](docs:kirigami2;CardsLayout::maximumColumns) of `2` by "
"default."
msgstr ""
"Een kaart kan optioneel horizontaal georiënteerd zijn. In dat geval zal het "
"breder zijn dan hoog en is het beter geschikt om geplaatst te worden in een "
"[ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout."
"html). Als u het in een [CardsLayout](docs:kirigami2;CardsLayout) moet "
"plaatsen, zal het standaard een [maximumColumns](docs:kirigami2;CardsLayout::"
"maximumColumns) van `2` hebben."

#: content/docs/getting-started/kirigami/components-card/index.md:145
msgid ""
"![Screenshot of a CardsLayout showing two side by side cards in portrait "
"orientation on top of a card in landscape orientation, all with different "
"components being used](/docs/getting-started/kirigami/components-card/"
"cardslayout.png)"
msgstr ""
"![Schermafdruk van een CardsLayout die twee kaarten naast elkaar in "
"oriëntatie portret bovenaan een kaart in oriëntatie landschap toont, allen "
"met verschillende in gebruik zijnde componenten](/docs/getting-started/"
"kirigami/components-card/cardslayout.png)"

#: content/docs/getting-started/kirigami/components-card/index.md:151
msgid "CardsListView"
msgstr "CardsListView"

#: content/docs/getting-started/kirigami/components-card/index.md:153
msgid ""
"A [Kirigami.CardsListView](docs:kirigami2;CardsListView) is a list view that "
"can be used with [AbstractCard](docs:kirigami2;AbstractCard) components."
msgstr ""
"Een [Kirigami.CardsListView](docs:kirigami2;CardsListView) is een "
"lijstweergave die gebruikt kan worden met componenten [AbstractCard](docs:"
"kirigami2;AbstractCard) ."

#: content/docs/getting-started/kirigami/components-card/index.md:155
msgid ""
"A [CardsListView](docs:kirigami2;CardsListView) will stretch child cards to "
"its own width. This component should therefore only be used with cards which "
"will look good at any horizontal size. Use of a [Card](docs:kirigami2;Card) "
"component inside it is discouraged, unless it has [Qt.Horizontal](docs:"
"qtcore;Qt::Orientation) as its [headerOrientation](docs:kirigami2;templates::"
"AbstractCard::headerOrientation) property."
msgstr ""
"Een [CardsListView](docs:kirigami2;CardsListView) zal kindkaarten uitrekken "
"naar zijn eigen breedte. Deze component zou daarom alleen gebruikt moeten "
"worden met kaarten die er goed uitzien in elke horizontale grootte. Met "
"gebruik van de component [Card](docs:kirigami2;Card) erin wordt ontraden, "
"tenzij het [Qt.Horizontal](docs:qtcore;Qt::Orientation) heeft als zijn "
"eigenschap [headerOrientation]docs:kirigami2;templates::AbstractCard::"
"headerOrientation)."

#: content/docs/getting-started/kirigami/components-card/index.md:157
msgid ""
"The choice between using this view with [AbstractCard](docs:kirigami2;"
"AbstractCard) components or a conventional [ListView](docs:qtquick;QtQuick."
"ListView) with [AbstractListItem](docs:kirigami2;AbstractListItem)/"
"[BasicListItem](docs:kirigami2;BasicListItem) components is purely an "
"aesthetic one."
msgstr ""
"De keuze tussen deze weergave gebruiken met componenten [AbstractCard](docs:"
"kirigami2;AbstractCard) of een conventionele [ListView](docs:qtquick;QtQuick."
"ListView) met componenten [AbstractListItem](docs:kirigami2;"
"AbstractListItem)/[BasicListItem](docs:kirigami2;BasicListItem) is puur een "
"esthetische."

#: content/docs/getting-started/kirigami/components-card/index.md:169
msgid "NOTE: never put a Layout as contentItem as it will cause binding loops"
msgstr ""
"OPMERKING: zet nooit een Layout als contentItem omdat het bindinglussen zal "
"veroorzaken"

#: content/docs/getting-started/kirigami/components-card/index.md:179
msgid "IMPORTANT: never put the bottom margin"
msgstr "BELANGRIJK: zet nooit de ondermarge"

#: content/docs/getting-started/kirigami/components-card/index.md:211
msgid ""
"![Screenshot of a CardsListView, which is a simple vertical list of cards in "
"landscape mode](/docs/getting-started/kirigami/components-card/cardslistview."
"png)"
msgstr ""
"![Schermafdruk van een CardsListView, wat een eenvoudige lijst met cards is "
"in modus landschap](/docs/getting-started/kirigami/components-card/"
"cardslistview.png)"

#: content/docs/getting-started/kirigami/components-chips/index.md:0
msgid "Chips"
msgstr "Chips"

#: content/docs/getting-started/kirigami/components-chips/index.md:0
msgid "Chips are small elements typically used to list out related properties."
msgstr ""
"Chips zijn kleine elementen standaard gebruikt om een lijst te maken van "
"gerelateerde eigenschappen."

#: content/docs/getting-started/kirigami/components-chips/index.md:9
msgid ""
"[Kirigami.Chip](docs:kirigami2;Chip) components are small elements inherited "
"from [AbstractButton](https://doc.qt.io/qt-6/qml-qtquick-controls2-"
"abstractbutton.html) used for displaying common properties or filters of "
"something. These are typically text elements, which is also interactable and "
"comes with an optional delete button."
msgstr ""
"[Kirigami.Chip](docs:kirigami2;Chip) componenten zijn kleine elementen "
"geërfd van [AbstractButton](https://doc.qt.io/qt-6/qml-qtquick-controls2-"
"abstractbutton.html) gebruikt voor het tonen van gemeenschappelijke "
"eigenschappen of filters van iets. Dit zijn typisch tekstelementen, waarop "
"ook geacteerd kan worden en komt met een optionele knop voor wissen."

#: content/docs/getting-started/kirigami/components-chips/index.md:14
msgid "![Example Chips in Kirigami Gallery](chips_kirigami_gallery.png)"
msgstr "![Voorbeeld Chips in Kirigami galerij](chips_kirigami_gallery.png)"

#: content/docs/getting-started/kirigami/components-chips/index.md:16
msgid "Quick Start"
msgstr "Snelstart"

#: content/docs/getting-started/kirigami/components-chips/index.md:18
msgid ""
"Chips can easily be added using the `Kirigami.Chip` component. By assigning "
"a string to its `text` field, we give chips their name."
msgstr ""
"Chips kunnen gemakkelijk toegevoegd worden met de component `Kirigami.Chip`. "
"Door het toekennen van een tekenreeks aan zijn `text`-veld geven we chips "
"hun naam."

#: content/docs/getting-started/kirigami/components-chips/index.md:55
msgid "![Declaring and Displaying Chips](chips_usage.png)"
msgstr "![Declareren en tonen van Chips](chips_usage.png)"

#: content/docs/getting-started/kirigami/components-chips/index.md:57
msgid "{{< /section-right >}} {{< /sections >}}"
msgstr "{{< /section-right >}} {{< /sections >}}"

#: content/docs/getting-started/kirigami/components-chips/index.md:60
msgid "With Repeaters (Recommended)"
msgstr "Met herhalers (aanbevolen)"

#: content/docs/getting-started/kirigami/components-chips/index.md:62
msgid ""
"Since chips are meant to be used more than once, you'll likely want to use "
"some kind of list data structure and iterate over them to display the chips. "
"To do this, we need a [ListModel](https://doc.qt.io/qt-6/qml-qtqml-models-"
"listmodel.html) and a [Repeater](https://doc.qt.io/qt-6/qml-qtquick-repeater."
"html) component."
msgstr ""
"Omdat chips bedoeld zijn om meer dan eens te worden gebruikt, wilt u "
"waarschijnlijk een vorm van een gegevensstructuur mat een lijst gebruiken en "
"er over itereren om de chips te tonen. Om dat te doen hebben we een "
"[ListModel](https://doc.qt.io/qt-6/qml-qtqml-models-listmodel.html) nodig en "
"een component [Herhaler](https://doc.qt.io/qt-6/qml-qtquick-repeater.html)."

#: content/docs/getting-started/kirigami/components-chips/index.md:69
msgid ""
"The ListModel is used as storage for the chips. To populate the ListModel "
"(and therefore chips), we declare a couple of ListElement components, which "
"contains a field known as `text`. We can use this string assigned from here "
"to the `text` field for each repeated chip."
msgstr ""
"Het ListModel wordt gebruikt als opslag voor de chips. Om het ListModel te "
"bevolken (en daarom chips), declareren we een aantal componenten "
"ListElement, die een veld bevatten bekend als `text`. We kunnen deze van "
"hier aan het `text`-veld toegekende tekenreeks gebruiken voor elke herhaalde "
"chip."

#: content/docs/getting-started/kirigami/components-chips/index.md:74
msgid ""
"The Repeater is used for displaying the chips. First, we need to set the "
"`model` field of the Repeater to our ListModel, or create the ListModel "
"inside of repeater. Then, we declare the `Kirigami.Chip` component inside of "
"the Repeater, and assign its `text` field with the element's data using the "
"`modelData` property."
msgstr ""
"De Herhaler wordt gebruikt voor het tonen van de chips. Eerst moeten we het "
"`model`-veld van de Herhaler aan ons ListModel instellen of het ListModel "
"aanmaken binnen de herhaler. Daarna declareren we de component `Kirigami."
"Chip` binnen de Herhaler en kennen zijn `text`-veld toe met de gegevens van "
"het element met gebruik van de eigenschap `modelData`."

#: content/docs/getting-started/kirigami/components-chips/index.md:114
msgid ""
"You can dynamically append and remove data from the ListModel, and the "
"Repeater will automatically make those changes. However, simply changing a "
"specific item from either the Repeater or ListModel does not affect the "
"other, and requires the changing of both, unless something like "
"[QAbstractListModel](https://doc.qt.io/qt-6/qabstractlistmodel.html) is "
"used. See [Example Application](#example-application) for more information."
msgstr ""
"U kunt dynamisch gegevens achtervoegen en verwijderen uit het ListModel en "
"de Herhaler zal automatisch deze wijzigingen doen. Echter, eenvoudig "
"wijzigen van een specifiek item uit ofwel de Herhaler of ListModel heeft "
"geen effect op de anderen en vereist het wijzigen van beiden, tenzij zoiets "
"als [QAbstractListModel](https://doc.qt.io/qt-6/qabstractlistmodel.html) "
"wordt gebruikt. Zie [Voorbeeldtoepassing](#example-application) voor meer "
"informatie."

#: content/docs/getting-started/kirigami/components-chips/index.md:123
msgid "Example Application"
msgstr "Voorbeeldtoepassing"

#: content/docs/getting-started/kirigami/components-chips/index.md:125
msgid ""
"The example application below showcases how chips can be used in programs "
"such as to-do lists."
msgstr ""
"De onderstaande voorbeeldtoepassing laat zien hoe chips gebruikt kunnen "
"worden in programma's zoals te-doenlijsten."

#: content/docs/getting-started/kirigami/components-chips/index.md:130
msgid "![Chips Example Application](chips_example_app.png)"
msgstr "![Chips Voorbeeldtoepassing](chips_example_app.png)"

#: content/docs/getting-started/kirigami/components-controls/index.md:0
msgid "Controls and interactive elements"
msgstr "Besturingen en interactieve elementen"

#: content/docs/getting-started/kirigami/components-controls/index.md:0
msgid ""
"Make your apps more interactive by using buttons, selection controls, "
"sliders, and text fields."
msgstr ""
"Uw toepassingen interactiever maken door knoppen, selectiebesturingen, "
"schuifregelaars en tekstvelden te gebruiken."

#: content/docs/getting-started/kirigami/components-controls/index.md:11
msgid ""
"Kirigami makes use of a wide selection of different interactive elements "
"from Qt that you can use in your applications. Each different type has "
"slightly different interaction styles, visual styles, and functionality. "
"Using the right type of control in your application can help make your user "
"interface more responsive and intuitive."
msgstr ""
"Kirigami maakt gebruik van een brede selectie van verschillende interactieve "
"elementen die u kunt gebruiken in uw toepassingen. Elk verschillend type "
"heeft iets verschillende interactiestijlen, visuele stijlen en "
"functionaliteit. Door het juiste type besturing in uw toepassing te "
"gebruiken kan helpen om uw gebruikersinterface responsiever en intuïtiever "
"te maken."

#: content/docs/getting-started/kirigami/components-controls/index.md:13
msgid "Buttons"
msgstr "Knoppen"

#: content/docs/getting-started/kirigami/components-controls/index.md:15
msgid ""
"In Kirigami apps, we use buttons from QtQuick Controls. Using them is pretty "
"straightforward: we set the text to the [text](https://doc.qt.io/qt-6/qml-"
"qtquick-controls2-abstractbutton.html#text-prop) property and any action we "
"want it to perform is set to the [onClicked](docs:qtquickcontrols;QtQuick."
"Controls.AbstractButton::clicked) property."
msgstr ""
"In Kirigami toepassingen gebruiken we knoppen uit QtQuick Controls. Deze "
"gebruiken is tamelijk rechtlijnig: we zetten de tekst op de eigenschap [text]"
"(https://doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton.html#text-prop) "
"en een actie die we het willen laten uitvoeren wordt ingesteld op de "
"eigenschap [onClicked](docs:qtquickcontrols;QtQuick.Controls.AbstractButton::"
"clicked)."

#: content/docs/getting-started/kirigami/components-controls/index.md:50
msgid ""
"![A window containing a button \"Beep\" in the center, which when clicked "
"shows a passive notification \"Boop\" at the bottom of the window](/docs/"
"getting-started/kirigami/components-controls/controls-button.webp)"
msgstr ""
"![Een venster met een knop \"Piep\" in het centrum, die wanneer er op wordt "
"geklikt een passieve melding \"Boop\" onderaan het venster toont](/docs/"
"getting-started/kirigami/components-controls/controls-button.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:56
msgid "Toggleable buttons"
msgstr "Omschakelbare knoppen"

#: content/docs/getting-started/kirigami/components-controls/index.md:58
msgid ""
"The behavior of buttons can be changed to make them toggleable: in this "
"mode, they will stay pressed until clicked on once more. This mode can be "
"activated by setting their [checkable](https://doc.qt.io/qt-6/qml-qtquick-"
"controls2-abstractbutton.html#checkable-prop) property to `true`; we can "
"also set buttons to be toggled on by default by setting [checked](https://"
"doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton.html#checked-prop) to "
"`true`."
msgstr ""
"Het gedrag van knoppen kan gewijzigd worden om ze omschakelbaar te maken: in "
"deze modus zullen ze ingedrukt blijven totdat er nog een keer op wordt "
"geklikt. Deze modus kan geactiveerd worden door de eigenschap [checkable]"
"(https://doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton.html#checkable-"
"prop) op `true` te zetten; we kunnen knoppen ook standaard zetten op aan "
"door de eigenschap [checked](https://doc.qt.io/qt-6/qml-qtquick-controls2-"
"abstractbutton.html#checked-prop) op `true` te zetten."

#: content/docs/getting-started/kirigami/components-controls/index.md:60
msgid ""
"We can get the most out of toggleable buttons by using the "
"`onCheckedChanged` signal handler which is [automatically generated](https://"
"doc.qt.io/qt-6/qtqml-syntax-signals.html#property-change-signal-handlers) "
"from the [checked](https://doc.qt.io/qt-6/qml-qtquick-controls2-"
"abstractbutton.html#checked-prop) signal. It works similarly to `onClicked`, "
"except here the assigned action will be executed when the button's state "
"changes. It is a boolean property, which can come in handy for specific use "
"cases."
msgstr ""
"We kunnen het meeste uit omschakelbare knoppen halen door de "
"signaalbehandelaar `onCheckedChanged` te gebruiken die [automatisch is "
"gegenerateerd](https://doc.qt.io/qt-6/qtqml-syntax-signals.html#property-"
"change-signal-handlers) uit het signaal [checked](https://doc.qt.io/qt-6/qml-"
"qtquick-controls2-abstractbutton.html#checked-prop). Het werkt net als "
"`onClicked`, behalve dat hier de toegekende actie uitgevoerd zal worden "
"wanneer de status van de knop wijzigt. Het is een booleaanse eigenschap, die "
"handig kan worden voor specifieke gebruiksgevallen."

#: content/docs/getting-started/kirigami/components-controls/index.md:62
msgid ""
"In this example, we set the visibility of an inline drawer according to the "
"status of a toggleable button:"
msgstr ""
"In dit voorbeeld zetten we de zichtbaarheid van een in-line schuiflade "
"volgens de status van een omschakelbare knop:"

#: content/docs/getting-started/kirigami/components-controls/index.md:109
msgid ""
"![A window containing a toggleable button \"Hide inline drawer\" in the "
"center which when toggled hides the \"Peekaboo\" inline drawer](/docs/"
"getting-started/kirigami/components-controls/controls-togglebutton.webp)"
msgstr ""
"![Een venster bevattende een om te schakelen knop \"Inline schuiflade "
"verbergen\" in het centrum, die wanneer omgeschakeld de inline schuiflade "
"\"Peekaboo\" verbergt](/docs/getting-started/kirigami/components-controls/"
"controls-togglebutton.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:117
msgid ""
"With the default Breeze theme in KDE Plasma it can be hard to tell whether a "
"button is toggled, since buttons are coloured blue when they are clicked on. "
"Make sure you take this into account when creating your application: a "
"different control might be more user friendly."
msgstr ""
"Met het standaard Breeze thema in KDE Plasma kan het moeilijk te zien zijn "
"of een knop is omgeschakeld, omdat knoppen blauw gekleurd zijn wanneer er op "
"is geklikt. Ga na hier rekening mee te houden bij maken van uw toepassing: "
"een andere besturing kan gebruikersvriendelijker zijn."

#: content/docs/getting-started/kirigami/components-controls/index.md:121
msgid "Toolbar buttons"
msgstr "Werkbalkknoppen"

#: content/docs/getting-started/kirigami/components-controls/index.md:123
msgid ""
"There is a specific button type meant for use in toolbars, [Controls."
"ToolButton](docs:qtquickcontrols;QtQuick.Controls.ToolButton). The most "
"obvious difference between this and a conventional [Button](docs:"
"qtquickcontrols;QtQuick.Controls.Button) is the styling, with toolbuttons "
"being flat (though this is alterable with the boolean property [flat]"
"(https://doc.qt.io/qt-6/qml-qtquick-controls2-button.html#flat-prop))."
msgstr ""
"Er is een specifiek type knop bedoelt voor gebruik in werkbalken, [Controls."
"ToolButton](docs:qtquickcontrols;QtQuick.Controls.ToolButton). Het meest "
"zichtbare verschil tussen deze en een conventionele [Knop](docs:"
"qtquickcontrols;QtQuick.Controls.Button) is de styling, met werkbalkknoppen "
"die vlak zijn (hoewel dat is te wijzigen met de booleaanse eigenschap [flat]"
"(https://doc.qt.io/qt-6/qml-qtquick-controls2-button.html#flat-prop))."

#: content/docs/getting-started/kirigami/components-controls/index.md:168
msgid ""
"![A window showing a custom toolbar in the window header simulating a "
"Kirigami.globalToolBar, with a left menu icon that shows a passive "
"notification \"Kirigami Pages and Actions are better!\" and a right "
"toolbutton \"Beep\" which is completely flat simulating a Kirigami.Action](/"
"docs/getting-started/kirigami/components-controls/controls-toolbutton.webp)"
msgstr ""
"![Een venster dat een aangepaste werkbalk toont aan de bovenkant van het "
"venster die een Kirigami.globalToolBar simuleert, met links een menu "
"pictogram dat een passieve melding \"Kirigami Pages and Actions are better!"
"\" toont en rechts de knop \"Beep\" die compleet plat is die een Kirigami."
"Action](/docs/getting-started/kirigami/components-controls/controls-"
"toolbutton.webp) simuleert"

#: content/docs/getting-started/kirigami/components-controls/index.md:174
msgid "Selection controls"
msgstr "Selectiebesturing"

#: content/docs/getting-started/kirigami/components-controls/index.md:176
msgid ""
"Selection controls let users make a choice or pick an option. There are "
"different types that are best suited to different situations."
msgstr ""
"Besturing van selectie laat gebruikers een keuze maken of een optie kiezen. "
"Er zijn verschillende typen die het best geschikt zijn in verschillende "
"situaties."

#: content/docs/getting-started/kirigami/components-controls/index.md:178
msgid "Checkboxes"
msgstr "Keuzevakjes"

#: content/docs/getting-started/kirigami/components-controls/index.md:180
msgid ""
"A [Controls.CheckBox](docs:qtquickcontrols;QtQuick.Controls.CheckBox) is "
"meant for options where the choices are non-exclusive and where each option "
"has a clear alternative."
msgstr ""
"Een [Controls.CheckBox](docs:qtquickcontrols;QtQuick.Controls.CheckBox) is "
"bedoeld voor opties waarvan de keuzes niet-exclusief zijn en waar elke optie "
"een helder alternatief heeft."

#: content/docs/getting-started/kirigami/components-controls/index.md:221
msgid ""
"![A window showing two checkboxes where more than one checkbox can be ticked "
"at the same time](/docs/getting-started/kirigami/components-controls/"
"controls-checkbox.webp)"
msgstr ""
"![Een venster dat twee keuzevakjes toont waar meer dan één keuzevakje "
"tegelijk geactiveerd kan worden](/docs/getting-started/kirigami/components-"
"controls/controls-checkbox.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:227
msgid ""
"As you can see, they are simple to use. The [checked](https://doc.qt.io/qt-6/"
"qml-qtquick-controls2-abstractbutton.html#checked-prop) property holds a "
"boolean value determining whether or not they have been checked."
msgstr ""
"Zoals u kunt zien zijn ze eenvoudig te gebruiken. De eigenschap [checked]"
"(https://doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton.html#checked-"
"prop) bevat een booleaanse waarde die bepaalt of ze wel of niet geactiveerd "
"zijn."

#: content/docs/getting-started/kirigami/components-controls/index.md:229
msgid "Radio buttons"
msgstr "Keuzerondjes"

#: content/docs/getting-started/kirigami/components-controls/index.md:231
msgid ""
"A [Controls.RadioButton](docs:qtquickcontrols;QtQuick.Controls.RadioButton) "
"is designed for situations where the user must choose one option from a set "
"of several options."
msgstr ""
"Een [Controls.RadioButton](docs:qtquickcontrols;QtQuick.Controls."
"RadioButton) is ontworpen voor situaties waar de gebruiker één optie uit een "
"set van verschillende opties moet kiezen."

#: content/docs/getting-started/kirigami/components-controls/index.md:233
msgid ""
"Radio buttons are exclusive by default: only one button can be checked in "
"the same parent item."
msgstr ""
"Keuzerondjes zijn standaard exclusief: slechts één knop kan geactiveerd zijn "
"in hetzelfde hoofditem."

#: content/docs/getting-started/kirigami/components-controls/index.md:235
msgid ""
"Like checkboxes, they can be set to be checked or unchecked by default with "
"the [checked](https://doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton."
"html#checked-prop) property."
msgstr ""
"Net als keuzevakjes kunnen ze standaard op geactiveerd of niet-geactiveerd "
"gezet worden met de eigenschap [checked](https://doc.qt.io/qt-6/qml-qtquick-"
"controls2-abstractbutton.html#checked-prop)."

#: content/docs/getting-started/kirigami/components-controls/index.md:277
msgid ""
"![A window showing two radio buttons where only one radio button can be "
"ticked at the same time](/docs/getting-started/kirigami/components-controls/"
"controls-radiobutton.webp)"
msgstr ""
"![Een venster dat twee keuzerondjes toont waar één keuzerondje tegelijk "
"geactiveerd kan worden](/docs/getting-started/kirigami/components-controls/"
"controls-radiobutton.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:283
msgid "Switches"
msgstr "Schakelaars"

#: content/docs/getting-started/kirigami/components-controls/index.md:285
msgid ""
"On the desktop, changing settings usually involves changing the setting and "
"then applying it by clicking on an \"Apply\" or \"OK\" button. On mobile, we "
"can use a [Controls.Switch](docs:qtquickcontrols;QtQuick.Controls.Switch) "
"instead."
msgstr ""
"Op het bureaublad betekent instellingen wijzigen gewoonlijk de instelling "
"wijzigen en daarna de instelling toepassen door op een knop 'Toepassen' of "
"'OK' te klikken. Op een mobiel kunnen we in plaats daarvan [Controls.Switch]"
"(docs:qtquickcontrols;QtQuick.Controls.Switch) gebruiken."

#: content/docs/getting-started/kirigami/components-controls/index.md:287
msgid ""
"Switches can be toggled between an on and off state. They can be toggled by "
"clicking or tapping on them, or they can be dragged towards the on or off "
"position. Once again, switches can be set to be on or off by default with "
"the [checked](https://doc.qt.io/qt-6/qml-qtquick-controls2-abstractbutton."
"html#checked-prop) property."
msgstr ""
"Schakelaars kunnen omgeschakeld worden tussen aan en uit. Er kan op geklikt "
"of getikt worden om ze om te schakelen of ze kunnen versleept worden naar de "
"aan of uit positie. Nog eens, schakelaars kunnen standaard aan of uit gezet "
"worden met de eigenschap [checked](https://doc.qt.io/qt-6/qml-qtquick-"
"controls2-abstractbutton.html#checked-prop)."

#: content/docs/getting-started/kirigami/components-controls/index.md:327
msgid ""
"![A window showing two evenly-spaced switches that function as toggles](/"
"docs/getting-started/kirigami/components-controls/controls-switch.webp)"
msgstr ""
"![Een venster dat twee gelijk verdeelde schakelaars toont die functioneren "
"als omschakelaars](/docs/getting-started/kirigami/components-controls/"
"controls-switch.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:333
msgid "Sliders"
msgstr "Schuifknoppen"

#: content/docs/getting-started/kirigami/components-controls/index.md:335
msgid ""
"Sliders allow users to select certain values by sliding a handle along a "
"track. There are several types that you can choose from depending on the "
"values you'd like your users to choose in your application."
msgstr ""
"Schuifregelaars bieden gebruikers het selecteren van bepaalde waarden door "
"een hendel te verschuiven langs een lijn. Er zijn verschillende typen "
"waaruit u kunt kiezen afhankelijk van de waarden waaruit u uw gebruikers "
"wilt laten kiezen in uw toepassing."

#: content/docs/getting-started/kirigami/components-controls/index.md:337
msgid "Standard and tickmarked sliders"
msgstr "Standaard en vaste posities schuifregelaars"

#: content/docs/getting-started/kirigami/components-controls/index.md:339
msgid ""
"A standard [Controls.Slider](docs:qtquickcontrols;QtQuick.Controls.Slider) "
"provides the user with very fine control over the selection they wish to "
"make."
msgstr ""
"Een standaard [Controls.Slider](docs:qtquickcontrols;QtQuick.Controls."
"Slider) biedt de gebruiker een erg fijne controle over de selectie die deze "
"wil maken."

#: content/docs/getting-started/kirigami/components-controls/index.md:341
msgid ""
"In Left to Right mode, sliders go left to right to increase when in "
"horizontal orientation, while in Right to Left mode they go in the reverse "
"direction. In both modes, sliders in vertical orientation go from the bottom "
"up."
msgstr ""
"In modus Links-naar-rechts, gaan schuifregelaar van links naar rechts om toe "
"te nemen indien in horizontale oriëntatie, terwijl in modus Rechts-naar-"
"links ze in de omgekeerde richting gaan. In beide modi gaan schuifregelaars "
"in verticale oriëntatie van onder omhoog."

#: content/docs/getting-started/kirigami/components-controls/index.md:343
msgid ""
"The coloration provides a visual indicator of how large the value you are "
"selecting is."
msgstr ""
"De kleuring biedt een visuele indicator over hoe groot de waarde is, die u "
"selecteert."

#: content/docs/getting-started/kirigami/components-controls/index.md:345
msgid "Sliders have a few important properties we must pay attention to:"
msgstr ""
"Schuifregelaars hebben een paar belangrijke eigenschappen waar we aandacht "
"aan moeten besteden:"

#: content/docs/getting-started/kirigami/components-controls/index.md:347
msgid ""
"[value](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider.html#value-"
"prop): contains the value at which the handle is placed, and can also be set "
"manually to provide a default starting value"
msgstr ""
"[value](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider.html#value-"
"prop): bevat de waarde waarop de hendel geplaatst wordt en kan ook handmatig "
"ingesteld worden, gewoonlijk om een standaard startwaarde te leveren"

#: content/docs/getting-started/kirigami/components-controls/index.md:348
msgid ""
"[to](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider.html#to-prop): "
"defines the range of the slider by specifying the maximum value it can go to"
msgstr ""
"[to](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider.html#to-prop): "
"definieert de reeks van de schuifregelaar door de maximale waarde te "
"specificeren waar deze naar toe kan gaan"

#: content/docs/getting-started/kirigami/components-controls/index.md:349
msgid ""
"[orientation](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider."
"html#orientation-prop): allows the slider to be set to a vertical "
"orientation with [Qt.Vertical](https://doc.qt.io/qt-6/qt.html#Orientation-"
"enum)"
msgstr ""
"[orientation](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider.hientation-"
"prop): biedt de schuifregelaar om in een verticale oriëntatie gezet te "
"worden met [Qt.Vertical](https://doc.qt.io/qt-6/qt.html#Orientation-enum)"

#: content/docs/getting-started/kirigami/components-controls/index.md:391
msgid ""
"![A window showing a vertical slider with its current value underneath it](/"
"docs/getting-started/kirigami/components-controls/controls-slider.webp)"
msgstr ""
"![Een venster dat een verticale schuifregelaars toont met zijn huidige "
"waarde eronder](/docs/getting-started/kirigami/components-controls/controls-"
"sliders.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:397
msgid ""
"Another useful property we can use is [stepSize](https://doc.qt.io/qt-6/qml-"
"qtquick-controls2-slider.html#stepSize-prop). Setting this to a numerical "
"value allows us to create a slider that snaps onto values that are multiples "
"of the specified `stepSize`, with these multiples being indicated by "
"tickmarks. Therefore if we set this property to `2.0`, when the user drags "
"the slider handle, they will only be able to select `0.0`, `2.0`, `4.0`, "
"etc. up to the value specified in the `to` property."
msgstr ""
"Nog een nuttige eigenschap die we kunnen gebruiken is [stepSize](https://doc."
"qt.io/qt-6/qml-qtquick-controls2-slider.html#stepSize-prop). Deze op een "
"numerieke waarde zetten biedt ons het maken van een schuifregelaar die klikt "
"op waarden die meervouden zijn van de gespecificeerde `stepSize`, waarbij "
"deze meervouden aangegeven worden met markeringen. Dus als we deze "
"eigenschap op `2,0` zetten, zal de gebruiker bij het slepen van de hendel, "
"alleen in staat zijn om `0,0`, `2,0`, `4,0`, etc. te selecteren tot de "
"waarde gespecificeerd in de eigenschap `to`."

#: content/docs/getting-started/kirigami/components-controls/index.md:441
msgid ""
"![A window showing a set of tickmarked sliders that are symmetrically "
"divided, with each division being called a step](/docs/getting-started/"
"kirigami/components-controls/controls-slidersteps.webp)"
msgstr ""
"![Een venster dat een set schuifregelaars met markeringen toont die "
"symmetrisch zijn opgedeeld, met elke verdeling genaamd een stap](/docs/"
"getting-started/kirigami/components-controls/controls-slidersteps.webp)"

#: content/docs/getting-started/kirigami/components-controls/index.md:447
msgid "Range sliders"
msgstr "Schuifregelaar met reeks"

#: content/docs/getting-started/kirigami/components-controls/index.md:449
msgid ""
"QtQuick Controls also provides [Controls.RangeSliders](docs:qtquickcontrols;"
"QtQuick.Controls.RangeSlider). These have two handles, hence allowing you to "
"define a range of numbers between the two handles."
msgstr ""
"QtQuick Controls biedt ook [Controls.RangeSliders](docs:qtquickcontrols;"
"QtQuick.Controls.RangeSlider). Deze hebben twee hendels, waarmee u een reeks "
"getallen tussen de twee hendels definieert."

#: content/docs/getting-started/kirigami/components-controls/index.md:451
msgid ""
"Two new properties are important to keep in mind: [first.value](https://doc."
"qt.io/qt-6/qml-qtquick-controls2-rangeslider.html#first-prop) and [second."
"value](https://doc.qt.io/qt-6/qml-qtquick-controls2-rangeslider.html#second-"
"prop), which hold the values of the two handles. Like the [value](https://"
"doc.qt.io/qt-6/qml-qtquick-controls2-slider.html#value-prop) property of the "
"standard sliders, these can be pre-set."
msgstr ""
"Twee nieuwe eigenschappen zijn belangrijk om te onthouden: [first.value]"
"(https://doc.qt.io/qt-6/qml-qtquick-controls2-rangeslider.html#first-prop) "
"en [second.value](https://doc.qt.io/qt-6/qml-qtquick-controls2-rangeslider."
"html#second-prop), die de waarden van de twee hendels bevatten. Net als de "
"eigenschap [value](https://doc.qt.io/qt-6/qml-qtquick-controls2-slider."
"html#value-prop) van de standaard schuifregelaars, kunnen deze vooraf "
"ingesteld worden."

#: content/docs/getting-started/kirigami/components-controls/index.md:516
msgid ""
"![A window showing a range slider, followed by a few labels underneath and a "
"button with a checkmark icon](/docs/getting-started/kirigami/components-"
"controls/controls-rangeslider.webp)"
msgstr ""
"![Een venster dat een schuifregelaar met een reeks toont met een paar labels "
"eronder en een knop met aanvinkpictogram](/docs/getting-started/kirigami/"
"components-controls/controls-rangeslider.webp)"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:0
msgid "Dialog types"
msgstr "Dialoogtypen"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:0
msgid "Various ways to serve and input data."
msgstr "Verschillende manieren om gegevens te dienen en in te voeren."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:10
msgid ""
"A [Kirigami.Dialog](docs:kirigami2;Dialog) is a simple component that you "
"can use to supplement the content being displayed on an application's page. "
"It can display non-interactive content (only text) and interactive content "
"(forms, listviews and buttons)."
msgstr ""
"Een [Kirigami.Dialog](docs:kirigami2;Dialog) is een eenvoudige component die "
"gebruikt kan worden om de getoonde inhoud van een pagina van de toepassing "
"aan te vullen. Deze kan niet-interactieve inhoud (alleen tekst) en "
"interactieve inhoud tonen (formulieren, lijstweergaven en knoppen)."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:12
msgid ""
"They can be dismissed by clicking or tapping outside of their area or by "
"clicking the close button on the header."
msgstr ""
"Ze kunnen afgewezen worden door te klikken of te tikken buiten hun gebied of "
"door op de sluitknop te klikken in de kop."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:14
msgid "Dialog"
msgstr "Dialoog"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:16
msgid ""
"A standard Kirigami.Dialog is used to create custom dialogs. They are very "
"easy to extend:"
msgstr ""
"Een standaard Kirigami.Dialog wordt gebruikt om aangepaste dialogen aan te "
"maken. Ze zijn erg gemakkelijk uit te breiden:"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:64
msgid "![Simple dialog containing only text](dialog.webp)"
msgstr "![Eenvoudige dialoog met alleen tekst](dialog.webp)"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:70
msgid ""
"As shown in the [introduction tutorial about dialogs](/docs/getting-started/"
"kirigami/introduction-dialogs), it is also possible to capture a "
"`standardButton(button)` to assign some behavior to it, like a binding to "
"enable it only under certain conditions."
msgstr ""
"Zoals getoond in de [introductie handleiding over dialogen](/docs/getting-"
"started/kirigami/introduction-dialogs) is het ook mogelijk een "
"`standardButton(button)` te vangen om er enig gedrag aan toe te kennen, "
"zoals een binding om het alleen in te schakelen onder bepaalde condities."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:72
msgid ""
"This type of dialog is generic and applies to most use cases, and it works "
"well with complex interactive content (especially views):"
msgstr ""
"Dit type dialoog is generieke en is van toepassing op de meeste "
"gebruiksgevallen en het werkt goed met complexe interactieve inhoud "
"(speciaal weergaven):"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:101
msgid "hints for the dialog dimensions"
msgstr "tips voor afmetingen van de dialoog"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:125
msgid "![A simple scrollable dialog](scrollabledialog.webp)"
msgstr "![Een eenvoudige schuifbare dialoog](scrollabledialog.webp)"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:131
msgid ""
"In most cases however you will likely want to use one of its derived dialog "
"types, [Kirigami.PromptDialog](docs:kirigami2;PromptDialog) or [Kirigami."
"MenuDialog](docs:kirigami2;MenuDialog)."
msgstr ""
"In de meeste gevallen echter wilt u waarschijnlijk een van zijn afgeleide "
"dialoogtypen gebruiken, [Kirigami.PromptDialog](docs:kirigami2;PromptDialog) "
"of [Kirigami.MenuDialog](docs:kirigami2;MenuDialog)."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:133
msgid "PromptDialog"
msgstr "PromptDialog"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:135
msgid ""
"A [Kirigami.PromptDialog](docs:kirigami2;PromptDialog) is essentially a "
"dialog with a built-in label and default [contentPadding](docs:kirigami2;"
"PromptDialog::contentPadding) that is used to prompt the user for some "
"information. This type of dialog is supposed to be used only for simple yes/"
"no prompts or brief requests for user input."
msgstr ""
"Een [Kirigami.PromptDialog](docs:kirigami2;PromptDialog) is eigenlijk een "
"dialoogvenster met een ingebouwde label en standaard [contentPadding](docs:"
"kirigami2;PromptDialog::contentPadding) dat wordt gebruikt om de aandacht "
"van de gebruiker te vragen voor wat informatie. Dit type dialoogvenster "
"wordt geacht alleen gebruikt te worden voor eenvoudige ja/nee vragen of "
"korte vragen aan de gebruiker voor een antwoord."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:137
msgid ""
"Its main property is [Kirigami.Dialog.subtitle](docs:kirigami2;PromptDialog::"
"subtitle), to which you would add text. If any QML component is added as a "
"child of the prompt dialog, that component will take the place of the "
"subtitle instead, and this can be explicitly specified with [Kirigami.Dialog."
"mainItem](docs:kirigami2;Dialog::mainItem)."
msgstr ""
"De belangrijkste eigenschap daarvan is [Kirigami.Dialog.subtitle](docs:"
"kirigami2;PromptDialog::subtitle), waaraan tekst toegevoegd kan worden. Als "
"een QML component als kind van het promptdialoog is toegevoegd, dan zal dit "
"component de plaats van de subtitel innemen, die expliciet kan worden "
"opgegeven met [Kirigami.Dialog.mainItem](docs:kirigami2;Dialog::mainItem)."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:179
msgid "![A simple prompt dialog containing only text](promptdialog.webp)"
msgstr ""
"![Een eenvoudige promptdialoog die alleen tekst bevat](promptdialog.webp)"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:246
msgid "![A PromptDialog with a custom TextField](promptdialogtextfield.webp)"
msgstr ""
"![Een PromptDialog met een aangepast TextField](promptdialogtextfield.webp)"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:252
msgid "MenuDialog"
msgstr "MenuDialog"

#: content/docs/getting-started/kirigami/components-dialogs/index.md:254
msgid ""
"The [Kirigami.MenuDialog](docs:kirigami2;MenuDialog) is a specialized dialog "
"that is used to list a selection of clickable options for the user using its "
"[actions](docs:kirigami2;MenuDialog::actions) property."
msgstr ""
"De [Kirigami.MenuDialog](docs:kirigami2;MenuDialog) is een gespecialiseerde "
"dialoog die gebruikt wordt om lijst met selecties van aan te klikken opties "
"voor de gebruiker die zijn eigenschappen van [acties](docs:kirigami2;"
"MenuDialog::actions) gebruikt."

#: content/docs/getting-started/kirigami/components-dialogs/index.md:321
msgid ""
"![A simple MenuDialog listing actions like Play and Pause for media]"
"(menudialog.webp)"
msgstr ""
"![Een eenvoudige MenuDialog lijst met acties zoals Afspelen en Pause voor "
"media](menudialog.webp)"

#: content/docs/getting-started/kirigami/components-drawers/index.md:0
msgid "Drawers"
msgstr "Schuifladen"

#: content/docs/getting-started/kirigami/components-drawers/index.md:0
msgid ""
"Drawers provide applications with quick access to controls and pages of your "
"application."
msgstr ""
"Schuifladen bieden toepassingen snelle toegang tot besturing en pagina's van "
"uw toepassing."

#: content/docs/getting-started/kirigami/components-drawers/index.md:10
msgid ""
"Drawers are panels that slide out of the sides of the application window. "
"They can be populated with interactive elements such as Kirigami Actions, "
"buttons, text, and more."
msgstr ""
"Schuifladen zijn panelen die aan de zijkanten van het toepassingenvenster "
"uitschuiven. Ze kunnen bevolkt worden met interactieve elementen zoals "
"Kirigami acties, knoppen, tekst en meer."

#: content/docs/getting-started/kirigami/components-drawers/index.md:12
msgid ""
"Drawers come in different types, shapes, and forms. In this page we will go "
"over each type and provide an overview of their characteristics."
msgstr ""
"Schuifladen komen in verschillende typen, vormen en formulieren. In deze "
"pagina bespreken we elk type en leveren een overzicht van hun "
"karakteristieken."

#: content/docs/getting-started/kirigami/components-drawers/index.md:16
msgid ""
"The global drawer is a standard feature in KDE's mobile applications and can "
"sometimes be found in their desktop incarnations too. It contains an "
"application's main menu: included here are any functions that are not "
"specific to the current page but still significant to general navigation or "
"interaction within the application."
msgstr ""
"De globale schuiflade is een standaard functie in de mobiele toepassingen "
"van KDE en kunnen soms ook in hun incarnaties op het bureaublad zijn te "
"vinden. Deze bevat een hoofdmenu van de toepassing: hierin zit alle functies "
"die niet specifiek zijn voor de huidige pagina maar nog steeds significant "
"voor de algemene navigatie of interactie met de toepassing."

#: content/docs/getting-started/kirigami/components-drawers/index.md:18
msgid ""
"It can be activated by tapping the hamburger menu or by swiping from the "
"left edge to the middle of the screen in Left to Right mode or from the "
"right edge in Right to Left mode."
msgstr ""
"Het kan geactiveerd worden door op het hamburgermenu te tikken of door vegen "
"van de linker rand naar het midden van het scherm in modus Links-naar-rechts "
"of vanaf de rechter rand in modus Rechts-naar-links."

#: content/docs/getting-started/kirigami/components-drawers/index.md:20
msgid ""
"[Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) components are what we "
"use to create such drawers. These are set to the [globalDrawer](docs:"
"kirigami2;AbstractApplicationWindow::globalDrawer) property of the [Kirigami."
"ApplicationWindow](docs:kirigami2;ApplicationWindow) that forms the basis of "
"our Kirigami application."
msgstr ""
"Componenten [Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) zijn wat we "
"gebruiken om zulke laden te maken. Deze zijn ingesteld op de eigenschap "
"[globalDrawer](docs:kirigami2;AbstractApplicationWindow::globalDrawer) van "
"de [Kirigami.ApplicationWindow](docs:kirigami2;ApplicationWindow) die de "
"basis vormt van onze Kirigami toepassing."

#: content/docs/getting-started/kirigami/components-drawers/index.md:67
msgid ""
"![Screenshot of a global drawer in desktop mode that looks like a sidebar](/"
"docs/getting-started/kirigami/components-drawers/globaldrawer_simple.webp)"
msgstr ""
"![Schermafdruk van een globale schuiflade in modus bureaublad die lijkt op "
"een zijbalk](/docs/getting-started/kirigami/components-drawers/"
"globaldrawer_simple.webp)"

#: content/docs/getting-started/kirigami/components-drawers/index.md:75
msgid ""
"The [titleIcon](docs:kirigami2;GlobalDrawer::titleIcon) property takes names "
"for system-wide icons according to the FreeDesktop specification. These "
"icons and icon names can be viewed with KDE's CuttleFish application which "
"comes with [plasma-sdk](https://invent.kde.org/plasma/plasma-sdk), or by "
"visiting [FreeDesktop's icon naming specification](https://specifications."
"freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html)."
msgstr ""
"De eigenschap [titleIcon](docs:kirigami2;GlobalDrawer::titleIcon) neemt "
"namen voor systeembrede pictogrammen volgens de FreeDesktop-specificatie. "
"Deze pictogrammen en pictogramnamen kunnen bekeken worden met de toepassing "
"CuttleFish van KDE, die meekomt met [plasma-sdk](https://invent.kde.org/"
"plasma/plasma-sdk) of door [Specificatie van pictogrambenaming van "
"FreeDesktop](https://specifications.freedesktop.org/icon-naming-spec/icon-"
"naming-spec-latest.html)."

#: content/docs/getting-started/kirigami/components-drawers/index.md:79
msgid "Header"
msgstr "Koptekst"

#: content/docs/getting-started/kirigami/components-drawers/index.md:81
msgid ""
"Headers can be used to place sticky components at the top of your global "
"drawer. Header components will stay in place even if your global drawer "
"contains nested Kirigami actions that replace the current layer on the "
"global drawer."
msgstr ""
"Er kunnen opschriften gebruikt worden om plakcomponenten te plaatsen "
"bovenaan uw globale schuiflade. Deze opschriftcomponenten blijven op hum "
"plaats zelfs als uw globale schuiflade geneste Kirigami acties bevatten die "
"de huidige laag in de globale schuiflade vervangen."

#: content/docs/getting-started/kirigami/components-drawers/index.md:83
msgid ""
"Your chosen header component can be set with the global drawer's `header` "
"property, and it will replace the global drawer's title. This is useful to "
"add a `Kirigami.SearchField`, for example:"
msgstr ""
"Uw gekozen opschriftcomponent kan ingesteld worden met de globale eigenschap "
"van de schuiflade `header` en zal vervangen worden door de titel van de "
"globale schuiflade. Dit is nuttig om een `Kirigami.SearchField` toe te "
"voegen, bijvoorbeeld:."

#: content/docs/getting-started/kirigami/components-drawers/index.md:134
msgid ""
"Our global drawer now shows the search bar component we set as the header"
msgstr ""
"Onze globale schuiflade toont nu de zoekbalkcomponent die we als het "
"opschrift instellen"

#: content/docs/getting-started/kirigami/components-drawers/index.md:141
msgid "Adapting for the desktop"
msgstr "Aanpassen voor het bureaublad"

#: content/docs/getting-started/kirigami/components-drawers/index.md:143
msgid ""
"While panel-style global drawers can be useful in mobile environments, they "
"might be too large on the desktop, especially when the application has few "
"actions."
msgstr ""
"Terwijl paneel-stijl globale schuifladen nuttig kunnen zijn in mobiele "
"omgevingen, kunnen ze te groot zijn op het bureaublad, speciaal wanneer de "
"toepassing weinig acties heeft."

#: content/docs/getting-started/kirigami/components-drawers/index.md:145
msgid ""
"Thankfully, Kirigami global drawers provide an [isMenu](docs:kirigami2;"
"GlobalDrawer::isMenu) property. When set to `true`, they turn into more "
"traditional menus only on the desktop."
msgstr ""
"Gelukkig leveren Kirigami globale schuifladen een eigenschap [isMenu](docs:"
"kirigami2;GlobalDrawer::isMenu). Wanneer ze op `true` zijn gezet, veranderen "
"ze alleen op het bureaublad in meer traditionele menu's."

#: content/docs/getting-started/kirigami/components-drawers/index.md:149
msgid "In this menu mode, headers and banners are not visible."
msgstr "In deze menumodus, zijn opschriften en banners niet zichtbaar."

#: content/docs/getting-started/kirigami/components-drawers/index.md:162
msgid "Kirigami Actions here..."
msgstr "Hier Kirigami-acties..."

#: content/docs/getting-started/kirigami/components-drawers/index.md:171
msgid "Global drawer in menu mode, without a header or banner"
msgstr "Globale schuiflade in modus menu, zonder een kop of banner"

#: content/docs/getting-started/kirigami/components-drawers/index.md:177
msgid "Context Drawers"
msgstr "Context van schuifladen"

#: content/docs/getting-started/kirigami/components-drawers/index.md:179
msgid ""
"While a [Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) displays global "
"actions available throughout your application, a [Kirigami.ContextDrawer]"
"(docs:kirigami2;ContextDrawer) should be used to display actions that are "
"only relevant in certain contexts. This is usually used in separate [pages](/"
"docs/getting-started/kirigami/introduction-pages)."
msgstr ""
"Terwijl een [Kirigami.GlobalDrawer](docs:kirigami2;GlobalDrawer) globale "
"acties toont beschikbaar in geheel uw toepassing, zou een [Kirigami."
"ContextDrawer](docs:kirigami2;ContextDrawer) gebruikt moeten worden om "
"acties te tonen die alleen relevant zijn in een bepaalde context. Dit wordt "
"gewoonlijk gebruikt in gescheiden [pagina's](/docs/getting-started/kirigami/"
"introduction-pages)."

#: content/docs/getting-started/kirigami/components-drawers/index.md:181
msgid ""
"A context drawer will only show up if any [contextualActions](docs:kirigami2;"
"Page::contextualActions) have been created as part of the [Page.actions "
"group](docs:kirigami2;Page::actions). It also behaves differently depending "
"on whether it is being used on a mobile platform or on a desktop."
msgstr ""
"Een contextschuiflade zal alleen verschijnen als een [contextualActions]"
"(docs:kirigami2;Page::contextualActions) is aangemaakt als onderdeel van de "
"[Page.actions groep](docs:kirigami2;Page::actions). Het gedraagt "
"verschillend afhankelijk van of het wordt gebruikt op een mobielplatform of "
"op een bureaublad."

#: content/docs/getting-started/kirigami/components-drawers/index.md:183
msgid ""
"On a desktop, when a window has enough space, contextual actions show up as "
"part of the `actions` group in the top toolbar. When space is limited, such "
"as on a mobile device or in a narrow window, contextual actions are hidden "
"behind a hamburger menu on the right side. This is different from other "
"actions in the `actions` group, namely `actions.main`, `actions.left` and "
"`actions.right`; these do not get hidden in space-constrained windows, and "
"are instead collapsed into their respective icons."
msgstr ""
"Op een bureaublad, wanneer een venster genoeg ruimte heeft, verschijnen "
"contextuele acties als deel van de groep `acties` in de werkbalk boven. "
"Wanneer ruimte beperkt is, zoals op een mobiel apparaat of in een nauw "
"venster, worden contextuele acties verborgen achter een hamburgermenu "
"rechts. Dit is anders uit andere acties in de groep `acties`, namelijk "
"`actions.main`, `actions.left` en `actions.right`; dezen worden niet "
"verborgen in vensters met beperkte ruimte en worden in plaats daarvan "
"ingevouwen in hun respectievelijke pictogrammen."

#: content/docs/getting-started/kirigami/components-drawers/index.md:189
msgid "Context drawer with contextual actions hidden"
msgstr "Contextschuiflade met contextuele verborgen acties"

#: content/docs/getting-started/kirigami/components-drawers/index.md:191
msgid "Context drawer showing all contextual actions"
msgstr "Contextschuiflade die contextuele acties toont"

#: content/docs/getting-started/kirigami/components-drawers/index.md:195
msgid ""
"On mobile, the drawer always consists of actions hidden behind a hamburger "
"menu. It can be activated by tapping the hamburger menu or by swiping from "
"the right edge to the middle of the screen in Left to Right mode or from the "
"left edge in Right to Left mode."
msgstr ""
"Op een mobiel bevat de schuiflade altijd acties verborgen achter een "
"hamburgermenu. Het kan geactiveerd worden door op het hamburgermenu te "
"tikken of door vegen van de rechter rand naar het midden van het scherm in "
"modus Links-naar-rechts of vanaf de linker rand in modus Rechts-naar-links."

#: content/docs/getting-started/kirigami/components-drawers/index.md:199
msgid "Same example above, running in mobile mode"
msgstr "Zelfde als bovenstaand voorbeeld, uitgevoerd in modus mobiel"

#: content/docs/getting-started/kirigami/components-drawers/index.md:201
msgid "Context drawer open in mobile mode"
msgstr "Contextschuiflade open in modus mobiel"

#: content/docs/getting-started/kirigami/components-drawers/index.md:205
msgid "Modal and Inline drawers"
msgstr "Modale en inline schuifladen"

#: content/docs/getting-started/kirigami/components-drawers/index.md:207
msgid ""
"Kirigami offers two additional types of drawers, modal drawers and inline "
"drawers. They are quite similar to each other: both span the entirety of the "
"application's width or height and can be placed on the edges of the app "
"window. However, they do react differently to user interaction."
msgstr ""
"Kirigami biedt twee extra typen schuifladen, modale schuifladen en inline "
"schuifladen. Ze tamelijk gelijk aan elkaar: beiden overspannen de gehele "
"breedte of hoogte van de toepassing en kunnen aan de randen van het "
"toepassingsvenster geplaatst worden. Ze reageren echter verschillend op "
"interactie met de gebruiker."

#: content/docs/getting-started/kirigami/components-drawers/index.md:209
msgid ""
"Modal drawers are hidden by default and darken the rest of the application, "
"being dismissed when clicking on a darkened area."
msgstr ""
"Modale schuifladen zijn standaard verborgen en verdonkeren de rest van de "
"toepassing en afgewezen door klikken op een verdonkerd gebied."

#: content/docs/getting-started/kirigami/components-drawers/index.md:210
msgid ""
"Inline drawers are shown by default and allow the user to still interact "
"with the rest of the application without being dismissed, and do not darken "
"other areas."
msgstr ""
"Inline schuifladen worden standaard getoond en bieden de gebruiker nog "
"steeds interactie te hebben met de rest van de toepassing zonder afgewezen "
"te worden en verdonkeren andere gebieden niet."

#: content/docs/getting-started/kirigami/components-drawers/index.md:212
msgid ""
"This kind of drawer is open ended and flexible, but generally, you may want "
"to use this kind of drawer when you want a small list of options to appear "
"on a long press or right click."
msgstr ""
"Dit soort schuifladen hebben een open eind en zijn flexibel, maar in het "
"algemeen zal u dit soort schuiflade willen gebruiken als u een kleine lijst "
"met keuzes wilt laten verschijnen nadat er langdurig geklikt of rechts "
"geklikt is."

#: content/docs/getting-started/kirigami/components-drawers/index.md:214
msgid ""
"These two drawers are so similar because they can, in fact, be implemented "
"using the same Kirigami component: [Kirigami.OverlayDrawer](docs:kirigami2;"
"OverlayDrawer). Here are a few important inherited properties of this "
"component to keep in mind:"
msgstr ""
"Deze twee schuifladen zijn zo gelijk omdat ze, in feite, met gebruik van "
"dezelfde Kirigami component: [Kirigami.OverlayDrawer](docs:kirigami2;"
"OverlayDrawer) zijn geïmporteerd. Hier zijn enkele belangrijke geërfde "
"eigenschappen van deze component om te onthouden:"

#: content/docs/getting-started/kirigami/components-drawers/index.md:216
msgid ""
"[Popup.modal](https://doc.qt.io/qt-6/qml-qtquick-controls2-popup.html#modal-"
"prop) controls whether the drawer will be modal or inline depending on a "
"boolean value."
msgstr ""
"[Popup.modal](https://doc.qt.io/qt-6/qml-qtquick-controls2-popup.html#modal-"
"prop) bestuurt of de schuiflade modaal of inline zal zijn afhankelijk van "
"een booleaanse waarde."

#: content/docs/getting-started/kirigami/components-drawers/index.md:217
msgid ""
"[Drawer.edge](https://doc.qt.io/qt-6/qml-qtquick-controls2-drawer.html#edge-"
"prop) controls which edge of the application window the drawer will appear "
"on; options for this property are part of the [Edge enum](docs:qtcore;Qt::"
"RightEdge), namely `Qt.TopEdge`, `Qt.RightEdge`, `Qt.BottomEdge`, and `Qt."
"LeftEdge`."
msgstr ""
"[Drawer.edge](https://doc.qt.io/qt-6/qml-qtquick-controls2-drawer.html#edge-"
"prop) bestuurt aan welke rand van het toepassingenvenster de schuiflade zal "
"verschijnen; opties voor deze eigenschap zijn onderdeel van de [Edge enum]"
"(docs:qtcore;Qt::RightEdge), met name `Qt.TopEdg`, `Qt.RightEdge`, `Qt."
"BottomEdge` en `Qt.LeftEdge`."

#: content/docs/getting-started/kirigami/components-drawers/index.md:218
msgid ""
"[Popup.contentItem](https://doc.qt.io/qt-6/qml-qtquick-controls2-popup."
"html#contentItem-prop) contains the component that will form the content of "
"your drawer."
msgstr ""
"[Popup.contentItem](https://doc.qt.io/qt-6/qml-qtquick-controls2-popup."
"html#contentItem-prop) bevat de component die de inhoud vormt van uw "
"schuiflade."

#: content/docs/getting-started/kirigami/components-drawers/index.md:241
msgid "Set modal to false to make this drawer inline!"
msgstr "Modal op false zetten om deze schuiflade inline te maken!"

#: content/docs/getting-started/kirigami/components-drawers/index.md:262
msgid "Modal drawer not visible"
msgstr "Modale schuiflade niet zichtbaar"

#: content/docs/getting-started/kirigami/components-drawers/index.md:264
msgid "Modal drawer at the bottom edge of the screen"
msgstr "Modale schuiflade aan de onderrand van het venster"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:0
msgid "Form layouts"
msgstr "Formulierindeling"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:0
msgid "Easily create attractive interaction areas with Kirigami FormLayouts"
msgstr ""
"Gemakkelijk aanmaken van attractieve gebieden voor interactie met Kirigami "
"formulierindelingen"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:10
msgid ""
"[Kirigami.FormLayout](docs:kirigami2;FormLayout) components make it easy for "
"you to create forms that conform to the [KDE Human Interface Guidelines]"
"(https://develop.kde.org/hig/). They are optimal for settings dialogs and "
"for large groups of controls and input fields that are related to each other."
msgstr ""
"De componenten [Kirigami.FormLayout](docs:kirigami2;FormLayout) maken het "
"gemakkelijk voor u om formulieren te maken die zich conformeren aan de [KDE "
"Human Interface Guidelines](https://develop.kde.org/hig/). Ze zijn optimaal "
"voor dialogen voor instellingen en voor grote groepen besturingselementen en "
"invoervelden die bij elkaar horen."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:12
msgid ""
"When provided with enough space, form layouts will take up two columns. The "
"column on the left will be occupied by the labels provided for the form's "
"children components, while the right will be taken up by the children "
"components themselves. In more space-constrained windows (or on mobile), "
"forms will consist of a single vertical column with the labels of children "
"components being placed above their respective component."
msgstr ""
"Als er voldoende ruimte is, krijgen formulierindelingen twee kolommen. De "
"linker kolom bevat de labels geleverd door de kindcomponenten van het "
"formulier, terwijl het rechter de kinderen van het formulier zelf bevatten. "
"Bij meer beperkte ruimte in het venster (of op een mobiel), zullen "
"formulieren bestaan uit een enkele verticale kolom met de labels van "
"kindcomponenten, die geplaatst worden boven hun respectievelijke component."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:14
msgid "Simple form"
msgstr "Eenvoudig formulier"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:16
msgid ""
"[Kirigami.FormLayout](docs:kirigami2;FormLayout) components are similar in "
"use to [QtQuick Layout](https://doc.qt.io/qt-6/qtquicklayouts-index.html) "
"components such as [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html) or [RowLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"rowlayout.html). The child components will be automatically arranged "
"according to the size available to the form layout."
msgstr ""
"[Kirigami.FormLayout](docs:kirigami2;FormLayout) componenten zijn in gebruik "
"gelijk aan de componenten [QtQuick Layout](https://doc.qt.io/qt-6/"
"qtquicklayouts-index.html) zoals [ColumnLayout](https://doc.qt.io/qt-6/qml-"
"qtquick-layouts-columnlayout.html) of [RowLayout](https://doc.qt.io/qt-6/qml-"
"qtquick-layouts-rowlayout.html). De kindcomponenten zullen automatisch "
"gearrangeerd worden volgens de grootte beschikbaar in de formulierindeling."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:18
msgid ""
"Children of a [Kirigami.FormLayout](docs:kirigami2;FormLayout) have a "
"property named [Kirigami.FormData.label](docs:kirigami2;FormLayoutAttached::"
"label). This property lets you set the label that will be provided for the "
"child component in question."
msgstr ""
"Kinderen van een [Kirigami.FormLayout](docs:kirigami2;FormLayout) hebben een "
"eigenschap genaamd [Kirigami.FormData.label](docs:kirigami2;"
"FormLayoutAttached::label). Deze eigenschap laat u het label instellen die "
"geleverd zal worden voor de betreffende kindcomponent."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:54
msgid "A simple form layout in desktop mode"
msgstr "Een eenvoudige indeling van een formulier in modus bureaublad"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:60
msgid "Sections and separators"
msgstr "Secties en scheidingstekens"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:62
msgid ""
"FormLayouts can also be divided into sections. Setting where a section "
"starts is as easy as setting a child component's [Kirigami.FormData."
"isSection](docs:kirigami2;FormLayoutAttached::isSection) to true. This will "
"provide the component with some extra margin at the top to demarcate the "
"start of the new section."
msgstr ""
"FormLayouts kunnen ook opgedeeld worden in secties. Instellen waar een "
"sectie begint is net zo gemakkelijk als instellen van een kindcomponent van "
"[Kirigami.FormData.isSection](docs:kirigami2;FormLayoutAttached::isSection) "
"op true. Dit zal de component leveren met enige extra marges bovenaan om het "
"begin van de nieuwe sectie aan te geven."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:64
msgid ""
"[Kirigami.Separator](docs:kirigami2;Separator) components are best suited "
"for starting new sections. Separators are used to draw a thin horizontal "
"line, demarcating the end of a section. If you would rather not have a line "
"drawn between sections, you can use a standard QML [Item](docs:qtquick;"
"QtQuick.Item) property. Alternatively you could use the [Kirigami.FormData."
"isSection](docs:kirigami2;FormLayoutAttached::isSection) property on any "
"other component."
msgstr ""
"[Kirigami.Separator](docs:kirigami2;Separator) componenten zijn het best "
"geschikt voor het beginnen van nieuwe secties. Scheidingen worden gebruikt "
"om een dunne horizontale lijn te tekenen, die het einde van een sectie "
"aangeeft. Als u liever geen lijn, getekend tussen secties, wilt hebben, dan "
"kunt u een standaard QML-eigenschap [Item](docs:qtquick;QtQuick.Item) "
"gebruiken. Alternatief zou u de eigenschap [Kirigami.FormData.isSection]"
"(docs:kirigami2;FormLayoutAttached::isSection) kunnen gebruiken op elke "
"andere component."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:66
msgid ""
"However, this is not recommended. On components where [Kirigami.FormData."
"isSection](docs:kirigami2;FormLayoutAttached::isSection) is set to `true`, "
"the label text provided for this component's [Kirigami.FormData.label](docs:"
"kirigami2;FormLayoutAttached::label) property will be displayed as the "
"section's header text."
msgstr ""
"Dit is echter niet aanbevolen. Op componenten waar [Kirigami.FormData."
"isSection](docs:kirigami2;FormLayoutAttached::isSection) is gezet op `true`, "
"zal het label tekst geleverd voor deze eigenschap [Kirigami.FormData.label]"
"(docs:kirigami2;FormLayoutAttached::label) getoond worden als de koptekst "
"van de sectie."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:68
#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:28
msgid "Warning"
msgstr "Waarschuwing"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:70
msgid ""
"This does not apply to every component, hence the recommendation that you "
"use [Kirigami.Separator](docs:kirigami2;Separator) or [Item](docs:qtquick;"
"QtQuick.Item) components in places where you would like to use a header text."
msgstr ""
"Dit is niet van toepassing op elke component, dus de aanbeveling dat u "
"componenten [Kirigami.Separator](docs:kirigami2;Separator) of [Item](docs:"
"qtquick;QtQuick.Item) gebruikt op plaatsen waar u liever een koptekst zou "
"gebruiken."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:74
msgid ""
"This header text is larger than the normal label text, and provides users "
"with a nice visual cue of what the form layout section is about."
msgstr ""
"Deze koptekst is groter dan de normale labeltekst en geeft aan de gebruikers "
"een nette visuele aanwijzing waar de sectie formulierindeling over gaat."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:130
msgid "A form layout with sections"
msgstr "Een formulierindeling met secties"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:137
msgid "Checkable children"
msgstr "Activeerbare kinderen"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:139
msgid ""
"A handy feature of [Kirigami.FormLayout](docs:kirigami2;FormLayout) is that "
"you can add checkboxes to its children. This can be useful in settings pages "
"where you might want to let the user enable or disable a setting, and also "
"want the user to provide some extra information in a component such as a "
"textfield."
msgstr ""
"Een handige functie van [Kirigami.FormLayout](docs:kirigami2;FormLayout) is "
"dat u keuzevakjes aan zijn kinderen kan toevoegen. Dit kan nuttig zijn op "
"instellingspagina's waar u de gebruiker een instelling wilt laten in- of "
"uitschakelen en ook de gebruiker enige extra informatie wilt leveren in een "
"component zoals een tekstveld."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:167
msgid "A form layout with checkable label."
msgstr "Een formulierindeling met te activeren label."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:173
msgid "Forcing a desktop or mobile layout"
msgstr "Een bureaublad- of mobielindeling afdwingen"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:175
msgid ""
"If you would rather have your form layout stay consistent regardless of your "
"application's environment, you can use the [wideMode](docs:kirigami2;"
"FormLayout::wideMode) property of the [Kirigami.FormLayout](docs:kirigami2;"
"FormLayout) component:"
msgstr ""
"Als u liever hebt dat uw formulierindeling consistent blijft onafhankelijk "
"van de omgeving van uw toepassing, dan kunt u de eigenschap [wideMode](docs:"
"kirigami2;FormLayout::wideMode) van de component [Kirigami.FormLayout](docs:"
"kirigami2;FormLayout) gebruiken."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:177
msgid ""
"When set to `true`, the form layout will be structured in a desktop-"
"optimized widescreen (double-column) layout"
msgstr ""
"Indien gezet op `true`, zal de formulierindeling gestructureerd zijn in een "
"voor het bureaublad geoptimaliseerd indeling breed scherm (dubbele kolommen)"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:178
msgid ""
"When set to `false`, the form layout will be structured in a mobile layout "
"(single column)"
msgstr ""
"Indien gezet op `false`, zal de formulierindeling gestructureerd zijn in een "
"indeling voor een mobiel (enkele kolom)"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:205
msgid "A form layout with forced mobile layout"
msgstr "Een formulierindeling met afdwongen indeling voor mobiel"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:211
msgid "Aligning your labels"
msgstr "Uw labels uitlijnen"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:213
msgid ""
"There are instances when you want a label to be assigned to components that "
"have more than one line or to a list of components. This can be achieved by "
"putting the [Kirigami.FormData.label](docs:kirigami2;FormLayoutAttached::"
"label) in the [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html), as you might have noticed in [Sections and Separators]"
"(#sections-and-separators). By default the label is positioned in the "
"vertical center of the layout, which is not always desirable. We can change "
"this with help of [Kirigami.FormData.labelAlignment](docs:kirigami2;"
"FormLayoutAttached::labelAlignment)."
msgstr ""
"Er zijn exemplaren wanneer u een label wilt toekennen aan componenten die "
"meer dan één regel hebben of aan een lijst componenten. Dit kan bereikt "
"worden door de [Kirigami.FormData.label](docs:kirigami2;FormLayoutAttached::"
"label) te stoppen in de [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-"
"layouts-columnlayout.html), zoals u zou kunnen hebben opgemerkt in [Secties "
"en scheidingstekens](#sections-and-separators). Standaard is de label "
"gepositioneerd in het verticale centrum van de indeling, wat niet altijd "
"wenselijk is. We kunnen dit met hulp van [Kirigami.FormData.labelAlignment]"
"(docs:kirigami2;FormLayoutAttached::labelAlignment) wijzigen."

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:239
msgid "A form layout with top-aligned label"
msgstr "Een formulierindeling met een label bovenaan uitgelijnd"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:245
msgid ""
"Setting the label alignment is particularly convenient to manage components "
"or lists of components whose size you do not know beforehand. [Elisa]"
"(https://apps.kde.org/elisa) is a very good example of this:"
msgstr ""
"De uitlijning van het label is speciaal handig om componenten te behandelen "
"of lijsten componenten waarvan u de grootte van tevoren niet weet. [Elisa]"
"(https://apps.kde.org/elisa) is hier een erg goed voorbeeld van:"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:247
msgid ""
"The Comment label is only top aligned when its corresponding component has "
"more than one line"
msgstr ""
"Het commentaarlabel is alleen bovenaan uitgelijnd wanneer zijn bijbehorende "
"component meer dan één regel heeft"

#: content/docs/getting-started/kirigami/components-formlayouts/index.md:249
msgid "We can do something similar to this with a JavaScript ternary operator:"
msgstr ""
"We kunnen hierbij iets soortgelijks doen met een JavaScript ternary-operator:"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:0
msgid "Inline messages"
msgstr "Inline berichten"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:0
msgid "Display messages related to the content in your application"
msgstr "Berichten gerelateerd aan de inhoud in uw toepassing"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:10
msgid ""
"Inline messages provide an immediate way for you to notify your users about "
"something that happened while using the application."
msgstr ""
"Inline berichten leveren een onmiddellijke manier voor u op om uw gebruikers "
"te informeren over iets wat gebeurde tijdens het gebruik van de toepassing."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:12
msgid "Basic inline message"
msgstr "Basis inline bericht"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:14
msgid ""
"[Kirigami.InlineMessage](docs:kirigami2;InlineMessage) components have two "
"important properties to be mindful of:"
msgstr ""
"[Kirigami.InlineMessage](docs:kirigami2;InlineMessage) componenten hebben "
"twee belangrijke eigenschappen om aan te denken:"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:15
msgid ""
"[visible](https://doc.qt.io/qt-6/qml-qtquick-item.html#visible-prop): by "
"default this is set to false, so that the message only appears when you "
"explicitly want it to. This can be overridden if you wish by setting it to "
"true. When a hidden inline message is set to be visible, you get a nice "
"animation."
msgstr ""
"[visible](https://doc.qt.io/qt-6/qml-qtquick-item.html#visible-prop): dit is "
"standaard gezet op false, zodat het bericht alleen verschijnt wanneer u het "
"expliciet wilt. Indien gewenst kan dit aangepast worden door het op true te "
"zetten. Wanneer een verborgen inline bericht op zichtbaar is gezet, krijgt u "
"een leuke animatie."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:16
msgid ""
"[text](docs:kirigami2;templates::InlineMessage::text): here is where you set "
"the text of your inline message."
msgstr ""
"[text](docs:kirigami2;templates::InlineMessage::text): hier is waar u de "
"tekst van uw inline bericht zet."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:49
msgid ""
"![A window showing a button which when clicked makes an inline message with "
"light blue background pop up with text above it, near the top of the "
"application](/docs/getting-started/kirigami/components-inlinemessages/"
"inlinemessages-simple.png)"
msgstr ""
"![Een venster die een knop toont die bij klikken een inline bericht laat "
"verschijnen met lichtblauwe achtergrond met tekst erboven, nabij de "
"bovenkant van de toepassing](/docs/getting-started/kirigami/components-"
"inlinemessages/inlinemessages-simple.png)"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:55
msgid "Different types"
msgstr "Verschillende typen"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:57
msgid ""
"Standard inline messages are like the ones above: they have a blue "
"background and a default icon. We can change that with the [type](docs:"
"kirigami2;templates::InlineMessage::type) property, which lets us set our "
"inline message to a different type. There are four types we can choose from:"
msgstr ""
"Standaard inline berichten zijn als die hierboven: ze hebben een blauwe "
"achtergrond en een standaard pictogram. We kunnen dat wijzigen met de "
"eigenschap [type](docs:kirigami2;templates::InlineMessage::type), die ons "
"ons inline bericht op een ander type laat zetten. Er zijn vier typen waar we "
"uit kunnen kiezen:"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:59
msgid ""
"**Information** (`Kirigami.MessageType.Information`): the default. Has a "
"blue background, an 'i' icon, and is used to announce a result or tell the "
"user something general. It is not necessary to manually set it."
msgstr ""
"**Informatie** (`Kirigami.MessageType.Information`): de standaard. Heeft een "
"blauwe achtergrond, een 'i' pictogram en wordt gebruikt om een resultaat te "
"melden of aan de gebruiker iets algemeens te vertellen. Het is niet nodig om "
"het handmatig te zetten."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:60
msgid ""
"**Positive** (`Kirigami.MessageType.Positive`): has a green background, tick "
"icon, and indicates that something went well."
msgstr ""
"**Positief** (`Kirigami.MessageType.Positive`): heeft een groene "
"achtergrond, pictogram met vinkje, en geeft aan dat iets goed ging."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:61
msgid ""
"**Warning** (`Kirigami.MessageType.Warning`): has an orange background, an "
"exclamation-mark icon, and can be used to warn the user about something they "
"should be mindful of."
msgstr ""
"**Waarschuwing** (`Kirigami.MessageType.Warning`): heeft een oranje "
"achtergrond, een pictogram met uitroepteken, en kan gebruikt worden om de "
"gebruiker te waarschuwen voor iets waar deze aan moet denken."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:62
msgid ""
"**Error** (`Kirigami.MessageType.Error`): has a red background, a cross "
"icon, and can be used to tell the user that something has gone wrong."
msgstr ""
"**Fout** (`Kirigami.MessageType.Error`): heeft een rode achtergrond, een "
"pictogram met een kruis, en kan gebruikt worden om de gebruiker te vertellen "
"dat er iets verkeerd ging."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:105
msgid ""
"![A window showcasing all four inline message types in blue, green, orange "
"and red](/docs/getting-started/kirigami/components-inlinemessages/"
"inlinemessages-types.png)"
msgstr ""
"![Een venster die alle vier inline typen melding in blauw, groen, oranje en "
"rood laat zien](/docs/getting-started/kirigami/components-inlinemessages/"
"inlinemessages-types.png)"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:111
msgid "Customising text and icons"
msgstr "Tekst en pictogrammen aanpassen"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:113
msgid ""
"Inline messages support rich text, which can be defined with simple HTML-"
"like markup. This allows you to add some formatting to your inline message's "
"text or even include an external web link if you want to."
msgstr ""
"Inline meldingen ondersteunen opgemaakte tekst, die gedefinieerd kan worden "
"met eenvoudige HTML-regelopmaak. Dit biedt u het toevoegen van enige "
"formattering aan uw inline berichttekst of zelfs invoegen van een externe "
"webkoppeling als u dat wilt."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:122
msgid "Note that when you use quotes in a string you will have to escape them!"
msgstr ""
"Merk op dat wanneer u aanhalingstekens in een tekenreeks wilt gebruiken u "
"escape moet gebruiken!"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:133
msgid ""
"![An inline message with rich text and a hyperlink](/docs/getting-started/"
"kirigami/components-inlinemessages/inlinemessages-richtext.png)"
msgstr ""
"![Een inline melding met opgemaakte tekst en een hyperlink](/docs/getting-"
"started/kirigami/components-inlinemessages/inlinemessages-richtext.png)"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:139
msgid ""
"You can also customise the icon that appears on the top left of your message "
"by providing a system icon name for the [icon.source](docs:kirigami2;"
"templates::InlineMessage::icon) property. These icon names should correspond "
"to icons installed on your system; you can use an application such as "
"Cuttlefish provided by [plasma-sdk](https://invent.kde.org/plasma/plasma-"
"sdk) to browse and search the icons available on your system, and see what "
"their names are."
msgstr ""
"U kunt ook het pictogram dat linksboven van uw melding verschijnt aanpassen "
"door een systeempictogram-naam te leveren voor de eigenschap [icon.source]"
"(docs:kirigami2;templates::InlineMessage::icon). Deze pictogramnamen zouden "
"overeen moeten komen met op uw systeem geïnstalleerde pictogrammen; u kunt "
"een toepassing zoals Cuttlefish, geleverd door [plasma-sdk](https://invent."
"kde.org/plasma/plasma-sdk), gebruiken om te bladeren en te zoeken naar de "
"beschikbare pictogrammen op uw systeem en zien wat hun namen zijn."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:158
msgid ""
"![An inline message with a custom icon](/docs/getting-started/kirigami/"
"components-inlinemessages/inlinemessages-icon.png)"
msgstr ""
"![Een inline melding met een eigen pictogram](/docs/getting-started/kirigami/"
"components-inlinemessages/inlinemessages-icon.png)"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:164
msgid "Using actions in inline messages"
msgstr "Acties in inline meldingen gebruiken"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:166
msgid ""
"If your messages need to be interactive, you can attach Kirigami actions to "
"your inline messages. Like with pages, you can do this by setting the "
"[InlineMessage.actions](docs:kirigami2;templates::InlineMessage::actions) "
"property to either a [Kirigami.Action](docs:kirigami2;Action) or an array "
"containing [Kirigami.Action](docs:kirigami2;Action) components."
msgstr ""
"Als uw meldingen interactief moeten zijn, kunt u Kirigami acties toevoegen "
"aan uw inline meldingen. Net als met pagina's kunt u dit doen door het "
"zetten van de eigenschap [InlineMessage.actions](docs:kirigami2;templates::"
"InlineMessage::actions) op ofwel een [Kirigami.Action](docs:kirigami2;"
"Action) of een array dat [Kirigami.Action](docs:kirigami2;Action) "
"componenten bevat."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:207
msgid ""
"![An inline message with two actions](/docs/getting-started/kirigami/"
"components-inlinemessages/inlinemessages-actions.png)"
msgstr ""
"![Een inline melding met twee acties](/docs/getting-started/kirigami/"
"components-inlinemessages/inlinemessages-actions.png)"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:213
msgid "Close buttons"
msgstr "Knoppen voor afsluiten"

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:215
msgid ""
"Inline messages provide a close button that can be used to easily dismiss "
"them."
msgstr ""
"Inline meldingen leveren een sluitknop die gebruikt kan worden om ze "
"gemakkelijk af te wijzen."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:217
msgid ""
"By default, this close button is hidden, but this can be overridden by "
"setting the [showCloseButton](docs:kirigami2;templates::InlineMessage::"
"showCloseButton) property to `true`."
msgstr ""
"Standaard is deze sluitknop verborgen, maar dit kan overschreven worden door "
"de eigenschap [showCloseButton](docs:kirigami2;templates::InlineMessage::"
"showCloseButton) op `true` te zetten."

#: content/docs/getting-started/kirigami/components-inlinemessages/index.md:236
msgid ""
"![An inline message with close button to its right side](/docs/getting-"
"started/kirigami/components-inlinemessages/inlinemessages-closebutton.png)"
msgstr ""
"![Een inline melding met sluitknop aan de rechterkant](/docs/getting-started/"
"kirigami/components-inlinemessages/inlinemessages-closebutton.png)"

#: content/docs/getting-started/kirigami/components-listview/index.md:0
msgid "List views"
msgstr "Lijstweergaven"

#: content/docs/getting-started/kirigami/components-listview/index.md:0
msgid "A list view can help you easily display many components dynamically.\n"
msgstr ""
"Een lijstweergave kan u helpen om gemakkelijk veel componenten dynamisch te "
"tonen.\n"

#: content/docs/getting-started/kirigami/components-listview/index.md:11
msgid ""
"[Listviews](docs:qtquick;QtQuick.ListView) can help you display objects from "
"a model in an attractive way. To use a list view, you have to keep track of "
"three things:"
msgstr ""
"[Listviews](docs:qtquick;QtQuick.ListView) kan u helpen om objecten uit een "
"model op een attractieve manier te tonen. Om een lijstweergave te gebruiken "
"moet u drie dingen volgen:"

#: content/docs/getting-started/kirigami/components-listview/index.md:13
msgid ""
"The **model**, which contains the data you want your list view to display"
msgstr ""
"Het **model**, dat de gegevens bevat die u in uw lijstweergave wilt tonen"

#: content/docs/getting-started/kirigami/components-listview/index.md:14
msgid ""
"The **delegate**, which defines how each element in the model will be "
"displayed"
msgstr ""
"De **delegate**, die definieert hoe elk element in het model getoond zal "
"worden"

#: content/docs/getting-started/kirigami/components-listview/index.md:15
msgid ""
"The **list view** itself, which will display information from the model "
"according to the delegate"
msgstr ""
"De **list view** zelf, die de informatie uit het model volgens de delegate "
"zal tonen"

#: content/docs/getting-started/kirigami/components-listview/index.md:17
msgid ""
"If you would like further clarification, the Qt documentation has [an "
"informative page](https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview."
"html) on the topic."
msgstr ""
"Als u verdere verheldering wilt, de Qt-documentatie heeft [een informatieve "
"pagina](https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview.html) over "
"het onderwerp."

#: content/docs/getting-started/kirigami/components-listview/index.md:19
msgid "Essentials of models and views"
msgstr "Essenties van modellen en weergaven"

#: content/docs/getting-started/kirigami/components-listview/index.md:21
msgid "A list view has two essential properties we must pay attention to:"
msgstr ""
"Een lijstweergave heeft twee essentiële eigenschappen waar we aandacht aan "
"moeten besteden:"

#: content/docs/getting-started/kirigami/components-listview/index.md:23
msgid ""
"[model](https://doc.qt.io/qt-6/qml-qtquick-listview.html#model-prop), which "
"accepts the data or the `id` of the object that holds the data"
msgstr ""
"[model](https://doc.qt.io/qt-6/qml-qtquick-listview.html#model-prop), die de "
"gegevens accepteert of de `id` van het object dat de gegevens bevat"

#: content/docs/getting-started/kirigami/components-listview/index.md:24
msgid ""
"[delegate](https://doc.qt.io/qt-6/qml-qtquick-listview.html#delegate-prop), "
"which accepts the component we will use to display the data in the model"
msgstr ""
"[delegate](https://doc.qt.io/qt-6/qml-qtquick-listview.html#delegate-prop), "
"die de component accepteert die we willen gebruiken om de gegevens in het "
"model te tonen"

#: content/docs/getting-started/kirigami/components-listview/index.md:26
msgid ""
"The model is not visible, as it only contains data. Typically the delegate "
"will be wrapped in a Component so that it is reusable: it serves as a "
"blueprint for how to instantiate each delegate."
msgstr ""
"Het model wordt niet getoond, omdat het alleen data bevat. Standaard wordt "
"de delegatie ingepakt in een component zodat het herbruikbaar is: het dient "
"als blauwdruk voor hoe een delegatie moet worden gecreëerd."

#: content/docs/getting-started/kirigami/components-listview/index.md:28
msgid ""
"Here is an example that contains exactly one list view, one model and one "
"delegate, using a [Kirigami.SubtitleDelegate](docs:kirigami2;"
"SubtitleDelegate):"
msgstr ""
"Hier is een voorbeeld met precies een weergeven lijst, een model en een "
"delegatie, dat een [Kirigami.SubtitleDelegate](docs:kirigami2;"
"SubtitleDelegate) gebruikt:"

#: content/docs/getting-started/kirigami/components-listview/index.md:62
msgid "And the exact same example, inline:"
msgstr "En precies hetzelfde voorbeeld, inline:"

#: content/docs/getting-started/kirigami/components-listview/index.md:92
msgid "Understanding models"
msgstr "Modellen begrijpen"

#: content/docs/getting-started/kirigami/components-listview/index.md:94
msgid ""
"The model contains the data that will be used to populate the list view. "
"Different ways to use models have different ways to access the data:"
msgstr ""
"In het model is de data dat wordt gebruikt om dat zal worden gebruikt om de "
"getoonde lijst te bevolken. De verschillende manieren om de modellen te "
"gebruiken hebben verschillende manieren om toegang te krijgen tot de data:"

#: content/docs/getting-started/kirigami/components-listview/index.md:96
msgid "WAY TO USE"
msgstr "HOE TE GEBRUIKEN"

#: content/docs/getting-started/kirigami/components-listview/index.md:96
msgid "HOW TO ACCESS"
msgstr "HOE TOEGANG TE KRIJGEN"

#: content/docs/getting-started/kirigami/components-listview/index.md:96
msgid "WHEN TO USE"
msgstr "WANNEER TE GEBRUIKEN"

#: content/docs/getting-started/kirigami/components-listview/index.md:98
msgid "Qt models with more than one role"
msgstr "Qt modellen met meer dan een rol"

#: content/docs/getting-started/kirigami/components-listview/index.md:98
msgid "model.index, model.somerole"
msgstr "model.index, model.somerole"

#: content/docs/getting-started/kirigami/components-listview/index.md:98
msgid "In most cases"
msgstr "Voor de meeste gevallen"

#: content/docs/getting-started/kirigami/components-listview/index.md:99
msgid "Qt models with one role"
msgstr "Qt modellen met een rol"

#: content/docs/getting-started/kirigami/components-listview/index.md:99
msgid "model.index, model.somerole, model.modelData"
msgstr "model.index, model.somerole, model.modelData"

#: content/docs/getting-started/kirigami/components-listview/index.md:99
msgid "In most cases, for prototyping"
msgstr "In de meeste gevallen, voor prototyping"

#: content/docs/getting-started/kirigami/components-listview/index.md:100
msgid "JavaScript array model"
msgstr "JavaScript array model"

#: content/docs/getting-started/kirigami/components-listview/index.md:100
#: content/docs/getting-started/kirigami/components-listview/index.md:101
msgid "model.index, model.modelData"
msgstr "model.index, model.modelData"

#: content/docs/getting-started/kirigami/components-listview/index.md:100
#: content/docs/getting-started/kirigami/components-listview/index.md:101
msgid "For prototyping"
msgstr "Voor prototyping"

#: content/docs/getting-started/kirigami/components-listview/index.md:101
msgid "Integer model"
msgstr "Integer model"

#: content/docs/getting-started/kirigami/components-listview/index.md:103
msgid ""
"You can read about [other ways to use models in the Qt documentation]"
"(https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview.html)."
msgstr ""
"U kunt lezen over [andere manieren om modellen te gebruiken in de Qt "
"documentatie](https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview.html)."

#: content/docs/getting-started/kirigami/components-listview/index.md:105
msgid ""
"In the table above, \"Qt models\" refers to both C++-specific models like "
"[QAbstractListModel](https://doc.qt.io/qt-6/qabstractlistmodel.html) and QML-"
"specific models like ListModel. This tutorial page will only focus on QML-"
"specific models. Farther ahead we provide a tutorial for [Connecting C++ "
"models to QML using QAbstractListModel](/docs/getting-started/kirigami/"
"advanced-connect_models)."
msgstr ""
"In de tabel hierboven,verwijst \"Qt modellen\" naar zowel C++-specifieke "
"modellen zoals [QAbstractListModel](https://doc.qt.io/qt-6/"
"qabstractlistmodel.html) als naar QML-specifieke modellen zoals ListModel. "
"Deze pagina zal zich alleen focussen op QML-specifieke modellen. Verderop "
"geven we een instructie voor het [verbinden van C++ modellen met QML met "
"gebruik van QAbstractListModel](/docs/getting-started/kirigami/advanced-"
"connect_models)."

#: content/docs/getting-started/kirigami/components-listview/index.md:107
msgid ""
"The `model.index` property is made available to every model and contains the "
"index (the position) of each delegate. It can be shortened to `index` for "
"convenience."
msgstr ""
"De `model.index`-eigenschap is bij elk model beschikbaar en heeft de index "
"index (de positie) van elk delegate. Voor de handigheid kan het worden "
"afgekort naar `index`."

#: content/docs/getting-started/kirigami/components-listview/index.md:109
msgid ""
"The `model.somerole` property mentioned above is just a placeholder, it is "
"not a specific property that comes from QML: `somerole` can be any role that "
"is defined by the model. In the first code example of this page shown above "
"the table, the `plasmaProductsModel` model has the `product` and `target` "
"roles, which can be accessed with `model.product` and `model.target`, "
"respectively."
msgstr ""
"De eigenschap `model.somerole` hierboven genoemd is alleen maar een "
"plaatshouder, het is niet een specifieke eigenschap die uit QML komt : "
"`somerole` kan elke rol zijn die door het model wordt gedefinieerd. In het "
"eerste code voorbeeld op deze pagina toont de tabel hierboven, het model "
"`plasmaProductsModel` heeft de `product` en `target` rollen, waar toe met "
"respectievelijk `model.product` en `model.target` toegang gekregen kan "
"worden."

#: content/docs/getting-started/kirigami/components-listview/index.md:111
msgid ""
"Just as `model.index` can be shortened to `index`, each `model.somerole` "
"property can be shorted to just `somerole` (like `product`) for convenience, "
"but it is recommended that they be turned into required properties:"
msgstr ""
"Net zoals `model.index` afgekort kan worden tot `index`, kan voor de "
"handigheid ook elk de `model.somerole`-eigenschap afgekort worden tot alleen "
"maar `somerole` (zoals `product`), maar het wordt aanbevolen dat ze naar de "
"betreffende eigenschappen worden omgezet:"

#: content/docs/getting-started/kirigami/components-listview/index.md:148
msgid ""
"Additionally, if the model contains only one role or has no role at all, its "
"data can also be accessed with the property `model.modelData`, which can "
"also be shortened to `modelData` (and as such would also need to be a "
"required property):"
msgstr ""
"Daarnaast, als het model alleen maar een rol heeft of helemaal geen rol "
"heeft, dan kan men er ook toegang toe krijgen met de eigenschap `model."
"modelData`, wat ook afgekort kan worden tot `modelData` (en als zodanig een "
"vereiste eigenschap moet zijn):"

#: content/docs/getting-started/kirigami/components-listview/index.md:179
msgid "This matches model.software"
msgstr "Dit komt overeen met model.software"

#: content/docs/getting-started/kirigami/components-listview/index.md:186
msgid ""
"For comparison, here is how the above code would look like with a "
"[JavaScript array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/"
"Reference/Global_Objects/Array), with no role:"
msgstr ""
"Voor vergelijking, is hier hoe de code van boven er uit zou zien met een "
"[JavaScript array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/"
"Reference/Global_Objects/Array), zonder een rol:"

#: content/docs/getting-started/kirigami/components-listview/index.md:215
msgid ""
"Using an integer for the model can be useful for very specific cases, namely "
"prototyping and tests:"
msgstr ""
"Het gebruik van een integer voor de rol kan in zeer specifieke gevallen "
"bruikbaar zijn, namelijk prototyping en tests:"

#: content/docs/getting-started/kirigami/components-listview/index.md:244
msgid "Understanding views and delegates"
msgstr "Weergaven en delegaties begrijpen"

#: content/docs/getting-started/kirigami/components-listview/index.md:246
msgid "Let's go back to the original example:"
msgstr "Laten we terug gaan naar het oorspronkelijke voorbeeld:"

#: content/docs/getting-started/kirigami/components-listview/index.md:259
#: content/docs/getting-started/kirigami/components-listview/index.md:391
msgid "anchors.fill: parent"
msgstr "anchors.fill: parent"

#: content/docs/getting-started/kirigami/components-listview/index.md:280
msgid ""
"Unlike the model (which merely contains data) and a delegate [Component]"
"(docs:qtqml;QtQml.Component) (which only appears when instantiated), the "
"view is a visual component immediately instantiated and so it needs to "
"either have its dimensions set or use anchors or Layouts."
msgstr ""
"In tegenstelling tot het model (wat alleen maar data bevat) en een delegatie "
"[Component](docs:qtqml;QtQml.Component) (wat alleen verschijnt als het "
"gecreëerd wordt), is de weergave een visueel component dat onmiddellijk "
"wordt gecreëerd en er moet daarom daarvan zijn afmetingen ingesteld zijn of "
"er moeten anchors gebruikt worden of er moeten Layouts (vensterindelingen) "
"gebruikt worden ."

#: content/docs/getting-started/kirigami/components-listview/index.md:282
msgid ""
"As views are commonly lists of content the user would want to scroll "
"through, when they are added to a [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage), views become the main content with little padding around "
"them, and there is no need to make it fill the page. When the view is added "
"to a simple [Kirigami.Page](docs:kirigami2;Page), it will require to set its "
"dimensions properly before it will show up. In other words: in the "
"scrollable page above, `anchors.fill: parent` is not required; if a simple "
"page was used, it would be required."
msgstr ""
"Omdat weergaven meestal lijsten met inhoud zijn waar de gebruiker doorheen "
"wil scrollen, als ze aan een [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) zijn toegevoegd, dan vormen de weergaven de hoofdinhoud met "
"weinig ruimte daaromheen, en het is daarom niet noodzakelijk dat het de hele "
"pagina vult. Als de weergave wordt toegevoegd aan een eenvoudige [Kirigami."
"Page](docs:kirigami2;Page), dan is het noodzakelijk dat de afmetingen "
"daarvan correct zijn ingesteld voordat het getoond wordt. Met andere "
"woorden: in de scrollable pagina hierboven, is `anchors.fill: parent` niet "
"nodig; maar als een eenvoudige pagina wordt gebruikt dan is het wel vereist."

#: content/docs/getting-started/kirigami/components-listview/index.md:284
msgid ""
"There are multiple views APIs can be used, some from Qt and some from "
"Kirigami. Here are the most commonly used ones:"
msgstr ""
"Er zijn meerdere weergave-API's die kunnen worden gebruikt, enkele van Qt en "
"enkele van Kirigami. Hier zijn de meest voorkomende:"

#: content/docs/getting-started/kirigami/components-listview/index.md:286
msgid "Qt's [ListView](docs:qtquick;QtQuick.ListView)"
msgstr "Qt's [ListView](docs:qtquick;QtQuick.ListView)"

#: content/docs/getting-started/kirigami/components-listview/index.md:287
msgid "Qt's [GridView](docs:qtquick;QtQuick.GridView)"
msgstr "Qt's [GridView](docs:qtquick;QtQuick.GridView)"

#: content/docs/getting-started/kirigami/components-listview/index.md:288
msgid "Qt's [TableView](docs:qtquick;QtQuick.TableView)"
msgstr "Qt's [TableView](docs:qtquick;QtQuick.TableView)"

#: content/docs/getting-started/kirigami/components-listview/index.md:289
msgid "Qt's [TreeView](docs:qtquick;QtQuick.TreeView)"
msgstr "Qt's [TreeView](docs:qtquick;QtQuick.TreeView)"

#: content/docs/getting-started/kirigami/components-listview/index.md:290
msgid "Kirigami's [CardsListView](docs:kirigami2;CardsListView)"
msgstr "Kirigami's [CardsListView](docs:kirigami2;CardsListView)"

#: content/docs/getting-started/kirigami/components-listview/index.md:291
msgid "Kirigami's [ColumnView](docs:kirigami2;ColumnView)"
msgstr "Kirigami's [ColumnView](docs:kirigami2;ColumnView)"

#: content/docs/getting-started/kirigami/components-listview/index.md:293
msgid ""
"The delegate on the other hand always need to have its dimensions set. "
"Generally its dimensions are set to use only the full width of the view."
msgstr ""
"Daarentegen moet bij een delegatie altijd de afmetingen opgegeven worden. "
"Meestal worden de afmetingen daarvan zodanig ingesteld dat het alleen de "
"volledige breedte van het venster gebruikt."

#: content/docs/getting-started/kirigami/components-listview/index.md:295
msgid "Common mistakes"
msgstr "Vaak gemaakte fouten"

#: content/docs/getting-started/kirigami/components-listview/index.md:297
msgid ""
"The above means that delegates should not have bottom anchors, since the "
"delegate doesn't need to have the same height as the view. In other words, "
"you will probably never want to use `anchors.fill: parent`."
msgstr ""
"Bovengenoemde houdt in dat gedelegeerden geen ankers onderaan zouden moeten "
"hebben, omdat de gedelegeerde niet dezelfde hoogte hoeft te hebben als het "
"venster. Met andere woorden, u zal waarschijnlijk nooit `anchors.fill: "
"parent` willen gebruiken."

#: content/docs/getting-started/kirigami/components-listview/index.md:299
msgid ""
"Additionally, while it is possible to set its dimensions using the parent "
"and anchors, which is usually the view's contentItem, like so:"
msgstr ""
"Daarbij, ofschoon het mogelijk is om de afmetingen daarvan in te stellen "
"door gebruik van de parent en ankers, wat is meestal de contentItem van de "
"weergave, zoals op deze manier:"

#: content/docs/getting-started/kirigami/components-listview/index.md:309
msgid ""
"It is not guaranteed that the delegate's parent will be a view, and so it "
"should be avoided. Instead, use the [ListView.view](https://doc.qt.io/qt-6/"
"qml-qtquick-listview.html#view-attached-prop) attached property to point to "
"the delegate's parent view:"
msgstr ""
"Er is geen garantie dat de parent van de gedelegeerde een weergave heeft en "
"moet daarom vermeden worden. Gebruik in plaats daarvan [ListView.view]"
"(https://doc.qt.io/qt-6/qml-qtquick-listview.html#view-attached-prop) "
"verbonden eigenschap dat verwijst naar de weergave van de parent van de "
"gedelegeerde:"

#: content/docs/getting-started/kirigami/components-listview/index.md:320
msgid ""
"The most common use of a delegate is within a [Component](docs:qtqml;QtQml."
"Component), which does not instantiate the delegate immediately. When a view "
"is constructed, the delegate is then used as a blueprint to make each item "
"in the view."
msgstr ""
"Een gedelegeerde word het meest gebruikt in een [Component](docs:qtqml;QtQml."
"Component), die de gedelegeerde niet onmiddellijk word gecreëerd. Als een "
"weergave word geconstrueerd, dan word de gedelegeerden gebruikt als een "
"blauwdruk voor elk item in de weergave."

#: content/docs/getting-started/kirigami/components-listview/index.md:322
msgid ""
"While you can make your own custom components to be used as delegates "
"without delegate-specific Qt APIs (for example, a Layout containing a few "
"Items), QtQuick Controls does provide delegate APIs that are simpler to use:"
msgstr ""
"Ofschoon aangepaste componenten gemaakt kunnen worden die als gedelegeerden "
"zonder gedelegeerde-specifieke Qt APIs (bijvoorbeeld een Layout met alleen "
"een paar items) gebruikt kunnen worden, heeft QtQuick Controls gedelegeerde "
"(delegate)-API's die eenvoudig te gebruiken zijn:"

#: content/docs/getting-started/kirigami/components-listview/index.md:324
msgid ""
"[ItemDelegate](docs:qtquickcontrols;QtQuick.Controls.ItemDelegate) "
"(delegates with only text)"
msgstr ""
"[ItemDelegate](docs:qtquickcontrols;QtQuick.Controls.ItemDelegate) "
"(delegeert met alleen tekst)"

#: content/docs/getting-started/kirigami/components-listview/index.md:325
msgid ""
"[CheckDelegate](docs:qtquickcontrols;QtQuick.Controls.CheckDelegate) "
"(delegates with a checkbox)"
msgstr ""
"[CheckDelegate](docs:qtquickcontrols;QtQuick.Controls.CheckDelegate) "
"((delegeert met een keuzevakje)"

#: content/docs/getting-started/kirigami/components-listview/index.md:326
msgid ""
"[RadioDelegate](docs:qtquickcontrols;QtQuick.Controls.RadioDelegate) "
"(delegates with a radio)"
msgstr ""
"[RadioDelegate](docs:qtquickcontrols;QtQuick.Controls.RadioDelegate) "
"(delegeert met een keuzerondje)"

#: content/docs/getting-started/kirigami/components-listview/index.md:327
msgid ""
"[SwitchDelegate](docs:qtquickcontrols;QtQuick.Controls.SwitchDelegate) "
"(delegates with a switch)"
msgstr ""
"[SwitchDelegate](docs:qtquickcontrols;QtQuick.Controls.SwitchDelegate) "
"(delegeert met een schakelaar)"

#: content/docs/getting-started/kirigami/components-listview/index.md:328
msgid ""
"[SwipeDelegate](docs:qtquickcontrols;QtQuick.Controls.SwipeDelegate) "
"(delegates that can be swiped)"
msgstr ""
"[SwipeDelegate](docs:qtquickcontrols;QtQuick.Controls.SwipeDelegate) "
"(gedelegeerde dat weggeveegd kan worden)"

#: content/docs/getting-started/kirigami/components-listview/index.md:330
msgid "You should prefer using the upstream Qt delegates where possible."
msgstr ""
"Het is raadzaam om waar mogelijk de upstream Qt gedelegeerden te gebruiken."

#: content/docs/getting-started/kirigami/components-listview/index.md:332
msgid ""
"On top of these Qt delegates, Kirigami provides its own equivalents, with "
"the added functionality of subtitles and icons:"
msgstr ""
"Bovenop deze Qt gedelegeerden heeft Kirigami zijn eigen equivalenten, met de "
"extra functionaliteit van subtitel en pictogrammen:"

#: content/docs/getting-started/kirigami/components-listview/index.md:334
msgid "[TitleSubtitle](docs:kirigami2;TitleSubtitle)"
msgstr "[TitleSubtitle](docs:kirigami2;TitleSubtitle)"

#: content/docs/getting-started/kirigami/components-listview/index.md:335
msgid "[IconTitleSubtitle](docs:kirigami2;IconTitleSubtitle)"
msgstr "[IconTitleSubtitle](docs:kirigami2;IconTitleSubtitle)"

#: content/docs/getting-started/kirigami/components-listview/index.md:336
msgid "[SubtitleDelegate](docs:kirigami2;SubtitleDelegate)"
msgstr "[SubtitleDelegate](docs:kirigami2;SubtitleDelegate)"

#: content/docs/getting-started/kirigami/components-listview/index.md:337
msgid "[CheckSubtitleDelegate](docs:kirigami2;CheckSubtitleDelegate)"
msgstr "[CheckSubtitleDelegate](docs:kirigami2;CheckSubtitleDelegate)"

#: content/docs/getting-started/kirigami/components-listview/index.md:338
msgid "[RadioSubtitleDelegate](docs:kirigami2;RadioSubtitleDelegate)"
msgstr "[RadioSubtitleDelegate](docs:kirigami2;RadioSubtitleDelegate)"

#: content/docs/getting-started/kirigami/components-listview/index.md:339
msgid "[SwitchSubtitleDelegate](docs:kirigami2;SwitchSubtitleDelegate)"
msgstr "[SwitchSubtitleDelegate](docs:kirigami2;SwitchSubtitleDelegate)"

#: content/docs/getting-started/kirigami/components-listview/index.md:341
msgid ""
"The API ending with \"Delegate\" can be set as a direct delegate of the "
"view, just like the previous examples that used Controls.ItemDelegate:"
msgstr ""
"De API die eindigt met \"Delegate\" kan ingesteld worden als een direct "
"gedelegeerde van de weergave, net zoals in de vorige voorbeelden die "
"Controls.ItemDelegate gebruiken:"

#: content/docs/getting-started/kirigami/components-listview/index.md:377
msgid ""
"Both TitleSubtitle and IconTitleSubtitle are expected to be used to override "
"a Qt delegate's contentItem, for example:"
msgstr ""
"Er wordt verwacht dat zowel TitleSubtitle als IconTitleSubtitle worden "
"gebruikt om een Qt delegate's contentItem te overschrijven, als voorbeeld:"

#: content/docs/getting-started/kirigami/components-listview/index.md:417
msgid ""
"A practical example of using Kirigami delegates can be seen in the "
"[ListItemTest file in the Kirigami Repository](https://invent.kde.org/"
"frameworks/kirigami/-/blob/master/tests/ListItemTest.qml)."
msgstr ""
"Een praktisch voorbeeld van het gebruik van Kirigami gedelegeerden is te "
"vinden in het [ListItemTest-bestand in de Kirigami Repository](https://"
"invent.kde.org/frameworks/kirigami/-/blob/master/tests/ListItemTest.qml)."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:0
msgid "Page rows and page stacks"
msgstr "Paginarijen en paginastapels"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:0
msgid ""
"Add flow to your application: Add, remove and replace pages in different ways"
msgstr ""
"Iets vloeiendst aan uw toepassing toevoegen: pagina's op verschillende "
"manieren toevoegen, verwijderen en vervangen"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:10
msgid "A row of pages"
msgstr "Een rij pagina's"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:12
msgid ""
"We have seen so far that one of the core components of a Kirigami window is "
"a [Kirigami.Page](docs:kirigami2;Page). A single page can envelop the whole "
"screen of the application, or it can be shown together with other pages at "
"the same time, if there is space."
msgstr ""
"We hebben tot nu gezien dat een van de kerncomponenten van een Kirigami-"
"venster een [Kirigami.Page](docs:kirigami2;Page) is. Een enkele pagina kan "
"het gehele scherm van de toepassing omgeven of het kan tegelijk getoond "
"worden samen met andere pagina's, als er ruimte is."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:14
msgid ""
"Whenever a page gets added, or *pushed*, it appears to the right of the "
"existing page(s), forming a row. This row of pages can be managed with the "
"fittingly named [Kirigami.PageRow](docs:kirigami2;PageRow)."
msgstr ""
"Wanneer er een pagina wordt toegevoegd of *pushed*, verschijnt het rechts "
"van de bestaande pagina(s) en vormt een rij. Deze rij pagina's kan beheerd "
"worden met de passing genaamd [Kirigami.PageRow](docs:kirigami2;PageRow)."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:16
msgid "A minimal page row with a single page could look like this:"
msgstr ""
"Een minimale paginarij met een enkele pagina zou er uit kunnen zien als:"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:42
msgid "A single page with light blue color to show the page's dimensions"
msgstr ""
"Een enkele pagina met lichtblauwe kleur om afmetingen van de pagina te tonen"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:44
msgid ""
"There are two improvements that can be done here. The first is that, with "
"[initialPage](docs:kirigami2;PageRow::initialPage), we can both set "
"`mainPage` to be the first page that appears in the page row, and have its "
"dimensions be managed by the page row instead of via manual [anchors]"
"(https://doc.qt.io/qt-6/qtquick-positioning-anchors.html), [positioners]"
"(https://doc.qt.io/qt-6/qtquick-positioning-layouts.html) or [layouts]"
"(https://doc.qt.io/qt-6/layout.html). The second is to have a toolbar, which "
"can be set by defining a toolbar style with [globalToolBar.style](docs:"
"kirigami2;PageRow::globalToolBar). There are a few styles we can choose "
"from, but we'll go with [Kirigami.ApplicationHeaderStyle.Auto](docs:"
"kirigami2;templates::ApplicationHeader::headerStyle) for now."
msgstr ""
"Er zijn twee verbeteringen die hier gedaan kunnen worden. De eerste is dat, "
"met [initialPage](docs:kirigami2;PageRow::initialPage), we zowel `mainPage` "
"als de eerste pagina kunnen instellen, die verschijnt in de paginarij, en "
"zijn afmetingen te laten beheren door de paginarij in plaats van via "
"handmatige [ankers](https://doc.qt.io/qt-6/qtquick-positioning-anchors."
"html), [positioneerders](https://doc.qt.io/qt-6/qtquick-positioning-layouts."
"html) of [indelingen](https://doc.qt.io/qt-6/layout.html). De tweede is het "
"hebben van een werkbalk, die ingesteld kan worden door een werkbalkstijl te "
"definiëren met [globalToolBar.style](docs:kirigami2;PageRow::globalToolBar). "
"Er zijn een paar stijlen waar we uit kunnen kiezen, maar we gaan voor nu met "
"[Kirigami.ApplicationHeaderStyle.Auto](docs:kirigami2;templates::"
"ApplicationHeader::headerStyle)."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:67
msgid ""
"A single page with toolbar and light blue color to show the page's dimensions"
msgstr ""
"Een enkele pagina met werkbalk en lichtblauwe kleur om afmetingen van de "
"pagina te tonen"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:69
msgid ""
"There are only two ways of adding pages to a page row: by setting its "
"[initialPage](docs:kirigami2;PageRow::initialPage) (which can optionally "
"take an array of pages) or by using [push()](docs:kirigami2;PageRow::push). "
"To delete a page from the page row, you should use [pop()](docs:kirigami2;"
"PageRow::pop), whereas [goBack()](docs:kirigami2;PageRow::goBack) or "
"[goForward()](docs:kirigami2;PageRow::goForward) can be used to navigate "
"between pages."
msgstr ""
"Er zijn slechts twee manieren voor toevoegen van pagina's aan een paginarij: "
"door zijn [initialPage](docs:kirigami2;PageRow::initialPage) in te stellen "
"(die optioneel een array van pagina's kan nemen) of door [push()](docs:"
"kirigami2;PageRow::push) te gebruiken. Om een pagina te verwijderen uit de "
"paginarij zou u [pop()](docs:kirigami2;PageRow::pop) kunnen gebruiken, "
"terwijl [goBack()](docs:kirigami2;PageRow::goBack) of [goForward()](docs:"
"kirigami2;PageRow::goForward) gebruikt kan worden om tussen pagina's te "
"navigeren."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:115
msgid "Initial page with light blue color"
msgstr "Initiële pagina met lichtblauwe kleur"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:117
msgid ""
"Upon clicking \\\"Push!\\\", a second page with light green color shows up"
msgstr ""
"Bij klikken op \\\"Druk!\\\" zal een tweede pagina verschijnen met een "
"lichtgroene kleur"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:119
msgid "The application's stack of pages"
msgstr "De stapel pagina's van de toepassing"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:121
msgid ""
"If a [Kirigami.PageRow](docs:kirigami2;PageRow) with a toolbar looks "
"familiar to you, that is because you have seen it before. An "
"[ApplicationWindow.pageStack](docs:kirigami2;AbstractApplicationWindow::"
"pageStack) is nothing more than a very convenient, global page row. Every "
"function available to a `PageRow` is also available to the `pageStack`."
msgstr ""
"Als een [Kirigami.PageRow](docs:kirigami2;PageRow) met een werkbalk u bekent "
"voor komt, dan is dat omdat u het eerder hebt gezien. Een [ApplicationWindow."
"pageStack](docs:kirigami2;AbstractApplicationWindow::pageStack) is niets "
"meer dan een erg handig, globale paginarij. Elke functie beschikbaar in een "
"`PageRow` is ook beschikbaar in de `pageStack`."

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:123
msgid ""
"The previous example can be reduced significantly with a `pageStack`, with "
"the added bonus of navigation actions:"
msgstr ""
"Het vorige voorbeeld kan aanzienlijk gereduceerd worden met een `pageStack`, "
"met de toegevoegde bonus met navigatie-acties:"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:171
msgid ""
"In general you'll want to use a `pageStack` rather than implement your own "
"[PageRow](docs:kirigami2;PageRow), especially when your application gets "
"bigger and you need your components living in separate files. If you create "
"your window in your `Main.qml` using a [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow), a component residing in another file can still "
"directly invoke the global `pageStack` by means of a call to the "
"[applicationWindow()](docs:kirigami2;AbstractApplicationWindow::"
"applicationWindow):"
msgstr ""
"In het algemeen zult u een `pageStack` willen gebruiken in plaats van uw "
"eigen [PageRow](docs:kirigami2;PageRow) te implementeren, speciaal wanneer "
"uw toepassing groter wordt en u hebt het nodig om uw componenten aanwezig te "
"hebben in aparte bestanden. Als u uw venster in uw `Main.qml` aanmaakt met "
"een [Kirigami.ApplicationWindow](docs:kirigami2;ApplicationWindow), kan een "
"component, die zich in een ander bestand bevindt, nog steeds direct "
"aangeroepen worden in de globale `pageStack` door middel van een oproep naar "
"het [applicationWindow()](docs:kirigami2;AbstractApplicationWindow::"
"applicationWindow):"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:174
msgid "\"Main.qml\""
msgstr "\"Main.qml\""

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:185
msgid "and"
msgstr "en"

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:188
msgid "\"BasicPage.qml\""
msgstr "\"BasicPage.qml\""

#: content/docs/getting-started/kirigami/components-pagerow_pagestack/index.md:214
msgid "Clicking the button pushes a new page with help of applicationWindow"
msgstr ""
"Op de knop klikken brengt een nieuwe pagina met behulp van applicationWindow"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:0
msgid "Progress bars and indicators"
msgstr "Voortgangsbalken en indicatoren"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:0
msgid "Provide your users with loading state information using progress bars."
msgstr ""
"Bied uw gebruikers de informatie over de ladingstatus met voortgangsbalken."

#: content/docs/getting-started/kirigami/components-progressbars/index.md:10
msgid ""
"Whenever your application does something that takes a noticeable amount of "
"time, you will want to use a visual element that tells the user that "
"something is happening in the background."
msgstr ""
"Wanneer uw toepassing iets doet dat een merkbare hoeveelheid tijd kost, wilt "
"u een visueel element gebruiken dat de gebruiker vertelt dat er iets in de "
"achtergrond gebeurt."

#: content/docs/getting-started/kirigami/components-progressbars/index.md:12
msgid ""
"QtQuick Controls provides two useful components that you can use to this end."
msgstr ""
"QtQuick Controls biedt twee nuttige componenten die u hiervoor kunt "
"gebruiken."

#: content/docs/getting-started/kirigami/components-progressbars/index.md:14
msgid "Progress bar"
msgstr "Voortgangsbalk"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:16
msgid ""
"[Controls.ProgressBar](docs:qtquickcontrols;QtQuick.Controls.ProgressBar) is "
"a component that lets you easily include progress bars in your application. "
"There are four main properties you will need to use:"
msgstr ""
"[Controls.ProgressBar](docs:qtquickcontrols;QtQuick.Controls.ProgressBar) is "
"een component die u gemakkelijk voortgangsbalken in uw toepassing laat "
"gebruiken. Er zijn vier hoofdeigenschappen die u nodig hebt bij gebruik:"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:18
msgid ""
"[from](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#from-"
"prop): the minimum value represented by the start of the progress bar"
msgstr ""
"[from](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#from-"
"prop): de minimale waarde gerepresenteerd bij het begin van de voortgangsbalk"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:19
msgid ""
"[to](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#to-prop): "
"the maximum value represented by the end of the progress bar"
msgstr ""
"[to](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#to-prop): "
"de maximale waarde gerepresenteerd bij het einde van de voortgangsbalk"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:20
msgid ""
"[value](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#value-"
"prop): the current value of the action that is in progress (e.g. 50% loaded)"
msgstr ""
"[value]](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar.html#value-"
"prop):: de huidige waarde van de actie die voortgang aanduidt (bijv. 50% "
"geladen)"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:21
msgid ""
"[indeterminate](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar."
"html#indeterminate-prop): if the action that is in process currently has no "
"clear progress value, you can set this property to `true` to show the user "
"that something is happening but its progress is not yet clear (but will be "
"soon)."
msgstr ""
"[indeterminate](https://doc.qt.io/qt-6/qml-qtquick-controls2-progressbar."
"html#indeterminate-prop): als de actie die nu bezig is geen heldere "
"voortgangswaarde heeft, dan kunt u deze eigenschap op true instellen om aan "
"de gebruiker te tonen dat er iets gebeurt maar dat de voortgang nog niet "
"helder is (maar spoedig wel)."

#: content/docs/getting-started/kirigami/components-progressbars/index.md:52
msgid "value: 50"
msgstr "waarde: 50"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:66
msgid "Above: progress bar at 50%; below: indeterminate progress bar"
msgstr "Boven: voortgangsbalk op 50%; onder: onbepaalde voortgangsbalk"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:72
msgid "Busy indicator"
msgstr "Indicator voor bezig"

#: content/docs/getting-started/kirigami/components-progressbars/index.md:74
msgid ""
"In cases where loading times are shorter or measuring progress is not "
"feasible, you can instead use [Controls.BusyIndicator](docs:qtquickcontrols;"
"QtQuick.Controls.BusyIndicator). This component provides a simple spinning "
"wheel that shows users that something is happening."
msgstr ""
"In gevallen waar tijden voor laden korter zijn of voortgang meten niet "
"mogelijk is, kunt u in plaats daarvan [Controls.BusyIndicator](docs:"
"qtquickcontrols;QtQuick.Controls.BusyIndicator) gebruiken. Deze component "
"biedt een eenvoudig ronddraaiend rondje dat aan de gebruikers toont dat er "
"iets gebeurt."

#: content/docs/getting-started/kirigami/components-progressbars/index.md:76
msgid ""
"If you want the indicator to stop running, you can do so by setting the "
"[running](https://doc.qt.io/qt-6/qml-qtquick-controls2-busyindicator."
"html#running-prop) property to false, in which case the ."
msgstr ""
"Als u de indicator wilt laten stoppen met ronddraaien, kunt u dat doen door "
"de eigenschap [running](https://doc.qt.io/qt-6/qml-qtquick-controls2-"
"busyindicator.html#running-prop) op false in te stellen in welk geval de ."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:0
msgid "Scrollable pages and list views"
msgstr "Schuifbare pagina's en lijstweergaven"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:0
msgid ""
"Scrollable pages are useful when combined with vertical components or "
"dynamic components such as List Views."
msgstr ""
"Schuifbare pagina's zijn nuttig in combinatie met verticale componenten of "
"dynamische componenten zoals lijstweergaven."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:10
msgid "Kirigami.ScrollablePage"
msgstr "Kirigami.ScrollablePage"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:12
msgid ""
"A [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage) is a page that "
"holds scrollable content, such as a [ListView](docs:qtquick;QtQuick."
"ListView). Scrolling, as well as scrolling indicators, are automatically "
"managed."
msgstr ""
"Een [`Kirigami.ScrollablePage`](docs:kirigami2;ScrollablePage) is een pagina "
"die schuifbare inhoud bevat, zoals [ListView](docs:qtquick;QtQuick."
"ListView). Schuiven en schuifindicatoren worden automatisch beheerd."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:18
msgid "The rectangle will automatically be scrollable"
msgstr "De rechthoek zal automatisch te schuiven zijn"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:26
msgid ""
"In almost every other way, a scrollable page is the same as a normal page."
msgstr ""
"Op bijna elke andere manier is een schuifbare pagina hetzelfde als een "
"normale pagina."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:30
msgid ""
"Do not put a [ScrollView](docs:qtquickcontrols;QtQuick.Controls.ScrollView) "
"inside of a [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage); "
"children of a `Kirigami.ScrollablePage` are already inside a `ScrollView`."
msgstr ""
"Stop geen [ScrollView](docs:qtquickcontrols;QtQuick.Controls.ScrollView) "
"binnen een [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage); "
"kinderen van een `Kirigami.ScrollablePage` zitten al in een `ScrollView`."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:35
msgid "ListView in a ScrollablePage"
msgstr "ListView in een ScrollablePage"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:37
msgid ""
"When the direct children of a [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) extend vertically beyond the size of the page itself, a "
"scrollbar appears at the right edge of the page and the page will be "
"scrollable."
msgstr ""
"Wanneer de directe kinderen van een [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) zich verticaal uitbreiden over de grootte van de pagina "
"zelf, zal er een schuifbalk aan de rechter rand van de pagina verschijnen en "
"zal de pagina schuifbaar zijn."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:41
msgid ""
"Two scrollable pages, both containing a ListView with custom contents "
"(screenshot of NeoChat)"
msgstr ""
"Twee schuifbare pagina's, beiden bevatten een ListView met aangepaste inhoud "
"(schermafdruk van NeoChat)"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:43
msgid ""
"Often you have more than one child in your [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage), and positioning items can be tricky—especially in "
"combination with a [ListView](docs:qtquick;QtQuick.ListView)."
msgstr ""
"U hebt vaak meer dan één kind in uw [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) en items positioneren kan moeilijk zijn-speciaal in "
"combinatie met een [ListView](docs:qtquick;QtQuick.ListView)."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:46
msgid ""
"For non-visual components, having them inside the [ListView](docs:qtquick;"
"QtQuick.ListView) component won't change the visuals of the page, so we can "
"move them inside the scope of the list view. Same for elements anchored to "
"the center of the page, such as placeholder messages for empty list views."
msgstr ""
"Voor niet-zichtbare componenten, die binnen de [ListView](docs:qtquick;"
"QtQuick.ListView) component zitten wijzigen niet de zichtbaarheden van de "
"pagina. We kunnen ze dus binnen de lijstweergave plaatsen. Hetzelfde voor "
"elementen verankert aan het centrum van de pagina, zoals "
"plaatshouderberichten voor lege lijstweergaven."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:49
msgid ""
"For other items, it might make sense to move them to the header or footer of "
"the [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage). This is often "
"the case for search bars."
msgstr ""
"Voor andere items kan het zinvol zijn om ze te verplaatsen naar de kop of "
"voet van de [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage). Dit is "
"vaak het geval voor zoekbalken."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:52
msgid "PlaceholderMessage"
msgstr "PlaceholderMessage"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:54
msgid ""
"It is possible to add a [Kirigami.PlaceholderMessage](docs:kirigami2;"
"PlaceholderMessage) with some instructions in case the list view is empty."
msgstr ""
"Het is mogelijk om een [Kirigami.PlaceholderMessage](docs:kirigami2;"
"PlaceholderMessage) met enige instructies toe te voegen in geval de "
"lijstweergave leeg is."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:68
msgid "More code..."
msgstr "Meer code..."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:71
msgid "Model code..."
msgstr "Model code..."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:76
msgid "Search in the ListView"
msgstr "In de ListView zoeken"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:78
msgid ""
"A search field is often added to a [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) to filter the [ListView](docs:qtquick;QtQuick.ListView). "
"This can be done by changing the default [titleDelegate](docs:kirigami2;"
"Page::titleDelegate) to use a [Kirigami.SearchField](docs:kirigami2;"
"SearchField) instead."
msgstr ""
"Er wordt vaak een zoekveld toegevoegd aan een [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage) om de [ListView](docs:qtquick;QtQuick.ListView) te "
"filteren. Dit kan gedaan worden door de standaard [titleDelegate](docs:"
"kirigami2;Page::titleDelegate) te wijzigen om een [Kirigami.SearchField]"
"(docs:kirigami2;SearchField) in plaats daarvan te gebruiken."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:95
msgid "Rest of listview code..."
msgstr "De rest van de listview code..."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:100
msgid "Hint"
msgstr "Tip"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:102
msgid ""
"You can use [KSortFilterProxyModel](docs:kitemmodels;SortFilterModel) from "
"[KItemModel](docs:kitemmodels) to easily add filtering capability directly "
"in QML without any need for C++ code."
msgstr ""
"U kunt [KSortFilterProxyModel](docs:kitemmodels;SortFilterModel) gebruiken "
"uit [KItemModel](docs:kitemmodels) om gemakkelijk filtermogelijkheden direct "
"in QML toe te voegen zonder enige noodzaak voor C++ code."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:108
msgid "Pull to refresh"
msgstr "Pull om te vernieuwen"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:110
msgid ""
"Another function provided by this component is a \"pull-to-refresh\" action. "
"To use this, activate it as follows:"
msgstr ""
"Een andere functie geleverd door deze component is een actie \"pull-om-te-"
"vernieuwen\". Om dit te gebruiken, activeer het als volgt:"

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:123
msgid ""
"NOTE: MyModel doesn't come from the components, it's purely an example on "
"how it can be used together with some application logic that can update the "
"list model and signals when it's done."
msgstr ""
"OPMERKING: MyModel komt niet uit de componenten, het is puur een voorbeeld "
"over hoe het gebruikt kan worden samen met enige toepassingslogica die het "
"lijstmodel en signalen kan bijwerken wanneer het gereed is."

#: content/docs/getting-started/kirigami/components-scrollablepages_listviews/index.md:135
msgid ""
"By pulling down, you can also activate a special mode with a larger top "
"margin which makes single-handed use of the application easier."
msgstr ""
"Door omlaag te trekken kunt u ook een speciale modus activeren met een "
"grotere bovenmarge die gebruik van de toepassing met één hand gemakkelijker "
"maakt."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:0
msgid "Adding actions"
msgstr "Toevoegen van acties"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:0
msgid ""
"Learning more about Kirigami's Actions will help us make our application "
"more useful.\n"
msgstr ""
"Meer te weten komen over acties van Kirigami zal ons helpen om onze "
"toepassing nuttiger te maken.\n"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:10
msgid "Recap"
msgstr "Samenvattend"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:12
msgid ""
"So far, we built a simple app that can display cards. However, there is "
"currently no way for the user to add new cards to the card view."
msgstr ""
"Tot nu toe hebben we een eenvoudige toepassing gemaakt die kaarten kan "
"tonen. We hebben echter nog geen manier om door de gebruiker nieuwe kaarten "
"aan de kaartweergave toe te voegen."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:14
msgid ""
"In this tutorial, we'll be looking at Kirigami actions. These will help us "
"add interactivity to our app in a consistent, fast, and accessible way."
msgstr ""
"In deze inleiding zullen we kijken naar acties van Kirigami. Deze zullen ons "
"helpen interactiviteit toe te voegen aan onze toepassing op een consistente, "
"snelle en toegankelijke manier."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:18
msgid ""
"A [Kirigami.Action](docs:kirigami2;Action) encapsulates a user interface "
"action. We can use these to provide our applications with easy-to-reach "
"actions that are essential to their functionality."
msgstr ""
"Een [Kirigami.Action](docs:kirigami2;Action) omvat geheel een actie in de "
"gebruikersinterface. We kunnen deze gebruiken om onze toepassingen te "
"voorzien van gemakkelijk te bereiken acties die essentieel zijn voor hun "
"functionaliteit."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:20
msgid ""
"If you have used Kirigami apps before, you have certainly interacted with "
"Kirigami actions. In this image, we can see actions to the right of the page "
"title with various icons. Kirigami actions can be displayed in several ways "
"and can do a wide variety of things."
msgstr ""
"Als u Kirigami toepassingen eerder hebt gebruikt, hebt u zeker samengewerkt "
"met acties van Kirigami. In deze afbeelding kunnen we acties rechts van de "
"paginatitel zien met verschillende pictogrammen. Acties van Kirigami kunnen "
"op verschillende manieren getoond worden en kunnen een brede variëteit van "
"dingen doen."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:30
msgid "Adding countdowns"
msgstr "Aftellingen toevoegen"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:32
msgid ""
"A countdown app is pretty useless without the ability to add countdowns. "
"Let's create an action that'll let us do this."
msgstr ""
"Een aftel toepassing is tamelijk nutteloos zonder de mogelijkheid om "
"aftellingen toe te voegen. Laten we een actie aanmaken die ons dat laat doen."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:40
msgid "Other page properties..."
msgstr "Andere paginaeigenschappen..."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:58
msgid ""
"We are placing our [Kirigami.Action](docs:kirigami2;Action) within our main "
"page from the previous tutorials. If we wanted to, we could add more actions "
"to our page (and even nest actions within actions!)."
msgstr ""
"We plaatsen onze [Kirigami.Action](docs:kirigami2;Action) op onze "
"hoofdpagina uit de eerdere instructie. Als we het willen, dan kunnen we meer "
"acties aan onze pagina (en zelfs geneste acties in acties!) toevoegen."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:60
msgid ""
"The brackets `[]` used above are similar to [JavaScript arrays](https://www."
"w3schools.com/js/js_arrays.asp), which means you can pass one or more things "
"to them, separated by comma:"
msgstr ""
"De haakjes `[]` hierboven gebruikt zijn vergelijkbaar met [JavaScript arrays]"
"(https://www.w3schools.com/js/js_arrays.asp), wat inhoud dat u een of meer "
"argumenten aan ze kan doorgeven, gescheiden door komma's:"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:63
msgid "General JavaScript array of components:"
msgstr "Algemeen JavaScript array met componenten:"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:65
msgid "Passing an array of Kirigami actions to QML:"
msgstr "Het doorgeven van een array met Kirigami acties naar QML:"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:69
msgid ""
"The `id` and `text` properties should be familiar from previous tutorials. "
"However, the inherited [Action.icon](https://doc.qt.io/qt-6/qml-qtquick-"
"controls2-action.html#icon-prop) property should be interesting: it is an "
"object with several properties letting you display certain icons for your "
"actions. Fortunately, to use KDE icons all we need to do is provide the name "
"property for the icon property, `icon.name`."
msgstr ""
"De eigenschappen `id` en `text` zouden bekend moeten zijn uit eerdere "
"instructies. De geërfde eigenschap [Action.icon](https://doc.qt.io/qt-6/qml-"
"qtquick-controls2-action.html#icon-prop) zou interessant moeten zijn: het is "
"een object met verschillende eigenschappen die u bepaalde pictogrammen voor "
"uw acties laat tonen. Gelukkig alles wat we nodig hebben, bij gebruik van "
"KDE pictogrammen, het leveren van de naameigenschap voor de "
"pictogrameigenschap, `icon.name`."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:71
msgid "Viewing the available icons"
msgstr "De beschikbare pictogrammen weergeven"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:73
msgid ""
"<details>\n"
"<summary>Click here to see how to check the available icons on your system</"
"summary>\n"
"<br>\n"
"Cuttlefish is a KDE application that lets you view all the icons that you "
"can use for your application. It offers a number of useful features such as "
"previews of their appearance across different installed themes, previews at "
"different sizes, and more. You might find it a useful tool when deciding on "
"which icons to use in your application.<br><br>\n"
msgstr ""
"<details>\n"
"<summary>Click here to see how to check the available icons on your system</"
"summary>\n"
"<br>\n"
"Cuttlefish is een KDE toepassing die u alle pictogrammen laat zien die u "
"voor uw toepassing kunt gebruiken. Het biedt een aantal nuttige functies "
"zoals voorbeelden van hun uiterlijk over verschillende geïnstalleerde "
"thema's, voorbeelden bij verschillende groottes en meer. U zou het een "
"nuttig hulpmiddel kunnen vinden bij beslissen over welke pictogrammen in uw "
"toepassing te gebruiken.<br><br>\n"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:78
msgid ""
"Many of KDE's icons follow the FreeDesktop Icon Naming specification. "
"Therefore, you might also find it useful to consult The FreeDesktop "
"project's website, [which lists all cross-desktop compatible icon names]"
"(https://specifications.freedesktop.org/icon-naming-spec/icon-naming-spec-"
"latest.html)."
msgstr ""
"Veel van de pictogrammen van KDE volgen de specificatie FreeDesktop Icon "
"Naming. U zou het daarom ook nuttig kunnen vinden om de website van The "
"FreeDesktop project te consulteren, [die lijsten heeft van cross-desktop "
"compatibele pictogramnamen](https://specifications.freedesktop.org/icon-"
"naming-spec/icon-naming-spec-latest.html)."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:84
msgid ""
"The [onTriggered](docs:qtquickcontrols;QtQuick.Controls.Action::triggered) "
"signal handler is the most important. This is what our action will do when "
"it is used. You'll notice that in our example we're using the method "
"[kountdownModel.append](https://doc.qt.io/qt-6/qml-qtqml-models-listmodel."
"html#append-method) of the `kountdownModel` we created in our previous "
"tutorial. This method lets us append a new element to our list model. We are "
"providing it with an object (indicated by curly braces `{}`) that has the "
"relevant properties for our countdowns (`name`, `description`, and a "
"placeholder `date`)."
msgstr ""
"De eigenschap [onTriggered](docs:qtquickcontrols;QtQuick.Controls.Action::"
"triggered) is de belangrijkste. Dit is wat onze actie zal doen wanneer het "
"wordt gebruikt. U zult opmerken dat in ons voorbeeld we de methode "
"[kountdownModel.append](https://doc.qt.io/qt-6/qml-qtqml-models-listmodel."
"html#append-method) van het `kountdownModel` gebruiken dat we in onze vorige "
"inleiding hebben aangemaakt. Deze methode laten ons een nieuw element "
"toevoegen aan ons lijstmodel. We leveren het met een object (aangegeven door "
"accolades `{}`) dat de relevante eigenschappen heeft voor ons aftellen "
"(naam, beschrijving en een plaatshouder datum)."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:92
msgid ""
"Each time we click our \\\"Add kountdown\\\" button on the top right, our "
"custom countdown is added"
msgstr ""
"Elke keer dat we op onze knop \\\"Aftellen toevoegen\\\" rechtsboven "
"klikken, wordt onze aangepaste aftelling toegevoegd"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:94
msgid "Mobile version"
msgstr "Mobiele versie"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:106
msgid ""
"The next component is a [Kirigami.GlobalDrawer](docs:kirigami2;"
"GlobalDrawer). It shows up as a [hamburger menu](https://en.wikipedia.org/"
"wiki/Hamburger_button). By default it opens a sidebar, which is especially "
"useful on mobile, as the user can just swipe in a side of the screen to open "
"it. Global drawers are useful for global navigation and actions. We are "
"going to create a simple global drawer that includes a \"quit\" button."
msgstr ""
"Het volgende component is een [Kirigami.GlobalDrawer](docs:kirigami2;"
"GlobalDrawer). Het verschijnt als een [hamburger menu](https://en.wikipedia."
"org/wiki/Hamburger_button). Standaard opent het een zijbalk, wat met name "
"zinvol is bij een mobieltje, omdat de gebruiker gewoon langs de zijkant van "
"het scherm een veegbeweging kan maken om het te openen. Globale schuiflades "
"zijn erg handig voor de algemene navigatie en de bijbehorende acties. We "
"gaan een eenvoudige schuiflade creëren met daarop een knop \"afsluiten\"."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:111
msgid "Other window properties..."
msgstr "Andere venstereigenschappen..."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:128
msgid ""
"Here, we put our global drawer inside our application window. The main "
"property we need to pay attention to is [GlobalDrawer.actions](docs:"
"kirigami2;GlobalDrawer::actions), which takes the form of an array of "
"[Kirigami.Action](docs:kirigami2;Action) components. This action has an "
"appropriate icon and executes the [Qt.quit()](docs:qtqml;QtQml.Qt::quit) "
"function when triggered, closing the application."
msgstr ""
"Hier stoppen we onze globale schuiflade in ons toepassingsvenster. De "
"hoofdeigenschap die we nodig hebben om aandacht aan te geven is "
"[GlobalDrawer.actions](docs:kirigami2;GlobalDrawer::actions), die de vorm "
"van een array met [Kirigami.Action](docs:kirigami2;Action) componenten "
"aanneemt. Deze actie heeft een toepasselijk pictogram en start de functie "
"[Qt.quit()](docs:qtqml;QtQml.Qt::quit), om de toepassing af te sluiten."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:131
msgid ""
"Since we are keeping our global drawer simple for now, we are setting the "
"[GlobalDrawer.isMenu](docs:kirigami2;GlobalDrawer::isMenu) property to "
"`true`. This displays our global drawer as a normal application menu, taking "
"up less space than the default global drawer pane."
msgstr ""
"Omdat we onze globale schuiflade voor nu eenvoudig houden, stellen we de "
"eigenschap [GlobalDrawer.isMenu](docs:kirigami2;GlobalDrawer::isMenu) in op "
"true. Dit toont onze globale schuiflade als een normaal toepassingsmenu, die "
"minder ruimte inneemt dan het standaard globale schuifladepaneel."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:139
msgid "Global drawer as a menu"
msgstr "Globale schuiflade als menu"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:147
msgid ""
"The [Actions based components](/docs/getting-started/kirigami/components-"
"actions/) page of these docs provides further detail on Kirigami Actions and "
"how they can be used."
msgstr ""
"De pagina [op acties gebaseerde componenten](docs/getting-started/kirigami/"
"components-actions/) van deze documenten levert verdere details over acties "
"van Kirigami en hoe ze gebruikt kunnen worden."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:151
msgid "Actions are contextual"
msgstr "De context van acties"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:153
msgid ""
"Kirigami components are designed in such a way that the place where you put "
"Kirigami Actions is relevant. As seen above, if you add actions to a "
"[Kirigami.Page](docs:kirigami2;Page), [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage) or any other derivative Page component, they will "
"show up on the right side of the header in desktop mode, and on the bottom "
"in mobile mode."
msgstr ""
"Kirigami componenten zijn zodanig ontworpen dat de plaats waar de Kirigami "
"acties geplaatst worden relevant is. Zoals hierboven te zien is, dat als "
"acties aan een [Kirigami.Page](docs:kirigami2;Page), [Kirigami."
"ScrollablePage](docs:kirigami2;ScrollablePage) of elke andere afgeleide "
"pagina-component wordt toegevoegd, dan verschijnen ze aan de rechterzijde "
"van de titel in de desktop mode, en aan de onderkant in de mobile mode."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:155
msgid ""
"Similarly, if Kirigami Actions are added to a [Kirigami.GlobalDrawer](docs:"
"kirigami2;GlobalDrawer), they will show up in the resulting drawer or menu."
msgstr ""
"Daarentegen als if Kirigami acties worden toegevoegd aan een [Kirigami."
"GlobalDrawer](docs:kirigami2;GlobalDrawer), dan verschijnen ze in de "
"resulterende lade of menu."

#: content/docs/getting-started/kirigami/introduction-actions/index.md:157
msgid ""
"Other examples of Kirigami Actions showing up differently depending on their "
"parent component are:"
msgstr ""
"Andere voorbeelden van Kirigami acties die op andere plekken verschijnen "
"afhankelijk van hun oudercomponent zijn:"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:159
msgid ""
"[Kirigami.ContextDrawer](docs:kirigami2;ContextDrawer) - [ContextDrawer "
"tutorial here](/docs/getting-started/kirigami/components-drawers#context-"
"drawers)"
msgstr ""
"[Kirigami.ContextDrawer](docs:kirigami2;ContextDrawer) - [ContextDrawer "
"tutorial here](/docs/getting-started/kirigami/components-drawers#context-"
"drawers)"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:160
msgid ""
"[Kirigami.AbstractCard](docs:kirigami2;AbstractCard) and derivatives - [Card "
"tutorial here](/docs/getting-started/kirigami/components-card)"
msgstr ""
"[Kirigami.AbstractCard](docs:kirigami2;AbstractCard) and derivatives - "
"[Instructie over Card hier](/docs/getting-started/kirigami/components-card)"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:161
msgid ""
"[Kirigami.Dialog](docs:kirigami2;Dialog) and derivatives - [Dialog tutorial "
"here](/docs/getting-started/kirigami/components-dialogs)"
msgstr ""
"[Kirigami.Dialog](docs:kirigami2;Dialog) en afgeleiden - [Instructie over "
"het dialoogvenster hier](/docs/getting-started/kirigami/components-dialogs)"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:162
msgid ""
"[Kirigami.ActionToolBar](docs:kirigami2;ActionToolBar) - [ActionToolBar "
"tutorial here](/docs/getting-started/kirigami/components-"
"actions#actiontoolbar)"
msgstr ""
"[Kirigami.ActionToolBar](docs:kirigami2;ActionToolBar) - [ActionToolBar "
"handleiding hier](/docs/getting-started/kirigami/components-"
"actions#actiontoolbar)"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:164
msgid "Among other Kirigami components."
msgstr "Tussen andere Kirigami-componenten"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:166
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:200
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:258
msgid "Our app so far"
msgstr "Onze toepassing (app) tot zover"

#: content/docs/getting-started/kirigami/introduction-actions/index.md:168
#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:202
#: content/docs/getting-started/kirigami/introduction-listviews/index.md:260
msgid ""
"<details>\n"
"<summary><b>Main.qml:</b></summary>\n"
msgstr ""
"<details>\n"
"<summary><b>Main.qml:</b></summary>\n"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:0
msgid "Adding a dialog"
msgstr "Een dialoog toevoegen"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:0
msgid "Getting to grips with Kirigami dialogs.\n"
msgstr "Grip krijgen op Kirigami dialogen.\n"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:11
msgid "Making our app useful"
msgstr "Uw toepassing nuttig maken"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:13
msgid ""
"We have a window, we have cards, and we have actions. Yet, we still need to "
"find some way of inputting a name, description, and date of our choice."
msgstr ""
"We hebben een venster, we hebben kaarten en we hebben acties. Nu moeten we "
"nog steeds een manier vinden voor het invoeren van een naam, beschrijving en "
"datum van uw keuze."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:15
msgid ""
"One way we could do this is by creating a new page where we place the "
"required input elements. However, a whole page dedicated to providing a "
"name, description, and date seems a bit excessive."
msgstr ""
"Een manier waarop we dit zouden kunnen doen is met het maken van een nieuwe "
"pagina waar we de vereiste invoerelementen in plaatsen. Een gehele pagina "
"bestemd om een naam, beschrijving en datum te leveren lijkt een beetje "
"teveel."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:17
msgid "Instead, we'll be using a dialog."
msgstr "In plaats daarvan zullen we een dialoog gebruiken."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:19
msgid "![Dialog appearing in the middle of the application](dialog.webp)"
msgstr "![Dialoog die verschijnt in het midden van de toepassing](dialog.webp)"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:21
msgid "Opening the dialog"
msgstr "Het dialoogvenster openen"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:37
msgid ""
"First we edit the action from the previous tutorial: just a [Kirigami.Action]"
"(docs:kirigami2;Action) that triggers the dialog's [open()](docs:"
"qtquickcontrols;QtQuick.Controls.Popup::open) function."
msgstr ""
"Als eerste bewerken we de actie uit de vorige inleiding: gewoon een "
"[Kirigami.Action](docs:kirigami2;Action) die de functie van de dialoog "
"[open()](docs:qtquickcontrols;QtQuick.Controls.Popup::open) start."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:39
msgid "Countdown-adding dialogs"
msgstr "Dialogen die aftellen toevoegen"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:41
msgid ""
"The new component we add is a [Kirigami.Dialog](docs:kirigami2;Dialog). "
"Dialogs appear at the center of the window and can be used to provide extra "
"information relevant to the current content. They can't be moved, but they "
"adapt their own size to the window."
msgstr ""
"De nieuwe component die we toevoegen is [Kirigami.Dialog](docs:kirigami2;"
"Dialog). Dialogen verschijnen in het centrum van het venster en kunnen "
"gebruikt worden om extra informatie te leveren relevant voor de huidige "
"inhoud. Ze kunnen niet verplaatst worden, maar ze passen hun eigen grootte "
"aan aan het venster."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:53
msgid "Form layouts help align and structure a layout with several inputs"
msgstr ""
"Formulierindelingen helpen met het uitlijnen en structuren van een layout "
"met meerdere invoervelden"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:55
msgid "Textfields let you input text in a thin textbox"
msgstr "Tekstvelden laten u tekst invoeren in een tekstvak"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:58
msgid "Provides a label attached to the textfield"
msgstr "Plaatst een label bij het tekstveld"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:60
msgid ""
"What to do after input is accepted (i.e. pressed Enter) In this case, it "
"moves the focus to the next field"
msgstr ""
"Wat te doen nadat de invoer is geaccepteerd (d.w.z. Enter is ingedrukt). In "
"dit geval wordt de focus verplaatst naar het volgende veld"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:68
msgid "Again, it moves the focus to the next field"
msgstr "Opnieuw wordt de focus verplaatst naar het volgende veld"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:74
msgid ""
"D means a required number between 1-9, 9 means a required number between 0-9"
msgstr ""
"D betekent een vereist cijfer tussen 1-9, 9 betekent een vereist cijfer "
"tussen 0-9"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:77
msgid "Here we confirm the operation just like clicking the OK button"
msgstr "Hier accepteren we de wijziging door gewoon op de OK-knop te klikken"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:85
msgid "The dialog logic goes here"
msgstr "De dialoog-code komt hier"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:91
msgid ""
"Dialogs by default have a [header](https://doc.qt.io/qt-6/qml-qtquick-"
"controls-dialog.html#header-prop) and a [footer](https://doc.qt.io/qt-6/qml-"
"qtquick-controls-dialog.html#footer-prop), both inherited from [Controls."
"Dialog](docs:qtquickcontrols;QtQuick.Controls.Dialog)."
msgstr ""
"Standaard hebben dialogen een [Kop (header)](https://doc.qt.io/qt-6/qml-"
"qtquick-controls-dialog.html#header-prop) en een [Voet (footer)](https://doc."
"qt.io/qt-6/qml-qtquick-controls-dialog.html#footer-prop), beide geërfd van "
"[Controls.Dialog](docs:qtquickcontrols;QtQuick.Controls.Dialog)."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:93
msgid ""
"The header by default includes a [title](https://doc.qt.io/qt-6/qml-qtquick-"
"controls-dialog.html#title-prop) and a close button that can be disabled "
"with [showCloseButton](docs:kirigami2;Dialog::showCloseButton). The footer "
"by default includes a close button, and it can be overridden with "
"[standardButtons](https://doc.qt.io/qt-6/qml-qtquick-controls-dialog."
"html#standardButtons-prop)."
msgstr ""
"Standaard heeft de kop een [titel](https://doc.qt.io/qt-6/qml-qtquick-"
"controls-dialog.html#title-prop) en een sluitknop die uitgeschakeld kan "
"worden met [showCloseButton](docs:kirigami2;Dialog::showCloseButton). "
"Standaard heeft de voet een sluitknop, dit is aanpasbaar met "
"[standardButtons](https://doc.qt.io/qt-6/qml-qtquick-controls-dialog."
"html#standardButtons-prop)."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:95
msgid ""
"We first set it to show an \"Ok\" button and a \"Cancel\" button, add some "
"padding, and add a reasonable [preferredWidth](docs:kirigami2;Dialog::"
"preferredWidth). The preferred width is the default expected size of the "
"dialog, which can increase if needed. We can use standard [Kirigami.Units]"
"(docs:kirigami2;Kirigami::Platform::Units) that we will revisit later on."
msgstr ""
"We stellen het eerst zodanig in dat het een \"Ok\"-knop en een knop "
"\"Annuleren\" toont, vervolgens voegen we nog wat opvulruimte toe, en voegen "
"een redelijke [preferredWidth](docs:kirigami2;Dialog::preferredWidth) toe. "
"De voorkeur breedte is de verwachte standaard afmeting van het "
"dialoogvenster, die indien nodig nog groter kan worden. We kunnen de "
"standaard [Kirigami.Units](docs:kirigami2;Kirigami::Platform::Units) "
"gebruiken die we later opnieuw zullen bezoeken."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:97
msgid ""
"Then we come to a [Kirigami.FormLayout](docs:kirigami2;FormLayout). Unlike a "
"[ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout."
"html), the layout of its child components is automatic and centered, with "
"optional labels. As the name implies, it is used to create input forms."
msgstr ""
"En dan komen we bij een [Kirigami.FormLayout](docs:kirigami2;FormLayout). In "
"tegenstelling tot een [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-"
"layouts-columnlayout.html), is de indeling van zijn kinderen automatisch en "
"gecentreerd, met optioneel labels. Zoals de naam al aangeeft, wordt het "
"gebruikt om invul-formulieren te creëren."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:99
msgid ""
"These form layouts are designed to work with a variety of different input "
"types, though we're sticking to simple [Controls.Textfield](docs:"
"qtquickcontrols;QtQuick.Controls.TextField) inputs that give us simple text "
"boxes to write things in."
msgstr ""
"Deze formulierindelingen zijn ontworpen om te werken met een variëteit van "
"verschillende invoertypen, maar nu blijven we bij eenvoudige [Controls."
"Textfield](docs:qtquickcontrols;QtQuick.Controls.TextField) invoer die ons "
"eenvoudige tekstvelden geeft om dingen in te schrijven."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:101
msgid "We have created Textfield elements that act as:"
msgstr "We hebben Textfield-elementen gemaakt die acteren als:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:103
msgid "Input for the name of our countdown"
msgstr "Invoer voor de naam van onze aftelling"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:104
msgid "Input for the description of our countdown"
msgstr "Invoer voor de beschrijving van onze aftelling"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:105
msgid ""
"Input for the date we are counting down towards, which must be provided in a "
"`YYYY-MM-DD` format"
msgstr ""
"Invoer voor de datum waar we naar aftellen, die geleverd moet worden in een "
"formaat `JJJJ-MM-DD`"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:107
msgid ""
"Within each of these [Controls.Textfield](docs:qtquickcontrols;QtQuick."
"Controls.TextField) elements, we are setting a [Kirigami.FormData.label]"
"(docs:kirigami2;FormLayoutAttached::label) property that lets us define "
"labels for them. The form will present the correct labels to the left of "
"each of these text input fields."
msgstr ""
"In elk van deze [Controls.Textfield](docs:qtquickcontrols;QtQuick.Controls."
"TextField)-elementen, voegen we een [Kirigami.FormData.label](docs:kirigami2;"
"FormLayoutAttached::label)-eigenschap toe waarmee we labels voor elk daarvan "
"kunnen definiëren. Het formulier zal dan voor elk de correcte label links "
"van de tekstvelden tonen."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:109
msgid ""
"Finally, we are also setting the [onAccepted](https://doc.qt.io/qt-6/qml-"
"qtquick-textinput.html#accepted-signal) property to trigger the "
"[forceActiveFocus()](https://doc.qt.io/qt-6/qml-qtquick-item."
"html#forceActiveFocus-method) method of the following field; this will "
"switch the active field once the user hits the ENTER key, improving the "
"usability of the form."
msgstr ""
"En tenslotte voegen we de [onAccepted](https://doc.qt.io/qt-6/qml-qtquick-"
"textinput.html#accepted-signal)-eigenschap toe om het startsignaal te geven "
"voor [forceActiveFocus()](https://doc.qt.io/qt-6/qml-qtquick-item."
"html#forceActiveFocus-method)-methode voor het volgende veld; dit zal het "
"veld dat actief is omschakelen naar het volgende veld nadat de gebruiker de "
"ENTER-toets heeft ingedrukt, wat de bruikbaarheid van het formulier "
"verbetert."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:111
msgid ""
"We have also set a property called [inputMask](https://doc.qt.io/qt-6/qml-"
"qtquick-textinput.html#inputMask-prop) on the text field for our date. "
"Setting this to `D999-99-99` prevents users from entering something that "
"might break the functionality of the application (such as text), restricting "
"them to only entering digits which we can then try to parse into a date "
"object."
msgstr ""
"We hebben ook een eigenschap genaamd [inputMask](https://doc.qt.io/qt-6/qml-"
"qtquick-textinput.html#inputMask-prop) ingesteld op het tekstveld voor onze "
"datum. Dit instellen op `D999-99-99\"` voorkomt dat gebruikers iets invoeren "
"dat de functionaliteit van de toepassing laat breken (zoals tekst), die hen "
"beperkt tot het alleen invoeren van cijfers die we daarna kunnen proberen te "
"ontleden in een datum object."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:113
msgid ""
"Once the user interface for the dialog is done, we need to change how it "
"behaves. For this we need three things:"
msgstr ""
"Nadat de gebruikersinterface voor het dialoogvenster klaar is, moeten we het "
"het gedrag ervan wijzigen. Daarvoor hebben we drie dingen nodig:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:115
msgid "Show the Ok button only when the required fields are filled"
msgstr "De OK-knop is alleen zichtbaar als de vereiste velden ingevuld zijn"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:116
msgid "Add the input information to the model"
msgstr "Voeg de invoerinformatie toe aan het model"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:117
msgid "Clear the input form"
msgstr "Formulier wissen"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:121
msgid ""
"... Once the Kirigami.Dialog is initialized, we want to create a custom "
"binding to only make the Ok button visible if the required text fields are "
"filled. For this we use Kirigami.Dialog.standardButton(button):"
msgstr ""
"... Nadat het Kirigami.Dialog is geïnitialiseerd, willen we een aangepaste "
"binding creëren om ervoor te zorgen dat de Ok-knop pas zichtbaar word als de "
"vereiste tekstvelden zijn ingevuld. Hiervoor gebruiken we Kirigami.Dialog."
"standardButton(button):"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:129
msgid "() => is a JavaScript arrow function"
msgstr "() => is een JavaScript pijl-functie"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:133
msgid ""
"The binding is created, but we still need to make it unclickable unless the "
"fields are filled"
msgstr ""
"De binding is gecreëerd, maar we moeten het niet klikbaar maken tenzij de "
"velden ingevuld zijn"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:142
msgid ""
"The first thing that needs to be done is create a binding between the OK "
"button's [enabled](https://doc.qt.io/qt-6/qml-qtquick-controls-popup."
"html#enabled-prop) property and a check on whether the fields are filled, "
"which in this case needs to be done with [Qt.binding()](https://doc.qt.io/"
"qt-6/qtqml-syntax-propertybinding.html#creating-property-bindings-from-"
"javascript) in JavaScript. In effect, the line:"
msgstr ""
"Wat als eerste gedaan moet worden is de creatie van een binding tussen de "
"eigenschap [enabled](https://doc.qt.io/qt-6/qml-qtquick-controls-popup."
"html#enabled-prop) van de OK-knop en een controle of de velden zijn "
"ingevuld, wat in dit geval gedaan moet worden met [Qt.binding()](https://doc."
"qt.io/qt-6/qtqml-syntax-propertybinding.html#creating-property-bindings-from-"
"javascript) in JavaScript. In feite, is de regel:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:148
msgid ""
"is similar to the QML bindings we have seen so far, like in the following "
"pseudo-code:"
msgstr ""
"vergelijkbaar met de QML bindings die we tot nog toe hebben gezien, zoals in "
"de volgende voorbeeld-code:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:154
msgid ""
"The signal handler that triggers the Ok button is [onAccepted](https://doc."
"qt.io/qt-6/qml-qtquick-controls-dialog.html#accepted-signal). It remains "
"empty and without doing anything if the required fields are filled; "
"otherwise, it will add the input to the model and clear the dialog for the "
"next time it is opened."
msgstr ""
"De signal handler dat de Ok-knop vrijgeeft is [onAccepted](https://doc.qt.io/"
"qt-6/qml-qtquick-controls-dialog.html#accepted-signal). Het blijft leeg en "
"zonder dat het iets doet als de vereiste velden zijn gevuld; als dat niet "
"het geval is dan voert het de invoer naar het model en maakt het "
"dialoogvenster leeg voor de volgende keer dat het wordt geopend."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:158
msgid ""
"... We check that the nameField is not empty and that the dateField (which "
"has an inputMask) is completely filled"
msgstr ""
"... We controleren dat de nameField niet leeg is en dat de dateField (wat "
"een inputMask heeft) compleet is ingevuld"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:180
msgid ""
"For our required name field, all we need to do is to check whether the field "
"text is an empty string. For the date field, because it has an input mask, "
"we need to use [acceptableInput](https://doc.qt.io/qt-6/qml-qtquick-"
"textinput.html#acceptableInput-prop) instead, which only becomes true once "
"the whole field is filled and contains only acceptable characters."
msgstr ""
"Voor ons vereiste nameField, is alles wat we moeten doen is controleren of "
"de veldtekst een lege tekst is. Voor het dateField, omdat het een inputMask "
"heeft, moeten we in plaats daarvan [acceptableInput](https://doc.qt.io/qt-6/"
"qml-qtquick-textinput.html#acceptableInput-prop) gebruiken, wat alleen 1 "
"wordt als het hele veld is ingevuld is en alleen acceptable karakters bevat."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:182
msgid ""
"Then, the [append()](https://doc.qt.io/qt-6/qml-qtqml-models-listmodel."
"html#append-method) method of our `kountdownModel` list model adds a "
"JavaScript object including the properties we have provided."
msgstr ""
"Daarna, de methode [append()](https://doc.qt.io/qt-6/qml-qtqml-models-"
"listmodel.html#append-method) van ons lijstmodel `kountdownModel` voegt een "
"JavaScript object toe inclusief de eigenschappen die we hebben geleverd."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:184
msgid ""
"Lastly, we make sure to clear the text fields by setting their [text]"
"(https://doc.qt.io/qt-6/qml-qtquick-textinput.html#text-prop) properties to "
"an empty string, then [close()](docs:qtquickcontrols;QtQuick.Controls.Popup::"
"close) it."
msgstr ""
"Tenslotte verzekeren we ons ervan om de tekstvelden te wissen door hun "
"[teksteigenschappen](https://doc.qt.io/qt-6/qml-qtquick-textinput.html#text-"
"prop) op een lege tekenreeks in te stellen, daarna [close()](docs:"
"qtquickcontrols;QtQuick.Controls.Popup::close) sluit het."

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:186
msgid ""
"Once we save our files and build our program, we'll be able to add our own "
"custom countdowns! We can make one last touch to improve the interface, "
"namely remove the dummy countdown we had in the previous lessons:"
msgstr ""
"Nadat we onze bestanden hebben opgeslagen en ons programma hebben gebouwd, "
"kunnen we onze eigen aftelling toevoegen! We kunnen een laatste wijziging "
"aanbrengen om de interface te verbeteren, namelijk de dummy aftelling "
"verwijderen die we in de vorige lessen hadden:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:190
msgid ""
"Secondly now that we have an actual date to play around with, we can "
"calculate the time until said date:"
msgstr ""
"Ten tweede nu we een actuele datum hebben om mee te spelen, kunnen we de "
"tijd tot de vermelde datum berekenen:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:194
msgid ""
"And thirdly increase the window size so that we have more room for our new "
"cards:"
msgstr ""
"En ten derde verhoog de venstergrootte zodat we meer ruimte hebben voor onze "
"nieuwe kaarten:"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:198
msgid "Much nicer."
msgstr "Veel beter"

#: content/docs/getting-started/kirigami/introduction-dialogs/index.md:209
msgid ""
"![Screenshot of the application with four example cards](addedKountdowns."
"webp)"
msgstr ""
"![Schermafdruk van de toepassing met vier voorbeeldkaarten](addedKountdowns."
"webp)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:0
msgid "Setting up and getting started"
msgstr "Opzetten en aan de slag gaan"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:0
msgid "Getting ready to create our first Kirigami application\n"
msgstr "Gereed zijn om onze eerste Kirigami toepassing te maken\n"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:11
msgid "Installing Kirigami"
msgstr "Kirigami installeren"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:13
msgid ""
"Before getting started, we will need to install Kirigami on our machine. "
"There are three ways to do so:"
msgstr ""
"Alvorens te beginnen moeten we Kirigami op onze machine installeren. Er zijn "
"drie manieren om dat te doen:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:15
msgid ""
"[Installing Kirigami from the repositories in your Linux distribution]"
"(#linux)"
msgstr ""
"[Kirigami installeren uit de opslagruimte in uw Linux distributie](#linux)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:16
#, fuzzy
#| msgid "[Building Kirigami with kde-builder](#kde-builder)"
msgid "[Using kde-builder](#kde-builder)"
msgstr "[Kirigami bouwen met kde-builder](#kde-builder)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:17
msgid "[Installing Kirigami with Craft](#craft)"
msgstr "[Kirigami installeren met Craft](#craft)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:19
msgid "Installing Kirigami from the repositories in your Linux distribution"
msgstr "Kirigami installeren uit de opslagruimte in uw Linux distributie"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:21
msgid ""
"We need a C++ compiler, Qt development packages, and Kirigami. Open a "
"terminal application and run one of the following, depending on which Linux "
"distribution you are using:"
msgstr ""
"We hebben een C++ compiler, Qt ontwikkelpakketten en Kirigami nodig. Open "
"een terminaltoepassing en voer een van de volgende, afhankelijk van welke "
"Linux distributie u gebruikt:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:29
msgid ""
"Further information for other distributions can be found [here](/docs/"
"getting-started/building/help-dependencies)."
msgstr ""
"Verdere informatie voor andere distributies is [hier](/docs/getting-started/"
"building/help-dependencies) te vinden."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:31
#, fuzzy
#| msgid "On Linux, with kde-builder"
msgid "Using kde-builder"
msgstr "OP Linux, met kde-builder"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:33
msgid ""
"[Set up your development environment with kde-builder](/docs/getting-started/"
"building/kde-builder-setup/). That will give you the necessary development "
"tools and underlying libraries, and build the KDE Frameworks from scratch."
msgstr ""

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:35
msgid ""
"Create a folder `~/kde/src/kirigami-tutorial`. In that folder you will place "
"the source code files from this tutorial."
msgstr ""

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:37
#, fuzzy
#| msgid ""
#| "specify a custom module at the end of your `~/.config/kde-builder.yaml`:"
msgid "Add the folowing at the end of your `~/.config/kde-builder.yaml`:"
msgstr ""
"specificeer een aangepaste module aan het eind van uw `~/.config/kde-builder."
"yaml`:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:44
msgid "⏳ With kdesrc-build..."
msgstr "⏳ Met kdesrc-build..."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:46
msgid ""
"<details>\n"
"<summary>Click here to know how this was done with kdesrc-build</summary></"
"br>\n"
msgstr ""
"<details>\n"
"<summary>Klik hier om meer te weten hoe dt is gedaan met kdesrc-build</"
"summary>\n"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:49
msgid ""
"This step used to be done by writing to `~/.config/kdesrc-buildrc` instead "
"with a different syntax:"
msgstr ""
"Deze stap werd gedaan door in plaats daarvan te schrijven naar `~/.config/"
"kdesrc-buildrc` met een andere syntaxis:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:62
msgid "Installing Kirigami with Craft"
msgstr "Kirigami installeren met Craft"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:64
msgid ""
"KDE has a custom tool to easily install most of its libraries and programs: "
"**Craft**. It can be used to install Kirigami on [Linux](https://community."
"kde.org/Craft/Linux), [FreeBSD](https://community.kde.org/"
"Guidelines_and_HOWTOs/Build_from_source/FreeBSD), [Windows](https://"
"community.kde.org/Guidelines_and_HOWTOs/Build_from_source/Windows), [Android]"
"(https://community.kde.org/Craft/Android) and [macOS](https://community.kde."
"org/Guidelines_and_HOWTOs/Build_from_source/Mac)."
msgstr ""
"KDE heeft een eigen hulpmiddel om gemakkelijk de meeste van zijn "
"bibliotheken en programma's te installeren: **Craft**. Het kan gebruikt "
"worden om Kirigami te installeren op [Linux](https://community.kde.org/Craft/"
"Linux), [FreeBSD](https://community.kde.org/Guidelines_and_HOWTOs/"
"Build_from_source/FreeBSD), [Windows](https://community.kde.org/"
"Guidelines_and_HOWTOs/Build_from_source/Windows), [Android](https://"
"community.kde.org/Craft/Android) en [macOS](https://community.kde.org/"
"Guidelines_and_HOWTOs/Build_from_source/Mac)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:66
msgid ""
"You will need to follow the [setup instructions for Craft](https://community."
"kde.org/Craft). By the end of the setup, you should have run an environment "
"setup file (`craftenv.ps1` or `craftenv.sh`), which will give you a terminal "
"shell where you will be compiling your Kirigami application."
msgstr ""
"U moet de [opzetinstructies voor Craft](https://community.kde.org/Craft) "
"volgen. Aan het einde van de opzet zou u een opzetbestand voor de omgeving "
"(`craftenv.ps1` of `craftenv.sh`) moeten uitvoeren, die u een terminal-shell "
"geeft waar u uw Kirigami toepassing kunt compileren."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:68
msgid "After that, you may simply run the following on a terminal:"
msgstr "Daarna kunt u eenvoudig het volgende in een terminal uitvoeren:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:74
msgid ""
"If you close your terminal, you can simply run the environment setup file "
"again to compile your app."
msgstr ""
"Als u uw terminal sluit kunt u eenvoudig het opzetbestand voor de omgeving "
"opnieuw binnenhalen om uw toepassing te compileren."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:76
msgid "Project structure"
msgstr "Projectstructuur"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:78
msgid ""
"While there are tools that can easily set up our files, we are going to "
"create them manually. This will let us better understand the pieces that are "
"going to make up our new application."
msgstr ""
"Terwijl er hulpmiddelen zijn die gemakkelijk onze bestanden in kunnen "
"stellen, gaan we ze handmatig aanmaken. Hiermee begrijpen we de onderdelen "
"beter waaruit onze nieuwe toepassing gaat bestaan."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:80
msgid ""
"First we create our project folder (you can use the commands below). We are "
"going to call ours `kirigami-tutorial/`."
msgstr ""
"Eerst maken we onze projectmap aan (u kunt de onderstaande commando's "
"gebruiken). De onze gaan we `kirigami-tutorial/` noemen."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:92
msgid ""
"Within this folder we are going to create a `src/` folder and `CMakeLists."
"txt`. It is generally considered good practice to place all our main C++ "
"code files in a `src/` folder. We also put the `Main.qml` file in it since "
"it will be run together with the executable."
msgstr ""
"In deze map gaan we een map `src/` en `CMakeLists.txt` aanmaken. Het wordt "
"in het algemeen als een goede praktijk beschouwd om al onze bestanden met "
"hoofd C++-code in een map `src/` te plaatsen. We zetten ook het bestand "
"`Main.qml` erin omdat het tegelijk met het uitvoerbare bestand zal draaien."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:108
msgid ""
"In case you want to automatically build the project with kde-builder, custom "
"module name should be the same as the project root folder (in our case it "
"will be \"kirigami-tutorial\"), otherwise you would need to customize the "
"`source-dir` or `dest-dir` for the module. We will assume the path to your "
"`main.cpp` will be `$HOME/kde/src/kirigami-tutorial/src/main.cpp`."
msgstr ""
"In het geval dat u automatisch het project met kde-builder wilt bouwen, dan "
"moet de naam van de eigen module hetzelfde zijn als de basismap van het "
"project (in ons geval zal dit zijn \"kirigami-tutorial\"), anders moet u de "
"`source-dir` of `dest-dir` voor de module aanpassen. We nemen aan dat het "
"pad naar uw hoofd `main.cpp` zal zijn `$HOME/kde/src/kirigami-tutorial/src/"
"main.cpp`."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:112
msgid "Main.qml"
msgstr "Main.qml"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:116
msgid "Here's where we will be handling our application's frontend."
msgstr "Hier gaan we onze frontend van de toepassing behandelen."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:118
msgid ""
"If you know some Javascript, then much of QML will seem familiar to you "
"(though it does have its own peculiarities). [Qt's documentation](https://"
"doc.qt.io/qt-6/qtqml-index.html) has an extensive amount of material on this "
"language if you feel like trying something on your own. Over the course of "
"these tutorials we will be focusing much of our attention on our QML code, "
"where we can use Kirigami to get the most out of it."
msgstr ""
"Als u enige Javascript kent, dan zal veel van QML u bekend voorkomen (hoewel "
"het zijn eigen eigenaardigheden heeft). [Qt's documentation](https://doc.qt."
"io/qt-6/qtqml-index.html) heeft een uitgebreide hoeveelheid materiaal over "
"deze taal als u zelf iets wilt proberen. Gedurende de loop van deze "
"inleidingen zullen we veel van onze aandacht focussen op onze QML code, waar "
"we Kirigami kunnen gebruiken om er het meeste uit te krijgen."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:120
msgid ""
"For now, let's focus on `Main.qml`. First we [import](https://doc.qt.io/qt-6/"
"qtqml-syntax-imports.html) a number of important modules:"
msgstr ""
"Laten we ons voor nu focussen op `Main.qml`. Eerst [importeren](https://doc."
"qt.io/qt-6/qtqml-syntax-imports.html) we een aantal belangrijke modulen:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:122
msgid ""
"[QtQuick](https://doc.qt.io/qt-6/qtquick-index.html), the standard library "
"used in QML applications."
msgstr ""
"[QtQuick](https://doc.qt.io/qt-6/qtquick-index.html), de standaard "
"bibliotheek gebruikt in QML toepassingen."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:123
msgid ""
"[QtQuick Controls](https://doc.qt.io/qt-6/qtquickcontrols-index.html), which "
"provides a number of standard controls we can use to make our applications "
"interactive."
msgstr ""
"[QtQuick Controls](https://doc.qt.io/qt-6/qtquickcontrols-index.html), die "
"een aantal standaard besturingen levert die we kunnen gebruiken om onze "
"toepassingen interactief te maken."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:124
msgid ""
"[QtQuick Layouts](https://doc.qt.io/qt-6/qtquicklayouts-index.html), which "
"provides tools for placing components within the application window."
msgstr ""
"[QtQuick Layouts](https://doc.qt.io/qt-6/qtquicklayouts-index.html), die "
"hulpmiddelen voor het plaatsen van componenten in de toepassingsvensters "
"levert."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:125
msgid ""
"[Kirigami](docs:kirigami2), which provides a number of components suited for "
"creating applications that work across devices of different shapes and sizes."
msgstr ""
"[Kirigami](docs:kirigami2), die een aantal componenten levert geschikt voor "
"het aanmaken van toepassingen die werken over apparaten met verschillende "
"vormen en groottes."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:129
msgid ""
"Putting the QtQuick Controls and Kirigami imports into separate namespaces "
"using the `as` keyword is a best practice that ensures no components with "
"the same name can conflict. You might see different names for QtQuick "
"Controls in the wild, such as \"QQC\" or \"QQC2\". We will be using "
"\"Controls\" in this tutorial for clarity."
msgstr ""
"De QtQuick Controls en Kirigami imports in aparte naamruimten stoppen met "
"het gebruik van sleutelwoord `as` is een beste praktijk die verzekert dat er "
"geen componenten zijn met dezelfde naam die in conflict kunnen zijn. U zou "
"verschillende namen voor QtQuick Controls in het wild kunnen zien, zoals "
"\"QQC\" of \"QQC2\". We zullen \"Controls\" in deze handleiding gebruiken "
"voor alle helderheid."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:133
msgid ""
"We then come to our base element, [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow), which provides some basic features needed for "
"all Kirigami applications. This is the window that will contain each of our "
"pages, the main sections of our UI."
msgstr ""
"Daarna komen we bij ons basiselement, [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow) die enige basis functies levert nodig voor alle "
"Kirigami toepassen. Dit is het venster dat elk van onze pagina's bevat, de "
"hoofdsecties van onze UI."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:135
msgid ""
"We then set the window's `id` property to \"root\". IDs are useful because "
"they let us uniquely reference a component, even if we have several of the "
"same type."
msgstr ""
"Daarna zetten we de eigenschap `id` van het venster op 'root'. ID's zijn "
"nuttig omdat ze ons uniek verwijzen naar een component, zelfs als we er "
"verschillende hebben van hetzelfde type."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:137
msgid ""
"We also set the window `title` property to \"Hello World\". You'll notice "
"that we have wrapped our \"Hello World\" string in a function called "
"`i18nc()`, where we detail the context of the string as well as the string "
"itself."
msgstr ""
"We stellen ook de eigenschap `title` van het venster in op \"Hello World\". "
"U zult hebben opgemerkt dat we onze tekenreeks \"Hello World\" hebben "
"ingepakt in een functie genaamd `i18nc`, waar we de context van de "
"tekenreeks, evenals de tekenreeks zelf, detailleren."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:141
msgid ""
"[i18n()](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Translatable_Code_Using_i18n()) functions make your app more easily "
"translatable, as they return a version of the provided string in the user's "
"language (as long as your app has been localised for that language). While "
"an English user might see our window title as \"Hello World\", a Spanish "
"user would see \"Hola Mundo\"."
msgstr ""
"[i18n()](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Translatable_Code_Using_i18n()) functies maken uw toepassing "
"gemakkelijker te vertalen, omdat ze een versie van de geleverde tekenreeks "
"leveren in de taal van de gebruiker (voor zover uw toepassing gelokaliseerd "
"is voor die taal). Terwijl een Engelse gebruiker onze venstertitel als "
"\"Hello World\" zal zien, zou een Nederlandse gebruiker \"Hallo wereld\" te "
"zien krijgen."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:143
msgid ""
"[i18nc()](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Adding_Context_with_i18nc()) builds on the `i18n()` function by "
"allowing developers to provide some context to translators working on the "
"app. Here we clarify that the UI component is the title of the application "
"window, so we have included the string \"@title:window\" before \"Hello World"
"\". See the [Ki18n Programmer's guide](https://api.kde.org/frameworks/ki18n/"
"html/prg_guide.html#good_ctxt) for more details."
msgstr ""
"[i18nc()](https://techbase.kde.org/Development/Tutorials/Localization/"
"i18n#Adding_Context_with_i18nc()) bouwt verder op de functie `i18n()` door "
"ontwikkelaars, die aan de toepassing werken. Hiermee leggen we uit dat de UI-"
"component de titel is van het toepassingsvenster, we hebben dus de "
"tekenreeks \"@title:window\" voor \"Hello World\" ingevoegd. Zie de [Ki18n "
"Programmer's guide](https://api.kde.org/frameworks/ki18n/html/prg_guide."
"html#good_ctxt) voor meer details."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:147
msgid ""
"We then set the first page of our page stack. Most Kirigami applications are "
"organised as a stack of pages, each page containing related components "
"suited to a specific task. For now, we are keeping it simple, and sticking "
"to a single page. [pageStack](docs:kirigami2;AbstractApplicationWindow::"
"pageStack) is an initially empty stack of pages provided by [Kirigami."
"ApplicationWindow](docs:kirigami2;ApplicationWindow), and with `pageStack."
"initialPage: Kirigami.Page {...}` we set the first page presented upon "
"loading the application to a [Kirigami.Page](docs:kirigami2;Page). This page "
"will contain all our content."
msgstr ""
"Daarna zetten we de eerste pagina van onze pagina stapel. De meeste Kirigami "
"toepassingen zijn georganiseerd als een stapel pagina's, elke pagina bevat "
"gerelateerde componenten passend bij een specifieke taak. Voor nu houden we "
"het eenvoudig en blijven bij een enkele pagina. [pageStack](docs:kirigami2;"
"AbstractApplicationWindow::pageStack) is een initieel lege stapel pagina's "
"geleverd door [Kirigami.ApplicationWindow](docs:kirigami2;ApplicationWindow) "
"en met `pageStack.initialPage: Kirigami.Page {...}` zetten we de eerste "
"pagina op gepresenteerd bij het laden van de toepassing op een [Kirigami."
"Page](docs:kirigami2;Page). Deze pagina zal al onze inhoud zal bevatten."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:149
msgid ""
"Finally, we include in our page a [Controls.Label](docs:qtquickcontrols;"
"QtQuick.Controls.Label) that lets us place text on our page. We use `anchors."
"centerIn: parent` to center our label horizontally and vertically within our "
"parent element. In this case, the parent component of our label is [Kirigami."
"Page](docs:kirigami2;Page). The last thing we need to do is set its text: "
"`text: i18n(\"Hello World!\")`."
msgstr ""
"Tenslotte voegen we in onze pagina een [Controls.Label](docs:qtquickcontrols;"
"QtQuick.Controls.Label) in die ons tekst laat plaatsen op onze pagina. We "
"gebruiken `anchors.centerIn: parent` om ons label horizontaal en verticaal "
"te centreren in ons ouderelement. In dit geval is de oudercomponent van "
"[Kirigami.Page](docs:kirigami2;Page). Het laatste ding dat we moeten doen is "
"het zetten van zijn tekst: `text: i18n(\"Hello World!\")`."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:151
msgid "org.kde.tutorial.desktop"
msgstr "org.kde.tutorial.desktop"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:153
msgid ""
"The primary purpose of [Desktop Entry files](https://specifications."
"freedesktop.org/desktop-entry-spec/latest/) is to show your app on the "
"application launcher on Linux. Another reason to have them is to have window "
"icons on Wayland, as they are required to tell the compositor \"this window "
"goes with this icon\"."
msgstr ""
"Het hoofddoel van [Desktop Entry bestanden](https://specifications."
"freedesktop.org/desktop-entry-spec/latest/) is te zorgen dat uw programma in "
"de toepassingenstarter van Linux verschijnt. Een andere reden om ze te "
"hebben is om bij Wayland venster-pictogrammen te hebben, omdat ze nodig zijn "
"om de compositor te vertellen \"dit venster hoort bij dit icon\"."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:155
msgid ""
"It must follow a [reverse-DNS naming scheme](https://en.wikipedia.org/wiki/"
"Reverse_domain_name_notation) followed by the `.desktop` extension such as "
"`org.kde.tutorial.desktop`:"
msgstr ""
"Het moet een [reverse-DNS naam-schema](https://en.wikipedia.org/wiki/"
"Reverse_domain_name_notation) volgen gevolgd door de `.desktop` extensie "
"zoals `org.kde.tutorial.desktop`:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:161
msgid ""
"Window and taskbar icons will work in a Wayland session only if apps' "
"desktop files are placed in `~/.local/share/applications` or `/usr/share/"
"applications`. To get icons working in this tutorial, either copy the app's "
"desktop file there or switch to a development session as instructed in [kde-"
"builder tutorial](/docs/getting-started/building/kde-builder-compile). Some "
"KDE applications might have working icons if they were already installed on "
"the system."
msgstr ""
"Venster- en werkbalkpictogrammen zullen in een Wayland sessie alleen werken "
"als bureaublad bestanden van toepassingen geplaatst zijn in `~/.local/share/"
"applications` of `/usr/share/applications`. Om pictogrammen in deze "
"handleiding werkend te krijgen, ofwel kopieer het desktop-bestand van de "
"toepassing daar of schakel om naar een ontwikkelsessie zoals geïnstrueerd in "
"[inleiding van kde-builder](/docs/getting-started/building/kde-builder-"
"compile). Sommige KDE toepassingen zouden werkende pictogrammen kunnen "
"hebben als ze al zijn geïnstalleerd in het systeem."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:165
msgid "CMakeLists.txt"
msgstr "CMakeLists.txt"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:167
msgid ""
"`CMakeLists.txt` files are needed to use KDE's build system of choice, "
"[CMake](https://cmake.org/). Our `kirigami-tutorial/CMakeLists.txt` file is "
"going to specify some of our application's characteristics. It also includes "
"some of the dependencies we need in order to compile our project."
msgstr ""
"`CMakeLists.txt` bestanden zijn nodig om het door KDE gekozen bouwsysteem te "
"gebruiken, [CMake](https://cmake.org/). Ons bestand `kirigami-tutorial/"
"CMakeLists.txt` gaat enige van de karakteristieken van uw toepassing "
"specificeren. Het bevat ook enige van de afhankelijkheden die we nodig "
"hebben om ons project te compileren."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:171
msgid ""
"The `CMakeLists.txt` defines how to build your projects. Most of the content "
"here is just to bootstrap your project. You can read a line-by-line, in-"
"depth explanation of what this CMakeLists file does [here](/docs/getting-"
"started/kirigami/advanced-understanding_cmakelists/)."
msgstr ""
"De `CMakeLists.txt` definieert onze te bouwen projecten. Het meeste van de "
"inhoud hier is slechts om uw project af te trappen. U kunt een regel-bij-"
"regel, uitgebreide uitleg over wat dit bestand CMakeLists doet [hier](/docs/"
"getting-started/kirigami/advanced-understanding_cmakelists/) lezen."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:173
msgid ""
"The most important thing to keep in mind is that the C++ build dependencies "
"of Qt and KDE Frameworks are managed with [find_package()](https://cmake.org/"
"cmake/help/latest/command/find_package.html) and QML runtime dependencies "
"are managed with [ecm_find_qml_module()](https://api.kde.org/ecm/module/"
"ECMFindQmlModule.html). You will have to modify these lines and include any "
"additional components that you decide to use during the development of your "
"application."
msgstr ""
"Het belangrijkste om te onthouden is dat de C++-bouwafhankelijkhedenn Qt en "
"KDE Frameworks beheerd worden met [find_package()](https://cmake.org/cmake/"
"help/latest/command/find_package.html)an QML runtime afhankelijkheden worden "
"beheerd met [ecm_find_qml_module()](https://api.kde.org/ecm/module/"
"ECMFindQmlModule.html). U zult deze regels moeten wijzigen en extra "
"componenten toevoegen die u beslist om te gebruiken tijdens de ontwikkeling "
"van uw toepassing."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:175
msgid ""
"The line with `add_subdirectory(src)` points CMake to the `kirigami-tutorial/"
"src/` directory, where our source code is located."
msgstr ""
"De regel met `add_subdirectory(src)`, laat CMake wijzen naar de map "
"`kirigami-tutorial/src/`, waar uw broncode is gelokaliseerd."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:177
msgid ""
"The line with `install()` tells CMake where to install the desktop file."
msgstr ""
"De regel met `install()` geeft aan CMake door waar het desktop-bestand "
"geïnstalleerd moet worden."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:179
msgid ""
"Let's delve into the `kirigami-tutorial/src/CMakeLists.txt` file in there."
msgstr ""
"Laten we dieper in het bestand `kirigami-tutorial/src/CMakeLists.txt` duiken."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:183
msgid "This file consists of five steps:"
msgstr "Dit bestand bestaat uit vijf stappen:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:185
msgid "create an executable"
msgstr "Creëer een uitvoerbaar bestand"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:186
msgid "change the executable into a QML module that accepts QML files"
msgstr ""
"Wijzig het uitvoerbare bestand in een QML module dat QML-bestanden accepteert"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:187
msgid "add C++ and QML files to the executable"
msgstr "voeg C++ en QML-bestanden toe aan het uitvoerbare bestand "

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:188
msgid "link the libraries necessary for the executable to run"
msgstr ""
"koppel de bibliotheken die noodzakelijk zijn voor het uitvoerbare bestand om "
"te kunnen werken"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:189
msgid "install the executable to the right place"
msgstr "Installeer het uitvoerbare bestand op de juiste plaats"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:191
msgid ""
"Next time you need to add more QML files, add them to the existing "
"`ecm_target_qml_sources()` call. C++ files that use the [QML_ELEMENT]"
"(https://doc.qt.io/qt-6/qtqml-cppintegration-definetypes.html) keyword which "
"we will see later in the tutorial can be added using `target_sources()`."
msgstr ""
"De volgende keer dat u meer QML-bestanden moet toevoegen, voeg ze toe aan de "
"al aanwezige aanroep`ecm_target_qml_sources()`. C++ bestanden die het de "
"aanroep [QML_ELEMENT](https://doc.qt.io/qt-6/qtqml-cppintegration-"
"definetypes.html) gebruiken die we later in de instructie zullen behandelen "
"kunnen door `target_sources()` te gebruiken worden toegevoegd."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:193
msgid ""
"Now that CMake has been taken care of, let's look at the files we are going "
"to spend the majority of our time working with."
msgstr ""
"Nu we met CMake klaar zijn, laten we kijken naar de bestanden waarmee we de "
"meeste tijd aan gaan werken."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:197
msgid ""
"The file `kirigami-tutorial/src/main.cpp` handles the \"business logic\" of "
"our application. C++ is handy because it is flexible and fast, even if it is "
"more involved than other programming languages."
msgstr ""
"Het bestand `kirigami-tutorial/src/main.cpp` behandelt de \"zakelijke logica"
"\" van onze toepassing. C++ is handig omdat het flexibel en snel is, zelfs "
"als het moeilijker is dan andere programmeertalen."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:199
msgid ""
"It also functions as the entrypoint to our application. The two parts of our "
"project, the backend and the user interface, are both set up and started "
"here."
msgstr ""
"Het functioneert ook als de ingang naar onze toepassing. De twee delen van "
"ons project, de backend en het gebruikersinterface, worden beiden hier "
"opgezet en gestart."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:203
msgid ""
"For now, we don't need to go into too much detail regarding what our `main."
"cpp` code does, but its role will grow significantly more important once we "
"decide to add more complex functionality to our application in the future."
msgstr ""
"Op dit moment hoeven we niet in teveel detail te gaan met betrekking tot wat "
"onze code in `main.cpp` doet, maar zijn rol zal aanzienlijk belangrijker "
"worden nadat we besluiten complexere functionaliteit in de toekomst aan onze "
"toepassing toe te voegen."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:205
msgid "Theming on Windows"
msgstr "Thema's toekennen op Windows"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:207
msgid ""
"<details>\n"
"<summary>Click here to read more</summary>\n"
msgstr ""
"<details>\n"
"<summary>Klik hier om meer te lezen</summary>\n"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:210
msgid ""
"The application needs to set its icon theme, QStyle, and QtQuick Controls "
"style to Breeze in order to show up on Windows. To learn more about it, see "
"[Figuring out main.cpp](/docs/getting-started/kirigami/advanced-maincpp/)."
msgstr ""
"Als wat vooruit wilt lopen dan kunt u meer te lezen over hoe deze `main.cpp` "
"werkt in [Begrip van main.cpp](/docs/getting-started/kirigami/advanced-"
"maincpp)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:216
msgid ""
"If you want to get ahead, you can read more about how this `main.cpp` works "
"in [Figuring out main.cpp](/docs/getting-started/kirigami/advanced-maincpp)."
msgstr ""
"Als wat vooruit wilt lopen dan kunt u meer te lezen over hoe deze `main.cpp` "
"werkt in [Begrip van main.cpp](/docs/getting-started/kirigami/advanced-"
"maincpp)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:218
msgid ""
"If you want to see a few ways on how the C++ code can be improved, like "
"using [KAboutData](docs:kcoreaddons;KAboutData) for translatable application "
"metadata, be sure to check our [KXmlGui tutorial](/docs/getting-started/"
"kxmlgui)."
msgstr ""
"Als u een paar manieren wilt bestuderen over hoe C++ code verbetert kan "
"worden, zoals het gebruik van [KAboutData](docs:kcoreaddons;KAboutData) voor "
"vertaalbare metadata van het programma, ga dan naar onze [KXmlGui-instructie]"
"(/docs/getting-started/kxmlgui)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:220
msgid "For now, the part that interests us is this line:"
msgstr "Op dit moment interesseert ons deze regel: "

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:226
msgid ""
"The first argument is the URI set in `kirigami-tutorial/src/CMakeLists.txt`, "
"and the second argument is the name of the QML module we want to use "
"(`Main`, coming from the name of our `Main.qml` file, which needs to start "
"with an uppercase letter)."
msgstr ""
"Het eerste argument is de ingestelde URI in `kirigami-tutorial/src/"
"CMakeLists.txt`, en het tweede argument is de naam van de QML module die we "
"willen gaan gebruiken (`Main`, komend van de naam van ons `Main.qml`-"
"bestand, wat moet beginnen met een hoofdletter)."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:228
msgid "The old method"
msgstr "De oude methode"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:230
msgid ""
"<details>\n"
"<summary>You might encounter this alternative way to load QML files in real "
"code!</summary>\n"
"<br>\n"
msgstr ""
"<details>\n"
"<summary>U kan deze alternatieve methode om QML-bestanden te laden tegen "
"komen in echte code!</summary>\n"
"<br>\n"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:234
msgid ""
"The old method of loading QML files had some disadvantages and after Qt6 it "
"became excessively verbose:"
msgstr ""
"De oude methode voor het laden van QML-bestanden had enkele nadelen en na "
"Qt6 werd het wel erg spraakzaam:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:240
msgid ""
"This [Qt resource URI](https://doc.qt.io/qt-6/resources.html) above follows "
"the pattern `<resource_prefix><import_URI><optional_QML_dir><file>`. In this "
"case:"
msgstr ""
"Dit [Qt resource URI](https://doc.qt.io/qt-6/resources.html) hierboven volgt "
"het patroon `<resource_prefix><import_URI><optional_QML_dir><file>`. In dit "
"geval:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:242
msgid "resource prefix = default / in Qt5, /qt/qml in Qt6"
msgstr "resource prefix = default / in Qt5, /qt/qml in Qt6"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:243
msgid "import URI = /org/kde/tutorial, which matches the URI org.kde.tutorial"
msgstr ""
"importeer URI = /org/kde/tutorial, wat overeenkomt met de URI org.kde."
"tutorial"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:244
msgid ""
"optional QML dir = /qml, necessary if the QML files are stored in a "
"directory called qml/"
msgstr ""
"optioneel QML dir = /qml, noodzakelijk als de QML-bestanden worden "
"opgeslagen in een map met de naam qml/"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:245
msgid "file = the QML file"
msgstr "bestand = het QML-bestand"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:251
msgid "Compiling and installing the application"
msgstr "De toepassing compileren en installeren"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:253
msgid ""
"We are almost at the finish line. The last thing we need to do is build and "
"run our application. Doing so will depend on which platform you are on."
msgstr ""
"We zijn bijna bij de eindstreep. Het laatste wat we moeten doen is bouwen en "
"onze toepassing uitvoeren. Om dat te doen hangt af van op welke platform u "
"bent."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:255
msgid "Linux or FreeBSD"
msgstr "Linux of FreeBSD"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:257
#, fuzzy
#| msgid "Building Kirigami with kde-builder"
msgid "Compiling with kde-builder"
msgstr "Kirigami bouwen met kde-builder"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:259
msgid ""
"Make sure you have followed the instructions in [Using kde-builder](#kde-"
"builder)."
msgstr ""

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:261
msgid ""
"Compile the necessary build dependencies with kde-builder, then compile "
"`kirigami-tutorial` by running the following commands in a terminal:"
msgstr ""

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:268
#, fuzzy
#| msgid "On Linux, manually"
msgid "Compiling manually"
msgstr "Op Linux, handmatig"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:270
msgid ""
"Change directories to the project's root folder, then run the following "
"command in a terminal:"
msgstr ""

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:278
msgid ""
"The program will be installed to `$HOME/.local/bin` and its desktop entry to "
"`$HOME/.local/share/applications`."
msgstr ""
"Het programma zal geïnstalleerd worden in `$HOME/.local/bin` en zijn desktop-"
"item in `$HOME/.local/share/applications`."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:280
msgid "Windows"
msgstr "Windows"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:282
msgid ""
"If you are compiling your project on Windows after having set up [Craft]"
"(#craft), CMake should automatically detect the right compiler:"
msgstr ""
"Als u uw project op Windows compileert nadat [Craft](#craft) in opgezet, zou "
"CMake automatisch de juiste compiler detecteren:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:291
msgid ""
"Depending on how you installed the compiler, you might need to specify a "
"CMake Generator for the first step, depending on whether you are using "
"Visual Studio (msvc) or MinGW (make) to compile your projects."
msgstr ""
"Als u uw project met [Craft](#craft) compileert onder Windows, hebt u "
"misschien een CMake-generator nodig voor de eerste stap, afhankelijk van of "
"u Visual Studio (msvc) of MinGW (make) gebruikt om uw projecten te "
"compileren."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:293
msgid ""
"If Visual Studio, depending on the compiler you chose to install, it might "
"be:"
msgstr ""
"Bij Visual Studio, afhankelijk van de gekozen compiler die is geïnstalleerd, "
"kan het zijn:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:299
msgid "Or:"
msgstr "Of:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:305
msgid "If MinGW:"
msgstr "En bij MinGW:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:313
msgid "In both cases, the program will be installed to `C:\\CraftRoot\\bin`."
msgstr ""
"In beide gevallen zal het programma geïnstalleerd worden in `C:\\CraftRoot"
"\\bin`."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:315
msgid ""
"If you ever get in doubt as to the name of the compiler that should be used "
"in the `cmake` call, run:"
msgstr ""
"Als u twijfels heeft over de naam van de compiler die in `cmake` aangeroepen "
"moet worden, voer dan het volgende uit:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:321
msgid "It will list all available generators."
msgstr "Dit zal een lijst met alle beschikbare generators tonen."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:325
msgid "You can then run the `kirigami-hello` program with:"
msgstr "U kunt daarna het programma `kirigami-tutorial` uitvoeren met:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:328
msgid "On Linux, manually"
msgstr "Op Linux, handmatig"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:329
#, fuzzy
#| msgid "On Linux, with kde-builder"
msgid "With kde-builder"
msgstr "OP Linux, met kde-builder"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:330
#, fuzzy
#| msgid "⏳ With kdesrc-build..."
msgid "With kdesrc-build"
msgstr "⏳ Met kdesrc-build..."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:331
msgid "On Windows"
msgstr "Op Windows"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:334
msgid ""
"Voilà! Now you will see your very first Kirigami app appear before your very "
"own eyes."
msgstr ""
"Voilà! Nu ziet u uw allereerste Kirigami toepassing voor uw eigen ogen "
"verschijnen."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:336
msgid "![Screenshot of the generated Kirigami application](hello-kworld.webp)"
msgstr ""
"![Schermafdruk van de gegenereerde Kirigami toepassing](hello-kworld.webp)"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:338
msgid ""
"To run the new QML application in mobile mode, you can use "
"`QT_QUICK_CONTROLS_MOBILE=1`:"
msgstr ""
"Om het nieuwe QML-programma in de modus mobiel op te starten, kan u "
"`QT_QUICK_CONTROLS_MOBILE=1` gebruiken:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:344
msgid ""
"If you have compiled the project manually with CMake and for some reason "
"you'd like to uninstall the project, you can run:"
msgstr ""
"Als u voor een reden het project handmatig met CMake heeft gecompileerd en "
"voor de een of andere reden het project wilt dëinstalleren, dan kan u het "
"volgende uitvoeren:"

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:352
msgid ""
"Next time you want to create the files and folders needed, you can use "
"[KAppTemplate](https://apps.kde.org/kapptemplate) or [KDevelop](https://apps."
"kde.org/kdevelop/) to automatically generate a suitable project to start "
"from. They are available from each major distribution's repositories. These "
"applications will also generate files containing [AppStream](https://www."
"freedesktop.org/software/appstream/docs/sect-Metadata-Application.html) "
"metadata and a `.desktop` file that contains information about how the "
"application should be displayed in a linux application launcher."
msgstr ""
"De volgende keer dat u de benodigde bestanden en mappen aanmaakt, kunt u "
"[KAppTemplate](https://apps.kde.org/kapptemplate) of [KDevelop](https://apps."
"kde.org/kdevelop/) gebruiken om automatisch een geschikt project te "
"beginnen. Ze zijn beschikbaar vanuit elke belangrijke opslagruimte van "
"distributies. Deze toepassingen zullen ook bestanden genereren met "
"metagegevens [AppStream](https://www.freedesktop.org/software/appstream/docs/"
"sect-Metadata-Application.html) en een bestand `.desktop` die informatie "
"over hoe de toepassing getoond zou moeten worden in een toepassingenstarter "
"van linux."

#: content/docs/getting-started/kirigami/introduction-getting_started/index.md:354
msgid ""
"Thanks to the magic of CMakeLists, you can also use IDEs such as KDevelop or "
"[QtCreator](https://www.qt.io/product/development-tools) to develop this "
"application within a comfortable environment with minimal effort."
msgstr ""
"Dankzij de magie van CMakeLists kunt u ook IDE's zoals KDevelop of "
"[QtCreator](https://www.qt.io/product/development-tools) gebruiken om deze "
"toepassing in een comfortabele omgeving met minimale inspanning te "
"ontwikkelen."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:0
msgid "Layouts, ListViews, and Cards"
msgstr "Indelingen, Lijstweergaven en Kaarten"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:0
msgid "Figuring out the different ways of placing things on a page"
msgstr ""
"Uitvogelen van de verschillende manieren van plaatsen van dingen op een "
"pagina"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:9
#: content/docs/getting-started/kirigami/style-typography/index.md:0
msgid "Laying out your content"
msgstr "Uw inhoud indelen"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:11
msgid ""
"Now that we understand how pages work, it is time to add stuff to them. We "
"will be going through a number of important layout components and elements "
"that will be useful when designing our app."
msgstr ""
"Nu we begrijpen hoe pagina's werken, is het tijd om zaken eraan toe te "
"voegen. We zullen door een aantal belangrijke indelingscomponenten en "
"elementen lopen die nuttig zullen zijn bij het ontwerpen van onze toepassing."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:13
msgid "By the end of this section you'll have a neat-looking app."
msgstr "Aan het eind van deze sectie zal u een goed uitziend programma hebben."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:15
msgid "ListViews"
msgstr "Lijstweergaven"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:17
msgid ""
"If you've ever used [Discover](https://apps.kde.org/discover/), [NeoChat]"
"(https://apps.kde.org/neochat/), or Plasma's System Settings, you will have "
"come across a [ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html). "
"Quite simply, it lets you display data on a list."
msgstr ""
"Als u ooit [Discover](https://apps.kde.org/discover/), [NeoChat](https://"
"apps.kde.org/neochat/) of Systeeminstellingen van Plasma hebt gebruikt, bent "
"u langs een [ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html) "
"gekomen. Heel eenvoudig, het laat u gegevens in een lijst tonen."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:30
msgid "That seems cryptic, but don't worry. Let's start from the beginning."
msgstr ""
"Dat lijkt cryptisch, maar geen getob. Laten we vanaf het begin beginnen."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:32
msgid ""
"We add this component inside our [Kirigami.ScrollablePage](docs:kirigami2;"
"ScrollablePage) from the last tutorial."
msgstr ""
"We voegen deze component toe in onze [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage) uit de laatste inleiding."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:34
msgid ""
"We're using [Kirigami.CardsListView](docs:kirigami2;CardsListView), which is "
"a [ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html) that allows "
"us to easily display cards in a list. However, ListViews are made to show "
"data taken from a model - to automatically populate itself from a set of "
"data that we point it to. That's where the `model` property comes in: in "
"this example, it's pointing to `kountdownModel`."
msgstr ""
"We gaan [Kirigami.CardsListView](docs:kirigami2;CardsListView) gebruiken, "
"die een [ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html) is en "
"ons gemakkelijk kaarten biedt om in een lijst te tonen. Lijstweergaven zijn "
"echter gemaakt om gegevens genomen uit een model te tonen - om automatisch "
"zichzelf te bevolken uit een set gegevens waar we naar wijzen. Dat is waar "
"de eigenschap `model` in beeld komt: in dit voorbeeld wijst het naar "
"`kountdownModel`."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:36
msgid "Model"
msgstr "Model"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:43
msgid "Each ListElement is an element on the list, containing information"
msgstr "Elk ListElement is een element in de lijst, die informatie bevat"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:54
msgid ""
"We add our `kountdownModel` inside the [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow) from the last tutorial."
msgstr ""
"We voegen ons `kountdownModel` toe in de [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow) uit de laatste handleiding."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:56
msgid ""
"A model defines the way that a data entry is structured. Our "
"`kountdownModel` will consist of only one element for now. By looking at our "
"[ListElement](https://doc.qt.io/qt-6/qml-qtqml-models-listelement.html) "
"above, we can see how the data of our `kountdownModel` are structured: it "
"contains a name, a description, and a date. This isn't set in stone, and you "
"may have different sorts of data in your model. The first two are just "
"strings, and the third is a number we're using as a placeholder."
msgstr ""
"Een model definieert de manier waarop invoer van gegevens zijn "
"gestructureerd. Ons `kountdownModel` zal, voor nu, bestaan uit slechts één "
"element. Door naar ons bovenstaande [ListElement](https://doc.qt.io/qt-6/qml-"
"qtqml-models-listelement.html) te kijken kunnen we zien hoe gegevens van het "
"`kountdownModel` zijn gestructureerd: ze bevatten een naam, een beschrijving "
"en een datum. Dit is niet in beton gegoten en u kunt verschillende soorten "
"gegevens in uw model hebben. De eerste twee zijn gewoon tekenreeksen en de "
"derde is een getal dat we als plaatshouder gebruiken."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:60
msgid ""
"Since QML is built on top of JavaScript, many of this language's features "
"are available for use in QML files. However, QML variables have to be "
"prefixed with `property`, unless it is inside a JS code block. You can read "
"more about it in [this page](https://doc.qt.io/qt-6/qtqml-javascript-topic."
"html)."
msgstr ""
"Omdat QML is bovenop JavaScript is gebouwd, zijn vele van deze taalfuncties "
"beschikbaar voor gebruik in QML-bestanden. QML-variabelen moeten echter een "
"prefix met `property` hebben, tenzij het binnen een JS codeblok is. U kunt "
"hier meer over lezen op [deze pagina](https://doc.qt.io/qt-6/qtqml-"
"javascript-topic.html)."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:64
msgid ""
"Models are also useful in how they can be modified through the use of "
"several methods. Some important ones are:"
msgstr ""
"Modellen zijn ook nuttig in hoe ze gewijzigd kunnen worden met gebruik van "
"verschillende methoden. Enige belangrijken zijn:"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:65
msgid ""
"[ListModel.append(yourobject: jsobject)](https://doc.qt.io/qt-6/qml-qtqml-"
"models-listmodel.html#append-method) adds a JavaScript object (JSObject) "
"`yourobject` to the ListModel and places it after the last item in the "
"model. For this to happen correctly, you must provide a JSObject with the "
"correct properties and corresponding datatypes."
msgstr ""
"[ListModel.append(yourobject: jsobject)](https://doc.qt.io/qt-6/qml-qtqml-"
"models-listmodel.html#append-method) voegt een JavaScript-object toe "
"(JSObject)`yourobject` aan het ListModel en plaatst het na het laatste item "
"in het model. Om dit juist te laten gebeuren moet u een JSObject leveren met "
"de juiste eigenschappen en overeenkomstige gegevenstypen."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:66
msgid ""
"[ListModel.get(index: int)](https://doc.qt.io/qt-6/qml-qtqml-models-"
"listmodel.html#get-method) returns the JSObject at the index location you "
"provide."
msgstr ""
"ListModel.get(index: int)](https://doc.qt.io/qt-6/qml-qtqml-models-listmodel."
"html#get-method) geeft het JSObject terug op de indexlocatie die u levert."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:67
msgid ""
"[ListModel.remove(index: int, count: int)](https://doc.qt.io/qt-6/qml-qtqml-"
"models-listmodel.html#remove-method) removes the JSObject at the provided "
"`index` location, and as many after that index location as you put in "
"`count` (1 includes only the JSObject at the provided index)"
msgstr ""
"[ListModel.remove(index: int, count: int)](https://doc.qt.io/qt-6/qml-qtqml-"
"models-listmodel.html#remove-method) verwijdert het JSObject op de geleverde "
"locatie van `index` en zoveel na die indexlocatie als u stopt in `count` (1 "
"stopt alleen het JSObject in de geleverde index)"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:68
msgid ""
"[ListModel.set(index: int, yourobject: jsobject)](https://doc.qt.io/qt-6/qml-"
"qtqml-models-listmodel.html#set-method) changes the item at the provided "
"`index` location with the values provided in `yourobject`. Same rules as "
"with `append()`."
msgstr ""
"[ListModel.set(index: int, yourobject: jsobject)](https://doc.qt.io/qt-6/qml-"
"qtqml-models-listmodel.html#set-method) wijzigt het item op de geleverde "
"locatie `index`met de waarden geleverd in `yourobject`. Zelfde regels als "
"met `append()`."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:70
msgid "Delegates"
msgstr "Gedelegeerden"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:72
msgid ""
"While our `kountdownModel` contains the data that will be displayed, our "
"`kountdownDelegate` will handle how the data will be displayed in the "
"[ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html). For that we "
"use a [Kirigami.CardsListView](docs:kirigami2;CardsListView) designed to "
"display card-type delegates, and those delegates will be visually "
"represented by means of a [Kirigami.AbstractCard](docs:kirigami2;"
"AbstractCard)."
msgstr ""
"Terwijl ons `kountdownModel` de gegevens bevat die getoond zullen worden, "
"zal onze `kountdownDelegate` behandelen hoe de gegevens getoond zullen "
"worden in de [ListView](https://doc.qt.io/qt-6/qml-qtquick-listview.html). "
"Daarvoor gebruiken we een [Kirigami.CardsListView](docs:kirigami2;"
"CardsListView) ontworpen om card-type gedelegeerden te tonen en die "
"gedelegeerden zullen zichtbaar gerepresenteerd worden door middel van een "
"[Kirigami.AbstractCard](docs:kirigami2;AbstractCard)."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:74
msgid ""
"Delegates automatically receive the properties of the [ListElements](https://"
"doc.qt.io/qt-6/qml-qtqml-models-listelement.html) that we have specified in "
"our model. We can therefore just refer to their `name`, `description`, and "
"`date` properties as if they were conventional variables within our delegate."
msgstr ""
"Gedelegeerden ontvangen automatisch de eigenschappen van het [ListElements]"
"(https://doc.qt.io/qt-6/qml-qtqml-models-listelement.html) dat we "
"gespecificeerd hebben in ons model. We kunnen daarom gewoon refereren naar "
"de eigenschappen `name`, `description` en `date` alsof ze conventionele "
"variabelen zijn binnen onze gedelegeerde."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:76
msgid "Building the delegate card"
msgstr "De delegatiekaart bouwen"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:78
msgid ""
"The [Component](docs:qtqml;QtQml.Component) that will represent our delegate "
"can be added inside our [Kirigami.ApplicationWindow](docs:kirigami2;"
"ApplicationWindow). We will then check what each part of our delegate "
"component does."
msgstr ""
"De [Component](docs:qtqml;QtQml.Component) die onze gedelegeerde "
"representeert kan toegevoegd worden in ons [Kirigami.ApplicationWindow](docs:"
"kirigami2;ApplicationWindow). We zullen daarna controleren wat elk deel van "
"onze gedelegeerde component doet."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:87
msgid ""
"implicitWidth/Height define the natural width/height of an item if no width "
"or height is specified. The setting below defines a component's preferred "
"size based on its content"
msgstr ""
"implicitWidth/Height definiëren de natuurlijke breedte/hoogte van een item "
"als er geen breedte of hoogte is gespecificeerd. De onderstaande instelling "
"definieert een grootte met voorkeur gebaseerd op zijn inhoud"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:130
msgid "onClicked: to be done... soon!"
msgstr "onClicked: nog te doen... spoedig!"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:140
msgid "implicitWidth and implicitHeight"
msgstr "implicitWidth en implicitHeight"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:142
msgid ""
"The first part we will take a look at is how to manage the width and height "
"of our component:"
msgstr ""
"Het eerste deel waar we naar zullen kijken is hoe de breedte en hoogte van "
"onze component te beheren:"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:157
msgid ""
"Looking at our [Kirigami.AbstractCard](docs:kirigami2;AbstractCard), the "
"first properties we set are [implicitWidth](https://doc.qt.io/qt-6/qml-"
"qtquick-item.html#implicitWidth-prop) and [implicitHeight](https://doc.qt.io/"
"qt-6/qml-qtquick-item.html#implicitHeight-prop). We have set these to the "
"`delegateLayout.implicitWidth` and `delegateLayout.implicitHeight`, i.e. the "
"`implicitWidth` and `implicitHeight` of the `GridLayout` element."
msgstr ""
"Kijkend naar onze [Kirigami.AbstractCard](docs:kirigami2;AbstractCard), zijn "
"de eerste eigenschappen die we instellen [implicitWidth](https://doc.qt.io/"
"qt-6/qml-qtquick-item.html#implicitWidth-prop) en [implicitHeight](https://"
"doc.qt.io/qt-6/qml-qtquick-item.html#implicitHeight-prop). We hebben deze "
"ingesteld op de `delegateLayout.implicitWidth` en `delegateLayout."
"implicitHeight`, d.w.z. de `implicitWidth` en `implicitHeight` van het "
"element `GridLayout`."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:159
msgid ""
"Implicit widths and heights are properties available in any [Item](docs:"
"qtquick;QtQuick.Item) that function as hints and are set as a default, or as "
"a fallback, if there is no explicit width or height set for these "
"components. These values default to 0x0, so it is very important that you "
"define those in raw Item components as done above."
msgstr ""
"Impliciete breedtes en hoogtes zijn eigenschappen die beschikbaar zijn bij "
"elk[Item](docs:qtquick;QtQuick.Item) die functioneren als hints en ingesteld "
"als een set standaarden of als terugvalwaarden, als er geen expliciete "
"breedte of hoogte in ingesteld voor deze waarden. Deze waarden zijn "
"standaard 0x0, dus is het belangrijk dat u ze definieert in ruwe Item-"
"componenten zoals bovenstaand."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:161
msgid ""
"Here we have set the `implicitWidth` and `implicitHeight` of our [Kirigami."
"AbstractCard](docs:kirigami2;AbstractCard) to that of the [GridLayout]"
"(https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) below to ensure "
"it does not spill out of the card. This way, the card takes as much space is "
"necessary for its contents."
msgstr ""
"Hier hebben we de `implicitWidth` en `implicitHeight` van ons [Kirigami."
"AbstractCard](docs:kirigami2;AbstractCard) hetzelfde ingesteld als dat van "
"de [GridLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) "
"eronder zodat het niet uit de kaart loopt. Op deze manier neemt de kaart "
"zoveel ruimte als nodig is voor zijn inhoud."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:163
msgid "Layouts"
msgstr "Indelingen"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:165
msgid ""
"The [GridLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) "
"is inside the [Item](https://doc.qt.io/qt-6/qml-qtquick-item.html) component "
"we have provided for the property [contentItem](https://doc.qt.io/qt-6/qml-"
"qtquick-controls2-control.html#contentItem-prop). This is the [Item](https://"
"doc.qt.io/qt-6/qml-qtquick-item.html) that contains what will be displayed "
"in your card."
msgstr ""
"De [GridLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) "
"is binnen de [Item](https://doc.qt.io/qt-6/qml-qtquick-item.html)-component "
"die we hebben geleverd voor de eigenschap [contentItem](https://doc.qt.io/"
"qt-6/qml-qtquick-controls2-control.html#contentItem-prop). Dit is het [Item]"
"(https://doc.qt.io/qt-6/qml-qtquick-item.html) dat bevat wat getoond zal "
"worden in uw kaart."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:167
msgid ""
"We also need to choose a [layout](https://doc.qt.io/qt-6/qtquicklayouts-"
"index.html) for our components so that they don't just pile on top of each "
"other. There are three main types that we can choose from:"
msgstr ""
"We moeten ook een [layout](https://doc.qt.io/qt-6/qtquicklayouts-index.html) "
"voor onze componenten kiezen zodat ze niet op elkaar gestapeld worden. Er "
"zijn drie hoofdtypen waaruit we kunnen kiezen:"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:168
msgid ""
"[ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout.html) "
"lays out your components vertically, in a single column"
msgstr ""
"[ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout.html) "
"zet uw componenten verticaal neer, in een enkele kolom"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:169
msgid ""
"[RowLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-rowlayout.html) lays "
"out your components horizontally, in a single row"
msgstr ""
"[RowLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-rowlayout.html) zet "
"uw componenten horizontaal neer, in een enkele rij"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:170
msgid ""
"[GridLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) "
"lays out your components in a grid with a composition of your choosing"
msgstr ""
"[GridLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) zet "
"uw componenten neer in een raster met een compositie naar keuze"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:172
msgid ""
"With [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout."
"html) and [RowLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-rowlayout."
"html), all we have to do is write our components inside the Layout "
"component. As you can see, we went with a [GridLayout](https://doc.qt.io/"
"qt-6/qml-qtquick-layouts-gridlayout.html), which entails a bit more "
"handiwork."
msgstr ""
"Met [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-columnlayout."
"html) en [RowLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-rowlayout."
"html), is alles wat we hoeven te doen is onze componenten binnen de "
"component Layout schrijven. Zoals u kunt zien, we gingen voor een "
"[GridLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html), "
"die wat meer handwerk vraagt."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:191
msgid ""
"The first thing you see is our `anchors`. [QtQuick's anchoring system]"
"(https://doc.qt.io/qt-6/qtquick-positioning-anchors.html) provides a useful "
"way of making sure your components are positioned in certain parts of a "
"parent component. We have anchored our [GridLayout](https://doc.qt.io/qt-6/"
"qml-qtquick-layouts-gridlayout.html) to the left, top, and right of the "
"parent card, ensuring our content stretches across the whole card."
msgstr ""
"Het eerste wat u ziet is ons `anchors`. Het [verankeringssysteem van QtQuick]"
"(https://doc.qt.io/qt-6/qtquick-positioning-anchors.html) biedt een "
"bruikbare manier om te verzekeren dat uw componenten gepositioneerd worden "
"in bepaalde delen van een oudercomponent. We hebben onze [GridLayout]"
"(https://doc.qt.io/qt-6/qml-qtquick-layouts-gridlayout.html) linksboven "
"verankerd en rechts van de ouderkaart, om te verzekeren dat onze inhoud zich "
"uitstrekt over de gehele kaart."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:193
msgid ""
"Next we specify the spacing between the rows and columns within our grid, so "
"that our components don't bunch up. Kirigami provides a number of handy "
"[predefined units](docs:kirigami2;Kirigami::Platform::Units) to use for this "
"purpose:"
msgstr ""
"Vervolgens specificeren we de ruimte tussen de rijen en kolommen in ons "
"raster, zodat onze componenten niet opeenstapelen. Kirigami biedt een aantal "
"handige [voorgedefinieerde eenheden](docs:kirigami2;Kirigami::Platform::"
"Units) om voor dit doel te gebruiken:"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:195
msgid "Kirigami Unit"
msgstr "Kirigami-eenheid"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:195
msgid "Pixels"
msgstr "Pixels"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:197
msgid "smallSpacing"
msgstr "smallSpacing"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:197
msgid "4px"
msgstr "4px"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:198
msgid "largeSpacing"
msgstr "largeSpacing"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:198
msgid "8px"
msgstr "8px"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:199
msgid "gridUnit"
msgstr "gridUnit"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:199
msgid "18px"
msgstr "18px"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:203
msgid ""
"KDE's Visual Design Group (VDG) has a lot more information about the "
"different units defined within Plasma and Kirigami on the [Human Interface "
"Guidelines](/hig/layout/units/)."
msgstr ""
"De Visuele ontwerpgroep (VDG) van KDE heeft heel wat meer informatie over de "
"verschillende eenheden gedefinieerd in Plasma en Kirigami op het [Human "
"Interface Guidelines](/hig/layout/units/)."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:207
msgid ""
"As you might remember, `root` is the id of our [Kirigami.ApplicationWindow]"
"(docs:kirigami2;ApplicationWindow). It provides the [wideScreen](docs:"
"kirigami2;AbstractApplicationWindow::wideScreen) property, used to determine "
"whether the current device screen is a widescreen (i.e. a computer monitor "
"or a phone in landscape). We use a [ternary conditional](https://developer."
"mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/"
"Conditional_operator) here to vary the number of columns in our grid "
"depending on the screen we are using: if it's a widescreen, the grid will "
"have 4 columns, else it will have 2."
msgstr ""
"Zoals u zich misschien herinnert, `root` is de id van onze "
"[KirigamipplicationWindow](docs:kirigami2;ApplicationWindow). Het levert de "
"eigenschap [wideScreen](docs:kirigami2;AbstractApplicationWindow::"
"wideScreen), gebruikt om te bepalen of het huidige apparaatscherm een breed "
"scherm is (d.w.z. een computermonitor of een telefoon in landschap). We "
"gebruiken hier een [drievoudige voorwaarde](https://developer.mozilla.org/en-"
"US/docs/Web/JavaScript/Reference/Operators/Conditional_operator) om het "
"aantal kolommen in ons raster te variëren afhankelijk van het scherm dat we "
"gebruiken: als het een breed scherm is, zal het raster 4 kolommen hebben, "
"anders zal het er 2 hebben."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:209
msgid "Inner components"
msgstr "Interne componenten"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:211
msgid ""
"We could just create three labels within our delegate component and call it "
"a day, but that wouldn't look particularly nice. We'll make use of a few "
"more convenient components:"
msgstr ""
"We konden net drie labels in onze gedelegeerde component aanmaken en dan "
"gereed zijn, maar dat zou er niet erg mooi uit zien. We zullen gebruik maken "
"van een paar handigere componenten:"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:250
msgid "How the custom Card looks like"
msgstr "Hoe de aangepaste kaart er uitziet"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:252
msgid ""
"Left, [Kirigami.Heading](docs:kirigami2;Heading): uses the `ListElement`'s "
"`date` as a level 1 heading."
msgstr ""
"Links, [Kirigami.Heading](docs:kirigami2;Heading): gebruikt de `date` van "
"`ListElement` als een niveau 1 kop."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:254
msgid ""
"Middle, [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html): has a [Kirigami.Heading](docs:kirigami2;Heading) that "
"displays the task name; a [Kirigami.Separator](docs:kirigami2;Separator), "
"which provides the horizontal line; and a [Controls.Label](docs:"
"qtquickcontrols;QtQuick.Controls.Label), that displays a task's optional "
"description. The latter two components have a [visible](https://doc.qt.io/"
"qt-6/qml-qtquick-item.html#visible-prop) property, which checks if the "
"description is empty or not and displays the components depending on the "
"result of `description.length > 0`."
msgstr ""
"Midden, [ColumnLayout](https://doc.qt.io/qt-6/qml-qtquick-layouts-"
"columnlayout.html): heeft een [Kirigami.Heading](docs:kirigami2;Heading) die "
"de taaknaam toont; een [Kirigami.Separator](docs:kirigami2;Separator), die "
"de horizontale lijn levert; en een [Controls.Label](docs:qtquickcontrols;"
"QtQuick.Controls.Label), die een optionele beschrijving van de taak toont. "
"De laatste twee componenten hebben een eigenschap [visible](https://doc.qt."
"io/qt-6/qml-qtquick-item.html#visible-prop), die controleert of de "
"beschrijving leeg is of niet en de componenten toont afhankelijk van het "
"resultaat van `description.length > 0`."

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:256
msgid ""
"Right, [Controls.Button](docs:qtquickcontrols;QtQuick.Controls.Button): a "
"button that will do something... soon!"
msgstr ""
"Rechts, [Controls.Button](docs:qtquickcontrols;QtQuick.Controls.Button): een "
"knop die iets zal doen... spoedig!"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:267
msgid ""
"![Screenshot of the app appearance after completing this lesson](Screenshot."
"webp)"
msgstr ""
"![Schermafdruk van het uiterlijk van de toepassing na afmaken van deze les]"
"(Screenshot.webp)"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:269
msgid "So there is our basic card!"
msgstr "Dus hier is onze basis kaart!"

#: content/docs/getting-started/kirigami/introduction-listviews/index.md:271
msgid ""
"With these steps, we have now laid the basic groundwork for adding all the "
"functionality to our app."
msgstr ""
"Met deze stappen hebben we de basis gelegd voor het toevoegen van alle "
"functionaliteit aan uw toepassing."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:0
msgid "Next steps"
msgstr "Volgende stappen"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:0
msgid "What to do after finishing your first simple Kirigami application\n"
msgstr ""
"Wat doen na het beëindigen van uw eerste eenvoudige Kirigami toepassing\n"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:11
msgid "What we have built"
msgstr "Wat hebben we gebouwd"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:13
msgid ""
"Over the past few tutorials you have built a basic but functional Kirigami "
"application that lets you add, edit, and delete date countdowns. In doing so "
"we have learned about Kirigami and QtQuick components, some of how QML "
"works, basic application layouts, and more. Not bad at all!"
msgstr ""
"Gedurende de paar inleidingen hebt u een basis, maar functionele Kirigami "
"toepassing gebouwd, die aflopen van datums laat toevoegen, bewerken en "
"verwijderen. Door dat te doen hebben we iets geleerd over Kirigami en "
"QtQuick componenten, iets over hoe QML werkt, basis indelingen van "
"toepassingen en meer. Al met al, niet slecht!"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:15
msgid ""
"You now have a grasp of the basics that make up many of KDE's most popular "
"applications. You might be asking yourself: what now?"
msgstr ""
"U hebt nu een glimp opgevangen van de basis waar velen van de meest "
"populaire toepassingen van genaakt zijn. U zou uzelf kunnen afvragen: wat nu?"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:17
msgid ""
"Well, don't worry: we have taken the time to provide some pointers as to "
"where you can go from here."
msgstr ""
"Wel, geen zorgen: we hebben de tijd genomen om enige aanwijzingen te geven "
"over waar u vanaf hier naar toe kunt gaan."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:19
msgid "Contributing to KDE projects"
msgstr "Bijdragen aan projecten van KDE"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:21
msgid ""
"One of the best ways to improve your development skills is by putting them "
"into practice. KDE's community is welcoming and always looking for more "
"passionate developers!"
msgstr ""
"Een van de beste manieren om uw ontwikkelvaardigheden te verbeteren is door "
"ze in praktijk te brengen. De gemeenschap van KDE verwelkomt en zoekt altijd "
"naar meer gepassioneerde ontwikkelaars!"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:23
msgid ""
"We have several pieces of documentation that can help guide you towards "
"becoming a contributor. We recommend you take a look at the developer-"
"specific section of our [Development Guide](/docs/getting-started/building/"
"help-dependencies) which can help you learn more about the KDE Community's "
"development workflow. We also recommend you take a look at our documentation "
"for KDE's GitLab instance, called [Invent](https://community.kde.org/"
"Infrastructure/GitLab), as you will likely need to interact with it during "
"the development process. The KDE Community interacts mainly through Matrix, "
"and we also have [a page on the community wiki](https://community.kde.org/"
"Matrix) that will guide you through setting up with your very own account."
msgstr ""
"We hebben verschillende stukken documentatie die u kunnen leiden naar het "
"worden van een bijdrager. We bevelen u aan een kijkje te nemen in de "
"specifieke voor ontwikkelaars gemaakte sectie onze [Ontwikkelgids](/docs/"
"getting-started/building/help-dependencies) die u kan helpen om meer over de "
"werkmethode voor ontwikkelen van de KDE gemeenschap. We bevelen u ook aan om "
"een kijkje te nemen in onze documentatie voor het GitLab exemplaar van KDE, "
"genaamd [Invent](https://community.kde.org/Infrastructure/GitLab), omdat het "
"waarschijnlijk is dat u die nodig hebt gedurende het ontwikkelproces. De KDE "
"gemeenschap werkt hoofdzakelijk via Matrix en we hebben ook [een pagina in "
"de wiki van de gemeenschap](https://community.kde.org/Matrix) die u zal "
"leiden bij het opzetten van uw zeer eigen account."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:27
msgid ""
"While interacting with others in the KDE Community, please make sure you "
"abide by the [Code of Conduct](https://kde.org/code-of-conduct/)."
msgstr ""
"Tijdens het omgaan met anderen in de KDE-gemeenschap, houd u aan de [Code "
"voor gedrag](https://kde.org/code-of-conduct/)."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:31
msgid ""
"With your newfound skills you are in a good position to begin contributing "
"to Kirigami projects. Thankfully, many of KDE's most popular applications "
"and components are built with this framework. Here are a list of projects "
"you are welcome to help with."
msgstr ""
"Met uw nieuw gevonden vaardigheden bent u in een goede positie om te "
"beginnen met bij te dragen aan Kirigami projecten. Gelukkig zijn vele van de "
"meest populaire toepassingen en componenten van KDE gebouwd met dit "
"framework. Hier is een lijst met projecten waar u welkom bent om mee te "
"helpen."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:33
msgid "Beginner-friendly Kirigami projects"
msgstr "Beginner-vriendelijke Kirigami projecten"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:35
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:45
msgid "Project"
msgstr "Project"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:35
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:45
msgid "What it is"
msgstr "Wat het is"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:35
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:45
msgid "Links"
msgstr "Koppelingen"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:37
msgid ""
"<img src=\"org.kde.calindori.png\" width=\"50\" height=\"50\"><br />Calindori"
msgstr ""
"<img src=\"org.kde.calindori.png\" width=\"50\" height=\"50\"><br />Calindori"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:37
msgid "A touch friendly calendar application designed for mobile devices."
msgstr ""
"Een aanraakvriendelijke agendatoepassing ontworpen voor gebruik op mobiele "
"apparaten."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:37
msgid ""
"[KDE Apps page](https://apps.kde.org/en/calindori)<br />[KDE Invent page]"
"(https://invent.kde.org/plasma-mobile/calindori)"
msgstr ""
"[KDE Apps pagina](https://apps.kde.org/en/calindori)<br />[KDE Invent pagina]"
"(https://invent.kde.org/plasma-mobile/calindori)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:38
msgid "<img src=\"org.kde.koko.png\" width=\"50\" height=\"50\"><br />Koko"
msgstr "<img src=\"org.kde.koko.png\" width=\"50\" height=\"50\"><br />Koko"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:38
msgid "An image viewer designed for desktop and touch devices."
msgstr "Een afbeeldingenviewer ontworpen voor bureaublad en aanraakapparaten."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:38
msgid ""
"[Userbase page](https://userbase.kde.org/Koko)<br />[KDE Invent page]"
"(https://invent.kde.org/graphics/koko)"
msgstr ""
"[Userbase pagina](https://userbase.kde.org/Koko)<br />[KDE Invent pagina]"
"(https://invent.kde.org/graphics/koko)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:39
msgid ""
"<img src=\"org.kde.kontrast.png\" width=\"50\" height=\"50\"><br />Kontrast"
msgstr ""
"<img src=\"org.kde.kontrast.png\" width=\"50\" height=\"50\"><br />Kontrast"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:39
msgid ""
"A color contrast checker that tells you if your color combinations are "
"accessible for people with color vision deficiencies."
msgstr ""
"Een controleprogramma op kleurcontrast die u vertelt of uw kleurcombinaties "
"toegankelijk zijn voor mensen met kleurenblindheid."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:39
msgid ""
"[KDE Apps page](https://apps.kde.org/en/kontrast)<br />[KDE Invent page]"
"(https://invent.kde.org/accessibility/kontrast)"
msgstr ""
"[KDE Apps pagina](https://apps.kde.org/en/kontrast)<br />[KDE Invent pagina]"
"(https://invent.kde.org/accessibility/kontrast)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:40
msgid ""
"<img src=\"org.kde.licentia.png\" width=\"50\" height=\"50\"><br />Licentia"
msgstr ""
"<img src=\"org.kde.licentia.png\" width=\"50\" height=\"50\"><br />Licentia"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:40
msgid "An app to help you choose the license to go with your project."
msgstr ""
"Een toepassing om u te helpen bij het kiezen van de licentie die behoort bij "
"uw project."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:40
msgid ""
"[KDE Apps page](https://apps.kde.org/licentia/)<br />[KDE Invent page]"
"(https://invent.kde.org/sdk/licentia)"
msgstr ""
"[KDE Apps pagina](https://apps.kde.org/licentia/)<br />[KDE Invent pagina]"
"(https://invent.kde.org/network/sdk/licentia)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:41
msgid ""
"<img src=\"start-here-kde.png\" width=\"50\" height=\"50\"><br />Plasma "
"Welcome"
msgstr ""
"<img src=\"start-here-kde.png\" width=\"50\" height=\"50\"><br />Plasma "
"welkom"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:41
msgid ""
"A welcome app for the Plasma desktop that lets you create new pages with QML."
msgstr ""
"Een toepassing voor welkom voor het Plasma bureaublad die u nieuwe pagina's "
"laat maken met QML."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:41
msgid "[KDE Invent page](https://invent.kde.org/plasma/plasma-welcome)"
msgstr "[KDE Invent pagina](https://invent.kde.org/plasma/plasma-welcome)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:43
msgid "More complex Kirigami projects"
msgstr "Complexere Kirigami projecten"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:47
msgid ""
"<img src=\"org.kde.discover.png\" width=\"50\" height=\"50\"><br />Discover"
msgstr ""
"<img src=\"org.kde.discover.png\" width=\"50\" height=\"50\"><br />Ontdekken"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:47
msgid ""
"An application that helps you find and install applications, games, and "
"tools."
msgstr ""
"Een toepassing die u helpt bij het vinden en installeren van toepassingen, "
"spellen en hulpmiddelen."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:47
msgid ""
"[KDE Apps page](https://apps.kde.org/en/discover)<br />[KDE Userbase page]"
"(https://userbase.kde.org/Discover)<br />[KDE Invent page](https://invent."
"kde.org/plasma/discover)"
msgstr ""
"[KDE Apps pagina](https://apps.kde.org/en/discover)<br />[KDE Userbase "
"pagina](https://userbase.kde.org/Discover)<br />[KDE Invent pagina](https://"
"invent.kde.org/plasma/discover)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:48
msgid "<img src=\"org.kde.elisa.png\" width=\"50\" height=\"50\"><br />Elisa"
msgstr "<img src=\"org.kde.elisa.png\" width=\"50\" height=\"50\"><br />Elisa"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:48
msgid "A music player that strives to be simple and nice to use."
msgstr ""
"Een muziekspeler met het streven om eenvoudig en fijn in gebruik te zijn."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:48
msgid ""
"[Home page](https://elisa.kde.org/)<br />[KDE Apps page](https://apps.kde."
"org/en/elisa)<br />[KDE Community Wiki page](https://community.kde.org/"
"KDEConnect)<br />[KDE Invent page](https://invent.kde.org/multimedia/elisa)"
msgstr ""
"[Homepagina](https://elisa.kde.org/)<br />[KDE Apps pagina](https://apps.kde."
"org/en/elisa)<br />[KDE Community Wiki pagina](https://community.kde.org/"
"KDEConnect)<br />[KDE Invent pagina](https://invent.kde.org/multimedia/elisa)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:49
msgid ""
"<img src=\"org.kde.kdeconnect.png\" width=\"50\" height=\"50\"><br />KDE "
"Connect"
msgstr ""
"<img src=\"org.kde.kdeconnect.png\" width=\"50\" height=\"50\"><br />KDE "
"Connect"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:49
msgid ""
"A multi-platform app that allows your devices to communicate (eg: your phone "
"and your computer)."
msgstr ""
"Een multi-platform toepassing die uw apparaten met elkaar laat communiceren "
"(bijv.: uw telefoon en uw computer)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:49
msgid ""
"[Home page](https://kdeconnect.kde.org/)<br />[KDE Community Wiki page]"
"(https://community.kde.org/KDEConnect)<br />[KDE Invent page](https://invent."
"kde.org/network/kdeconnect-kde)"
msgstr ""
"[Homepagina](https://kdeconnect.kde.org/)<br />[KDE Community Wiki-pagina]"
"(https://community.kde.org/KDEConnect)<br />[KDE Invent pagina](https://"
"invent.kde.org/network/kdeconnect-kde)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:50
msgid ""
"<img src=\"org.kde.kongress.png\" width=\"50\" height=\"50\"><br />Kongress"
msgstr ""
"<img src=\"org.kde.kongress.png\" width=\"50\" height=\"50\"><br />Kongress"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:50
msgid "A companion application for conference attendees."
msgstr "Een compagnon-toepassing voor deelnemers aan conferenties."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:50
msgid "[KDE Invent page](https://invent.kde.org/utilities/kongress)"
msgstr "[KDE Invent pagina](https://invent.kde.org/utilities/kongress)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:51
msgid ""
"<img src=\"org.kde.neochat.png\" width=\"50\" height=\"50\"><br />NeoChat"
msgstr ""
"<img src=\"org.kde.neochat.png\" width=\"50\" height=\"50\"><br />NeoChat"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:51
msgid ""
"A client for Matrix, the decentralized communication protocol for instant "
"messaging."
msgstr ""
"Een client voor Matrix, het gedecentraliseerde communicatieprotocol voor "
"Instant Messaging."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:51
msgid ""
"[KDE Apps page](https://apps.kde.org/en/neochat)<br />[KDE Invent page]"
"(https://invent.kde.org/network/neochat)"
msgstr ""
"[KDE Apps pagina](https://apps.kde.org/en/neochat)<br />[KDE Invent pagina]"
"(https://invent.kde.org/network/neochat)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:53
msgid "Learning more"
msgstr "Meer te weten komen"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:55
msgid "Not feeling quite ready yet? That's okay too."
msgstr "Zich nog niet geheel klaar voelen? Dat is ook okee."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:57
msgid ""
"Many of the projects listed above are invaluable learning resources. You can "
"poke through the code and see how experienced developers have created fully-"
"featured applications, and use these techniques yourself."
msgstr ""
"Veel van de projecten in de bovenstaande lijsten zijn waardevolle bronnen "
"van kennis. U kunt er door de code lopen en zien hoe ervaren ontwikkelaars "
"toepassingen hebben gemaakt vol met allerlei functies en deze technieken "
"zelf gebruiken."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:59
msgid ""
"If you feel you need a more gentle approach, we have also compiled some "
"resources we think you might find useful."
msgstr ""
"Als u de noodzaak voelt dat u een meer geleidelijke benadering nodig hebt, "
"dan hebben we ook enige hulpbronnen samengesteld waarvan we denken dat u ze "
"nuttig zou kunnen vinden."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:61
msgid "The backend and C++"
msgstr "De backend en C++"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:63
msgid ""
"While we have learned a lot about QML, we haven't really touched upon how to "
"handle backend code all that much. This is, however, an essential facet of "
"KDE application development."
msgstr ""
"Terwijl we heel wat geleerd hebben over QML, hebben we niet echt behandelt "
"hoe de code van de backend in elkaar steekt. Dit is, echter, een essentieel "
"facet van de ontwikkeling van een KDE toepassing."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:65
msgid "C++/Qt with Kirigami"
msgstr "C++/Qt met Kirigami"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:67
msgid ""
"In the advanced section of this Kirigami documentation we have some pages "
"that can help you get started:"
msgstr ""
"In de sectie geavanceerd van deze Kirigami documentatie hebben we enige "
"pagina's die u kunnen helpen om te beginnen:"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:69
#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:80
msgid "Topic"
msgstr "Onderwerp"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:71
msgid ""
"[Understanding CMakeLists](/docs/getting-started/kirigami/advanced-"
"understanding_cmakelists)"
msgstr ""
"[CMakeLists begrijpen](/docs/getting-started/kirigami/advanced-"
"understanding_cmakelists)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:71
msgid "Learn all about CMake and how to compile your applications."
msgstr "Leer alles over CMake en hoe uw toepassingen te compileren."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:72
msgid ""
"[Figuring out main.cpp](/docs/getting-started/kirigami/advanced-maincpp)"
msgstr ""
"[Begrijpen van main.cpp](/docs/getting-started/kirigami/advanced-maincpp)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:72
msgid ""
"Getting to grips with the central C++ file that handles your application's "
"initialisation."
msgstr ""
"Greep krijgen op het centrale C++ bestand dat de initialisatie van uw "
"toepassing behandeld."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:73
msgid ""
"[Connect logic to your QML user interface](/docs/getting-started/kirigami/"
"advanced-connect_backend)"
msgstr ""
"[Verbindingslogica naar uw QML gebruikersinterface](/docs/getting-started/"
"kirigami/advanced-connect_backend)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:73
msgid ""
"Add advanced functionality to your Kirigami application and connect it to "
"your UI."
msgstr ""
"Geavanceerde functionaliteit toevoegen aan uw Kirigami toepassing en het "
"verbinden met uw UI."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:74
msgid "[About Page](/docs/getting-started/kirigami/advanced-add_about_page)"
msgstr ""
"[Pagina Info over](/docs/getting-started/kirigami/advanced-add_about_page)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:74
msgid "Add an \"About Page\" to your UI."
msgstr "Een pagina \"Info over\" aan uw UI toevoegen."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:76
msgid "Beginner C++ resources"
msgstr "C++ hulpbronnen voor de beginner"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:78
msgid ""
"If you are completely new to C++, there are numerous resources available "
"throughout the web. Here are some that may be useful."
msgstr ""
"Als u geheel nieuw bent in C++, er zijn talrijke hulpbronnen beschikbaar op "
"het web. Hier zijn er enige die nuttig kunnen zijn."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:80
msgid "Resource"
msgstr "Hulpbron"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:82
msgid "[Wikibooks C++](https://en.wikibooks.org/wiki/C%2B%2B_Programming)"
msgstr "[Wikibooks C++](https://en.wikibooks.org/wiki/C%2B%2B_Programming)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:82
msgid "A comprehensive wikibook with C++ lessons and exercises"
msgstr "Een beknopt wikibook met C++ lessen en oefeningen"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:83
msgid "[W3Schools C++](https://www.w3schools.com/cpp/cpp_intro.asp)"
msgstr "[W3Schools C++](https://www.w3schools.com/cpp/cpp_intro.asp)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:83
msgid "A set of C++ tutorials and other resources aimed at beginners"
msgstr "Een set C++ inleidingen en andere hulpbronnen gericht op beginners"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:84
msgid "[LearnCpp](https://www.learncpp.com/)"
msgstr "[LearnCpp](https://www.learncpp.com/)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:84
msgid "Tutorials to get to grips with C++"
msgstr "Inleidingen om grip te krijgen op C++"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:85
msgid "[cppreference](https://en.cppreference.com/w/)"
msgstr "[cppreference](https://en.cppreference.com/w/)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:85
msgid "A reference site for C++"
msgstr "Een referentiesite voor C++"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:87
msgid ""
"We also provide a list of continuously updated resources to learn C++ in "
"[this wiki page](https://community.kde.org/Get_Involved/development/"
"Learn#C_and_C++)."
msgstr ""
"We leveren ook een lijst met continue bijgewerkte hulpbronnen om C++ te "
"leren in [deze wiki-pagina](https://community.kde.org/Get_Involved/"
"development/Learn#C_and_C++)."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:89
msgid "Creating classic KDE applications using QtWidgets"
msgstr "Klassieke KDE toepassingen aanmaken met QtWidgets"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:91
msgid ""
"If you'd like to work on KDE applications such as Dolphin, Kontact, or Kate, "
"you will need to learn how to use QtWidgets, which uses a completely "
"different way of developing user interfaces with Qt. More complex KDE "
"applications or applications that follow a traditional design tend to be "
"built with QtWidgets."
msgstr ""
"Als u wilt werken aan KDE toepassingen zoals Dolphin, Kontact of Kate dan "
"moet u weten hoe QtWidgets te gebruiken, die een compleet andere manier van "
"ontwikkelen van gebruikersinterfaces met Qt gebruiken. Complexere KDE "
"toepassingen of toepassingen die een traditioneel ontwerp volgen tenderen "
"naar het bouwen met QtWidgets."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:93
msgid ""
"QtWidgets is somewhat more daunting to work with than QML (and *much* more C+"
"+ intensive!). Luckily, we have [a set of tutorials](/docs/getting-started/"
"kxmlgui) in the KDE Docs that will help you become more familiar with them."
msgstr ""
"QtWidgets boezemen ietwat meer angst in om mee te werken dan QML (en *veel* "
"meer gebruik van C++ !). Gelukkig hebben we [een set handleidingen](/docs/"
"getting-started/kxmlgui) in de KDE Docs die u zullen helpen om meer bekend "
"met hen te raken."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:95
msgid "More QML and QtQuick"
msgstr "Meer QML en QtQuick"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:97
msgid ""
"The Qt project is extensive, and so are QML and QtQuick. There is a lot of "
"functionality we haven't covered, but there is a lot of documentation we can "
"pull from to find out more."
msgstr ""
"Het Qt project is uitgebreid en dus ook QML en QtQuick. Er is heel wat "
"functionaliteit die we niet hebben behandeld, maar er is heel wat "
"documentatie waar we uit kunnen putten om meer te weten te komen."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:99
msgid ""
"If you want to look up what specific components do, look no further than "
"[Qt's official QML documentation.](https://doc.qt.io/qt-6/qtquick-index.html)"
msgstr ""
"Als u wilt opzoeken wat specifieke componenten doen, kijk niet verder dan "
"[Qt's officiële QML documentatie.](https://doc.qt.io/qt-6/qtquick-index.html)"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:100
msgid ""
"If you are looking for a more guided approach to learning, [the QMLBook]"
"(https://qmlbook.github.io/) is a great place to start."
msgstr ""
"Als u zoekt naar een meer geleide benadering van leren, is [the QMLBook]"
"(https://qmlbook.github.io/) een prachtige plaats om te beginnen."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:102
msgid "More Kirigami"
msgstr "Meer Kirigami"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:104
msgid ""
"This documentation includes a lot more about Kirigami. You can poke through "
"some of the Components pages to find out more about some of the QML "
"components that Kirigami provides for you to use."
msgstr ""
"Deze documentatie bevat heel wat meer over Kirigami. U kunt rondstruinen in "
"enige van de pagina's Componenten om meer te weten te komen over sommige van "
"de QML componenten die Kirigami voor uw gebruik levert."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:106
msgid ""
"We recommend you also take a look at [Kirigami Gallery](https://apps.kde.org/"
"kirigami2.gallery/), an application designed by KDE developers to "
"demonstrate Kirigami's tools and capabilities. It provides both interactive "
"examples of Kirigami components as well as links to the source code of these "
"examples so you can see how they were built."
msgstr ""
"We bevelen u ook aan om een kijkje te nemen in de Kirigami galerij [Kirigami "
"Gallery](https://apps.kde.org/kirigami2.gallery/), een toepassing ontworpen "
"door KDE ontwikkelaars om de hulpmiddelen en mogelijkheden van Kirigami te "
"demonstreren. Het biedt zowel interactieve voorbeelden van Kirigami "
"componenten alsook koppelingen naar de broncode van deze voorbeelden zodat u "
"kunt zien hoe ze zijn gebouwd."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:108
msgid "The sky is the limit!"
msgstr "The sky is the limit!"

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:110
msgid ""
"Don't be intimidated by all the material on here! No one starts off being "
"able to create something like Plasma from scratch. But KDE is no multi-"
"billion dollar company with a high barrier for entry (we have no five-round "
"coding interviews!) and as long as you are nice, you will be welcomed."
msgstr ""
"Wees niet geïntimideerd door al het materiaal hier! Niemand begint en is in "
"staat om zoiets als Plasma vanaf niets te maken. Maar KDE is geen multi-"
"miljoen dollar company met een hoge barrière om te beginnen (we hebben geen "
"vijf-ronden coderingsinterviews!) en zolang u vriendelijk bent, zult u "
"verwelkomt worden."

#: content/docs/getting-started/kirigami/introduction-next_steps/index.md:112
msgid "Good luck!"
msgstr "Veel geluk!"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:0
msgid "Explaining pages"
msgstr "Pagina's uitleggen"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:0
msgid "Pages allow you to organize your application content"
msgstr "Pagina's waarmee u uw de inhoud van uw toepassing kunt organiseren"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:9
msgid "Our app"
msgstr "Onze toepassing (app)"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:11
msgid ""
"In the previous tutorial, we managed to set up, build, and compile our first "
"Kirigami application. With the basics in place, we can begin our journey "
"towards creating a fully-featured application."
msgstr ""
"In de vorige inleiding waren we in staat om onze eerste Kirigami toepassing "
"op te zetten, te bouwen, en te compileren. Met de basis op zijn plaats, "
"kunne we onze reis beginnen naar het maken van een toepassing met volledige "
"mogelijkheden."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:13
msgid ""
"These tutorials will focus on creating an application that lets the user see "
"how many days are left until an event of their choice."
msgstr ""
"In deze instructie zullen we ons voornamelijk richten op de creatie van een "
"programma waarin de gebruiker kan zien hoeveel dagen het nog duurt tot een "
"gebeurtenis naar keuze."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:15
msgid ""
"We also recommend you check out the [Kirigami Gallery](https://apps.kde.org/"
"en/kirigami2.gallery), which provides a number of useful UI examples."
msgstr ""
"We raden ook aan om eens te kijken in de [Kirigami Gallery](https://apps.kde."
"org/en/kirigami2.gallery), waar een aantal handige UI voorbeelden te vinden "
"zijn."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:17
msgid ""
"In this section we'll be focusing on pages, one of the key structural "
"elements of any Kirigami application."
msgstr ""
"In deze sectie leggen we de focus op pagina's, een van de voornaamste "
"structurele elementen van elke Kirigami toepassing."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:19
msgid "Pages"
msgstr "Pagina's"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:21
msgid ""
"Kirigami apps are typically organized in pages by using [Kirigami.Page](docs:"
"kirigami2;Page). Pages are the different \"screens\" of an app. You will "
"want to have a page dedicated to specific aspects of your app's interaction, "
"and to make things easier you can create different QML files for each page."
msgstr ""
"Kirigami toepassingen zijn standaard georganiseerd in pagina's door "
"[Kirigami.Page](docs:kirigami2;Page) te gebruiken. Pagina's zijn de "
"verschillende \"schermen\" van een toepassing. U zult een pagina willen "
"hebben gericht op specifieke aspecten van de interactie met uw toepassing en "
"om de zaken eenvoudiger te maken kunt u verschillende QML bestanden "
"aanmaken, één voor elke pagina."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:23
msgid ""
"Pages are organized in a [page stack](docs:kirigami2;"
"AbstractApplicationWindow::pageStack) where they can be pushed and popped. "
"On a phone only the top-most page is shown, whereas on a larger screen "
"(desktop or tablet), if desired, multiple pages can be shown next to each "
"other."
msgstr ""
"Pagina's zijn georganiseerd in een [paginastapel](docs:kirigami2;"
"AbstractApplicationWindow::pageStack) waar ze ingestopt en uitgehaald kunnen "
"worden. Op een telefoon wordt alleen de bovenste pagina getoond, terwijl op "
"een groter scherm (bureaublad of tablet), indien gewenst, meerdere pagina's "
"naast elkaar getoond kunnen worden."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:27
msgid "A single page on the phone"
msgstr "Een enkele pagina op de telefoon"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:29
msgid "Two pages next to each other on the desktop"
msgstr "Twee pagina's naast elkaar op het bureaublad"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:35
msgid ""
"A [Kirigami.Page](docs:kirigami2;Page) inherits from a [Controls.Page](docs:"
"qtquickcontrols;QtQuick.Controls.Page), and as such you can use the latter's "
"properties as well."
msgstr ""
"Een [Kirigami.Page](docs:kirigami2;Page) erft van een [Controls.Page](docs:"
"qtquickcontrols;QtQuick.Controls.Page), en als zodanig kunt u ook de "
"eigenschappen van de laatste gebruiken."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:37
msgid ""
"When looking through QML API documentation, make sure to look into the "
"functions and properties inherited by the API you are looking at as well."
msgstr ""
"Als u de QML API documentatie bestudeert, zorg er dan voor dat u ook veel "
"aandacht besteed aan de functies en de eigenschappen die via de API worden "
"geërfd."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:41
msgid ""
"Let's go back to the `Main.qml` file we created in our previous tutorial:"
msgstr ""
"Laten we teruggaan naar het bestand `Main.qml` dat we gemaakt hebben in onze "
"vorige handleiding:"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:45
msgid ""
"We make our application start to our [Kirigami.Page](docs:kirigami2;Page). "
"All we have included in it is a label containing \"Hello World\", but we're "
"going to spruce things up a little."
msgstr ""
"We zorgen dat onze toepassing start op onze [Kirigami.Page](docs:kirigami2;"
"Page). Alles wat we erin hebben ingevoegd is een label met \"Hello World\" "
"erin, maar we gaan de zaken een beetje opfleuren."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:47
msgid ""
"The idea behind our app is that we're going to be able to display a bunch of "
"countdowns to the user. The problem with a normal [Kirigami.Page](docs:"
"kirigami2;Page) is that it has a fixed vertical size, so instead we can use "
"a [Kirigami.ScrollablePage](docs:kirigami2;ScrollablePage), which already "
"comes with its own built-in scrollbar."
msgstr ""
"Het idee achter onze toepassing is dat we in staat zullen zijn om een aantal "
"aftellingen aan de gebruiker te tonen. Het probleem met een normale "
"[Kirigami.Page](docs:kirigami2;Page) is dat het een vaste verticale grootte "
"heeft, dus in plaats daarvan gebruiken we [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage), die al komt met zijn eigen ingebouwde schuifbalk."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:51
msgid ""
"Kirigami pages also feature neat titles placed within the toolbar, quickly "
"indicating to the user which page they are on. All we need to do is to set a "
"page title using the `title` property of [Kirigami.ScrollablePage](docs:"
"kirigami2;ScrollablePage). In this case, we used one of the `i18nc()` "
"functions we explored in our previous tutorial to this end."
msgstr ""
"Kirigami pagina's hebben ook nette titels geplaatst in de werkbalk, snel aan "
"de gebruiker laten zien in welke pagina zij zijn. Alles wat we moeten doen "
"is een paginatitel instellen met de eigenschap `title` van [Kirigami."
"ScrollablePage](docs:kirigami2;ScrollablePage). In dit geval, gebruikten we "
"er een van de functies `i18nc()`, die we hiervoor bekeken hebben in onze "
"vorige inleiding."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:55
msgid ""
"You could also choose to define your page within its own QML document. To do "
"so, you'd create the new QML file, for example `kirigami-tutorial/src/qml/"
"StartPage.qml`, add it to your `kirigami-tutorial/src/CMakeLists.txt` file, "
"and set the window's first page to load it, like so:"
msgstr ""
"U zou ook uw pagina binnen zijn eigen QML-document kunnen definiëren. Om dat "
"zo te doen, creëert u het nieuwe QML-bestand, bijvoorbeeld `kirigami-"
"tutorial/src/qml/StartPage.qml`, voegt het toe aan uw bestand `kirigami-"
"tutorial/src/CMakeLists.txt` en stelt de eerste pagina in om het te laden, "
"zoals:"

#: content/docs/getting-started/kirigami/introduction-pages/index.md:61
msgid ""
"`pageStack.initialPage` sets the initial Page of the application's page "
"stack, and [Qt.resolvedUrl](docs:qtqml;QtQml.Qt::resolvedUrl) converts the "
"relative URL of the QML file into an absolute one."
msgstr ""
"`pageStack.initialPage` stelt de initiële pagina van de paginastapel van de "
"toepassing en [Qt.resolvedUrl](docs:qtqml;QtQml.Qt::resolvedUrl) converteert "
"de relatieve URL van het QML-bestand in een absolute."

#: content/docs/getting-started/kirigami/introduction-pages/index.md:63
msgid ""
"There is further information about alternative page structures [within our "
"Kirigami documentation](/docs/getting-started/kirigami/components-"
"pagerow_pagestack)."
msgstr ""
"Er is verdere informatie over alternatieve paginastructuren [in onze "
"Kirigami documentatie](/docs/getting-started/kirigami/components-"
"pagerow_pagestack)."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:0
msgid "Using separate files"
msgstr "Aparte bestanden gebruiken"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:0
msgid ""
"Separating unwieldy code into different files, and attach signals to your "
"components.\n"
msgstr ""
"Onpraktische code in verschillende bestanden scheiden en signalen aan uw "
"componenten hangen.\n"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:11
msgid "Why and how"
msgstr "Hoe en waarom"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:13
msgid ""
"For the first time, we will be separating some of our components into their "
"own QML files. If we keep adding things to `Main.qml`, it's going to quickly "
"become hard to tell what does what, and we risk muddying our code."
msgstr ""
"Voor de eerste keer, zullen we enige van onze componenten in hun eigen QML "
"bestanden scheiden. Als we dingen aan `Main.qml` blijven toevoegen, wordt "
"het snel moeilijk te vertellen wat wat doet en riskeren we modderige code."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:15
msgid ""
"In this tutorial, we will be splitting the code in `Main.qml` into `Main."
"qml`, `AddDialog.qml` and `KountdownDelegate.qml`."
msgstr ""
"In deze instructie zullen we de code in `Main.qml` uitsplitsen naar `Main."
"qml`, `AddDialog.qml` en `KountdownDelegate.qml`."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:17
msgid ""
"Additionally, even when spreading code between multiple QML files, the "
"amount of files in real-life projects can get out of hand. A common solution "
"to this problem is to logically separate files into different folders. We "
"will take a brief look at three common approaches seen in real projects, and "
"implement one of them:"
msgstr ""
"Daarnaast, zelfs als we de code over meerdere QML-bestanden verspreiden, "
"loopt het aantal bestanden in echte projecten al snel uit de hand. Een veel "
"voorkomende oplossing voor dit probleem is het logisch opdelen van de "
"bestanden in meerdere mappen. We kijken kort naar drie voorkomende "
"oplossingen in echte projecten, en implementeren een daarvan:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:19
msgid "storing QML files together with C++ files"
msgstr "QML-bestanden samen met C++ bestanden opslaan"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:20
msgid "storing QML files in a different directory under the same module"
msgstr "QML-bestanden in een andere map in dezelfde module opslaan"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:21
msgid "storing QML files in a different directory under a different module"
msgstr "QML-bestanden in een andere map in een andere module opslaan"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:23
msgid ""
"After the split, we will have [separation of concerns](https://en.wikipedia."
"org/wiki/Separation_of_concerns) between each file, and [implementation "
"details will be abstracted](https://en.wikipedia.org/wiki/"
"Abstraction_(computer_science)), making the code more readable."
msgstr ""
"Na het uitsplitsen zullen we [separation of concerns](https://en.wikipedia."
"org/wiki/Separation_of_concerns) tussen elk bestand hebben, en "
"[implementation details will be abstracted](https://en.wikipedia.org/wiki/"
"Abstraction_(computer_science)), wat de code leesbaarder maakt."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:25
msgid "Storing QML files together with C++ files"
msgstr "QML-bestanden samen met C++ bestanden opslaan"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:27
msgid ""
"This consists of keeping the project's QML files together with C++ files in "
"`src/`. This sort of structure would look like this:"
msgstr ""
"Dit bestaat uit bewaren van de QML-bestanden samen met de C++ bestanden in "
"`src/`. Deze manier van structureren zou er als volgt moeten zien:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:41
msgid ""
"This is what we did previously. In the above case, you would just need to "
"keep adding QML files to the existing `kirigami-tutorial/src/CMakeLists."
"txt`. There's no logical separation at all, and once the project gets more "
"than a couple of QML files (and C++ files that create types to be used in "
"QML), the folder can quickly become crowded."
msgstr ""
"Dit is wat we tot nu toe deden. In het geval hierboven, hoefde u alleen QML-"
"bestanden aan de bestaande `kirigami-tutorial/src/CMakeLists.txt` toe te "
"voegen. Er is helemaal geen logische separatie, en als het project eenmaal "
"meer dan een paar QML-bestanden (en C++ bestanden die de typen creëert die "
"worden gebruikt in QML) krijgt, dan kan de map al snel overbevolkt raken."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:43
msgid "Storing QML files in a different directory under the same module"
msgstr "QML-bestanden in een andere map in dezelfde module opslaan"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:45
msgid ""
"This consists of keeping all QML files in a separate folder, usually `src/"
"qml/`. This sort of structure would look like this:"
msgstr ""
"Dit bestaat uit bewaren van de QML-bestanden in een aparte map, meestal `src/"
"qml/`. Deze manier van structureren zou er als volgt moeten zien:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:60
msgid ""
"This structure is very common in KDE projects, mostly to avoid having an "
"extra CMakeLists.txt file for the `src/qml/` directory and creating a "
"separate module. This method keeps the files themselves in a separate "
"folder, but you would also need to add them in `kirigami-tutorial/src/"
"CMakeLists.txt`. All created QML files would then belong to the same QML "
"module as `Main.qml`."
msgstr ""
"Deze structuur wordt veel gebruikt bij KDE projecten, voornamelijk om te "
"voorkomen dat voor de src/qml/`-map een extra CMakeLists.txt-bestand met "
"daarbij de creatie van een separate module nodig is. Deze methode houd de "
"bestanden zelf in een separate map, maar ze moeten ook aan  `kirigami-"
"tutorial/src/CMakeLists.txt` toegevoegd worden. Alle gecreëerde QML-"
"bestanden horen bij dezelfde QML module als `Main.qml`."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:62
msgid ""
"In practice, once the project gets more than a dozen QML files, while it "
"won't crowd the `src/` directory, it will crowd the `src/CMakeLists.txt` "
"file. It will become difficult to differentiate between traditional C++ "
"files and C++ files that have types exposed to QML."
msgstr ""
"In de praktijk, als het project meer dan een dozijn QML-bestanden heeft, zal "
"het de `src/`-map niet overbevolken, zal het wel de `src/CMakeLists.txt`-map "
"overbevolken. Het zal moeilijk om nog de traditionele C++ bestanden te "
"onderscheiden van de C++ bestanden die de typen blootstellen aan QML."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:64
msgid ""
"It will also break the concept of locality (localisation of dependency "
"details), where you would keep the description of your dependencies in the "
"same place as the dependencies themselves."
msgstr ""
"Het zal ook het concept van lokaliteit (localisation of dependency details) "
"breken, waar u de omschrijving van uw afhankelijkheden (dependencies) op "
"dezelfde plaats als de afhankelijkheden zelf bewaart."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:66
msgid "Storing QML files in a different directory under a different module"
msgstr "QML-bestanden in een andere map in een andere module opslaan"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:68
msgid ""
"This consists of keeping all QML files in a separate folder with its own "
"CMakeLists.txt and own separate QML module. This sort of structure would "
"look like this:"
msgstr ""
"Dit bestaat uit bewaren van de QML-bestanden in een aparte map met zijn "
"eigen CMakeLists.txt en zijn eigen QML-module. Deze manier van structureren "
"zou er als volgt moeten zien:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:84
msgid ""
"This structure is not as common in KDE projects and requires writing an "
"additional CMakeLists.txt, but it is the most flexible. In our case, we name "
"our folder \"components\" since we are creating two new QML components out "
"of our previous `Main.qml` file, and keep information about them in "
"`kirigami-tutorial/src/components/CMakeLists.txt`. The `Main.qml` file "
"itself stays in `src/` so it's automatically used when running the "
"executable, as before."
msgstr ""
"Deze structuur wordt niet zoveel veel gebruikt bij KDE projecten en het "
"vereist de creatie van een extra CMakeLists.txt, maar het is het meest "
"flexibel. In ons geval noemen we onze map \"components\" omdat we twee "
"nieuwe QML-componenten uit onze vorig `Main.qml`-bestand creëren, en we "
"bewaren de informatie daarover in `kirigami-tutorial/src/components/"
"CMakeLists.txt`. Het bestand `Main.qml` zelf blijft in `src/` zodat het "
"automatisch net als voorheen word gebruikt als de uitvoerbare bestand "
"opstarten."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:86
msgid ""
"Later on, it would be possible to create more folders with multiple QML "
"files, all grouped together by function, such as \"models\" and \"settings"
"\", and C++ files that have types exposed to QML (like models) could be kept "
"together with other QML files where it makes sense."
msgstr ""
"Later is het mogelijk om meer mappen te creëren met meerdere QML-bestanden, "
"allen gegroepeerd bij functie, zoals \"models\" en \"settings\", en C++ "
"bestanden die types blootstellen aan QML (zoals modellen) kunnen waar het "
"zinvol is samen met andere QML-bestanden worden gehouden."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:88
msgid "We will be using this structure in this tutorial."
msgstr "We zullen in deze instructie deze structuur gebruiken."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:90
msgid "Preparing CMake for the new files"
msgstr "CMake voorbereiden voor de nieuwe bestanden"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:92
msgid ""
"First, create the file `kirigami-tutorial/src/components/CMakeLists.txt` "
"with the following contents:"
msgstr ""
"Creëer eerst het bestand `kirigami-tutorial/src/components/CMakeLists.txt` "
"met de volgende inhoud:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:98
msgid ""
"Because the target is different from the executable, it will function as a "
"different QML module, in which case we will need to do two things: make it "
"*generate* code for it to work as a Qt plugin with [GENERATE_PLUGIN_SOURCE]"
"(https://api.kde.org/ecm/module/ECMQmlModule.html), and *finalize* it with "
"[ecm_finalize_qml_module()](https://api.kde.org/ecm/module/ECMQmlModule."
"html). We then install it exactly like in previous lessons."
msgstr ""
"Omdat het doel afwijkt van het uitvoerbarebestand, zal het functioneren als "
"een andere QML module, zodat in dat geval we twee dingen moeten doen: er "
"voor zorgen dat het code *genereert* met [GENERATE_PLUGIN_SOURCE] (https://"
"api.kde.org/ecm/module/ECMQmlModule.html) zodat het werkt als een Qt plugin, "
"en het *afmaken* met [ecm_finalize_qml_module()](https://api.kde.org/ecm/"
"module/ECMQmlModule.html). Daarna installeren we het op precies dezelfde "
"manier als in de vorige lessen."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:100
msgid ""
"We needed to use [add_library()](https://cmake.org/cmake/help/latest/command/"
"add_library.html) so that we can link `kirigami-hello-components` to the "
"executable in the [target_link_libraries()](https://cmake.org/cmake/help/"
"latest/command/target_link_libraries.html) call in `kirigami-tutorial/src/"
"CMakeLists.txt`:"
msgstr ""
"We moeten [add_library()](https://cmake.org/cmake/help/latest/command/"
"add_library.html) gebruiken zodat we `kirigami-hello-components` kunnen "
"koppelen met het uitvoerbare bestand in de [target_link_libraries()](https://"
"cmake.org/cmake/help/latest/command/target_link_libraries.html) aanroep call "
"in `kirigami-tutorial/src/CMakeLists.txt`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:104
msgid ""
"We also need to use [add_subdirectory()](https://cmake.org/cmake/help/latest/"
"command/add_subdirectory.html) so CMake will find the `kirigami-tutorial/src/"
"components/` directory."
msgstr ""
"We moeten ook [add_subdirectory()](https://cmake.org/cmake/help/latest/"
"command/add_subdirectory.html) gebruiken zodat CMake de `kirigami-tutorial/"
"src/components/` map kan vinden."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:106
msgid ""
"In the previous lessons, we did not need to add the `org.kde.tutorial` "
"import to our `Main.qml` because it was not needed: being the entrypoint for "
"the application, the executable would run the file immediately anyway. Since "
"our components are in a separate QML module, the a new import in `kirigami-"
"tutorial/src/Main.qml` is necessary, the same one defined earlier, `org.kde."
"tutorial.components`:"
msgstr ""
"In de eerdere lessen, hoefden we de `org.kde.tutorial` import naar onze "
"`Main.qml` toe te voegen omdat dit niet nodig was: omdat dat het startpunt "
"voor het programma is, zal het uitvoerbare bestand dit bestand toch "
"onmiddellijk uitvoeren. Omdat onze componenten in een separate QML module "
"geplaatst zijn, is de nieuwe import in `kirigami-tutorial/src/Main.qml` "
"noodzakelijk, dezelfde eerder gedefinieerd, `org.kde.tutorial.components`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:115
msgid "The rest of the code..."
msgstr "De rest van de code..."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:118
msgid "And we are ready to go."
msgstr "En we zijn klaar."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:120
msgid "Splitting Main.qml"
msgstr "Main.qml opsplitsen"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:122
msgid "Let's take a look once again at the original `Main.qml`:"
msgstr "Laten we nog een keer kijken naar de originele `Main.qml`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:126
msgid ""
"The custom delegate with `id: kountdownDelegate` can be split completely "
"because it is already enveloped in a [QML Component type](docs:qtqml;QtQml."
"Component). We use a Component to be able to define it without needing to "
"instantiate it; separate QML files work the same way."
msgstr ""
"De eigengemaakte gedelegeerde met `id: kountdownDelegate` kan compleet "
"gesplitst worden omdat het al ingepakt is in een [QML Component type](docs:"
"qtqml;QtQml.Component). We gebruiken een Component zodat we het kunnen "
"definiëren zonder dat het hoeven te creëren; separate QML-bestanden werken "
"op dezelfde manier."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:128
msgid ""
"If we move the code to a separate files, then, there is no point in leaving "
"it enveloped in a Component: we can split just the [Kirigami.AbstractCard]"
"(docs:kirigami2;AbstractCard) in the separate file. Here is the resulting "
"`KountdownDelegate.qml`:"
msgstr ""
"Als we de code in separate bestanden verplaatsen, dan is er geen reden om ze "
"ingepakt in een Component te laten: we kunnen gewoon de [Kirigami."
"AbstractCard](docs:kirigami2;AbstractCard) in het separate bestand "
"uitsplitsen. Hier is het resulterende `KountdownDelegate.qml`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:132
msgid ""
"Our dialog with `id: addDialog` is not enveloped in a Component, and it is "
"not a component that is visible by default, so the code can be copied as is "
"into the `AddDialog.qml`:"
msgstr ""
"Onze dialoogvenster met `id: addDialog` is niet ingepakt in een Component, "
"en het is niet een component dat standaard zichtbaar is, zodat de code zoals "
"het gekopieerd kan worden naar `AddDialog.qml`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:136
msgid "With the code split, `Main.qml` thus becomes much shorter:"
msgstr "Nu de code is uitgesplitst, wordt `Main.qml` dus veel korter:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:140
msgid ""
"We now have two extra QML files, `AddDialog.qml` and `KountdownDelegate`, "
"and we need to find some way of using them in `Main.qml`. The way to add the "
"contents of the new files to `Main.qml` is by *instantiating* them."
msgstr ""
"We hebben nu twee extra QML-bestanden, `AddDialog.qml` en "
"`KountdownDelegate`, en we moeten een manier vinden om ze in `Main.qml` te "
"gebruiken. De manier om de inhoud van de nieuwe bestanden aan `Main.qml` toe "
"te voegen is door ze *aan te roepen*."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:142
msgid "`AddDialog.qml` becomes `AddDialog {}`:"
msgstr "`AddDialog.qml` wordt `AddDialog {}`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:146
msgid "`KountdownDelegate.qml` becomes `KountdownDelegate {}`:"
msgstr "`KountdownDelegate.qml` wordt `KountdownDelegate {}`:"

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:150
msgid ""
"Most cases you have seen of a component started with uppercase and followed "
"by brackets were instantiations of a QML component. This is why our new QML "
"files need to start with an uppercase letter."
msgstr ""
"De meeste gevallen die u heeft gezien van een component die startte met een "
"hoofdletter gevolgd door haakjes waren aanroepingen van een QML component. "
"Dit is waarom onze nieuwe QML-bestanden met een hoofdletter moeten beginnen."

#: content/docs/getting-started/kirigami/introduction-separatefiles/index.md:152
msgid ""
"Compile the project and run it, and you should have a functional window that "
"behaves exactly the same as before, but with the code split into separate "
"parts, making things much more manageable."
msgstr ""
"Compileer het project en start het op, en u zou een werkend venster moeten "
"hebben dat zich precies hetzelfde gedraagt als voorheen, maar met de code "
"uitgesplitst in separate stukken, zodat het veel beheersbaar is."

#: content/docs/getting-started/kirigami/style-colors/index.md:0
msgid "Colors and themes in Kirigami"
msgstr "Kleuren en thema's in Kirigami"

#: content/docs/getting-started/kirigami/style-colors/index.md:0
msgid "Colors "
msgstr "Kleuren "

#: content/docs/getting-started/kirigami/style-colors/index.md:0
msgid "Make your app follow your user color scheme\n"
msgstr "Laat uw toepassing uw gebruikerskleurenschema volgen\n"

#: content/docs/getting-started/kirigami/style-colors/index.md:12
msgid ""
"Kirigami has a color palette that follows the system colors to better "
"integrate with the platform it is running on (i.e. Plasma Desktop, Plasma "
"Mobile, GNOME, Android, etc.)."
msgstr ""
"Kirigami heeft een kleurenpalet dat de systeemkleuren volgt, om beter te "
"integreren op het platform waarop het actief is (d.w.z. Plasma bureaublad, "
"Plasma mobiel, GNOME, Android, etc.)."

#: content/docs/getting-started/kirigami/style-colors/index.md:16
msgid ""
"All of the QML components of Kirigami and QtQuick Controls should already "
"follow this palette by default, so usually no custom coloring should be "
"needed for these controls."
msgstr ""
"Alle QML componenten van Kirigami en alle Qt Quick Controls zouden het "
"pallet al standaard moeten volgen, dus zal gewoonlijk helemaal geen "
"aangepaste kleuring nodig zijn voor deze besturingen."

#: content/docs/getting-started/kirigami/style-colors/index.md:20
msgid ""
"Primitive components such as [Rectangle](docs:qtquick;QtQuick.Rectangle) "
"should always be colored with the color palette provided by Kirigami via the "
"[Kirigami.Theme](docs:kirigami2;Kirigami::Platform::PlatformTheme) attached "
"property."
msgstr ""
"Primitieve componenten zoals [Rectangle](docs:qtquick;QtQuick.Rectangle) "
"zouden altijd gekleurd moeten zijn met het kleurpalet geleverd door Kirigami "
"via de aangehangen eigenschap [Kirigami.Thema](docs:kirigami2;Kirigami::"
"Platform::PlatformTheme)."

#: content/docs/getting-started/kirigami/style-colors/index.md:23
msgid ""
"Hardcoded colors in QML, such as `#32b2fa` or `red`, should usually be "
"avoided; if it is really necessary to have elements with custom colors, it "
"should be an area where only custom colors are used (usually in the content "
"area of the app, and never in chrome areas such as toolbars or dialogs). For "
"instance, a hardcoded `black` foreground cannot be used over a [Kirigami."
"Theme.backgroundColor](docs:kirigami2;Kirigami::Platform::PlatformTheme::"
"backgroundColor) background, because if the platform uses a dark color "
"scheme the result will have poor contrast with black over almost black. This "
"is an accessibility issue and should be avoided."
msgstr ""
"Hard gecodeerde kleuren in QML, zoals `#32b2fa` of `red` zouden gewoonlijk "
"vermeden moeten worden; als het echt noodzakelijk is om elementen met "
"aangepaste kleuren te hebben, zou het in een gebied moeten zijn waar alleen "
"aangepaste kleuren zijn gebruikt (gewoonlijk in het inhoudsgebied van de "
"toepassing en nooit in het chroomgebieden zoals werkbalken of dialogen). "
"Bijvoorbeeld, een hard gecodeerd `black` als voorgrond kan niet gebruikt "
"worden over een [Kirigami.Theme.backgroundColor](docs:kirigami2;Kirigami::"
"Platform::PlatformTheme::backgroundColor) achtergrond, omdat als het "
"platform een donker kleurenschema gebruikt het resultaat er slecht uitziet "
"met contrast tussen zwart en bijna zwart."

#: content/docs/getting-started/kirigami/style-colors/index.md:30
msgid ""
"If you really need to use custom colors, check out [Kontrast](https://apps."
"kde.org/kontrast/) to ensure that the colors you choose have good contrast "
"and are [WCAG compliant](https://en.wikipedia.org/wiki/"
"Web_Content_Accessibility_Guidelines)."
msgstr ""
"Als u echt aangepaste kleuren nodig hebt, kijk dan op [Kontrast](https://"
"apps.kde.org/kontrast/) om er zeker van te zijn dat de kleuren die u kiest "
"een goed contrast hebben en [WCAG compliant](https://en.wikipedia.org/wiki/"
"Web_Content_Accessibility_Guidelines) zijn."

#: content/docs/getting-started/kirigami/style-colors/index.md:34
#: content/docs/getting-started/kirigami/style-typography/index.md:373
msgid "Theme"
msgstr "Thema"

#: content/docs/getting-started/kirigami/style-colors/index.md:36
msgid ""
"[Kirigami.Theme](docs:kirigami2;Kirigami::Platform::PlatformTheme) is an "
"attached property, and therefore it is available to use for any QML item. "
"Its properties include all the colors available in the palette, and what "
"palette to use, such as the [colorSet](docs:kirigami2;Kirigami::Platform::"
"PlatformTheme::colorSet) property."
msgstr ""
"[Kirigami.Theme](docs:kirigami2;Kirigami::Platform::PlatformTheme) is een "
"aangehangen eigenschap en is daarom beschikbaar voor gebruik in elk QML "
"item. Het bevat als eigenschap alle kleuren beschikbaar in het palet, zoals "
"eigenschap [colorSet](docs:kirigami2;Kirigami::Platform::PlatformTheme::"
"colorSet)."

#: content/docs/getting-started/kirigami/style-colors/index.md:58
msgid ""
"[Kirigami Gallery](https://apps.kde.org/kirigami2.gallery/) provides a code "
"example showcasing [all colors available for Kirigami](https://invent.kde."
"org/sdk/kirigami-gallery/-/blob/master/src/data/contents/ui/gallery/"
"ColorsGallery.qml) through [Kirigami.Theme](docs:kirigami2;Kirigami::"
"Platform::PlatformTheme). This includes all their states: if you click "
"outside the window, the colors change to their inactive state, and if you "
"switch your system to a dark theme, the dark variants of the colors should "
"show up in real time."
msgstr ""
"[Kirigami Gallery](https://apps.kde.org/kirigami2.gallery/) levert een "
"codevoorbeeld die [alle beschikbare kleuren voor Kirigami](https://invent."
"kde.org/sdk/kirigami-gallery/-/blob/master/src/data/contents/ui/gallery/"
"ColorsGallery.qml) presenteert via [Kirigami.Theme](docs:kirigami2;Kirigami::"
"Platform::PlatformTheme). Dit omvat alle hun statussen: als u buiten het "
"venster klikt, wijzigen de kleuren naar hun inactieve status en als u uw "
"systeem omschakelt naar een donker thema, zouden de donkere varianten van de "
"kleuren direct moeten verschijnen."

#: content/docs/getting-started/kirigami/style-colors/index.md:60
msgid "The Colors component in Kirigami Gallery"
msgstr "De kleurencomponent in Kirigami galerij"

#: content/docs/getting-started/kirigami/style-colors/index.md:62
msgid "Color Set"
msgstr "Kleurenset"

#: content/docs/getting-started/kirigami/style-colors/index.md:64
msgid ""
"Depending on where a control is located, it should use a different color "
"set: for instance, when the Breeze Light color scheme is used in [Views]"
"(https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview.html), the normal "
"background is almost white, while in other regions, such as toolbars or "
"dialogs, the normal background color is gray."
msgstr ""
"Afhankelijk van waar een besturing is gelokaliseerd, zou het een andere "
"kleurset moeten gebruiken: bijvoorbeeld, (met het kleurenthema Breeze light) "
"in [Views](https://doc.qt.io/qt-6/qtquick-modelviewsdata-modelview.html), is "
"de normale achtergrond bijna wit, terwijl in andere gebieden, zoals "
"werkbalken of dialogen, de normale achtergrondkleur grijs is."

#: content/docs/getting-started/kirigami/style-colors/index.md:67
msgid ""
"If you define a color set for an item, all of its child items will "
"recursively inherit it automatically (unless the property [inherit](docs:"
"kirigami2;Kirigami::Platform::PlatformTheme::inherit) has explicitly been "
"set to `false`, which should always be done when the developer wants to "
"force a specific color set) so it is easy to change colors for an entire "
"hierarchy of items without touching any of the items themselves."
msgstr ""
"Als u een kleurenset voor een item definieert, zullen alle kind-items "
"recursief het automatisch erven (tenzij de eigenschap [inherit](docs:"
"kirigami2;Kirigami::Platform::PlatformTheme::inherit) expliciet is ingesteld "
"op `false`, wat altijd gedaan zou moeten worden wanneer de ontwikkelaars een "
"specifieke kleurenset wil afdwingen) het is dus gemakkelijk kleuren te "
"wijzigen voor een gehele hiërarchie van items zonder de items zelf aan te "
"raken."

#: content/docs/getting-started/kirigami/style-colors/index.md:72
msgid ""
"[Kirigami.Theme](docs:kirigami2;Kirigami::Platform::PlatformTheme) supports "
"5 different color sets:"
msgstr ""
"[Kirigami.Theme](docs:kirigami2;Kirigami::Platform::PlatformTheme) "
"ondersteunt 5 verschillende kleurensets:"

#: content/docs/getting-started/kirigami/style-colors/index.md:74
msgid ""
"View: Color set for item views, usually the lightest of all (in light color "
"themes)"
msgstr ""
"Beeld: kleurenset voor item weergaven, gewoonlijk de lichtste van allen (in "
"lichte kleurenthema's)"

#: content/docs/getting-started/kirigami/style-colors/index.md:76
msgid ""
"Window: Color set for windows and chrome areas (this is also the default "
"color set)"
msgstr ""
"Venster: kleurenset voor vensters en chroom-gebieden (dit is ook de "
"standaard kleurenset)"

#: content/docs/getting-started/kirigami/style-colors/index.md:77
msgid "Button: Color set used by buttons"
msgstr "Knop: kleurenset gebruikt door knoppen"

#: content/docs/getting-started/kirigami/style-colors/index.md:78
msgid "Selection: Color set used by selected areas"
msgstr "Selectie: kleurenset gebruikt door geselecteerde gebieden"

#: content/docs/getting-started/kirigami/style-colors/index.md:79
msgid "Tooltip: Color set used by tooltips"
msgstr "Tekstballon: kleurenset gebruikt door tekstballonnen"

#: content/docs/getting-started/kirigami/style-colors/index.md:80
msgid ""
"Complementary: Color set meant to be complementary to Window: usually dark "
"even in light themes. May be used for emphasis in small areas of the "
"application"
msgstr ""
"Complementair: kleurenset bedoeld om complementair te zijn aan venster: "
"gewoonlijk is donker de tegenhanger van lichte thema's. Kan gebruikt worden "
"voor emphasis in kleine gebieden van de toepassing"

#: content/docs/getting-started/kirigami/style-colors/index.md:84
msgid ""
"Here is an example showcasing how color sets are inherited and can be used "
"to distinguish different components. A large border has been added to "
"contrast colors."
msgstr ""
"Hier is een voorbeeld dat presenteert hoe kleurensets geërfd worden en "
"gebruikt kunnen worden om verschillende componenten te onderscheiden. Een "
"grote rand is toegevoegd om kleuren te laten contrasteren."

#: content/docs/getting-started/kirigami/style-colors/index.md:92
msgid "How color sets differ in Breeze"
msgstr "Hoe kleurensets in Breeze verschillen"

#: content/docs/getting-started/kirigami/style-colors/index.md:98
msgid "How color sets differ in Breeze Dark"
msgstr "Hoe kleurensets in Breeze Dark verschillen"

#: content/docs/getting-started/kirigami/style-colors/index.md:104
msgid "Using Custom Colors"
msgstr "Aangepaste kleuren gebruiken"

#: content/docs/getting-started/kirigami/style-colors/index.md:106
msgid ""
"Although it's discouraged to use hardcoded colors, Kirigami offers a more "
"maintainable way to assign a custom hardcoded palette to an item and all its "
"children, which allows to define such custom colors in one place and one "
"only:"
msgstr ""
"Hoewel het ontmoedigd wordt om hard gecodeerde kleuren te gebruiken, biedt "
"Kirigami een meer te onderhouden manier om een aangepaste hard gecodeerd "
"palet aan een item en al zijn kinderen toe te kennen, dat biedt het "
"definiëren van zulke aangepaste kleuren op alleen één plaats:"

#: content/docs/getting-started/kirigami/style-colors/index.md:127
msgid ""
"NOTE: regardless of the color set used, it is recommended to replace all "
"available colors in Theme, to avoid badly contrasting colors"
msgstr ""
"Opmerking: onafhankelijk van welke kleurenset wordt gebruikt, wordt "
"aanbevolen om alle beschikbare kleuren van het thema te vervangen, om "
"slechte combinaties van kleuren te vermijden"

#: content/docs/getting-started/kirigami/style-colors/index.md:135
msgid "Redefine all the other colors you want"
msgstr "Definieer alle andere door u gewenste kleuren"

#: content/docs/getting-started/kirigami/style-colors/index.md:137
msgid "This will be \"#b9d795\""
msgstr "Dits zal \"#b9d795\" zijn"

#: content/docs/getting-started/kirigami/style-colors/index.md:141
msgid "This will be \"#465c2b\""
msgstr "Dit zal \"#465c2b\" zijn"

#: content/docs/getting-started/kirigami/style-colors/index.md:157
msgid "Example with custom colors"
msgstr "Voorbeeld met eigen/aangepaste kleuren"

#: content/docs/getting-started/kirigami/style-typography/index.md:0
msgid "Typography"
msgstr "Typografie"

#: content/docs/getting-started/kirigami/style-typography/index.md:12
msgid ""
"For demonstrative purposes, this tutorial uses an AbstractCard to make the "
"text examples clearer. A better way to achieve the same results would be to "
"use a [Kirigami Addons FormCard](/docs/getting-started/kirigami/addons-"
"introduction)."
msgstr ""
"Als demonstratie, gebruiken we in deze instructie een AbstractCard om de "
"tekst duidelijker te maken. Een betere manier om hetzelfde resultaat te "
"krijgen is om een [Kirigami Addons FormCard](/docs/getting-started/kirigami/"
"addons-introduction) te gebruiken."

#: content/docs/getting-started/kirigami/style-typography/index.md:16
msgid "Headings"
msgstr "Hoofdstuktitels"

#: content/docs/getting-started/kirigami/style-typography/index.md:18
msgid ""
"Kirigami provides a [Heading](docs:kirigami2;Heading) that can be used for "
"page or section titles."
msgstr ""
"Kirigami biedt een [Heading](docs:kirigami2;Heading) dat gebruikt kan worden "
"voor pagina- of sectietitels."

#: content/docs/getting-started/kirigami/style-typography/index.md:72
msgid "Five headings with different levels for size comparison"
msgstr "Vijf koppen met verschillende niveaus voor vergelijken van grootte"

#: content/docs/getting-started/kirigami/style-typography/index.md:78
msgid "Labels"
msgstr "Labels"

#: content/docs/getting-started/kirigami/style-typography/index.md:80
msgid ""
"Text elements should use the [Label](docs:qtquickcontrols;QtQuick.Controls."
"Label) component from QtQuick Controls 2."
msgstr ""
"Tekstelementen zouden de component [Label](docs:qtquickcontrols;QtQuick."
"Controls.Label) uit QtQuick Controls 2 moeten gebruiken."

#: content/docs/getting-started/kirigami/style-typography/index.md:119
msgid "Text Alignment"
msgstr "Uitlijning tekst"

#: content/docs/getting-started/kirigami/style-typography/index.md:121
msgid ""
"You can align your text elements using the [horizontalAlignment](https://doc."
"qt.io/qt-6/qml-qtquick-text.html#horizontalAlignment-prop) and "
"[verticalAlignment](https://doc.qt.io/qt-6/qml-qtquick-text."
"html#verticalAlignment-prop) properties."
msgstr ""
"U kunt uw tekstelementen uitlijnen met de eigenschappen [horizontalAlignment]"
"(https://doc.qt.io/qt-6/qml-qtquick-text.html#horizontalAlignment-prop) en "
"[verticalAlignment](https://doc.qt.io/qt-6/qml-qtquick-text."
"html#verticalAlignment-prop)."

#: content/docs/getting-started/kirigami/style-typography/index.md:166
msgid "Heading and lorem ipsum text aligned to the horizontal center"
msgstr "Kop en tekst lorem ipsum uitgelijnd naar het horizontale centrum"

#: content/docs/getting-started/kirigami/style-typography/index.md:215
msgid "Heading and lorem ipsum text using right-aligned text"
msgstr "Kop en tekst lorem ipsum met de tekst rechts uitgelijnd"

#: content/docs/getting-started/kirigami/style-typography/index.md:266
msgid ""
"Heading with bottom vertical alignment and lorem ipsum text with top "
"vertical alignment"
msgstr ""
"Kop met verticale uitlijning onderaan en tekst lorem ipsum met verticale "
"uitlijning bovenaan"

#: content/docs/getting-started/kirigami/style-typography/index.md:317
msgid ""
"Heading with top vertical alignment and lorem ipsum text with bottom "
"vertical alignment"
msgstr ""
"Kop met verticale uitlijning bovenaan en tekst lorem ipsum met verticale "
"uitlijning onderaan"

#: content/docs/getting-started/kirigami/style-typography/index.md:323
msgid "Rich Text"
msgstr "Opgemaakte tekst"

#: content/docs/getting-started/kirigami/style-typography/index.md:325
msgid ""
"QML allows you to display (and edit) rich text. The behavior can be "
"controlled via the [textFormat](https://doc.qt.io/qt-6/qml-qtquick-text."
"html#textFormat-prop) property."
msgstr ""
"QML biedt u het tonen (en bewerken) van opgemaakte tekst. Het gedrag kan "
"bestuurd worden via de eigenschap [textFormat](https://doc.qt.io/qt-6/qml-"
"qtquick-text.html#textFormat-prop)."

#: content/docs/getting-started/kirigami/style-typography/index.md:367
msgid ""
"A Label containing a list of fruits using HTML tags like paragraph, "
"unordered lists and bold fonts"
msgstr ""
"Een label met een lijst met fruit gebruikmakend van HTML tags zoals "
"paragraaf, ongeordende lijsten en vette lettertypen"

#: content/docs/getting-started/kirigami/style-typography/index.md:375
msgid ""
"The font size of the [Kirigami.Theme](docs:kirigami2;Kirigami::Platform::"
"PlatformTheme) is available as `Kirigami.Theme.defaultFont.pointSize` in "
"your application."
msgstr ""
"De tekengrootte van het [Kirigami.Theme](docs:kirigami2;Kirigami::Platform::"
"PlatformTheme) is beschikbaar als `Kirigami.Theme.defaultFont.pointSize` in "
"uw toepassing."

#~ msgid ""
#~ "KDE has a custom tool to easily build all of its libraries and programs: "
#~ "**kde-builder**. It can be used to build Kirigami on Linux and FreeBSD."
#~ msgstr ""
#~ "KDE heeft een eigen hulpmiddel om gemakkelijk al zijn bibliotheken en "
#~ "programma's te bouwen: **kde-builder**. Het kan gebruikt worden om "
#~ "Kirigami op Linux en FreeBSD te bouwen."

#~ msgid ""
#~ "For this tutorial, you will need to follow the [setup instructions for "
#~ "kde-builder](/docs/getting-started/building/kde-builder-setup)."
#~ msgstr ""
#~ "Voor deze inleiding moet u de [opzetinstructies voor kde-builder](/docs/"
#~ "getting-started/building/kde-builder-setup) volgen."

#~ msgid ""
#~ "If you want kde-builder to handle building and installation of your "
#~ "project, you need to:"
#~ msgstr ""
#~ "Als u wilt dat kde-builder het bouwen en installeren van uw project "
#~ "afhandelt, dan moet u:"

#~ msgid ""
#~ "move the project folder to `~/kde/src`, that is, `~/kde/src/kirigami-"
#~ "tutorial`"
#~ msgstr ""
#~ "de projectmap naar `~/kde/src`, dat is, `~/kde/src/kirigami-tutorial`"

#~ msgid "Then you can build and install it with the command:"
#~ msgstr "Daarna kan u bouwen en installeren met het commando:"

#~ msgid ""
#~ "In case you want to handle building and installation manually without kde-"
#~ "builder, you will need to specify the place where the program will be "
#~ "installed. To do that, we need to change directories to our `kirigami-"
#~ "tutorial/` folder in our terminal application of choice and run the "
#~ "following commands:"
#~ msgstr ""
#~ "In geval u het bouwen en installeren handmatig wilt doen zonder kde-"
#~ "builder, dan hebt u de plaats nodig waar het programma geïnstalleerd zal "
#~ "worden. Om dat te doen moeten we de mappen naar onze map `kirigami-"
#~ "tutorial/` in onze gekozen terminaltoepassing wijzigen en de volgende "
#~ "commando's uitvoeren:"

#~ msgid "On Linux, with kdesrc-build"
#~ msgstr "Op Linux, met kdesrc-build"

#~ msgid ""
#~ "If you wish to build Kirigami with Qt6, it is recommended to use [kdesrc-"
#~ "build](#kdesrc-build) instead, especially for Linux installations using "
#~ "Plasma 5."
#~ msgstr ""
#~ "Als u Kirigami met Qt6 wilt bouwen is het aanbevolen om in plaats daarvan "
#~ "[kdesrc-build](#kdesrc-build) te gebruiken, speciaal voor Linux "
#~ "installaties die Plasma 5 gebruiken."

#~ msgid ""
#~ "The application's AboutPage is slightly more complex, but it's still very "
#~ "simple to use. We will be adding a new QML file that will contain the "
#~ "information needed for our about page. First in our `resources.qrc` file:"
#~ msgstr ""
#~ "De AboutPage van de toepassing is iets complexer, maar het is nog steeds "
#~ "erg eenvoudig te gebruiken. We zullen een nieuwe QML-bestand toevoegen "
#~ "die de informatie zal bevatten nodig voor onze pagina over. Eerst in ons "
#~ "bestand `resources.qrc`:"

#~ msgid "And our `contents/ui/MyAboutPage.qml` should have the following:"
#~ msgstr ""
#~ "En onze `contents/ui/MyAboutPage.qml` zou het volgende moeten bevatten:"

#~ msgid ""
#~ "Here we use the information we set using [KAboutData](docs:kcoreaddons;"
#~ "KAboutData) in our `main.cpp`. Here's a brief reminder of what is in "
#~ "`main.cpp`:"
#~ msgstr ""
#~ "Hier gebruiken we de informatie die we hebben ingesteld met [KAboutData]"
#~ "(docs:kcoreaddons;KAboutData) in onze `main.cpp`. Hier is een beknopte "
#~ "herinnering aan wat in `main.cpp` is:"

#~ msgid "<========== used in the import"
#~ msgstr "<========== gebruikt in het importeren"

#~ msgid "<========== C++ object exported as a QML type"
#~ msgstr "<========== C++ object geëxporteerd als een QML-type"

#~ msgid ""
#~ "The `About` object we exported to the QML side using "
#~ "[qmlRegisterSingletonType()](docs:qtqml;QQmlEngine::"
#~ "qmlRegisterSingletonType) contains the data from [KAboutData::"
#~ "applicationData()](docs:kcoreaddons;KAboutData::applicationData), and "
#~ "that is what we pass to the `aboutData` property."
#~ msgstr ""
#~ "Het object `About` dat we exporteerden naar de QML-kant met "
#~ "[qmlRegisterSingletonType()](docs:qtqml;QQmlEngine::"
#~ "qmlRegisterSingletonType) bevat de gegevens uit [KAboutData::"
#~ "applicationData()](docs:kcoreaddons;KAboutData::applicationData) en dat "
#~ "is wat we doorgeven aan de eigenschap `aboutData`."

#~ msgid "Lastly, we add our new MyAboutPage to our `main.qml`:"
#~ msgstr ""
#~ "Tenslotte voegen we onze nieuwe MyAboutPage toe aan onze `main.qml`:"

#~ msgid ""
#~ "If you were wondering why the About page was kept separate rather than "
#~ "embedded in `main.qml`, that is because it allows to set a custom model "
#~ "for the `aboutData` property."
#~ msgstr ""
#~ "Als u zich afvraagt waarom de pagina About apart is gehouden in plaats "
#~ "van ingebed in `main.qml`, dan is dat omdat het biedt het instellen van "
#~ "een aangepast model voor de eigenschap `aboutData`."

#~ msgid "Add a new line to our `resources.qrc`:"
#~ msgstr "Voeg een nieuwe regel toe aan uw `resources.qrc`:"

#~ msgid "A standard `resources.qrc`:"
#~ msgstr "Een standaard `resources.qrc`:"

#~ msgid "CardsGridView"
#~ msgstr "CardsGridView"

#~ msgid ""
#~ "Use a [Kirigami.CardsGridView](docs:kirigami2;CardsGridView) to display "
#~ "cards in a grid."
#~ msgstr ""
#~ "Een [Kirigami.CardsGridView](docs:kirigami2;CardsGridView) gebruiken om "
#~ "kaarten in een raster te gebruiken."

#~ msgid ""
#~ "Its behavior is the same as a [CardsLayout](docs:kirigami2;CardsLayout), "
#~ "and it allows cards to be put in one or two columns depending on the "
#~ "available width."
#~ msgstr ""
#~ "Zijn gedrag is hetzelfde als een [CardsLayout](docs:kirigami2;"
#~ "CardsLayout) en het biedt kaarten om in een of twee kolommen te plaatsen "
#~ "afhankelijk van de beschikbare breedte."

#~ msgid ""
#~ "[CardsGridView](docs:kirigami2;CardsGridView) has the limitation that "
#~ "every card must have the same exact height, so [cellHeight](https://doc."
#~ "qt.io/qt-6/qml-qtquick-gridview.html#cellHeight-prop) must be manually "
#~ "set to a value for which the content must fit for every child card."
#~ msgstr ""
#~ "[CardsGridView](docs:kirigami2;CardsGridView) heeft de beperking dat elke "
#~ "kaart exact dezelfde hoogte moet hebben, dus [cellHeight](https://doc.qt."
#~ "io/qt-6/qml-qtquick-gridview.html#cellHeight-prop) moet handmatig gezet "
#~ "worden op een waarde waarbij de inhoud moet passen voor elk kindkaart."

#~ msgid ""
#~ "If possible use [CardsGridView](docs:kirigami2;CardsGridView) only when "
#~ "you need to instantiate many cards. If you are only going to instantiate "
#~ "a few cards, opt for a [CardsLayout](docs:kirigami2;CardsLayout) with a "
#~ "[Repeater](docs:qtquick;QtQuick.Repeater) instead."
#~ msgstr ""
#~ "Indien mogelijk [CardsGridView](docs:kirigami2;CardsGridView) alleen "
#~ "gebruiken wanneer u van veel kaarten een exemplaar moet maken. Als u dat "
#~ "gaat doen voor een paar kaarten, kies in plaats daarvan dan voor een "
#~ "[CardsLayout](docs:kirigami2;CardsLayout) met een [Repeater](docs:qtquick;"
#~ "QtQuick.Repeater)."

#~ msgid "Model with the following roles: text, actions and image"
#~ msgstr "Model met de volgende rollen: tekst, acties en afbeelding"

#~ msgid ""
#~ "![Screenshot of a CardsGridView where each card occupies the same amount "
#~ "of space in a grid](/docs/getting-started/kirigami/components-card/"
#~ "cardsgridview.png)"
#~ msgstr ""
#~ "![Schermafdruk van een CardsGridView, waar elke kaart dezelfde "
#~ "hoeveelheid ruimte inneemt in een raster](/docs/getting-started/kirigami/"
#~ "components-card/cardsgridview.png)"

#~| msgid ""
#~| "If you wish to build Kirigami with Qt6, this is currently not possible "
#~| "with only distribution packages on Linux. You will need to resort to "
#~| "[kdesrc-build](#kdesrc-build) instead."
#~ msgid ""
#~ "If you wish to build Kirigami with Qt6, this is currently not possible "
#~ "with only distribution packages on Linux. You will need to resort to [kde-"
#~ "builder](#kde-builder) instead."
#~ msgstr ""
#~ "Als u Kirigami wilt bouwen met Qt6 dan is dat nu niet mogelijk met alleen "
#~ "distributiepakketten op Linux. U moet in plaats daarvan uw toevlucht "
#~ "nemen tot [kde-builder] (#kde-builder)."

#~ msgid ""
#~ "When building the application after installing dependencies with Craft, "
#~ "just installing KIconThemes and Breeze ensures the application will be "
#~ "able to use Breeze icons on platforms like Windows, linking is not "
#~ "necessary. [qqc2-desktop-style](https://invent.kde.org/frameworks/qqc2-"
#~ "desktop-style) on the other hand is responsible for the nice looking "
#~ "style we want to enforce on those platforms."
#~ msgstr ""
#~ "Bij bouwen van de toepassing na installeren van afhankelijkheden met "
#~ "Craft, door eenvoudig KIconThemes en Breeze te installeren verzekert dat "
#~ "de toepassing in staat zal zijn om Breeze pictogrammen op platforms zoals "
#~ "Windows te gebruiken, linking is niet noodzakelijk. [qqc2-desktop-style]"
#~ "(https://invent.kde.org/frameworks/qqc2-desktop-style) aan de ander kant "
#~ "is verantwoordelijk voor de leuk uitziende stijl die we willen afdwingen "
#~ "op deze platforms."

#~ msgid "If Visual Studio:"
#~ msgstr "Indien Visual Studio:"

#~ msgid ""
#~ "{{< readfile file=\"/content/docs/getting-started/kirigami/advanced-"
#~ "connect_models/model.h\" highlight=\"cpp\" >}} {{< readfile file=\"/"
#~ "content/docs/getting-started/kirigami/advanced-connect_models/model.cpp\" "
#~ "highlight=\"cpp\" >}} {{< readfile file=\"/content/docs/getting-started/"
#~ "kirigami/advanced-connect_models/main.qml\" highlight=\"qml\" >}}"
#~ msgstr ""
#~ "{{< readfile file=\"/content/docs/getting-started/kirigami/advanced-"
#~ "connect_models/model.h\" highlight=\"cpp\" >}} {{< readfile file=\"/"
#~ "content/docs/getting-started/kirigami/advanced-connect_models/model.cpp\" "
#~ "highlight=\"cpp\" >}} {{< readfile file=\"/content/docs/getting-started/"
#~ "kirigami/advanced-connect_models/main.qml\" highlight=\"qml\" >}}"

#~ msgid ""
#~ "The first word is the framework, Qt. `${QT_MAJOR_VERSION}` is a "
#~ "convenience variable provided by extra-cmake-modules that lets us choose "
#~ "the Qt version to be used, 5 or 6, depending on whether we use the CMake "
#~ "flag `-DBUILD_WITH_QT6=ON`."
#~ msgstr ""
#~ "Het eerste woord is het framework, Qt. `${QT_MAJOR_VERSION}` is een "
#~ "variabele voor het gemak geleverd door extra-cmake-modules die ons de te "
#~ "gebruiken Qt-versie laten kiezen, 5 of 6, afhankelijk van of we de CMake-"
#~ "vlag `-DBUILD_WITH_QT6=ON` gebruiken."

#~ msgid ""
#~ "`NO_MODULE` switches CMake into the Config mode. We don't need to worry "
#~ "about that at the moment."
#~ msgstr ""
#~ "`NO_MODULE` schakelt CMake naar de modus Config. Op dit moment maken we "
#~ "ons daar geen zorgen over."

#~ msgid ""
#~ "Since most of the heavy lifting is done by the first file, this one is a "
#~ "lot shorter."
#~ msgstr ""
#~ "Omdat het zwaarste gedaan wordt door het eerste bestand, is deze heel wat "
#~ "korter."

#~ msgid ""
#~ "[add_executable()](https://cmake.org/cmake/help/latest/command/"
#~ "add_executable.html) takes care of generating our executable."
#~ msgstr ""
#~ "[add_executable()](https://cmake.org/cmake/help/latest/command/"
#~ "add_executable.html) zorgt voor genereren van het uitvoerbare bestand."

#~ msgid ""
#~ "[install()](https://cmake.org/cmake/help/latest/command/install.html) "
#~ "puts our executable in its right place by using `"
#~ "${KDE_INSTALL_TARGETS_DEFAULT_ARGS}`, a convenience variable provided by "
#~ "[KDEInstallDirs](https://api.kde.org/ecm/manual/ecm-kde-modules.7.html) "
#~ "in extra-cmake-modules that installs executables and libraries in their "
#~ "right place for you without needing to specify the absolute path, "
#~ "similarly to [GNUInstallDirs](https://cmake.org/cmake/help/latest/module/"
#~ "GNUInstallDirs.html)."
#~ msgstr ""
#~ "[install()](https://cmake.org/cmake/help/latest/command/install.html) zet "
#~ "ons uitvoerbare bestand op zijn juiste plaats door `"
#~ "${KDE_INSTALL_TARGETS_DEFAULT_ARGS}` te gebruiken, een gemaksvariabele "
#~ "geleverd door [KDEInstallDirs](https://api.kde.org/ecm/manual/ecm-kde-"
#~ "modules.7.html) in extra-cmake-modules die uitvoerbare bestanden en "
#~ "bibliotheken installeert op hun juiste plaats voor u zonder noodzaak het "
#~ "absolute pad te specificeren, overeenkomstig [GNUInstallDirs](https://"
#~ "cmake.org/cmake/help/latest/module/GNUInstallDirs.html)."

#~ msgid ""
#~ "One of [Kirigami.Page](docs:kirigami2;Page)'s features is that Actions "
#~ "can be added to it."
#~ msgstr ""
#~ "Een van de functies van [Kirigami.Page](docs:kirigami2;Page) is dat "
#~ "acties er aan toegevoegd kunnen worden."

#~ msgid ""
#~ "You can add a `actions.main` action, a `actions.left` and `actions.right` "
#~ "action and additional [context actions](../components-drawers#context-"
#~ "drawers) that are displayed on the toolbar if there is enough place or in "
#~ "a hamburger menu on smaller screens."
#~ msgstr ""
#~ "U kunt een actie `actions.main`, een `actions.left` en `actions.right` "
#~ "toevoegen en extra [contextacties](../components-drawers#context-drawers) "
#~ "die getoond worden in de werkbalk als er genoeg plaats is of in een "
#~ "hamburgermenu op kleinere schermen."

#~ msgid ""
#~ "To make the context actions work on mobile, you need to add a "
#~ "[ContextDrawer](docs:kirigami2;ContextDrawer) to your [Kirigami."
#~ "ApplicationWindow](docs:kirigami2;ApplicationWindow)."
#~ msgstr ""
#~ "Om de contextacties te laten werken op een mobiel, moet u een "
#~ "[ContextDrawer](docs:kirigami2;ContextDrawer) toevoegen aan uw [Kirigami."
#~ "ApplicationWindow](docs:kirigami2;ApplicationWindow)."

#~ msgid "Global Drawer"
#~ msgstr "Globale schuiflade"

#~ msgid "Global Drawer actions on a mobile device"
#~ msgstr "Globale schuiflade-acties op een mobiel apparaat"

#~ msgid ""
#~ "![A window showing a tool button \"Tool beep\" which is completely flat](/"
#~ "docs/getting-started/kirigami/components-controls/controls-toolbutton.png)"
#~ msgstr ""
#~ "![Een venster dat een werkbalkknop toont \"Piephulpmiddel\" die volledig "
#~ "vlak is](/docs/getting-started/kirigami/components-controls/controls-"
#~ "toolbutton.png)"

#~ msgid ""
#~ "We can also make it a tickmarked slider by setting the [stepSize](https://"
#~ "doc.qt.io/qt-6/qml-qtquick-controls2-rangeslider.html#stepSize-prop) "
#~ "property value to a number, in the exact same way as a standard slider."
#~ msgstr ""
#~ "We kunnen ook een schuifregelaar maken met markeringen door de eigenschap "
#~ "[stepSize](https://doc.qt.io/qt-6/qml-qtquick-controls2-rangeslider."
#~ "html#stepSize-prop) op een waarde van een getal te zetten, op exact "
#~ "dezelfde manier als een standaard schuifregelaar."

#~ msgid "Banners"
#~ msgstr "Voorlooppagina's"

#~ msgid ""
#~ "Banners allow you to display a title and an icon at the top of your "
#~ "global drawer (even above the header)."
#~ msgstr ""
#~ "Banners bieden u het tonen van een titel en een pictogram bovenaan uw "
#~ "globale schuiflade (zelfs boven het opschrift)."

#~ msgid ""
#~ "By default, banners are only visible on mobile environments. You can "
#~ "change this by setting the global drawer component's [bannerVisible](docs:"
#~ "kirigami2;GlobalDrawer) property to `true`."
#~ msgstr ""
#~ "Standaard zijn banners echter alleen zichtbaar in mobiele omgevingen. U "
#~ "kunt dit wijzigen door de global de eigenschap [bannerVisible](docs:"
#~ "kirigami2;GlobalDrawer) van de schuifladecomponent op `true` te zetten."

#~ msgid ""
#~ "Titles, set with the [title](docs:kirigami2;GlobalDrawer::title) "
#~ "property, can be used to pretty up your global drawer and make it seem "
#~ "less sparse. More importantly, it can remind your users that this is a "
#~ "global and app-wide drawer rather than a local drawer."
#~ msgstr ""
#~ "Titels, ingesteld met de eigenschap [title](docs:kirigami2;GlobalDrawer::"
#~ "title), kunnen gebruikt worden om uw globale schuiflade mooier te maken "
#~ "en laat het minder zeldzaam te maken. Belangrijker, het kan uw gebruikers "
#~ "er aan herinneren dat dit een globale toepassingsbrede schuiflade is in "
#~ "plaats van een lokale schuiflade."

#~ msgid ""
#~ "There is also a [titleIcon](docs:kirigami2;GlobalDrawer::titleIcon) "
#~ "property, which can be paired with your title to make the global drawer "
#~ "even more aesthetically pleasing. This icon will be placed to the left of "
#~ "the title."
#~ msgstr ""
#~ "Er is ook een eigenschap [titleIcon](docs:kirigami2;GlobalDrawer::"
#~ "titleIcon), die gepaard kan worden met uw titel om de globale schuiflade "
#~ "nog esthetischer en aantrekkelijker te maken. Dit pictogram zal links van "
#~ "de titel geplaatst worden."

#~ msgid "Global drawer with title and icon in banner"
#~ msgstr "Globale schuiflade met titel en pictogram in banner"

#~ msgid ""
#~ "On mobile, the drawer always consists of actions hidden behind a "
#~ "hamburger menu. It can be activated by tapping the hamburger menu or by "
#~ "swiping from the right edge to the middle of the screen in Left to Right "
#~ "mode or from the left edge in Right to Left mode. If you are on a desktop "
#~ "and want to test the mobile interface, you can run your application with "
#~ "the environment variable `QT_QUICK_CONTROLS_MOBILE=1`."
#~ msgstr ""
#~ "Op een mobiel bestaat de schuiflade altijd uit acties verborgen achter "
#~ "een hamburgermenu. Het kan geactiveerd worden door op het hamburgermenu "
#~ "te tikken of door vegen vanaf de rechter rand naar het midden van het "
#~ "scherm in modus Links-naar-rechts or vanaf de linker rand in modus Rechts-"
#~ "naar-links. Als u op een bureaublad bent en het mobielinterface wilt "
#~ "testen, dan kunt u uw toepassing uitvoeren met de omgevingsvariabele "
#~ "`QT_QUICK_CONTROLS_MOBILE=1`."

#~ msgid "Inline drawer on the bottom edge of the screen"
#~ msgstr "Inline schuiflade aan de onderrand van het venster"

#~ msgid "A use case for bottom overlay drawers: NeoChat"
#~ msgstr "Een gebruiksgeval voor overlay-schuifladen onderaan: NeoChat"

#~ msgid ""
#~ "NeoChat uses bottom overlay drawers to provide the user with a number of "
#~ "actions they can perform on a message they have long pressed. Here is a "
#~ "simplified example of what that looks like:"
#~ msgstr ""
#~ "NeoChat gebruikt overlay-schuifladen onderaan om de gebruiker te voorzien "
#~ "van een aantal acties die uitgevoerd kunnen worden op een bericht waarop "
#~ "lang is gedrukt. Hier is een eenvoudig voorbeeld over hoe dat er uitziet:"

#~ msgid "Message information"
#~ msgstr "Berichtinformatie"

#~ msgid "Message actions"
#~ msgstr "Berichtacties"

#~ msgid "Creating a basic listview"
#~ msgstr "Een basis lijstweergave aanmaken"

#~ msgid ""
#~ "Providing a number for the model property will generate that number of "
#~ "data entries starting from 0."
#~ msgstr ""
#~ "Een getal leveren voor de eigenschap model zal dat getal genereren uit "
#~ "gegevensitems beginnend vanaf 0."

#~ msgid ""
#~ "![A simple listview](/docs/getting-started/kirigami/components-listview/"
#~ "listview-simple.png)"
#~ msgstr ""
#~ "![Een eenvoudige lijstweergave](/docs/getting-started/kirigami/components-"
#~ "listview/listview-simple.png)"

#~ msgid ""
#~ "In cases where your model data only contain a single piece of data, like "
#~ "in the example above, you can just grab the data in the model by "
#~ "referencing [modelData](https://doc.qt.io/qt-6/qtquick-modelviewsdata-"
#~ "modelview.html#models)."
#~ msgstr ""
#~ "In gevallen waar uw modelgegevens slechts een enkel stukje gegevens "
#~ "bevatten, zoals in het bovenstaande voorbeeld, kunt u de gegevens in het "
#~ "model pakken door te wijzen naar [modelData](https://doc.qt.io/qt-6/"
#~ "qtquick-modelviewsdata-modelview.html#models)."

#~ msgid ""
#~ "A note on delegates: if your model contains objects with data in named "
#~ "properties, the name of these properties will be automatically exposed to "
#~ "your delegate and you will only need to use these names in your delegate."
#~ msgstr ""
#~ "Een opmerking over gedelegeerden: als uw model objecten bevat met "
#~ "gegevens eigenschappen met namen, zal de naam van deze eigenschappen "
#~ "automatisch zichtbaar zijn aan uw gedelegeerde en u hoeft alleen deze "
#~ "namen in uw gedelegeerde te gebruiken."

#~ msgid ""
#~ "Kirigami offers a number of components that have been designed "
#~ "specifically for use in list views, such as [Kirigami.BasicListItem](docs:"
#~ "kirigami2;BasicListItem), [Kirigami.CheckableListItem](docs:kirigami2;"
#~ "CheckableListItem) and [Kirigami.SwipeListItem](docs:kirigami2;"
#~ "SwipeListItem), all of which build upon [Kirigami.AbstractListItem](docs:"
#~ "kirigami2;AbstractListItem). There are also [Kirigami.CheckDelegate](docs:"
#~ "kirigami2;CheckDelegate), [Kirigami.RadioDelegate](docs:kirigami2;"
#~ "RadioDelegate), and [Kirigami.SwitchDelegate](docs:kirigami2;"
#~ "SwitchDelegate), which are designed to take advantage of those specific "
#~ "controls."
#~ msgstr ""
#~ "Kirigami biedt een aantal componenten die specifiek ontworpen zijn voor "
#~ "gebruik in lijstweergaven, zoals [Kirigami.BasicListItem](docs:kirigami2;"
#~ "BasicListItem), [Kirigami.CheckableListItem](docs:kirigami2;"
#~ "CheckableListItem) en [Kirigami.SwipeListItem](docs:kirigami2;"
#~ "SwipeListItem), die allemaal bouwen op [Kirigami.AbstractListItem](docs:"
#~ "kirigami2;AbstractListItem). Er zijn ook [Kirigami.CheckDelegate](docs:"
#~ "kirigami2;CheckDelegate), [Kirigami.RadioDelegate](docs:kirigami2;"
#~ "RadioDelegate) en [Kirigami.SwitchDelegate](docs:kirigami2;"
#~ "SwitchDelegate), die ontworpen zijn om te profiteren van deze specifieke "
#~ "besturingen."

#~ msgid ""
#~ "However, you are not limited to using these components and you can choose "
#~ "whichever ones you wish. This may require some tweaking of your layout."
#~ msgstr ""
#~ "U bent echter niet beperkt tot het gebruik van deze componenten en u kunt "
#~ "kiezen uit diegenen die u wenst. Dit kan enig aanpassen in uw indeling "
#~ "betekenen."

#~ msgid "Placeholder messages"
#~ msgstr "Meldingen met plaatshouders"

#~ msgid ""
#~ "In some cases, you might want to use a list view that is empty until the "
#~ "user does something. In these situations, using a [Kirigami."
#~ "PlaceholderMessage](docs:kirigami2;PlaceholderMessage) can be an "
#~ "attractive way of telling your user that the list is empty and that they "
#~ "can do something about it."
#~ msgstr ""
#~ "In sommige gevallen zou u een lijstweergave willen gebruiken die leeg is "
#~ "totdat de gebruiker iets doet. In deze situaties kan gebruik van een "
#~ "[Kirigami.PlaceholderMessage](docs:kirigami2;PlaceholderMessage) een "
#~ "attractieve manier zijn om uw gebruiker te vertellen dat de lijst leeg is "
#~ "en dat deze er iets aan kan doen."

#~ msgid ""
#~ "You will generally want to place a placeholder message in the center of "
#~ "the ListView and you will likely not want it to span the entire width of "
#~ "the ListView. You will obviously also want it to be hidden once the "
#~ "ListView's model becomes populated with data. Thankfully, ListViews have "
#~ "a property named [count](https://doc.qt.io/qt-6/qml-qtquick-listview."
#~ "html#count-prop) that makes doing this quite easy."
#~ msgstr ""
#~ "In het algemeen zult u een plaatshouderbericht in het centrum van de "
#~ "ListView willen plaatsen en u wilt waarschijnlijk ook niet dat het de "
#~ "gehele breedte van de ListView gebruikt. U zult natuurlijk ook willen dat "
#~ "het verborgen is nadat het model van ListView bevolkt is met gegevens. "
#~ "Gelukkig heeft ListViews een eigenschap genaamd [count](https://doc.qt.io/"
#~ "qt-6/qml-qtquick-listview.html#count-prop) die dit erg gemakkelijk maakt."

#~ msgid ""
#~ "You might also want to add a helpful action to your placeholder message. "
#~ "This can be done by attaching an action to the [PlaceholderMessage."
#~ "helpfulAction](docs:kirigami2;PlaceholderMessage::helpfulAction) property."
#~ msgstr ""
#~ "U zou ook een behulpzame actie willen toevoegen aan uw "
#~ "plaatshoudermelding. Dit kan gedaan worden door een actie aan de "
#~ "eigenschap [PlaceholderMessage.helpfulAction](docs:kirigami2;"
#~ "PlaceholderMessage::helpfulAction) vast te maken."

#~ msgid ""
#~ "![An empty list view which displays a placeholder message in the middle "
#~ "of the application together with an action to add new data to the model](/"
#~ "docs/getting-started/kirigami/components-listview/listview-"
#~ "placeholdermessage.png)"
#~ msgstr ""
#~ "![Een lege lijstweergave die een plaatshoudermelding in het midden van de "
#~ "toepassing toont samen met een actie om nieuwe gegevens aan het model toe "
#~ "te voegen](/docs/getting-started/kirigami/components-listview/listview-"
#~ "placeholdermessage.png)"

#~ msgid "Overlay sheets"
#~ msgstr "Overlay-vellen"

#~ msgid ""
#~ "Overlay sheets can serve a variety of uses for both serving and inputting "
#~ "data."
#~ msgstr ""
#~ "Overlay-vellen kunnen een verschillend aantal gebruiksdoelen dienen zowel "
#~ "voor leveren als invoeren van gegevens."

#~ msgid "Learning about the sheet"
#~ msgstr "Iets te weten te komen over het vel"

#~ msgid ""
#~ "In order to use an overlay sheet, we should create it inside the Kirigami "
#~ "Page we want it to appear in."
#~ msgstr ""
#~ "Om een overlay-vel te gebruiken, moeten we het aanmaken binnen de "
#~ "Kirigami pagina waarin we het willen laten verschijnen."

#~ msgid ""
#~ "![Simple overlay sheet containing only text](/docs/getting-started/"
#~ "kirigami/components-overlaysheets/sheet_simple.png)"
#~ msgstr ""
#~ "![Eenvoudig overlay-vel dat alleen tekst bevat](/docs/getting-started/"
#~ "kirigami/components-overlaysheets/sheet_simple.png)"

#~ msgid ""
#~ "Overlay sheets come with methods we can use to [open()](docs:kirigami2;"
#~ "templates::OverlaySheet::open) or [close()](docs:kirigami2;templates::"
#~ "OverlaySheet::close) them as we see fit. By default overlay sheets are "
#~ "hidden, so at the very least we will need to use the `open()` method."
#~ msgstr ""
#~ "Overlay-vellen komen met methoden die we kunnen kunnen gebruiken om te "
#~ "openen [open()](docs:kirigami2;templates::OverlaySheet::open) of sluiten "
#~ "[close()](docs:kirigami2;templates::OverlaySheet::close) zoals we dat "
#~ "nodig hebben. Standaard zijn overlay-vellen verborgen, dus zullen we ten "
#~ "minste de methode `open()` nodig hebben."

#~ msgid ""
#~ "When opened, this overlay sheet will appear centered vertically and "
#~ "horizontally within its parent page. Horizontally it will be bounded by "
#~ "its parent even if the width of its contents exceeds its parent's. If the "
#~ "sheet's vertical length exceeds its parent's, then the sheet will be "
#~ "displayed starting from its top position, and will be scrollable."
#~ msgstr ""
#~ "Bij openen zal dit overlay-vel verticaal en horizontaal gecentreerd "
#~ "verschijnen in zijn ouderpagina. Horizontaal zal het begrenst zijn door "
#~ "zijn ouder zelfs als zijn breedte van de inhoud groter is dan zijn ouder. "
#~ "Als de verticale lengte van het vel groter is dan die van zijn ouder, zal "
#~ "het vel getoond worden vanaf zijn bovenkant en zal te verschuiven zijn."

#~ msgid "Global sheet"
#~ msgstr "Globaal vel"

#~ msgid ""
#~ "If you want to display the sheet as a global sheet—one that spans across "
#~ "the entire width of the application, regardless of the page it is a child "
#~ "to—we have to reparent our overlay sheet to our application window's "
#~ "overlay property. We can do this with the [parent](https://doc.qt.io/qt-6/"
#~ "qml-qtquick-item.html#parent-prop) property."
#~ msgstr ""
#~ "Als u het vel als een globaal vel wilt tonen—een die spant over de gehele "
#~ "breedte van de toepassing, ongeacht of de pagina een kind is—moeten we "
#~ "ons overlay-vel opnieuw een ouder geven naar de overlay-eigenschap van "
#~ "ons toepassingsvenster. We kunnen dat doen met de eigenschap [parent]"
#~ "(https://doc.qt.io/qt-6/qml-qtquick-item.html#parent-prop)."

#~ msgid "Non-global overlay sheet"
#~ msgstr "Niet-globaal overlay-vel"

#~ msgid "Global overlay sheet"
#~ msgstr "Globaal overlay-vel"

#~ msgid "Fixed sizing"
#~ msgstr "Gerepresenteerde grootte"

#~ msgid ""
#~ "A sheet is greedy and will take the maximum amount of available width in "
#~ "a page if needed. We can avoid this by specifying an [implicitWidth]"
#~ "(https://doc.qt.io/qt-6/qml-qtquick-item.html#implicitWidth-prop) or a "
#~ "[Layout.preferredWidth](https://doc.qt.io/qt-6/qml-qtquick-layouts-layout."
#~ "html#preferredWidth-attached-prop) for its child elements, which will "
#~ "limit how much the sheet will grow width wise."
#~ msgstr ""
#~ "Een vel is hebberig en zal, indien nodig, de maximale hoeveelheid van "
#~ "beschikbare breedte in een pagina nemen. We kunnen dit vermijden door een "
#~ "[implicitWidth](https://doc.qt.io/qt-6/qml-qtquick-item."
#~ "html#implicitWidth-prop) of een [Layout.preferredWidth](https://doc.qt.io/"
#~ "qt-6/qml-qtquick-layouts-layout.html#preferredWidth-attached-prop) voor "
#~ "zijn kindelementen, die, hoeveel het vel zal groeien in de breedte, zal "
#~ "beperken."

#~ msgid "Non-fixed width overlay sheet"
#~ msgstr "Overlay-vel met niet-vastgezette breedte"

#~ msgid "Fixed width overlay sheet"
#~ msgstr "Overlay-vel met vaste breedte"

#~ msgid "Headers and footers"
#~ msgstr "Koppen en voeten"

#~ msgid ""
#~ "Overlay sheets come by default with a [header](docs:kirigami2;templates::"
#~ "OverlaySheet::header) that only contains a button for closing our overlay "
#~ "sheet. We can add a [Kirigami.Heading](docs:kirigami2;Heading) as a title "
#~ "in our [header](docs:kirigami2;templates::OverlaySheet::header) to make "
#~ "it easy for users to understand what the sheet is for. This is done by "
#~ "setting `header` to contain our heading component."
#~ msgstr ""
#~ "Overlay-vellen komen standaard met een [header](docs:kirigami2;templates::"
#~ "OverlaySheet::header) die alleen een knop voor sluiten van ons overlay-"
#~ "vel bevat. We kunnen een [Kirigami.Heading](docs:kirigami2;Heading) als "
#~ "een titel in onze [header](docs:kirigami2;templates::OverlaySheet::"
#~ "header) toevoegen om het gemakkelijk voor gebruikers te maken om te "
#~ "begrijpen waar het vel voor is. Dit wordt gedaan door de `header` de "
#~ "kopcomponent te laten bevatten."

#~ msgid ""
#~ "![Overlay sheet with title text in its header area](/docs/getting-started/"
#~ "kirigami/components-overlaysheets/sheet_header.png)"
#~ msgstr ""
#~ "![Overlay-vel met titeltekst in het kopgebied](/docs/getting-started/"
#~ "kirigami/components-overlaysheets/sheet_header.png)"

#~ msgid ""
#~ "We can also provide our overlay sheet with a [footer](docs:kirigami2;"
#~ "templates::OverlaySheet::footer). Footers in overlay sheets are quite "
#~ "flexible, but most often they are used to provide overlay sheets with "
#~ "some sort of quick interactive input similar to that provided by modal "
#~ "dialogs (e.g. buttons for \"Apply\", \"Ok\", \"Cancel\", \"Close\", etc.)"
#~ msgstr ""
#~ "We kunnen ook ons overlay-vel voorzien van een [footer](docs:kirigami2;"
#~ "templates::OverlaySheet::footer). Voettekst in overlay-vellen zijn "
#~ "behoorlijk flexibel, maar meestal worden ze gebruikt om overlay-vellen te "
#~ "voorzien van een soort van snelle interactieve invoer gelijkend op wat "
#~ "geleverd wordt door modale dialogen (bijv. knoppen voor \"Toepassen\", "
#~ "\"OK\", \"Annuleren\", \"Sluiten\", etc.)"

#~ msgid "Footers are set in much the same way as headers:"
#~ msgstr "Voeten worden ingesteld op vrijwel dezelfde manier als koppen:"

#~ msgid ""
#~ "![Overlay sheet with a button in its footer area](/docs/getting-started/"
#~ "kirigami/components-overlaysheets/sheet_footer.png)"
#~ msgstr ""
#~ "![Overlay-vel met een knop voor zijn voettekstgebied](/docs/getting-"
#~ "started/kirigami/components-overlaysheets/sheet_footer.png)"

#~ msgid "Using delegate / model views"
#~ msgstr "Gedelegeerde / model weergave gebruiken"

#~ msgid ""
#~ "Since overlay sheets are designed to display vertical content, they can "
#~ "be especially useful when used in conjunction with components such as "
#~ "[ListViews](docs:qtquick;QtQuick.ListView). When displaying content "
#~ "longer than the application window itself, the overlay sheet becomes "
#~ "scrollable:"
#~ msgstr ""
#~ "Omdat overlay-vellen ontworpen zijn om verticale inhoud te tonen, kunnen "
#~ "ze speciaal nuttig zijn bij gebruik samen met componenten zoals "
#~ "[ListViews](docs:qtquick;QtQuick.ListView). Wanneer de inhoud langer is "
#~ "dan het toepassingsvenster zelf, wordt het overlay-vel schuifbaar:"

#~ msgid ""
#~ "![Overlay sheet with a listview](/docs/getting-started/kirigami/"
#~ "components-overlaysheets/sheet_listview.png)"
#~ msgstr ""
#~ "![Overlay-vel met a lijstweergave](/docs/getting-started/kirigami/"
#~ "components-overlaysheets/sheet_listview.png)"

#~ msgid ""
#~ "![A busy indicator](/docs/getting-started/kirigami/components-"
#~ "progressbars/busyindicator.png)"
#~ msgstr ""
#~ "![Een indicator voor bezig](/docs/getting-started/kirigami/components-"
#~ "progressbars/busyindicator.png)"

#~ msgid "Page actions on mobile"
#~ msgstr "Pagina-acties op een mobiel"

#~ msgid ""
#~ "We are placing our Kirigami Action within our main page from our previous "
#~ "tutorials. If we wanted to, we could add more actions to our page (and "
#~ "even nest actions within actions!). [Kirigami.Action](docs:kirigami2;"
#~ "Action) components are used as contextual actions within Kirigami pages. "
#~ "We are setting it specifically to the [actions.main](docs:kirigami2;Page::"
#~ "actions) property of our [Kirigami.Page](docs:kirigami2;Page): the "
#~ "`actions` object has properties that let us set different actions in "
#~ "different positions, but since our \"Add kountdown\" action is central to "
#~ "our UI we are setting it as the main action of this page."
#~ msgstr ""
#~ "We plaatsen onze actie van Kirigami in onze hoofdpagina uit onze eerdere "
#~ "inleidingen. Als we dat willen kunnen we meer acties aan onze pagina "
#~ "toevoegen (en zelfs acties nesten in acties!). Componenten [Kirigami."
#~ "Action](docs:kirigami2;Action) worden gebruikt als contextuele acties "
#~ "binnen Kirigami pagina's. We stellen ze specifiek in op de eigenschap "
#~ "[actions.main](docs:kirigami2;Page::actions) van onze [Kirigami.Page]"
#~ "(docs:kirigami2;Page): het object `actions` heeft eigenschappen die ons "
#~ "verschillende acties in verschillende posities laat instellen, maar omdat "
#~ "onze actie \"Add kountdown\" centraal voor onze UI is, zetten we het als "
#~ "de hoofdactie op deze pagina."

#~ msgid ""
#~ "Did you notice those three lines next to the page title on the previous "
#~ "screenshot? That's a hamburger menu that opens a [Kirigami.GlobalDrawer]"
#~ "(docs:kirigami2;GlobalDrawer). Global drawers are useful for global "
#~ "navigation and actions: in other words, those things you might need to "
#~ "use throughout your application. We are going to create a simple global "
#~ "drawer that includes a \"quit\" button."
#~ msgstr ""
#~ "Hebt u de drie regels naast de paginatitel op de vorige schermafdruk "
#~ "gezien? Dat is een hamburgermenu dat een [Kirigami.GlobalDrawer](docs:"
#~ "kirigami2;GlobalDrawer) opent. Globale schuifladen zijn nuttig voor "
#~ "globale navigatie en acties: met andere woorden, die dingen die u nodig "
#~ "kunt hebben om uw gehele toepassing te gebruiken. We gaan een eenvoudige "
#~ "globale schuiflade aanmaken die een afsluitknop bevat."

#~ msgid ""
#~ "And then you may compile your Kirigami projects on the same terminal "
#~ "shell you used to source the prefix file. If you close your terminal, you "
#~ "can simply source the file again to compile your app."
#~ msgstr ""
#~ "En daarna kunt u uw Kirigami-projecten in dezelfde terminal-shell "
#~ "compileren die u gebruikte om het prefix-bestand met source binnen te "
#~ "halen. Als u uw terminal sluit kunt u eenvoudig het bestand opnieuw "
#~ "binnenhalen om uw toepassing te compileren."

#~ msgid ""
#~ "Alternatively, you may want to use the standard Kirigami template "
#~ "provided by [KDevelop](https://apps.kde.org/kdevelop/), KDE's main IDE "
#~ "for coding in C++ and QML. [KAppTemplate](https://apps.kde.org/"
#~ "kapptemplate/) is also available if you only need a quick template to "
#~ "start coding in your favorite IDE or text editor."
#~ msgstr ""
#~ "Als alternatief kunt u het standaard Kirigami sjabloon gebruiken geleverd "
#~ "door [KDevelop](https://apps.kde.org/kdevelop/), de hoofd-IDE van KDE "
#~ "voor coderen in C++ en QML. [KAppTemplate](https://apps.kde.org/"
#~ "kapptemplate/) is ook beschikbaar als u alleen een snel sjabloon nodig "
#~ "hebt om met coderen te starten in uw favoriete IDE of tekstbewerker."

#~ msgid ""
#~ "This is a KDE convention, but not all KDE projects use this structure. "
#~ "You are free to set things up differently, but you will have to take this "
#~ "into account when creating your `CMakeLists.txt` and `resources.qrc` "
#~ "files."
#~ msgstr ""
#~ "Dit is een KDE-conventie, maar niet alle KDE projecten gebruiken deze "
#~ "structuur. U bent vrij om dingen anders op te zetten, maar u zult hiermee "
#~ "rekening moeten houden bij aanmaken van uw bestanden `CMakeLists.txt` en "
#~ "`resources.qrc`."

#~ msgid "resources.qrc"
#~ msgstr "resources.qrc"

#~ msgid ""
#~ "Our `resources.qrc` is a [Qt Resource file](https://doc.qt.io/qt-5/"
#~ "resources.html). It contains the list of all QML files as well as other "
#~ "files (like custom icons) that will be included in the binary."
#~ msgstr ""
#~ "Onze `resources.qrc` is een [Qt Resource file](https://doc.qt.io/qt-5/"
#~ "resources.html). Het bevat de lijst met alle QML bestanden evenals andere "
#~ "bestanden (zoals aangepaste pictogrammen) die ingevoegd zullen worden in "
#~ "het binaire programma."

#~ msgid ""
#~ "Notice the line `<file alias=\"main.qml\">contents/ui/main.qml</file>`. "
#~ "It details which QML files are going to be included in the compilation "
#~ "process. In our case we are only using `main.qml`, but if we were to add "
#~ "more QML files to our code, we'd need to make sure we include it in "
#~ "`resources.qrc` file by adding another line like this one."
#~ msgstr ""
#~ "Merk de regel `<file alias=\"main.qml\">contents/ui/main.qml</file>` op. "
#~ "Het detailleert welke QML bestanden ingevoegd gaan worden in het "
#~ "compilatieproces. In ons geval gaan we alleen `main.qml` gebruiken, maar "
#~ "als we meer QML bestanden aan onze code toevoegen, moeten we nagaan dat "
#~ "we het invoegen in bestand `resources.qrc` door nog een regel zoals deze "
#~ "in te voegen."

#~ msgid ""
#~ "This resource file lets us use the \"qrc:\" + \"/main.qml\" path in our "
#~ "`main.cpp`, instead of needing to specify the whole \"contents/ui/main.qml"
#~ "\" path."
#~ msgstr ""
#~ "Dit hulpbronbestand laat ons het pad \"qrc:\" + \"/main.qml\" gebruiken "
#~ "in onze `main.cpp`, in plaats van het moeten specificeren van het gehele "
#~ "pad \"contents/ui/main.qml\"."

#~ msgid "This one's a lot shorter! Let's go through what it does:"
#~ msgstr "Deze is heel wat korter! Laten we doornemen wat het doet:"

#~ msgid ""
#~ "[target_link_libraries()](https://cmake.org/cmake/help/latest/command/"
#~ "target_link_libraries.html) links the libraries used in our code to our "
#~ "executable."
#~ msgstr ""
#~ "[target_link_libraries()](https://cmake.org/cmake/help/latest/command/"
#~ "target_link_libraries.html) koppelt dynamisch de bibliotheken, die "
#~ "gebruikt worden in onze code, aan ons uitvoerbare bestand."

#~ msgid ""
#~ "Note that these libraries should match the components that we included in "
#~ "our previous `CMakeLists.txt` file—otherwise these components will not be "
#~ "included and our application won't compile."
#~ msgstr ""
#~ "Merk op dat deze bibliotheken overeen zouden moeten komen met de "
#~ "componenten die we hebben ingevoegd in ons vorige bestand `CMakeLists."
#~ "txt`-anders zullen deze componenten niet ingevoegd worden en zal onze "
#~ "toepassing niet compileren."

#~ msgid "Using Kirigami Gallery"
#~ msgstr "Kirigami galerij gebruiken"

#~ msgid "Using Kirigami Gallery to find code patterns\n"
#~ msgstr "Kirigami galerij gebruiken om codepatronen te vinden\n"

#~ msgid ""
#~ "[Kirigami Gallery](https://apps.kde.org/kirigami2.gallery/) is a helpful "
#~ "friend when developing a Kirigami application. It is an application that "
#~ "uses core Kirigami features, provides links to the source code, tips on "
#~ "how to use Kirigami components, and links to the corresponding HIG pages."
#~ msgstr ""
#~ "[Kirigami Gallery](https://apps.kde.org/kirigami2-gallery/) is een "
#~ "behulpzame vriend bij ontwikkelen van een Kirigami toepassing. Het is een "
#~ "toepassing die de kernfuncties van Kirigami gebruikt, koppelingen levert "
#~ "naar de broncode, tips over hoe de Kirigami-componenten te gebruiken "
#~ "evenals koppelingen en koppelingen naar de bijbehorende HIG-pagina's "
#~ "(richtlijnen voor menselijke interfaces)."

#~ msgid ""
#~ "Before continuing please install Kirigami Gallery. It should already be "
#~ "in the repository of your Linux distribution."
#~ msgstr ""
#~ "Alvorens door te gaan installeer Kirigami Gallery. Het zou al in de "
#~ "opslagruimte van uw Linux distributie aanwezig moeten zijn."

#~ msgid "Finding a card grid"
#~ msgstr "Een kaartraster vinden"

#~ msgid ""
#~ "Navigating through the Kirigami Gallery application, we will stumble upon "
#~ "the \"Grid view with cards\" gallery component. This is an example that "
#~ "can be applied to multiple use cases, such as contact cards."
#~ msgstr ""
#~ "Bij navigeren door de toepassing Kirigami Gallery, zullen we stuiten op "
#~ "de galerijcomponent \"Grid view of cards\". Dit is een voorbeeld dat "
#~ "toegepast kan worden op meerdere gebruiksgevallen, zoals contactkaarten."

#~ msgid "![List of kirigami gallery components](components.webp)"
#~ msgstr "![Lijst met kirigami galerijcomponenten](components.webp)"

#~ msgid ""
#~ "After selecting the \"Grid view of cards\" gallery component, if we click "
#~ "the \"Info\" button on the top right, we will get some useful information "
#~ "about the Card and Abstract Card types."
#~ msgstr ""
#~ "Na het selecteren van de galerijcomponent \"Grid view of cards\", als we "
#~ "klikken op de knop \"Informatie\", krijgen we enige nuttige informatie "
#~ "over de typen Card en Abstract Card."

#~ msgid "![Kirigami gallery grid view](cards.webp)"
#~ msgstr "![Kirigami galerijrasterweergaven](cards.webp)"

#~ msgid ""
#~ "In the bottom section of this information dialog we will also find a link "
#~ "to the source code of the \"Cards Grid View\". Let's navigate to this "
#~ "page."
#~ msgstr ""
#~ "In de ondersectie van deze informatiedialoog zullen we ook een koppeling "
#~ "vinden naar de broncode van de \"Cards Grid View\". Laten we naar deze "
#~ "pagina gaan."

#~ msgid "Implementing a card grid"
#~ msgstr "Een kaartraster implementeren"

#~ msgid ""
#~ "We will reuse most of the code found in the [source code of the "
#~ "CardsGridViewGallery component](https://invent.kde.org/sdk/kirigami-"
#~ "gallery/-/blob/master/src/data/contents/ui/gallery/CardsGridViewGallery."
#~ "qml). In particular, we will remove the extra parts of the [OverlaySheet]"
#~ "(docs:kirigami2;OverlaySheet) (which is the pop-up we used to reach the "
#~ "kirigami-gallery source code repository)."
#~ msgstr ""
#~ "We zullen het meeste van de code gevonden in de [broncodepagina van de "
#~ "component CardsGridViewGallery](https://invent.kde.org/sdk/kirigami-"
#~ "gallery/-/blob/master/src/data/contents/ui/gallery/CardsGridViewGallery."
#~ "qml) hergebruiken. Speciaal zullen we de extra delen van de [OverlaySheet]"
#~ "(docs:kirigami2;OverlaySheet) (die het opdoemende is van wat we gebruiken "
#~ "om de opslagruimte van de kirigami-gallery broncode te bereiken)."

#~ msgid ""
#~ "So, we are going to substitute the [Page](docs:kirigami2;Page) component "
#~ "of `main.qml` of our skeleton app with the below [ScrollablePage](docs:"
#~ "kirigami2;ScrollablePage):"
#~ msgstr ""
#~ "We gaan dus de component [Page](docs:kirigami2;Page) van `main.qml` van "
#~ "onze raamwerktoepassing vervangen door het onderstaande [ScrollablePage]"
#~ "(docs:kirigami2;ScrollablePage):"

#~ msgid ""
#~ "What we have done so far is to create a [ScrollablePage](docs:kirigami2;"
#~ "ScrollablePage) and put a [CardsGridView](docs:kirigami2;CardsGridView) "
#~ "into it, since we want to display a grid of Cards generated from a model. "
#~ "The data of each contact is provided by a [ListModel](https://doc.qt.io/"
#~ "qt-6/qml-qtqml-models-listmodel.html) while the card delegate is "
#~ "responsible for the presentation of the data. For more info about models "
#~ "and views in Qt Quick, see [here](https://doc.qt.io/qt-5/qtquick-"
#~ "modelviewsdata-modelview.html)."
#~ msgstr ""
#~ "Wat we tot zover hebben gedaan is het aanmaken van een [ScrollablePage]"
#~ "(docs:kirigami2;ScrollablePage) en een [CardsGridView](docs:kirigami2;"
#~ "CardsGridView) erin gestopt, omdat we een raster mat kaarten gegenereerd "
#~ "uit een model willen tonen. De gegevens van elk contact wordt geleverd "
#~ "door een [ListModel](https://doc.qt.io/qt-6/qml-qtqml-models-listmodel."
#~ "html) terwijl de afgeleide van de kaart verantwoordelijk is voor de "
#~ "presentatie van de gegevens. Voor meer informatie over modellen en "
#~ "weergaven in Qt Quick, zie [hier](https://doc.qt.io/qt-6/qtquick-"
#~ "modelviewsdata-modelview.html)."

#~ msgid ""
#~ "Now let's populate the model that will feed our grid view with data. In "
#~ "the definition of [Kirigami.ScrollablePage](docs:kirigami2;"
#~ "ScrollablePage), just after:"
#~ msgstr ""
#~ "Laten we nu het model bevolken dat onze rasterweergave met gegevens zal "
#~ "voeden. In de definitie van [Kirigami.ScrollablePage](docs:kirigami2;"
#~ "ScrollablePage), net na:"

#~ msgid "add the following:"
#~ msgstr "voeg het volgende toe:"

#~ msgid ""
#~ "Notice the `{}` that indicates we are appending a JavaScript object to "
#~ "our model."
#~ msgstr ""
#~ "Merk de `{}` op wat aangeeft dat we een JavaScript-object aan ons model "
#~ "achtervoegen."

#~ msgid ""
#~ "The model part of our implementation is ready. Let's proceed to defining "
#~ "a delegate that will be responsible for displaying the data. So, we add "
#~ "the following code to the `main.qml` page, just after the [Component."
#~ "onCompleted](docs:qtqml;QtQml.Component::completed) definition:"
#~ msgstr ""
#~ "Het modelgedeelte van onze implementatie is gereed. Laten we doorgaan om "
#~ "een gedelegeerde te definiëren die verantwoordelijk zal zijn voor het "
#~ "tonen van gegevens. We voegen dus de volgende code toe aan de pagina "
#~ "`main.qml`, net na de definitie [Component.onCompleted](docs:qtqml;QtQml."
#~ "Component::completed):"

#~ msgid ""
#~ "Following the related information on the [Kirigami.Card API page](docs:"
#~ "kirigami2;Card), we populate a \"[banner](docs:kirigami2;Card::banner)\" "
#~ "that will act as a header to display the name of the contact as well as a "
#~ "contact icon."
#~ msgstr ""
#~ "De gerelateerde informatie op de [Kirigami.Card API-pagina](docs:"
#~ "kirigami2;Card) volgend, bevolken we een \"[banner](docs:kirigami2;Card::"
#~ "banner)\", die zal werken als een kop die de naam van de contactpersoon "
#~ "zal tonen evenals een contactpersoonpictogram."

#~ msgid ""
#~ "The main content of the card has been populated with the cell phone "
#~ "number and the email of the contact, structured as a [Column](docs:"
#~ "qtquick;QtQuick.Column) of [Labels](docs:qtquickcontrols;QtQuick.Controls."
#~ "Label)."
#~ msgstr ""
#~ "De hoofdinhoud van de kaart is bevolkt met het mobiele telefoonnummer en "
#~ "het e-mailadres van de contactpersoon, gestructureerd als een [Column]"
#~ "(docs:qtquick;QtQuick.Column) van [Labels](docs:qtquickcontrols;QtQuick."
#~ "Controls.Label)."

#~ msgid "The application should look like this:"
#~ msgstr "De toepassing zou er als volgt uit moeten zien:"

#~ msgid "![Simple grid of cards](implementation.png)"
#~ msgstr "![Eenvoudig raster van kaarten](implementation.png)"

#~ msgid ""
#~ "You can find the full source code of the tutorial at [invent.kde.org]"
#~ "(https://invent.kde.org/dkardarakos/kirigami-tutorial)."
#~ msgstr ""
#~ "U kunt de volledige broncode van de inleiding vinden op [invent.kde.org]"
#~ "(https://invent.kde.org/dkardarakos/kirigami-tutorial)."

#~ msgid ""
#~ "As a last step we will add some dummy functionality to each card. In "
#~ "particular, a `call` [Action](docs:kirigami2;Action) will be added. "
#~ "Nevertheless, instead of a real call, a passive notification will be "
#~ "displayed. So, let's change the `card` component to the following:"
#~ msgstr ""
#~ "Als laatste stap zullen we enige dummy functionaliteit aan elke kaart "
#~ "toevoegen. Speciaal zal een `call` [Action](docs:kirigami2;Action) worden "
#~ "toegevoegd. In plaats van een echte call, zal een passieve melding worden "
#~ "getoond. Laten we dus de component `card` wijzigen naar het volgende:"

#~ msgid ""
#~ "So, we added a [Kirigami.Action](docs:kirigami2;Action) that, as soon as "
#~ "it is triggered (by pressing the action button), displays a [passive "
#~ "notification](docs:kirigami2;AbstractApplicationWindow::"
#~ "showPassiveNotification)."
#~ msgstr ""
#~ "We voegen dus een [Kirigami.Action](docs:kirigami2;Action) toe die, zodra "
#~ "deze wordt geactiveerd (door op de actieknop te drukken), een [passieve "
#~ "melding](docs:kirigami2;AbstractApplicationWindow::"
#~ "showPassiveNotification) toont."

#~ msgid "Result"
#~ msgstr "Resultaat"

#~ msgid "Finally, our application should look like this:"
#~ msgstr "Tenslotte zal onze toepassing er uitzien zoals deze:"

#~ msgid "![Grid with calling action triggered](implementation-actions.png)"
#~ msgstr "![Raster met opbelactie geactiveerd](implementation-actions.png)"

#~ msgid ""
#~ "Don't be scared by the big chunks of code! We'll be going over everything "
#~ "that we haven't covered before, and by the end of this section you'll "
#~ "have a neat-looking app."
#~ msgstr ""
#~ "Wees niet bang voor de grote stukken code! We zullen alles bespreken wat "
#~ "we eerder niet hebben gedekt en aan het eind van deze sectie zult u een "
#~ "netjes uitziende toepassing hebben."

#~ msgid "![Screenshot showing how a Card looks like](CardDesign.png)"
#~ msgstr "![Schermafdruk die toont hoe een kaart er uitziet](CardDesign.png)"

#~ msgid "Creating overlay sheets"
#~ msgstr "Overlay-vellen aanmaken"

#~ msgid ""
#~ "The parse() method parses a string and returns the number of milliseconds "
#~ "since January 1, 1970, 00:00:00 UTC."
#~ msgstr ""
#~ "De methode parse() ontleedt een tekenreeks en geeft het aantal "
#~ "milliseconden terug sinds 1 januari 1970, 00:00:00 UTC."

#~ msgid ""
#~ "We can give overlay sheets a header. These are set with the [header](docs:"
#~ "kirigami2;templates::OverlaySheet::header) property. We have provided "
#~ "ours with a [Kirigami.Heading](docs:kirigami2;Heading) containing a "
#~ "relevant title: \"Add Kountdown\"."
#~ msgstr ""
#~ "We kunnen overlay-vellen een kop geven. Deze worden gezet met de "
#~ "eigenschap [header](docs:kirigami2;templates::OverlaySheet::header). We "
#~ "hebben de onze van een [Kirigami.Heading](docs:kirigami2;Heading) "
#~ "voorzien die een relevante titel bevat: \"Kountdown toevoegen\"."

#~ msgid ""
#~ "Within each of these [Controls.Textfield](docs:qtquickcontrols;QtQuick."
#~ "Controls.TextField) elements, we are setting a [Kirigami.FormData.label]"
#~ "(docs:kirigami2;FormLayoutAttached::label) property that lets us define "
#~ "labels for them. The form will present the correct labels to the left of "
#~ "each of these text input fields. We are also setting placeholder text "
#~ "inside the fields with the [TextField.placeholderText](https://doc.qt.io/"
#~ "qt-5/qml-qtquick-controls2-textfield.html#placeholderText-prop) property, "
#~ "which will disappear as soon as the user begins typing in the field. "
#~ "Finally, we are also setting the [onAccepted](https://doc.qt.io/qt-6/qml-"
#~ "qtquick-textinput.html#accepted-signal) property to trigger the "
#~ "[forceActiveFocus()](https://doc.qt.io/qt-6/qml-qtquick-item."
#~ "html#forceActiveFocus-method) method of the following field; this will "
#~ "switch the active field once the user hits the ENTER key, improving the "
#~ "usability of our form."
#~ msgstr ""
#~ "Binnen elk van deze elementen [Controls.Textfield](docs:qtquickcontrols;"
#~ "QtQuick.Controls.TextField) zetten we een eigenschap [Kirigami.FormData."
#~ "label](docs:kirigami2;FormLayoutAttached::label) die ons labels voor hen "
#~ "laat definiëren. Het formulier zal de juiste labels voor elk van deze "
#~ "tekstinvoer presenteren. We zetten ook plaatshoudertekst in de velden met "
#~ "de eigenschap [TextField.placeholderText](https://doc.qt.io/qt-5/qml-"
#~ "qtquick-controls2-textfield.html#placeholderText-prop), die zal "
#~ "verdwijnen zodra de gebruiker in het veld begint te typen. Tenslotte "
#~ "zetten we ook de eigenschap [onAccepted](https://doc.qt.io/qt-6/qml-"
#~ "qtquick-textinput.html#accepted-signal) om de methode [forceActiveFocus()]"
#~ "(https://doc.qt.io/qt-6/qml-qtquick-item.html#forceActiveFocus-method) te "
#~ "starten van het volgende veld; dit schakelt het actieve veld in wanneer "
#~ "de gebruiker de toets ENTER indrukt, waarmee de bruikbaarheid van ons "
#~ "formulier wordt verbeterd."

#~ msgid ""
#~ "At the end of our form we are including a [Button](docs:qtquickcontrols;"
#~ "QtQuick.Controls.Button) that adds our new countdown to the list model. "
#~ "We have set its [enabled](https://doc.qt.io/qt-5/qml-qtquick-item."
#~ "html#enabled-prop) property to a conditional statement that checks "
#~ "whether the name field is empty or not: if it is, the button is disabled, "
#~ "and vice versa. When the button is triggered, it triggers the [append]"
#~ "(https://doc.qt.io/qt-6/qml-qtqml-models-listmodel.html#append-method) "
#~ "method of our `kountdownModel` list model, adding a JavaScript object "
#~ "including the properties we have provided. We also make sure to clear the "
#~ "text fields by setting their [text](https://doc.qt.io/qt-6/qml-qtquick-"
#~ "textinput.html#text-prop) properties to an empty string. We finally call "
#~ "a method on our overlay sheet, [close()](docs:kirigami2;templates::"
#~ "OverlaySheet::close), which closes it."
#~ msgstr ""
#~ "Aan het eind van ons formulier voegen we een [Button](docs:"
#~ "qtquickcontrols;QtQuick.Controls.Button) in die onze nieuwe aftelling "
#~ "toevoegt aan het lijstmodel. We hebben de eigenschap [enabled](https://"
#~ "doc.qt.io/qt-5/qml-qtquick-item.html#enabled-prop) ingesteld op een "
#~ "voorwaardelijk statement dat controleert of het naamveld leeg is of niet: "
#~ "zo ja, dan is de knop uitgeschakelde en vice versa. Wanneer de knop wordt "
#~ "bediend, start het de methode [append](https://doc.qt.io/qt-6/qml-qtqml-"
#~ "models-listmodel.html#append-method) van ons lijstmodel `kountdownModel`, "
#~ "waarmee een Javascript object inclusief de eigenschappen die we hebben "
#~ "geleverd wordt toegevoegd. We zorgen er voor dat de tekstvelden gewist "
#~ "worden door hun eigenschappen [text](https://doc.qt.io/qt-6/qml-qtquick-"
#~ "textinput.html#text-prop) op een lege tekenreeks worden ingesteld. "
#~ "Tenslotte roepen we een methode op ons overlay-vel aan, [close()](docs:"
#~ "kirigami2;templates::OverlaySheet::close), die het sluit."

#~ msgid "Using our sheet"
#~ msgstr "Ons vel gebruiken"

#~ msgid ""
#~ "Overlay sheets have two methods, [open()](docs:kirigami2;templates::"
#~ "OverlaySheet::open) and [close()](docs:kirigami2;templates::OverlaySheet::"
#~ "close), which control the opening and closing of this component. In this "
#~ "case, we have set the sheet to be opened when we trigger our action. Once "
#~ "we save our files and build our program, we'll be able to add our own "
#~ "custom countdowns!"
#~ msgstr ""
#~ "Overlay-vellen hebben twee methoden, [open()](docs:kirigami2;templates::"
#~ "OverlaySheet::open) en [close()](docs:kirigami2;templates::OverlaySheet::"
#~ "close) die het openen en sluiten van deze component besturen. In dit "
#~ "geval hebben we het vel ingesteld om te openen wanneer onze actie wordt "
#~ "gestart. Nadat we onze bestanden hebben opgeslagen en ons programma "
#~ "hebben gebouwd, zijn we in staat om onze eigen aangepaste aftellingen toe "
#~ "te voegen!"

#~ msgid ""
#~ "These tutorials will focus on creating an application that lets the user "
#~ "see how many days are left until an event of their choice. That doesn't "
#~ "mean you shouldn't deviate and try to create your own thing! Just make "
#~ "sure you pay close attention to how things work *first*, so that you can "
#~ "adjust when things are different in your own code. We also recommend you "
#~ "check out the [Kirigami Gallery](https://apps.kde.org/en/kirigami2."
#~ "gallery), which provides a number of useful UI examples and easy access "
#~ "to all the code."
#~ msgstr ""
#~ "Deze inleidingen zullen focussen op het maken van een toepassing die de "
#~ "gebruiker laat zien hoeveel dagen er over zijn tot een gebeurtenis naar "
#~ "keuze. Dat betekent niet dat u er niet vanaf zou moeten wijken en uw "
#~ "eigen ding proberen te maken! Zorg er voor dat u er *eerst* streng op "
#~ "toeziet hoe dingen werken, zodat u kunt aanpassen wanneer dingen in uw "
#~ "eigen code anders zijn. We bevelen u ook aan om de [Kirigami galerij]"
#~ "(https://apps.kde.org/en/kirigami2.gallery) te bekijken, die een aantal "
#~ "nuttige UI-voorbeelden levert en gemakkelijke toegang tot alle code."

#~ msgid ""
#~ "KDE has [Human Interface Guidelines (HIG)](/hig/introduction/"
#~ "architecture/) that go into detail about how to best design your "
#~ "application. The guidelines help ensure your application remains usable, "
#~ "consistent, and aesthetic."
#~ msgstr ""
#~ "KDE heeft een [Human Interface Guidelines (HIG)](/hig/introduction/"
#~ "architecture/) die in details gaat over hoe het beste uw toepassing te "
#~ "ontwerpen. De richtlijnen daar zullen u helpen om te verzekeren dat uw "
#~ "toepassing bruikbaar, consistent en esthetisch blijft."

#~ msgid ""
#~ "If you've gone ahead of the tutorial, you might have noticed that there "
#~ "is also such a thing as a [ScrollView](docs:qtquickcontrols;QtQuick."
#~ "Controls.ScrollView) that you can use to contain your components. "
#~ "However, do NOT put a `ScrollView` inside a `ScrollablePage` as this can "
#~ "cause problems. Children of a `ScrollablePage` are functionally already "
#~ "in a `ScrollView`."
#~ msgstr ""
#~ "Als u wat vooruit hebt gekeken in de inleiding, dan kunt u hebben "
#~ "opgemerkt dat er zoiets is als een ding [ScrollView](docs:qtquickcontrols;"
#~ "QtQuick.Controls.ScrollView) die u kunt gebruiken om uw componenten te "
#~ "bevatten. Stop echter NIET een `ScrollView` binnen een `ScrollablePage` "
#~ "omdat dat problemen kan veroorzaken. Kinderen van een `ScrollablePage` "
#~ "zijn functioneel al in een `ScrollView`."

#~ msgid "But why?"
#~ msgstr "Maar waarom?"

#~ msgid ""
#~ "First we need to add our new files into our `resources.qrc` which we "
#~ "created in the first part of this tutorial."
#~ msgstr ""
#~ "Eerst moeten we onze nieuwe bestanden in onze `resources.qrc` toevoegen "
#~ "die we hebben aangemaakt in het eerste deel van deze inleiding."

#~ msgid "Using our new files"
#~ msgstr "Onze nieuwe bestanden gebruiken"

#~ msgid ""
#~ "We'll need to find some way of using our new files in `main.qml`. "
#~ "Thankfully, all we need to do is include a declaration of these "
#~ "components in our `main.qml` like this:"
#~ msgstr ""
#~ "We zullen een manier moeten vinden o onze nieuwe bestanden in `main.qml` "
#~ "te gebruiken. Gelukkig is alles wat we te doen hebben ze met een include "
#~ "declaratie van deze componenten in onze `main.qml` in te voegen, zoals "
#~ "dit:"

#~ msgid "Extending our add sheet into an add/edit sheet"
#~ msgstr "Ons vel met toevoegen uitbreiden naar een toevoegen/bewerken vel"

#~ msgid ""
#~ "While in the last tutorial we made our countdown-adding button do "
#~ "something, the edit button on our countdown cards is still inactive. We "
#~ "also created an adding sheet that we could now repurpose to also serve as "
#~ "an edit sheet... but before we get to that, we need to add a couple of "
#~ "extra things to our `main.qml`."
#~ msgstr ""
#~ "In de laatste inleiding maakten we onze aftelling-toevoegenknop om iets "
#~ "te doen, de bewerkingsknop op onze aftelkaarten is nog steeds inactief. "
#~ "We maakten ook een toevoegvel die we nu een ander doel geven om ook te "
#~ "dienen als een bewerkingsvel... maar voordat we daar zijn, moeten we een "
#~ "aantal extra dingen aan onze `main.qml` toevoegen."

#~ msgid ""
#~ "The key changes we have made involve the addition of our component "
#~ "definition `AddEditSheet` (and `KountdownDelegate` further down) and a "
#~ "new function called `openPopulatedSheet()`."
#~ msgstr ""
#~ "De belangrijkste wijzigingen die we hebben gemaakt omvatten het toevoegen "
#~ "van onze componentdefinitie `AddEditSheet` (en `KountdownDelegate` verder "
#~ "omlaag) en een nieuwe functie genaamd `openPopulatedSheet`."

#~ msgid "Lets go through our `AddEditSheet` definition:"
#~ msgstr "Laten we door onze definitie `AddEditSheet` lopen:"

#~ msgid ""
#~ "`onAdded` and `onEdited` are signal handlers. Just like `onTriggered` is "
#~ "called when we click an action, we can use handlers that respond to our "
#~ "custom signals."
#~ msgstr ""
#~ "`onAdded` en `onEdited` zijn behandelaars van signalen. Net als "
#~ "`onTriggered` wordt aangeroepen wanneer we op een actie klikken, kunnen "
#~ "we behandelaars gebruiken die reageren op onze aangepaste signalen."

#~ msgid "AddEditSheet.qml"
#~ msgstr "AddEditSheet.qml"

#~ msgid ""
#~ "Looking at our new `AddEditSheet.qml`—our repurposed adding sheet—we can "
#~ "see how these signals work:"
#~ msgstr ""
#~ "Kijkend naar onze nieuwe `AddEditSheet.qml`-ons toevoegvel met een nieuw "
#~ "doel-kunnen we zien hoe deze signalen werken:"

#~ msgid ""
#~ "Signals invoke their handlers when they are called. In this case, we have "
#~ "created two signals, `added` and `edited`, that we can invoke with "
#~ "different outcomes, and to which we can attach information about the "
#~ "countdown we are adding or creating. A neat thing about signals is that "
#~ "they expose the variables defined in them to the functions that are "
#~ "listening to them, which is why we can just call those variable names in "
#~ "our `onEdited` and `onAdded` handlers in `main.qml`. Our signals are "
#~ "invoked by the \"Done\" button depending on what the `mode` property, "
#~ "defined at the top of our AddEditSheet, is set to."
#~ msgstr ""
#~ "Signalen roepen hun behandelaars aan wanneer ze worden aangeroepen. In "
#~ "dit geval hebben we twee signalen, `added` en `edited`, gemaakt die we "
#~ "aan kunnen roepen met verschillend resultaat en waaraan we informatie "
#~ "kunnen hangen over de aftelling die we toevoegen of aanmaken. Een net "
#~ "ding over signalen is dat ze de erin gedefinieerde variabelen "
#~ "blootstellen aan de functies die er naar luisteren, wat is waarom we deze "
#~ "variabelenamen in onze `onEdited` en `onAdded` behandelaars in `main.qml` "
#~ "kunne aanroepen. Onze signalen worden aangeroepen door de knop 'Gereed' "
#~ "afhankelijk van op wat de eigenschap `mode`, gedefinieerd bovenaan onze "
#~ "AddEditSheet, is gezet."

#~ msgid ""
#~ "The `mode` property also controls several other things: mainly what the "
#~ "title of our sheet is set to, and what text is to be included in our "
#~ "textfields. However, by default, our `mode` property is just set to add..."
#~ msgstr ""
#~ "De eigenschap `mode` bestuurt ook verschillende andere dingen: "
#~ "hoofdzakelijk wat in de titel van ons vel is gezet en welke tekst "
#~ "ingevoegd moet worden in onze tekstvelden. Standaard is echter onze "
#~ "eigenschap `mode` gewoon ingesteld op toevoegen..."

#~ msgid ""
#~ "Which brings us back to `main.qml` and our new `openPopulatedSheet()` "
#~ "function. You might have noticed that this is what it is called now when "
#~ "the countdown-adding action is triggered. This function takes in several "
#~ "arguments which have been provided with defaults. This is helpful when we "
#~ "simply want to add a new countdown, because we can have the concise "
#~ "function call `openPopulatedSheet(\"add\")`. More importantly, this "
#~ "function sets all the relevant properties in AddEditSheet."
#~ msgstr ""
#~ "Wat ons terugbrengt bij `main.qml` en onze nieuwe functie "
#~ "`openPopulateSheet()`. U zult gemerkt hebben dat dit is wat nu "
#~ "aangeroepen wordt wanneer de actie aftelling-toevoegen wordt geactiveerd. "
#~ "Deze functie neemt verschillende argumenten die voorzien van standaarden. "
#~ "Dit helpt wanneer we eenvoudig een nieuwe aftelling willen toevoegen, "
#~ "omdat we de beknopte functie-aanroep `openPopulatedSheet(\"add\")` kunnen "
#~ "gebruiken. Belangrijker, deze functie zet alle relevante eigenschappen in "
#~ "AddEditSheet."

#~ msgid ""
#~ "`mode` changes the add/edit sheet depending on whether this argument is "
#~ "set to `\"add\"` or to `\"edit\"`"
#~ msgstr ""
#~ "`mode` wijzigt het toevoegen/bewerken vel afhankelijk van of dit argument "
#~ "is gezet op `\"toevoegen\"` of op `\"bewerken\"`"

#~ msgid ""
#~ "`index` is needed so that when we save our edited countdown, the correct "
#~ "one is modified"
#~ msgstr ""
#~ "`index` is nodig zodat wanneer we onze bewerkte aftelling opslaan, de "
#~ "juiste wordt gewijzigd"

#~ msgid ""
#~ "`listName`, `listDesc`, and `listDate` are the relevant countdown details "
#~ "that need to be put in the sheet's fields"
#~ msgstr ""
#~ "`listName`, `listDesc` en `listDate` zijn de relevante aftellingdetails "
#~ "die nodig zijn om in de velden van het vel te stoppen"

#~ msgid ""
#~ "Of course, to actually use our sheet for anything besides adding "
#~ "countdowns first we need to make the edit button on our cards work. But "
#~ "if you look at our [Kirigami.CardsListView](docs:kirigami2;CardsListView) "
#~ "in `main.qml`..."
#~ msgstr ""
#~ "Natuurlijk, om actueel ons vel voor iets naast aftellingen te gebruiken "
#~ "moeten we eerst de bewerkingsknop op onze kaarten laten werken. Maar als "
#~ "u kijkt op onze [Kirigami.CardsListView](docs:kirigami2;CardsListView) in "
#~ "`main.qml`..."

#~ msgid "KountdownDelegate.qml"
#~ msgstr "KountdownDelegate.qml"

#~ msgid ""
#~ "We've replaced our [Kirigami.AbstractCard](docs:kirigami2;AbstractCard) "
#~ "with a delegate component definition from `KountdownDelegate.qml`."
#~ msgstr ""
#~ "We hebben onze [Kirigami.AbstractCard](docs:kirigami2;AbstractCard) "
#~ "vervangen door een gedelegeerde componentdefinitie uit `KountdownDelegate."
#~ "qml`."

#~ msgid ""
#~ "The [onClicked](docs:qtquickcontrols;QtQuick.Controls.AbstractButton::"
#~ "clicked) property of the \"Edit\" button on our cards now calls the "
#~ "`openPopulatedSheet()` function, with the card's fetched list element "
#~ "properties set as the arguments for this function. With these, the sheet "
#~ "can be populated with the correct text."
#~ msgstr ""
#~ "De eigenschap [onClicked(docs:qtquickcontrols;QtQuick.Controls."
#~ "AbstractButton::clicked)] van de knop \"Bewerken\" op onze kaarten roept "
#~ "nu de functie `openPopulateSheet()` aan, met de opgehaalde set "
#~ "lijstelementeigenschappen van de kaart ingesteld als de argumenten voor "
#~ "deze functie. Hiermee kan het vel bevolkt worden met de juiste tekst."

#~ msgid ""
#~ "With that, we have a fully-functional sheet where we can add and edit our "
#~ "countdowns!"
#~ msgstr ""
#~ "Daarmee hebben we een volledig functioneel vel waar we onze aftellingen "
#~ "kunne toevoegen en bewerken!"

#~ msgid "![](editsheet.png)"
#~ msgstr "![](editsheet.png)"

#~ msgid "Example:"
#~ msgstr "Voorbeeld:"

#~ msgid ""
#~ "[Installing Kirigami from the repositories in your Linux distribution]"
#~ "({{< ref \"#linux\" >}})"
#~ msgstr ""
#~ "[Kirigami installeren uit de opslagruimte in uw Linux distributie]({{< "
#~ "ref \"#linux\" >}})"

#~ msgid "[Installing Kirigami with Craft]({{< ref \"#craft\" >}})"
#~ msgstr "[Kirigami installeren met Craft]({{< ref \"#craft\" >}})"

#~ msgid ""
#~ "Enter our main function. Its first line `QGuiApplication::"
#~ "setAttribute(Qt::AA_EnableHighDpiScaling);` enables High DPI scaling. "
#~ "This lets our application scale properly across devices with different "
#~ "display pixel densities."
#~ msgstr ""
#~ "Voer onze hoofdfunctie in. De eerste regel `QGuiApplication::"
#~ "setAttribute(Qt::AA_EnableHighDpiScaling);` schakelt schalen met hoge DPI "
#~ "in. Dit laat onze toepassing op de juiste manier schalen over apparaten "
#~ "met verschillende pixeldichtheden van schermen."

#~ msgid "If Visual Studio: `cmake -B build/ -G \"Visual Studio 16 2019\"`"
#~ msgstr ""
#~ "Indien Visual Studio: `cmake -B build/ -G \"Visual Studio 16 2019\"`"

#~ msgid "If MinGW: `cmake -B build/ -G \"MinGW Makefiles\"`"
#~ msgstr "Indien MinGW: `cmake -B build/ -G \"MinGW Makefiles\"`"

#~ msgid "And launch it with:"
#~ msgstr "En het starten met:"

#~ msgid ""
#~ "After that, `project(helloworld)` defines the name of the project. We "
#~ "then use `set()` to define variables (`KF5_MIN_VERSION` and "
#~ "`QT_MIN_VERSION`) containing the versions of KDE Frameworks and Qt."
#~ msgstr ""
#~ "Daarna definieert `project(helloworld)` de naam van het project. Daarna "
#~ "gebruiken we `set()` om variabelen te definiëren (`KF5_MIN_VERSION` en "
#~ "`QT_MIN_VERSION`) die de versies van KDE Frameworks en Qt bevatten."

#~ msgid ""
#~ "`find_package(Qt5 ${QT_MIN_VERSION} REQUIRED NO_MODULE COMPONENTS Core "
#~ "Quick Test Gui QuickControls2 Widgets)`"
#~ msgstr ""
#~ "`find_package(Qt5 ${QT_MIN_VERSION} REQUIRED NO_MODULE COMPONENTS Core "
#~ "Quick Test Gui QuickControls2 Widgets)`"

#~ msgid "The first word is the framework (`Qt5`)."
#~ msgstr "Het eerste woord is het framework (`Qt5`)."

#~ msgid ""
#~ "Then we are calling the variable with the version we set in the fifth "
#~ "line."
#~ msgstr ""
#~ "Daarna roepen we de variabele met de versie, die we instellen in de "
#~ "vijfde regel, aan."

#~ msgid "Installing required packages"
#~ msgstr "Vereiste pakketten worden geïnstalleerd"

#~ msgid ""
#~ "Before getting started, we must install a few things. We need a C++ "
#~ "compiler, Qt development packages, and Kirigami."
#~ msgstr ""
#~ "Alvorens te beginnen moeten we enkele zaken installeren. We hebben een C+"
#~ "+ compiler, Qt ontwikkelpakketten en Kirigami nodig."

#~ msgid ""
#~ "The final line, `add_subdirectory(src)`, points CMake into the `src/` "
#~ "directory."
#~ msgstr ""
#~ "De laatste regel, `add_subdirectory(src)`, wijst naar CMake in de map "
#~ "'src/'."

#~ msgid ""
#~ "[set()](https://cmake.org/cmake/help/latest/command/set.html) is used to "
#~ "set `helloworld_SRCS` to `main.cpp` and `resources.qrc` (if we decide to "
#~ "create additional C++ files we'll need to add them here too)"
#~ msgstr ""
#~ "[set()] (https://cmake.org/cmake/help/latest/command/set.html) wordt "
#~ "gebruikt om `helloworld_SRCS` in te stellen in `main.cpp` en `resources."
#~ "qrc` (als we beslissen om extra C++ bestanden aan te maken, die we nodig "
#~ "zullen hebben om ze hier ook toe te voegen)"

#~ msgid ""
#~ "First, we are going to create two files in the `src/` directory called "
#~ "`about.cpp` and `about.h`."
#~ msgstr ""
#~ "Eerst gaan we twee bestanden in de map `src/` aanmaken genaamd `about."
#~ "cpp` en `about.h`."

#~ msgid "about.h"
#~ msgstr "about.h"

#~ msgid ""
#~ "In the `.h` file we create this class `AboutType` which is inherited from "
#~ "[QObject](https://doc.qt.io/qt-5/qobject.html)."
#~ msgstr ""
#~ "In het bestand `.h` maken we deze klasse `AboutType` die geërfd is uit "
#~ "[QObject](https://doc.qt.io/qt-5/qobject.html)."

#~ msgid ""
#~ "The `Q_OBJECT` macro tells the compiler that this class uses own signals "
#~ "and slots, the `Q_PROPERTY` macro behaves like a class data member, but "
#~ "it has additional features, it will allow our QML code to have access to "
#~ "this class."
#~ msgstr ""
#~ "De macro `Q_OBJECT` vertelt de compiler dat deze klasse eigen signalen en "
#~ "slots gebruikt, de macro `Q_PROPERTY` gedraagt zich als een klasse "
#~ "gegevenslid, maar het heeft extra mogelijkheden, het zal uw QML code "
#~ "toegang geven tot deze klasse."

#~ msgid ""
#~ "The `aboutData` method will return the application data from `KAboutData`."
#~ msgstr ""
#~ "De methode `aboutData` zal de toepassingsgegevens van `KAboutData` "
#~ "teruggeven."

#~ msgid "about.cpp"
#~ msgstr "about.cpp"

#~ msgid "In the `.cpp` file we just include the `.h` file."
#~ msgstr "In het bestand `.cpp` doen we een include van het bestand `.h`."

#~ msgid ""
#~ "After the QML Engine definition, we create a [qmlRegisterSingletonType]"
#~ "(https://doc.qt.io/qt-5/qqmlengine.html#qmlRegisterSingletonType), the "
#~ "first argument is a URI, basically a package name, the second and third "
#~ "arguments are major and minor versions respectively, the fourth is the "
#~ "type name, the name that we will call when accessing the `AboutType` "
#~ "methods."
#~ msgstr ""
#~ "Na de definitie van de QML Engine maken we een [qmlRegisterSingletonType]"
#~ "(https://doc.qt.io/qt-5/qqmlengine.html#qmlRegisterSingletonType) aan, "
#~ "het eerste argument is een URI, hoofdzakelijk een pakketnaam, het tweede "
#~ "en derde argument zijn respectievelijk hoofd en subversies, het vierde is "
#~ "de typenaam, de naam die we zullen aanroepen bij toegang tot de "
#~ "`AboutType` methoden."

#~ msgid ""
#~ "In the `qmlRegisterSingletonType` lambda we just return a new `AboutType` "
#~ "object;"
#~ msgstr ""
#~ "In de lambda `qmlRegisterSingletonType` geven we gewoon een nieuw object "
#~ "`AboutType`;"

#~ msgid ""
#~ "First, we import the package we defined in the `main.cpp` file, add a "
#~ "`Kirigami.Action` to our global drawer that will send us to the about "
#~ "page and create a component with a `Kirigami.AboutPage` in it, the About "
#~ "Page only have one property: `aboutData`, we then pass `AboutType."
#~ "aboutData` to it."
#~ msgstr ""
#~ "Ten eerste importeren we het pakket gedefinieerd in het bestand `main."
#~ "cpp`, voegen een `Kirigami.Action` toe aan onze globale schuiflade die "
#~ "ons naar de Info over-pagina zal zenden en een component maakt met een "
#~ "`Kirigami.AboutPage` erin, de Info over-pagina heeft slechts één "
#~ "eigenschap: `aboutData`, we geven daarna `AboutType.aboutData` eraan door."

#~ msgid ""
#~ "In the CMakeLists.txt file in our top-level folder, add `CoreAddons` to "
#~ "the `find_package` module."
#~ msgstr ""
#~ "In het bestand CMakeLists.txt in onze topniveau map, voeg `CoreAddons` "
#~ "toe aan de module `find_package`."

#~ msgid ""
#~ "In the CMakeLists.txt file in the ‘src’ directory, add `about.cpp` to the "
#~ "`add_executable` module and `KF5::CoreAddons` to the "
#~ "`target_link_libraries` module."
#~ msgstr ""
#~ "In het bestand CMakeLists.txt in de map ‘src’, voeg `about.cpp` toe aan "
#~ "de module `add_executable` en `KF5::CoreAddons` toe aan de module "
#~ "`target_link_libraries`."

#~ msgid ""
#~ "To `main.cpp`, right after creating the `QQmlApplicationEngine`, add the "
#~ "type registration as follows:"
#~ msgstr ""
#~ "Voeg aan `main.cpp`, direct na aanmaken van de `QQmlApplicationEngine`, "
#~ "het type registratie toe als volgt:"

#~ msgid "Right under the `Q_OBJECT` macro, add a new `Q_PROPERTY`."
#~ msgstr ""
#~ "Precies onder de `Q_OBJECT` macro, voeg een nieuwe `Q_PROPERTY` toe."

#~ msgid "![](action_tool_bar.png)"
#~ msgstr "![](action_tool_bar.png)"

#~ msgid "![](/docs/use/kirigami/components-card/card1.png)"
#~ msgstr "![](/docs/use/kirigami/components-card/card1.png)"

#~ msgid "**A CardsLayout should always be contained within a ColumnLayout.**"
#~ msgstr ""
#~ "**Een CardsLayout zou zich altijd binnen een ColumnLayout moten bevinden."
#~ "**"

#~ msgid ""
#~ "![Screenshot of a CardsLayout](/docs/use/kirigami/components-card/"
#~ "cardslayout.png)"
#~ msgstr ""
#~ "![Schermafdruk van een CardsLayout](/docs/use/kirigami/components-card/"
#~ "cardslayout.png)"

#~ msgid ""
#~ "![A freshly-clicked button](/docs/use/kirigami/components-controls/"
#~ "controls-button.png)"
#~ msgstr ""
#~ "![Een zojuist-aangeklikte knop](/docs/use/kirigami/components-controls/"
#~ "controls-button.png)"

#~ msgid "Switches are primarily designed for use on mobile devices."
#~ msgstr ""
#~ "Schakelaars zijn primair ontworpen voor gebruik op mobiele apparaten."

#~ msgid ""
#~ "![Search bar header global drawer](/docs/use/kirigami/components-drawers/"
#~ "globaldrawer_header.png)"
#~ msgstr ""
#~ "![Zoekbalkopschrift van globale schuiflade](/docs/use/kirigami/components-"
#~ "drawers/globaldrawer_header.png)"

#~ msgid ""
#~ "![Global drawer as a menu on the desktop](/docs/use/kirigami/components-"
#~ "drawers/globaldrawer_menu.png)"
#~ msgstr ""
#~ "![Globale schuiflade als een menu op het bureaublad](/docs/use/kirigami/"
#~ "components-drawers/globaldrawer_menu.png)"

#~ msgid ""
#~ "![Global drawer with title and icon in banner](/docs/use/kirigami/"
#~ "components-drawers/globaldrawer-banner.png)"
#~ msgstr ""
#~ "![Globale schuiflade met titel en pictogram in banner](/docs/use/kirigami/"
#~ "components-drawers/globaldrawer-banner.png)"

#~ msgid ""
#~ "![A simple formlayout](/docs/use/kirigami/components-formlayouts/"
#~ "formlayouts-simple.png)"
#~ msgstr ""
#~ "![Een eenvoudige formulierindeling](/docs/use/kirigami/components-"
#~ "formlayouts/formlayouts-simple.png)"

#~ msgid ""
#~ "However, this is not recommended. On components where `Kirigami.FormData."
#~ "isSection` is set to true, the label text provided for this component's "
#~ "`Kirigami.FormData.label` property will be displayed as the section's "
#~ "header text. **This does not apply to every component, hence the "
#~ "recommendation that you use `Kirigami.Separator` or `Item` components in "
#~ "places where you would like to use a header text.** This header text is "
#~ "larger than the normal label text, and provides users with a nice visual "
#~ "cue of what the form layout section is about."
#~ msgstr ""
#~ "Dit is echter niet aanbevolen. Op componenten waar `Kirigami.FormData."
#~ "isSection` is gezet op true, zal de labeltekst geleverd voor deze "
#~ "eigenschap `Kirigami.FormData.label` van de component getoond worden als "
#~ "de koptekst van de sectie. **Dit is niet op elke component van "
#~ "toepassing, vandaar de aanbeveling dat u componenten `Kirigami.Separator` "
#~ "of `Item` gebruikt op plaatsen waar u een koptekst zou willen gebruiken."
#~ "** Deze koptekst is groter dan de normale labeltekst en levert gebruikers "
#~ "een mooie visuele aanwijzing over waar de formulierindelingssectie over "
#~ "gaat."

#~ msgid ""
#~ "![A formlayout with sections](/docs/use/kirigami/components-formlayouts/"
#~ "formlayouts-sections.png)"
#~ msgstr ""
#~ "![Een formulierindeling met secties](/docs/use/kirigami/components-"
#~ "formlayouts/formlayouts-sections.png)"

#~ msgid ""
#~ "![A formlayout with checkable child](/docs/use/kirigami/components-"
#~ "formlayouts/formlayouts-checkable.png)"
#~ msgstr ""
#~ "![Een formulierindeling met activeerbaar kind](/docs/use/kirigami/"
#~ "components-formlayouts/formlayouts-checkable.png)"

#~ msgid ""
#~ "![A formlayout with forced mobile layout](/docs/use/kirigami/components-"
#~ "formlayouts/formlayouts-widemode.png)"
#~ msgstr ""
#~ "![Een formulierindeling met afgedwongen indeling voor mobiel](/docs/use/"
#~ "kirigami/components-formlayouts/formlayouts-widemode.png)"

#~ msgid "List headers"
#~ msgstr "Koppen in lijsten"

#~ msgid ""
#~ "ListViews also support header components with the `header` property, and "
#~ "Kirigami provides an attractive component for this purpose: `Kirigami."
#~ "ItemViewHeader`. We provide this component with text for the `title` "
#~ "property and with an image location for the `backgroundImage.source` "
#~ "property and we are set."
#~ msgstr ""
#~ "ListViews ondersteunen ook kopcomponenten met de eigenschap `header` en "
#~ "Kirigami biedt een attractieve component voor dit doel: `Kirigami."
#~ "ItemViewHeader`. We bieden deze component met tekst voor de eigenschap "
#~ "`title` en met een afbeeldingslocatie voor de eigenschap `backgroundImage."
#~ "source` en we zijn gereed."

#~ msgid ""
#~ "An interesting property of the list view is `headerPositioning`. This "
#~ "affects the way that our header will move when we are interacting with a "
#~ "long list view that expands beyond the height of the page. "
#~ "`headerPositioning` can be set to three different settings:"
#~ msgstr ""
#~ "Een interessante eigenschap van de lijstweergave is `headerPositioning`. "
#~ "Dit heeft invloed op de manier waarop onze kop beweegt wanneer we werken "
#~ "met een lange lijstweergave die zich uitsteekt over de hoogte van de "
#~ "pagina. `headerPositioning` kan ingesteld worden op drie verschillende "
#~ "instellingen:"

#~ msgid ""
#~ "`ListView.OverlayHeader`: In this setting, the header will contract once "
#~ "we start scrolling down but will remain visible in a more compact state."
#~ msgstr ""
#~ "`ListView.OverlayHeader`: in deze instelling zal de kop zich inkorten "
#~ "nadat we omlaag schuiven maar zal zichtbaar blijven in een compactere "
#~ "status."

#~ msgid ""
#~ "`ListView.PullBackHeader`: The header will disappear as we scroll down, "
#~ "but will reappear as we scroll back up, even if we haven't yet reached "
#~ "the top of the list view."
#~ msgstr ""
#~ "`ListView.PullBackHeader`: de kop zal verdwijnen als we omlaag schuiven, "
#~ "maar zal opnieuw verschijnen als we terug omhoog schuiven, zelfs als we "
#~ "de top van de lijstweergave nog niet hebben bereikt."

#~ msgid ""
#~ "`ListView.InlineHeader`: The header will act like a part of the listview "
#~ "and remain at the top of the listview."
#~ msgstr ""
#~ "`ListView.InlineHeader`: de kop zal zicht gedragen als onderdeel van de "
#~ "lijstweergave en bovenaan de lijstweergave blijven."

#~ msgid ""
#~ "![A listview with a header](/docs/use/kirigami/components-listview/"
#~ "listview-header.png)"
#~ msgstr ""
#~ "![Een lijstweergave met een kop](/docs/use/kirigami/components-listview/"
#~ "listview-header.png)"

#~ msgid "The PageRow"
#~ msgstr "De PageRow"

#~ msgid ""
#~ "The [PageRow](docs:kirigami2;PageRow) is a container that lays out items "
#~ "horizontally in a row. If all child items don't fit in the [PageRow](docs:"
#~ "kirigami2;PageRow), it will behave like a [`Flickable`](https://doc.qt.io/"
#~ "qt-5/qml-qtquick-flickable.html) surface and will become a horizontal "
#~ "scrollable view of columns."
#~ msgstr ""
#~ "De [PageRow](docs:kirigami2;PageRow) is een container die items "
#~ "horizontaal indeelt in een rij. Als alle kinditems niet in de [PageRow]"
#~ "(docs:kirigami2;PageRow) passen, zal het zich gedragen als een "
#~ "[`Flickable`](https://doc.qt.io/qt-5/qml-qtquick-flickable.html) "
#~ "oppervlak en zal een horizontaal verschuifbare weergave van kolommen "
#~ "worden."

#~ msgid ""
#~ "A [PageRow](docs:kirigami2;PageRow) can show a single page or several of "
#~ "them as columns, depending on the window width. On a phone, a single "
#~ "column will be viewable, while on a tablet or a desktop more than one "
#~ "column should be visible at once."
#~ msgstr ""
#~ "Een [PageRow](docs:kirigami2;PageRow) kan een enkele pagina of "
#~ "verschillende ervan tonen als kolommen, afhankelijk van de "
#~ "vensterbreedte. Op een telefoon zal een enkele kolom zichtbaar zijn, "
#~ "terwijl op een tablet of een desktop meer dan één kolom tegelijk "
#~ "zichtbaar zou moeten zijn."

#~ msgid ""
#~ "The columns can either all have the same fixed size, size themselves with "
#~ "`implicitWidth`, or automatically expand to take up all available width. "
#~ "By default, the last column will expand to take up all available space."
#~ msgstr ""
#~ "De kolommen kunnen ofwel allemaal dezelfde vaste grootte hebben, zelf hun "
#~ "grootte bepalen met `implicitWidth` of automatisch zich uitbreiden om "
#~ "alle beschikbare breedte in te nemen. Standaard zal de laatste kolom zich "
#~ "uitbreiden om alle beschikbare ruimte in te nemen."

#~ msgid "Screenshot of a PageRow"
#~ msgstr "Schermafdruk van een PageRow"

#~ msgid ""
#~ "You can access the column view methods from the `pageStack` property of "
#~ "your [Kirigami.ApplicationWindow](docs:kirigami2;ApplicationWindow) "
#~ "element or from anywhere else using `applicationWindow().pageStack`."
#~ msgstr ""
#~ "U hebt toegang tot de kolomweergavemethoden vanuit de eigenschap "
#~ "`pageStack` van uw [Kirigami.ApplicationWindow](docs:kirigami2;"
#~ "ApplicationWindow) element of vanuit overal elders met "
#~ "`applicationWindow().pageStack`."

#~ msgid ""
#~ "The initial page is added with the `pageStack.initialPage` property. As "
#~ "an example: in a simple application that required the user to "
#~ "authenticate themselves, the initial page would be a login page."
#~ msgstr ""
#~ "De initiële pagina wordt toegevoegd met de eigenschap `pageStack."
#~ "initialPage`. Als voorbeeld: in een eenvoudige toepassing die de "
#~ "gebruiker om authenticatie vraagt, zou de initiële pagina een "
#~ "aanmeldpagina zijn."

#~ msgid ""
#~ "Once the user has logged into the application, you would need to replace "
#~ "the login page with the home page of the application. To do this, you "
#~ "would use `pageStack.replace`, removing the LoginPage and replacing it "
#~ "with a HomePage."
#~ msgstr ""
#~ "Nadat de gebruiker zich in de toepassing heeft aangemeld, zou u de "
#~ "aanmeldpagina moeten vervangen door de homepagina van de toepassing. Om "
#~ "dat te doen, zou u `pageStack.replace` moeten gebruiken, waarmee de "
#~ "LoginPage vervangen wordt door een HomePage."

#~ msgid "login formular"
#~ msgstr "aanmeldformulier"

#~ msgid "display error message"
#~ msgstr "foutmelding tonen"

#~ msgid ""
#~ "Now let's imagine you had a configuration page you wanted the user to "
#~ "access from the HomePage. You'd want the user to go back to the HomePage, "
#~ "so you can't use `replace`. Instead, you would use `push` to push a new "
#~ "page in the stack."
#~ msgstr ""
#~ "Stel eens voor dat u een configuratiepagina hebt waarvan u wilt dat de "
#~ "gebruiker deze vanaf de HomePage kan bereiken. U wilt dat de gebruiker "
#~ "terug gaat naar de HomePage, u kunt dus `replace` niet gebruiken. In "
#~ "plaats daarvan, zou u `push` moeten gebruiken om een nieuwe pagina op de "
#~ "stapel te zetten."

#~ msgid "ConfigurationPage.qml"
#~ msgstr "ConfigurationPage.qml"

#~ msgid "HomePage.qml"
#~ msgstr "HomePage.qml"

#~ msgid "You can also:"
#~ msgstr "U kunt ook:"

#~ msgid ""
#~ "[pop](docs:kirigami2;PageRow::pop) a page (which removes the last page in "
#~ "the stack) or"
#~ msgstr ""
#~ "[pop](docs:kirigami2;PageRow::pop) een pagina (die de laatste pagina op "
#~ "de stapel verwijdert) of"

#~ msgid ""
#~ "use [insertPage](docs:kirigami2;PageRow::insertPage) to insert a page at "
#~ "a specific position in the stack,"
#~ msgstr ""
#~ "gebruik [insertPage](docs:kirigami2;PageRow::insertPage) om een pagina op "
#~ "een specifieke positie in de stapel te zetten,"

#~ msgid ""
#~ "use [movePage](docs:kirigami2;PageRow::movePage) to move specific pages "
#~ "within the stack, or"
#~ msgstr ""
#~ "gebruik [movePage](docs:kirigami2;PageRow::movePage) om specifieke "
#~ "pagina's binnen de stapel te verplaatsen of"

#~ msgid "[clear](docs:kirigami2;PageRow::clear) all pages from the stack."
#~ msgstr ""
#~ "[wissen](docs:kirigami2;PageRow::clear) van alle pagina's op de stapel."

#~ msgid ""
#~ "You can also modify `currentIndex` to change the currently active page "
#~ "programmatically, or use [flickBack](docs;Kirigami2;PageRow::flickBack) "
#~ "to simulate moving a page backwards in the stack."
#~ msgstr ""
#~ "U kunt ook `currentIndex` wijzigen om de nu actieve pagina programmatisch "
#~ "wijzigen of gebruik [flickBack](docs;Kirigami2;PageRow::flickBack) om te "
#~ "simuleren dat een pagina terug op de stapel wordt geplaatst."

#~ msgid "Layers"
#~ msgstr "Lagen"

#~ msgid ""
#~ "For the moment, we only saw horizontal navigation working in a 2 "
#~ "dimensional stack. You can also use layers in your application to push "
#~ "full-screen page into your application."
#~ msgstr ""
#~ "Voor nu zagen we alleen horizontale navigatie werken in een "
#~ "tweedimensionale stapel. U kunt ook lagen in uw toepassing gebruiken om "
#~ "een volledig-scherm pagina in uw toepassing te zetten."

#~ msgid ""
#~ "In this case, only one page is visible at the same time on mobile and on "
#~ "the **desktop**."
#~ msgstr ""
#~ "In dat geval is slechts één pagina tegelijk zichtbaar op de mobiel en op "
#~ "de **desktop**."

#~ msgid ""
#~ "The layers are accessible from `pageStack.layers` and use the same API as "
#~ "`pageStack`."
#~ msgstr ""
#~ "De lagen zijn toegankelijk vanaf `pageStack.layers` en gebruiken dezelfde "
#~ "API als `pageStack`."

#~ msgid "NeoChat Scrollable Page Screenshot"
#~ msgstr "Schermafdruk van NeoChat schuifbare pagina"

#~ msgid "Page actions on the desktop."
#~ msgstr "Pagina-acties op het bureaublad."

#~ msgid "![](global_drawer.png)"
#~ msgstr "![](global_drawer.png)"

#~ msgid "![](quit_action.png)"
#~ msgstr "![](quit_action.png)"

#~ msgid "On Ubuntu, Debian and Neon we can install these with APT:"
#~ msgstr "Op Ubuntu, Debian en Neon kunnen we deze met APT installeren:"

#~ msgid "On Arch-based distributions (like Manjaro) we can use Pacman:"
#~ msgstr ""
#~ "Op Arch gebaseerde distributies (zoals Manjaro) kunnen we Pacman "
#~ "gebruiken:"

#~ msgid "For Fedora, we use DNF:"
#~ msgstr "Voor Fedora gebruiken we DNF:"

#~ msgid ""
#~ "You can read more about the specifics of how the Qt resource system works "
#~ "[in Qt's docs](https://doc.qt.io/qt-5/resources.html)."
#~ msgstr ""
#~ "U kunt meer over de preciese details lezen van hoe het hulpbronsysteem "
#~ "van Qt werkt [in documenten van Qt](https://doc.qt.io/qt-5/resources."
#~ "html)."

#~ msgid ""
#~ "`target_link_libraries` links the libraries used in our code to our "
#~ "executable."
#~ msgstr ""
#~ "`target_link_libraries` koppelt de bibliotheken, die gebruikt worden in "
#~ "onze code, aan ons uitvoerbare bestand."

#~ msgid ""
#~ "The `GridLayout` is inside the `Item` component we have provided for the "
#~ "property `contentItem`. This is the item that contains what will be "
#~ "displayed in your card."
#~ msgstr ""
#~ "De `GridLayout` is binnen se component `Item` die we hebben geleverd voor "
#~ "de eigenschap `contentItem`. Dit is het item dat bevat wat getoond zal "
#~ "worden in uw kaart."

#~ msgid ""
#~ "We have also used a conditional here to vary the number of columns in our "
#~ "grid depending on the screen we are using. If we are using a widescreen "
#~ "(i.e. a computer monitor or a phone in landscape) the grid will have 4 "
#~ "columns, else it will have 2."
#~ msgstr ""
#~ "We hebben hier ook een voorwaarde om het aantal kolommen in ons raster te "
#~ "variëren afhankelijk van het scherm dat we gebruiken. Als we een breed "
#~ "scherm gebruiken (d.w.z. een computermonitor of een telefoon in "
#~ "landschap) zal het raster 4 kolommen hebben, anders zullen het er 2 zijn."

#~ msgid "![](CardDesign.png)"
#~ msgstr "![](CardDesign.png)"

#~ msgid ""
#~ "<img src=\"https://invent.kde.org/utilities/kongress/-/raw/master/org.kde."
#~ "kongress.svg\" width=\"50\" height=\"50\"><br />Kongress"
#~ msgstr ""
#~ "<img src=\"https://invent.kde.org/utilities/kongress/-/raw/master/org.kde."
#~ "kongress.svg\" width=\"50\" height=\"50\"><br />Kongress"

#~ msgid "![](addSheet.png)"
#~ msgstr "![](addSheet.png)"

#~ msgid "![](addedKountdowns.png)"
#~ msgstr "![](addedKountdowns.png)"

#~ msgid ""
#~ "A Kirigami [Page](docs:kirigami2;Page) also inherits from a [QQC2 Page]"
#~ "(https://doc.qt.io/qt-5/qml-qtquick-controls2-page.html) and as such, you "
#~ "can add a number of extra elements to them. The Qt docs are another "
#~ "useful resource to use when designing your pages."
#~ msgstr ""
#~ "Een Kirigami [Pagina](docs:kirigami2;Page) erft ook van een [QQC2 pagina]"
#~ "(https://doc.qt.io/qt-5/qml-qtquick-controls2-page.html) en u kunt dus "
#~ "een aantal extra elementen aan hen toevoegen. De documenten van Qt zijn "
#~ "een andere nuttige hulpbron om te gebruiken bij het ontwerpen van uw "
#~ "pagina's."

#~ msgid ""
#~ "For more information about the Kirigami Theme class, see the [API docs]"
#~ "(docs:kirigami2;Kirigami::PlatformTheme)"
#~ msgstr ""
#~ "Voor meer informatie over de Kirigami themaklasse, zie de [API documenten]"
#~ "(docs:kirigami2;Kirigami::PlatformTheme)"

#~ msgid ""
#~ "<!-- TODO\n"
#~ "screenshot of a qml file with an annotated UI showing all the \n"
#~ "available color\n"
#~ "-->\n"
#~ msgstr ""
#~ "<!-- TODO\n"
#~ "schermafdruk van een qml-bestand met een geannoteerde UI die alle\n"
#~ "beschikbare kleuren toont\n"
#~ "-->\n"

#~ msgid "The comments assume the system uses the Breeze Light color theme"
#~ msgstr ""
#~ "De toelichting neemt aan dat het systeem het kleurenthema Breeze Light "
#~ "gebruikt"

#~ msgid "A gray color will be used, as the default color set is Window"
#~ msgstr ""
#~ "Een grijze kleur zal gebruikt worden, omdat de standaard kleurenset "
#~ "venster is"

#~ msgid "The text will be near-black, as is defined in the Window color set"
#~ msgstr ""
#~ "De tekst zal bijna zwart zijn, zoals gedefinieerd is in de kleurenset "
#~ "venster"

#~ msgid "Use the set for ItemViews"
#~ msgstr "De set voor ItemViews gebruiken"

#~ msgid "Do not inherit from the parent"
#~ msgstr "Niet erven van de ouder"

#~ msgid "This will be a near-white color"
#~ msgstr "Dit zal bijna wit zijn"

#~ msgid ""
#~ "This will be a near-white color too, as the colorSet is inherited from "
#~ "the parent and will be View"
#~ msgstr ""
#~ "Dit zal ook bijna wit zijn, omdat de kleurenset geërft wordt van de ouder "
#~ "en beeld zal zijn"

#~ msgid "The text will be near-black, as is defined in the View color set"
#~ msgstr ""
#~ "De tekst zal bijna zwart zijn, zoals gedefinieerd is in de kleurenset "
#~ "beeld"

#~ msgid "Use the Complementary set"
#~ msgstr "De complementaire set gebruiken"

#~ msgid ""
#~ "This will be near-black as in the Complementary color set the background "
#~ "color is dark."
#~ msgstr ""
#~ "Dit zal bijna zwart zijn omdat in de complementaire kleurenset de "
#~ "achtergrondkleur donker is."

#~ msgid ""
#~ "The text will be near-white, as is defined in the Complementary color set"
#~ msgstr ""
#~ "De tekst zal bijna wit zijn, zoals gedefinieerd is in de complementaire "
#~ "kleurenset"

#~ msgid ""
#~ "Some components such as Labels will automatically inherit by default the "
#~ "color set, some other components have a fixed color set, for instance "
#~ "Buttons are fixed to the `Button` color set. If it's desired for the "
#~ "button to inherit the parent color set, the `inherit` property should be "
#~ "explicitly set to `true`:"
#~ msgstr ""
#~ "Sommige componenten, zoals labels, zullen automatisch standaard de "
#~ "kleurenset erven, sommige andere componenten hebben een vaste kleurenset, "
#~ "bijvoorbeeld, knoppen zijn vastgekoppeld aan de kleurenset `Button`. Als "
#~ "het gewenst is voor de knop om de kleurenset van de ouder te erven, dan "
#~ "moet de eigenschap `inherit` expliciet op `true` gezet worden:"

#~ msgid ""
#~ "![Screenshot of a comparison between a button that inherits and one that "
#~ "does not](buttonsinherit.png)"
#~ msgstr ""
#~ "![Schermafdruk van een vergelijking tussen een knop die erft en een die "
#~ "dat niet doet](buttonsinherit.png)"

#~ msgid ""
#~ "![Screenshot showing the code above with qmlscene, we can see two "
#~ "rectangles with two different colors](customcolors.png)"
#~ msgstr ""
#~ "![Schermafdruk die de bovenstaande code toont met qmlscene, we kunnen "
#~ "twee rechthoeken zien met twee verschillende kleuren](customcolors.png)"

#~ msgid "Heading"
#~ msgstr "Kop"

#~ msgid ""
#~ "You can align your text elements using the horizontalAlignment property "
#~ "of the text element."
#~ msgstr ""
#~ "U kunt uw tekstelementen uitlijnen met de eigenschap horizontalAlignment "
#~ "van het tekstelement."

#~ msgid "Text centered"
#~ msgstr "Tekst gecentreerd"

#~ msgid "Text right aligned"
#~ msgstr "Tekst rechts uitgelijnd"

#~ msgid "Displaying rich text"
#~ msgstr "Opgemaakte tekst tonen"

#~ msgid "The program name used internally."
#~ msgstr "De intern gebruikte programmanaam."

#~ msgid "A displayable program name string."
#~ msgstr "Een tekenreeks met een te tonen programmanaam."

#~ msgid "The program version string."
#~ msgstr "De tekenreeks met de programmaversie."

#~ msgid "Short description of what the app does."
#~ msgstr "Korte beschrijving van wat de toepassing doet."

#~ msgid "The license this code is released under."
#~ msgstr "De licentie waaronder deze code is uitgegeven."

#~ msgid "Copyright Statement."
#~ msgstr "Copyright-statement."

#~ msgid ""
#~ "We also include this `config-helloworld.h` file which gives us this "
#~ "`HELLOWORLD_VERSION_STRING` variable that we'll set later in this "
#~ "tutorial."
#~ msgstr ""
#~ "We voegen ook dit bestand `config-helloworld.h` in die ons deze variabele "
#~ "`HELLOWORLD_VERSION_STRING` geeft die we later in deze handleiding "
#~ "instellen."

#~ msgid ""
#~ "In the CMakeLists.txt file in our top-level folder, add `CoreAddons` to "
#~ "the `find_package` module. You'll also want to add these three `ECM` "
#~ "includes which will allow us to use the `ecm_setup_version` function, "
#~ "this function let's use the `PROJECT_VERSION` variable in our code so we "
#~ "only need to change one variable when bumping up versions."
#~ msgstr ""
#~ "In het bestand CMakeLists.txt in onze map op het hoogste niveau, voeg "
#~ "`CoreAddons` toe aan de module `find_package`. U zult ook deze drie `ECM` "
#~ "includes willen toevoegen die ons het gebruik van de functie "
#~ "`ecm_setup_version` biedt, deze functie laat ons de variabele "
#~ "`PROJECT_VERSION` in onze code gebruiken zodat we slechts één variabele "
#~ "hoeven te wijzigen wanneer versies omhoog gaan."

#~ msgid "![A tool button](controls-toolbutton.png)"
#~ msgstr "![Een werkbalkknop](controls-toolbutton.png)"

#~ msgid "![A set of switches](controls-switch.png)"
#~ msgstr "![Een set schakelaars](controls-switch.png)"

#~ msgid "![A set of sliders](controls-sliders.png)"
#~ msgstr "![Een set schuifregelaars](controls-sliders.png)"

#~ msgid "![Sheet header](sheet_header.png)"
#~ msgstr "![Kop van vel](sheet_header.png)"

#~ msgid "![Sheet footer](sheet_footer.png)"
#~ msgstr "![Voet van vel](sheet_footer.png)"

#~ msgid "![Sheet with a listview](sheet_listview.png)"
#~ msgstr "![Vel met a lijstweergave](sheet_listview.png)"

#~ msgid "![A busy indicator](busyindicator.png)"
#~ msgstr "![Een indicator voor bezig](busyindicator.png)"

#~ msgid "![](card1.png)"
#~ msgstr "![](card1.png)"

#~ msgid ""
#~ "| Kirigami Unit | Pixels | | ------ | ------ | | smallSpacing | 4px | | "
#~ "largeSpacing | 8px | | gridUnit | 18px |"
#~ msgstr ""
#~ "| Kirigami eenheid | Pixels | | ------ | ------ | | smallSpacing | 4px | "
#~ "| largeSpacing | 8px | | gridUnit | 18px |"

#~ msgid ""
#~ "| Project | What it is | Links | | --- | --- | --- | | <img src=\"https://"
#~ "apps.kde.org/app-icons/org.kde.calindori.svg\" width=\"50\" height="
#~ "\"50\"><br />Calindori | A touch friendly calendar application designed "
#~ "for mobile devices | [KDE Apps page](https://apps.kde.org/en/"
#~ "calindori)<br />[KDE Invent page](https://invent.kde.org/plasma-mobile/"
#~ "calindori) | | <img src=\"https://apps.kde.org/app-icons/org.kde."
#~ "kdeconnect.kcm.svg\" width=\"50\" height=\"50\"><br />KDE Connect | A "
#~ "multi-platform app that allows your devices to communicate (eg: your "
#~ "phone and your computer). | [Home page](https://kdeconnect.kde.org/)<br /"
#~ ">[KDE Community Wiki page](https://community.kde.org/KDEConnect)<br /"
#~ ">[KDE Invent page](https://invent.kde.org/network/kdeconnect-kde) | | "
#~ "<img src=\"https://invent.kde.org/graphics/koko/-/raw/master/logo.png\" "
#~ "width=\"50\" height=\"50\"><br />Koko | An image viewer designed for "
#~ "desktop and touch devices. | [Userbase page](https://userbase.kde.org/"
#~ "Koko)<br />[KDE Invent page](https://invent.kde.org/graphics/koko) | | "
#~ "<img src=\"https://apps.kde.org/app-icons/org.kde.kontrast.svg\" width="
#~ "\"50\" height=\"50\"><br />Kontrast | A color contrast checker that tells "
#~ "you if your color combinations are accessible for people with color "
#~ "vision deficiencies. | [KDE Apps page](https://apps.kde.org/en/"
#~ "kontrast)<br />[KDE Invent page](https://invent.kde.org/accessibility/"
#~ "kontrast) |"
#~ msgstr ""
#~ "| Project | Wat is het | Koppelingen | | --- | --- | --- | | <img src="
#~ "\"https://apps.kde.org/app-icons/org.kde.calindori.svg\" width=\"50\" "
#~ "height=\"50\"><br />Calindori | Een aanraakvriendelijke agendatoepassing "
#~ "ontworpen voor mobiele apparaten | [KDE Apps page](https://apps.kde.org/"
#~ "en/calindori)<br />[KDE Invent page](https://invent.kde.org/plasma-mobile/"
#~ "calindori) | | <img src=\"https://apps.kde.org/app-icons/org.kde."
#~ "kdeconnect.kcm.svg\" width=\"50\" height=\"50\"><br />KDE Connect | een "
#~ "multi-platform toepassing die uw apparaten laat communiceren (bijv.: uw "
#~ "telefoon en uw computer). | [Homepagina](https://kdeconnect.kde.org/)<br /"
#~ ">[Wiki pagina van de KDE gemeenschap](https://community.kde.org/"
#~ "KDEConnect)<br />[Pagina van KDE Invent](https://invent.kde.org/network/"
#~ "kdeconnect-kde) | | <img src=\"https://invent.kde.org/graphics/koko/-/raw/"
#~ "master/logo.png\" width=\"50\" height=\"50\"><br />Koko | Een "
#~ "afbeeldingsviewer ontworpen voor bureaublad en aanraakscherm. | [Userbase-"
#~ "pagina](https://userbase.kde.org/Koko)<br />[Pagina van KDE Invent]"
#~ "(https://invent.kde.org/graphics/koko) | | <img src=\"https://apps.kde."
#~ "org/app-icons/org.kde.kontrast.svg\" width=\"50\" height=\"50\"><br /"
#~ ">Kontrast | Een kleurcontrastcontroleur die u vertelt of uw "
#~ "kleurcombinaties toegankelijk zijn voor mensen die kleurenblind zijn. | "
#~ "[Pagina met KDE Apps](https://apps.kde.org/en/kontrast)<br />[Pagina van "
#~ "KDE Invent](https://invent.kde.org/accessibility/kontrast) |"

#~ msgid ""
#~ "| Project | What it is | Links | | --- | --- | --- | | <img src=\"https://"
#~ "apps.kde.org/app-icons/org.kde.discover.svg\" width=\"50\" height="
#~ "\"50\"><br />Discover | An application that helps you find and install "
#~ "applications, games, and tools. | [KDE Apps page](https://apps.kde.org/en/"
#~ "discover)<br />[KDE Userbase page](https://userbase.kde.org/Discover)<br /"
#~ ">[KDE Invent page](https://invent.kde.org/plasma/discover) | | <img src="
#~ "\"https://apps.kde.org/app-icons/org.kde.elisa.svg\" width=\"50\" height="
#~ "\"50\"><br />Elisa | A music player that strives to be simple and nice to "
#~ "use. | [Home page](https://elisa.kde.org/)<br />[KDE Apps page](https://"
#~ "apps.kde.org/en/elisa)<br />[KDE Community Wiki page](https://community."
#~ "kde.org/KDEConnect)<br />[KDE Invent page](https://invent.kde.org/"
#~ "multimedia/elisa) | | <img src=\"https://invent.kde.org/utilities/"
#~ "kongress/-/raw/master/org.kde.kongress.svg\" width=\"50\" height="
#~ "\"50\"><br />Kongress | A companion application for conference attendees. "
#~ "| [KDE Invent page](https://invent.kde.org/utilities/kongress) | | <img "
#~ "src=\"https://apps.kde.org/app-icons/org.kde.neochat.svg\" width=\"50\" "
#~ "height=\"50\"><br />NeoChat | A client for Matrix, the decentralized "
#~ "communication protocol for instant messaging. | [KDE Apps page](https://"
#~ "apps.kde.org/en/neochat)<br />[KDE Invent page](https://invent.kde.org/"
#~ "network/neochat) |"
#~ msgstr ""
#~ "| Project | Wat is het | Koppelingen | | --- | --- | --- | | <img src="
#~ "\"https://apps.kde.org/app-icons/org.kde.discover.svg\" width=\"50\" "
#~ "height=\"50\"><br />Discover | Een toepassing die u help bij het vinden "
#~ "en installeren van toepassingen, spellen en hulpmiddelen. | [Pagina van "
#~ "KDE Apps](https://apps.kde.org/en/discover)<br />[Pagina van KDE Userbase]"
#~ "(https://userbase.kde.org/Discover)<br />[Pagina van KDE Invent](https://"
#~ "invent.kde.org/plasma/discover) | | <img src=\"https://apps.kde.org/app-"
#~ "icons/org.kde.elisa.svg\" width=\"50\" height=\"50\"><br />Elisa | Een "
#~ "muziekspeler die er naar streeft eenvoudig en mooi in gebruik te zijn. | "
#~ "[Homepagina](https://elisa.kde.org/)<br />[Pagina van KDE Apps](https://"
#~ "apps.kde.org/en/elisa)<br />[Wikipagina van KDE gemeenschap](https://"
#~ "community.kde.org/KDEConnect)<br />[Pagina van KDE Invent](https://invent."
#~ "kde.org/multimedia/elisa) | | <img src=\"https://invent.kde.org/utilities/"
#~ "kongress/-/raw/master/org.kde.kongress.svg\" width=\"50\" height="
#~ "\"50\"><br />Kongress | Een metgezeltoepassing voor deelnemers aan "
#~ "congressen. | [Pagina van KDE Invent](https://invent.kde.org/utilities/"
#~ "kongress) | | <img src=\"https://apps.kde.org/app-icons/org.kde.neochat."
#~ "svg\" width=\"50\" height=\"50\"><br />NeoChat | Een client voor Matrix, "
#~ "het gedecentraliseerde communicatieprotocol voor instant messaging. | "
#~ "[Pagina van KDE Apps](https://apps.kde.org/en/neochat)<br />[Pagina van "
#~ "KDE Invent](https://invent.kde.org/network/neochat) |"

#~ msgid ""
#~ "| Page | Topic | | --- | --- | | [Understanding CMakeLists](/docs/"
#~ "kirigami/advanced-understanding_cmakelists) | Learn all about CMake and "
#~ "how to compile your applications. | | [Figuring out main.cpp](/docs/"
#~ "kirigami/advanced-maincpp) | Getting to grips with the central C++ file "
#~ "that handles your applications' initialisation. | | [Connect logic to "
#~ "your QML user interface](/docs/kirigami/advanced-connect_backend) | Add "
#~ "advanced functionality to your Kirigami application and connect it to "
#~ "your UI. |"
#~ msgstr ""
#~ "| Pagina | Onderwerp | | --- | --- | | [CMakeLists begrijpen](/docs/"
#~ "kirigami/advanced-understanding_cmakelists) | Alles leren over CMake en "
#~ "hoe uw toepassingen te compileren. | | [Begrijpen van main.cpp](/docs/"
#~ "kirigami/advanced-maincpp) | Grip krijgen op het centrale C++ bestand dat "
#~ "de initialisatie van uw toepassing behandelt. | | [Verbindingslogica naar "
#~ "uw QML gebruikersinterface](/docs/kirigami/advanced-connect_backend) | "
#~ "Geavanceerde functionaliteit toevoegen aan uw Kirigami toepassing en het "
#~ "verbinden met uw UI. |"

#~ msgid ""
#~ "| Resource | Topic | | --- | --- | | [Wikibooks C++](https://en.wikibooks."
#~ "org/wiki/C%2B%2B_Programming) | A comprehensive wikibook with C++ lessons "
#~ "and exercises | | [W3Schools C++](https://www.w3schools.com/cpp/cpp_intro."
#~ "asp) | A set of C++ tutorials and other resources aimed at beginners | | "
#~ "[LearnCpp](https://www.learncpp.com/) | Tutorials to get to grips with C+"
#~ "+ | | [cppreference](https://en.cppreference.com/w/) | A reference site "
#~ "for C++ |"
#~ msgstr ""
#~ "| Hulpbron | Onderwerp | | --- | --- | | [Wikibooks C++](https://en."
#~ "wikibooks.org/wiki/C%2B%2B_Programming) | Een beknopt wikibook met C++ "
#~ "lessen en oefeningen | | [W3Schools C++](https://www.w3schools.com/cpp/"
#~ "cpp_intro.asp) | Een set met C++ handleidingen en andere hulpbronnen "
#~ "gericht op beginners | | [LearnCpp](https://www.learncpp.com/) | "
#~ "Handleidingen om grip te krijgen op C++ | | [cppreference](https://en."
#~ "cppreference.com/w/) | Een referentiesite voor C++ |"

#~ msgid "controller.h"
#~ msgstr "controller.h"

#~ msgid "controller.cpp"
#~ msgstr "controller.cpp"

#~ msgid "In the `.cpp` file we have two methods, `instance` and `aboutData`."
#~ msgstr ""
#~ "In het bestand `.cpp` hebben we twee methoden, `instance` en `aboutData`."

#~ msgid ""
#~ "`instance` just returns a `Controller` object and `aboutData` returns our "
#~ "application data."
#~ msgstr ""
#~ "`instance` geeft een object `Controller` terug en `aboutData` geeft onze "
#~ "toepassingsgegevens terug."

#~ msgid "introduction"
#~ msgstr "Inleiding"

#~ msgid "style"
#~ msgstr "stijl"

#~ msgid "components"
#~ msgstr "componenten"

#~ msgid "advanced"
#~ msgstr "geavanceerd"
